1	Peeks at the first N bytes of the stream
2	Compare AbstractNum with abstractNums of this numbering document
3	Copies the entries in src to dest, using the preferential data type so that maps can be compared for equality
4	Inserts a single bulleted item into a cell
5	lazy load by sheet since reading can be expensive
6	Every object is assigned the lowest available index-that is, the smallest numerical value-in the WMF Object Table
7	Evaluate for WORKDAY
8	Retrieve a part identified by its name
9	Count of all children and their childrens children.
10	Determines whether the sheets columns should be re-sized to accomodate the image, adjusts the columns width if necessary and creates then returns a ClientAnchorDetail object that facilitates construction of an HSSFClientAnchor that will fix the image on the sheet and establish it's size
11	Compares this object with another, for equality.
12	Create a new footnote and add it to the document.
13	Called to convert a row of cells into a line of data that can later be output to the CSV file
14	Apply the tint
15	This is port and adaptation of Arrays.binarySearch from Java 6 (Apache
16	Retrieves all the PackageParts which are defined as relationships of the base document with the specified content type.
17	Rounds the first whole digit position (considers only units digit, not frational part)
18	Use Excel conditional formatting to check for errors, and change the font colour to match the cell colour
19	Creates a new header of the specified type, to which the supplied (and previously unattached!) paragraphs are added to.
20	Adds a font run to the formatted string
21	Count number of occurrences of needle in haystack
22	remove a BodyElement from bodyElements array list
23	Retrieve all cells where the given formatting rule evaluates to true.
24	From OOO doc: "Whenever one operand of the reference subexpression is a function, a defined name, a 3D reference, or an external reference (and no error occurs), a tMemFunc token is used"
25	Remove a formula reference from the calculation chain
26	Used to calculate value that should be encoded at the start of the encoded Ptg token array;
27	Adds a picture to the workbook.
28	Used to create a deep copy of this object.
29	Formats nicer error messages for the junit output
30	Save changes in the underlying OOXML package.
31	Creates a criteria predicate object for the supplied criteria arg
32	Calculates the dimensions in EMUs for the anchor of the given picture
33	Applies the specified font to the entire string.
34	Load the block at the given offset.
35	Lazy load validations by sheet, since reading the CT types is expensive
36	Parse a structured reference
37	Convenience method for drawing single shapes.
38	Calculates the xml representation of this record
39	The index within the string to which the specified formatting run applies.
40	Replace font families for Windows JVM 6, which contains a font rendering error
41	Writes the workbook out to a brand new, empty POIFS
42	used to clone patriarch create patriarch from existing one
43	Creates a new comparison operation rule
44	Processes a single cell value record
45	Process single sheet (as specified by 0-based sheet index) otherwise
46	Dump the structure of the supplied PPT file into XML
47	The directory
48	Add a CT footnote to the document
49	Retrieves the text contents of the file
50	evaluating the formula of this frame.
51	deleted ref ptg (if column move causes an error), or null (if no Ptg change is needed)
52	This is the starting point where strings are constructed
53	Convert an integer to its roman equivalent e.g
54	Our handling of equals is inconsistent with compareTo
55	dump an array of bytes to an OutputStream written the data to stream outside the data array's bounds null
56	Removes the comment for this cell, if there is one
57	Processes a file into essentially record events.
58	Helper method for appending text and keeping paragraph and character properties
59	Parse and Translate a Math Term
60	creates the DefaultRowHeight Record and sets its options to 0 and rowheight to 0xff
61	Copy the input stream into the output stream
62	Import a package part into this sheet.
63	Retreives the text contents of the file
64	Adds a new column to the table
65	Check if a cell contains a date, checking only for internal excel date formats
66	This method uses a String in standard Excel format (SheetName!CellId) to locate the cell and set it to the value of the double in value.
67	Not all documents have all the images concatenated in the data stream although MS claims so
68	Excel has funny behaviour when the some elements in the search vector are the wrong type.
69	Find, and create objects for, the standard
70	use this function to add a Shared String Table to an existing sheet (say generated by a different java api) without an sst....
71	Create a new comment located` at cell address
72	Takes a format String, and replaces Excel specific bits with our detection sequences
73	Draws one dash dot dot horizontally or vertically with thickness drawn incrementally to either the right or left
74	used internally -- given a cell value record, figure out its type
75	Create an OPC compliant part name
76	Add a row label using data from the given column.
77	Creates a single Pointer from the data at the given offset
78	Copies all the data from the given InputStream to the OutputStream
79	from testing, Excel only operates on numbers and dates (which are stored as numbers) in the range
80	Create a deep clone of the record
81	Add a relationship to the collection
82	Create a new WordProcessingML package and setup the default minimal content
83	Clear styles, so new collections can be added
84	Adds a new SlideListWithText record, at the appropriate point in the child records.
85	Called to convert the contents of the currently opened workbook into a CSV file.
86	Creates a new document builder, with sensible defaults
87	Initialize default structure of a new auto-shape
88	used internally to add a cell.
89	Add a new SlidePersistAtom, to the end of the current list, and update the internal list of SlidePersistAtoms
90	Creates array of all possible cell edges
91	The second argument (table_array) should be an area ref, but can actually be a cell ref, in which case it is interpreted as a 1x1 area ref
92	Format the outside border using the specified Line object
93	Creates a new SAX XMLReader, with sensible defaults
94	Checks whether a byte array is in the Horrible Property Set Format
95	Fit picture shape into the target rectangle, maintaining the aspect ratio and repositioning within the target rectangle based on the specified alignment (gravity)
96	Replace (all instances of) a piece of text with another..
97	adjust this range after an insert happens
98	Dumps out a hex value by reading from a input stream.
99	The main entry point to the program
100	userful if you need to transform to global coordinates
101	Deletes the temporary file that backed this sheet on disk.
102	Compute the cumulative height occupied by the text
103	Sign (encrypt) the digest with the private key
104	protect a workbook with a password (not encypted, just sets writeprotect flags and the password.
105	Not normally to be called externally, but possibly to be overridden to avoid the DOM based parse of large sheets (see examples).
106	Apply the border attributes (args) to the given cell and edges
107	API call to execute the parsing of the formula
108	Checks if cell font size matches.
109	EscherDgContainer -EscherSpgrContainer --EscherSpContainer ---EscherSpRecord -set id for this record --- -- -EscherDgRecord set id for the sp record of the first spContainer in main spgrConatiner
110	add a new run at the end of the position of the content of parameter run
111	Note - works with Java Calendar months, not Excel months
112	Parse the content types part
113	Inits and checks the config object
114	Helper function for overriding the cipher invocation, i.e
115	is repositioned at its beginning
116	Check rule [M1.11]: a package implementer shall neither create nor recognize a part with a part name derived from another part name by appending segments to it
117	Compute width of a single cell
118	Serialises our Escher children back into bytes.
119	Changes an external referenced file to another file
120	Use Excel conditional formatting to highlight duplicate entries in a column.
121	Assumes dates are no more than 1 year apart.
122	Tries to find their email address, in whichever chunk holds it given the delivery type.
123	Dumps out the given number of bytes as hex, two chars
124	compares most properties apart of the covered characters length
125	Convert from an integer RGB value to individual R, G, B 0-255 values
126	add a new number to the numbering document
127	Verifies that the given stream starts with a Zip structure
128	For a given refID (the internal, 0 based numbering scheme), return the core record the refID
129	Creates the Country record with the default country set to 1 and current country set to 7 in case of russian locale ("ru_RU") and 1 otherwise
130	Do a check for, and output, comments in otherwise empty cells.
131	Recursively copy package parts to the destination package
132	The general style is not quite the same as any other, or any combination of others.
133	Convert an integer to its alpha equivalent e.g
134	parse the record data and initialize styles
135	Take a cell, and apply a font to it
136	creates the Guts record and sets leftrowtopcol guttter and rowlevelmaxcollevelmax to 0
137	For a given type (little endian bytes 3 and 4 in record header), byte array, start position and length: will return a Record object that will handle that record
138	If cell contains a formula, the formula is evaluated and returned, else the CellValue simply copies the appropriate cell value from the cell and also its cell type
139	add a new paragraph run to this shape
140	Replace a tab with the effective number of white spaces.
141	Insert a bulleted list into a cell
142	Allocates new shape id for the drawing group
143	Create a new HSLF-specific EscherClientDataRecord
144	Parses and shows the content of one sheet using the specified styles and shared-strings tables
145	Specifies the border which shall be displayed on the right side of the page around the specified paragraph.
146	Create a pivot table using the AreaReference range, at the given position
147	Display the entries of multiple POIFS files
148	Writes the textbox records back to the document record
149	Opens an input stream which will decompress the data on the fly.
150	Creates a new group record stored under this patriarch
151	Generates a cache field for each column in the reference area for the pivot table.
152	Writes the SBATs to their backing blocks, and updates the mini-stream size in the properties
153	Remove the underlying HyperlinkRecord from this sheet
154	Identifies the next available part number for a part of the given type, if possible, otherwise -1 if none are available
155	Finds the primary drawing group, if one already exists
156	Copy text attributes from the supplied Font to Java2D AttributedString
157	Determines whether the sheets row should be re-sized to accomodate the image, adjusts the rows height if necessary and creates then returns a ClientAnchorDetail object that facilitates construction of a ClientAnchor that will fix the image on the sheet and establish it's size
158	Run this class as a program
159	Appends cell reference with '$' markers for absolute values as required
160	Using the fileName, check the internal map to see if an instance of the WorkbookUtil exists
161	Use to append specific type XML elements, use by the save() method
162	Update the formulas in specified row using the formula shifting policy specified by shifter
163	Create a POIXMLDocumentPart from existing package part and relation
164	sum of squares of all values
165	opens a url and returns an inputstream
166	Parse the relationship part and add all relationship in this collection
167	Per an earlier reported bug in working with Andy Khan's excel read library
168	Specifies that automatic numbered bullet points should be applied to this paragraph numbered bullets (1-based).
169	Add a embedded object to this presentation
170	Note this list is static - once read, it does not notice later changes to the underlying column structures
171	Constructs a new, empty, Powerpoint document.
172	Use Excel conditional formatting to hide the duplicate values, and make the list easier to read
173	Read this shared styles table from an XML file.
174	Use the basic record format groking code to walk the Escher records
175	Convert the supplied java Date into a SystemTime struct, and write it into the supplied byte array.
176	Update formats when locale has been changed
177	Perform whatever activities need to be performed prior to writing
178	Convenience method to set a value with mask, without splitting it into the subvalues
179	Validate the range limits against the supplied version of Excel
180	specifies decorations which can be added to the tail of a line.
181	Inspect an object that may be viewable, and drill down if told to
182	Detect cell type based on the "t" attribute of the CTCell bean
183	Specifies the border which shall be displayed above a set of paragraphs which have the same set of paragraph border settings.
184	dump an array of bytes to a String outside the data array's bounds
185	Utility to compare Excel File Contents cell by cell for all sheets.
186	Create a writer for the sheet data.
187	Document-level container that specifies information about an ActiveX control
188	Remove the specified end note if present.
189	Really basic text extractor, that will also return lots of crud text
190	copyRows rows from srcRows to this sheet starting at destStartRow
191	Register a ATP function in runtime.
192	Creates a new Hyperlink for a textrun.
193	Calculates how many days of week past between a start and an end date.
194	Merge cells of a table row, inclusive
195	Creates a number based data validation constraint
196	Initiates the processing of the XLS file to CSV
197	Use the DDF code to walk the Escher records
198	Initialize default structure of a new graphic frame
199	Appends a new run to this paragraph
200	Remove a row at position pos from the table
201	Write out to the currently open file the properties changes, but nothing else
202	Color Scales  Colour Scales  Colour Gradients allow you shade the background colour of the cell based on the values, eg from Red to
203	Remove a child record from this record container
204	Calculates the xpath of the root element for the table
205	Split the given string into an array of strings using the given delimiter.
206	Writes this table to the table stream
207	creates the Dimensions Record and sets it to bogus values (you should set this yourself or let the high level API do it for you)
208	Create a new SpreadsheetML package and setup the default minimal content
209	add an event listener for a particular record type
210	Check if the Fonts are installed correctly so that Java can compute the size of columns
211	Add a new paragraph run to this shape
212	Create a slide and initialize it from the specified layout.
213	Build and return the Record at the given offset
214	Creates a new StAX XMLInputFactory, with sensible defaults
215	After setting various window and viewport related properties, the underlying graphics context needs to be adapted
216	Read from a NPOIFSFileSystem and process the documents we get
217	Called by paintBorder to paint the dotted line borders for a cell.
218	Commit changes to the underlying OPC package
219	Shifts all the page breaks in the range "count" number of rowscolumns
220	Imports an XML into the XLSX using the Custom XML mapping defined
221	Initiates the processing of the XLS workbook file to CSV.
222	Add a new cluster
223	Decodes the escher stream from a byte array and dumps the results to a print stream.
224	Checks if cell border bottom matches.
225	Icon Sets  Multi-States allow you to have icons shown which vary based on the values, eg Red traffic light  Yellow traffic light
226	Find a shape with ClientData of type "NOTE" and the specified row and column
227	Encrypt the Document-SummaryInformation and other optionally streams
228	Hide all rows at or below the current outline level
229	Creates a Workbook from the given NPOIFSFileSystem, which may be password protected
230	remove duplicated UserEditAtoms and merge PersistPtrHolder
231	Create a new CTWorksheet instance with all values set to defaults
232	Reads the class ID's value from a byte array by turning little-endian into big-endian.
233	Compares two custom properties for equality
234	Add the TextProp with this name to the list
235	Extracts the RTF message body to the supplied file
236	Fetch the value of the given Paragraph related TextProp
237	add a new AbstractNum and return its AbstractNumID
238	Write the internal variables to the record bytes
239	Add a child record before the record with given recordId
240	Specifies the border which shall be displayed below a set of paragraphs which have the same set of paragraph border settings.
241	Essentially a duplicate of RecordFactory
242	This method is used to create template for chart XML no need to read MS-Word file and modify charts
243	Creates a split pane
244	Have the contents printer out into an OutputStream, used when writing a file back out to disk (Normally, atom classes will keep their bytes around, but non atom classes will just request the bytes from their children, then chuck on their header and return)
245	Finds the first occurrence of a given color
246	Create an XSSFSheet from an existing sheet in the XSSFWorkbook
247	Helper method for adding informations before the signing.
248	Compares the specified object with this list for equality
249	Output the compressed representation for the bytes found in rawCode
250	Actually do the creation from a block of bytes
251	Byte arrays can be 0-padded up to 3 bytes to form a full quad array
252	the specified entry does not contain a property set stream, an exception is thrown
253	Finds the EmbeddedObjectRefSubRecord, or throws an
254	Creates a SlideShow from the given NPOIFSFileSystem, which may be password protected
255	Create a single BATBlock from the byte buffer, which must hold at least one big block of data to be read.
256	Tell us how much text the parent TextCharsAtom or TextBytesAtom contains, so we can go ahead and initialise ourselves.
257	Finds the index where the sheet validations header record should be inserted + WINDOW2 o SCL o PANE oo SELECTION o STANDARDWIDTH oo MERGEDCELLS o LABELRANGES o PHONETICPR o Conditional Formatting Table o Hyperlink Table o Data Validity Table o SHEETLAYOUT o SHEETPROTECTION o RANGEPROTECTION + EOF
258	Creates the appropriate ChunkHeader for the Chunk Header at the given location, for the given document version.
259	Helper method to determine how many bits in the CopyToken are used for the CopyLength.
260	Finds the location of the given child record
261	Maps the digest algorithm to corresponding OID value.
262	Create a footer of the given type
263	used internally to refresh the "first cell" when the first cell is removed.
264	Appends a new paragraph to this document
265	Inserts a list of plain items - that is items that are neither numbered or bulleted - into a single cell
266	Retains only the elements in this list that are contained in the specified collection
267	For a given PPDrawing, grab all the TextRuns
268	If we have a EscherContainerRecord as one of our children (and most top level escher holders do), then return that.
269	Save the contents type part
270	Extracts all the message attachments to the supplied directory
271	Adds a new paragraph at the end of the header or footer
272	Removes from this list all the elements that are contained in the specified collection from this list.
273	Creates a new graphic frame
274	This is basically a kludge to deal with the now obsolete Label records
275	Add the property at the correct position
276	Processes the list of arguments as a list of names of Outlook MSG files.
277	Delete the part with the specified name and all part listed in its associated relationships part if one exists
278	Determines whether the sheet's row should be re-sized to accomodate the image, adjusts the rows height if necessary and creates then returns a ClientAnchorDetail object that facilitates construction of an HSSFClientAnchor that will fix the image on the sheet and establish it's size
279	Lookup a hyperlink by its unique id
280	Creates a new Icon Set  Multi-State formatting
281	Gracefully remove references to the sheet being deleted
282	this method writes the data into sheet sheet of embedded excel category values data values
283	Retrieves the length of the given property (by key)
284	Validates the password, i.e
285	Adds the given Child Record before the supplied record
286	Calculates the string representation of this record
287	Converts the digest algorithm - currently only sha and ripemd160 is supported
288	Create a new pattern formatting structure if it does not exist, otherwise just return existing object.
289	add a new Row to the table at position pos
290	called by the class that is responsible for writing this sucker
291	Multiple conditional formatting rules can apply to one cell, some combining, some beating others
292	Write XML signature into the OPC package
293	This method can be used to stream data into POI
294	Tries to parse the next as column - can contain whitespace
295	Creates an outline group for the specified columns
296	Utility method that returns the named HorizontalAlignment value form the given map.
297	(the typical syntax error is a single quote character not followed by another).
298	Constructs a textbox
299	Process the record ourselves, but do not pass it on to the child
300	Converts the supplied hours, minutes and seconds to an Excel time value
301	to a human readable string format in infix mode.
302	Makes sure that footnote digits from the original OOO document have not been accidentally left behind
303	Blanks this cell
304	Finds the closest matching color in the custom palette
305	Modifies aptg in-place and return a reference to aptg if the first or last row of of the Area reference would move due to a row copy operation
306	Creates a cell, gives it a value, and applies a style if provided
307	Adjust for a deletion that can span multiple PropertyNodes.
308	DataBars  Data-Bars allow you to have bars shown vary based on the values, from full to empty
309	Takes in a 0-based base-10 column and returns a ALPHA-26 representation.
310	Decode a URI by converting all percent encoded character into a String character
311	Convenience method - month is 0-based as in java.util.Calendar
312	creates a new Cell-type Extended Format Record and adds it to the end of
313	given an index into the SST table, this function returns the corresponding String value
314	Creates the low level OBJ record for this shape.
315	Open chunks_parse_cmds.tbl and process it, to get the definitions of all the different possible chunk commands.
316	Read New Character From Input Stream
317	Retrieves the package relationship of the child part within the parent
318	Fetch the TextProps that define this styling in the record order
319	Fetches the ALL the text of the powerpoint file, as a single string
320	Check if a cell contains a date
321	Usage: HMEFContentsExtractor &lt;filename&gt; &lt;output dir&gt;
322	read a sub-record from the supplied stream we need it to propagate to next sub-records as it defines what data follows
323	if you need to transform to global coordinates
324	Processes a single attachment: reads it from the Outlook MSG file and writes it to disk as an individual file.
325	Save relationships into the part
326	Writes the class ID to a byte array in the little-endian format.
327	Add font with the given FontInfo configuration to the font collection
328	Called to populate the named areasregions
329	These are in the shape coordinate system
330	Finds a free block, and returns its offset
331	when a cell with a 'master' shared formula is removed,  the next cell in the range becomes the master
332	Assign a comment to this cell
333	Create a new simple shape under this group.
334	Create a new end note and add it to the document.
335	check if any shapes contain wrong data
336	Copy a file
337	Compare number of columns in sheets.
338	Clones all the font style information from another
339	Moves the supplied cell to a new column, which must not already have a cell there!
340	Check if the cloned sheet has drawings
341	Converts the digest algorithm ur - currently only sha and ripemd160 is supported
342	removes a Run at the position pos in the paragraph
343	Adds a child record, at the very end.
344	Compress raw data for test runs - usually called while debugging :)
345	Create a new border formatting structure if it does not exist, otherwise just return existing object.
346	Import a picture data from another document.
347	Removes the break indicated by the parameter
348	Modifies rptg in-place and return a reference to rptg if the cell reference would move due to a row copy operation
349	creates the WriteAccess record containing the logged in user's name
350	Use conversion rule to factor some parts and make them more concise
351	Evaluate for RANDBETWEEN()
352	Create a new textbox under this group.
353	Gives back the JAXB DigestAlgAndValue data structure.
354	Retrieves the number of borders assigned to a cell
355	Write a row to the file
356	Look for certain entries in the stream, to figure it out what format is desired
357	Fetches the appropriate value from the cell, and returns the result of applying it to the appropriate format
358	The LineBreakMeasurer is used for calculating text bounds
359	Adds a picture to the run
360	Highlight cells based on their values
361	Build up model level Slide and Notes objects, from the underlying records.
362	Adds a new color into an empty color slot.
363	Parse formula in the named range and re-assemble it back using the new sheet name.
364	break text into lines, each representing a line of text that fits in the wrapping width
365	Creates an empty workbook object with three blank sheets and all the empty fields
366	Adds an external relationship to a part (except relationships part)
367	Once the binary search has found a single match, (VH)LOOKUP steps one by one over subsequent values to choose the last matching item.
368	a number between 2 and 1000 (inclusive) if log base not within allowed range
369	Re-orders a slide, to a new position
370	Initialize a new Speadsheet VML drawing
371	Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator
372	Called to update the embedded Excel workbook
373	Wrap the OLE2 data of the DirectoryNode into a decrypted stream by using the given password.
374	protect a spreadsheet with a password (not encrypted, just sets protect flags and the password.
375	creates all the child Pointers for it
376	Inserts a simple table into the beginning of this range
377	Load the parts of the archive if it has not been done yet
378	Search for a StyleTextPropAtom is for this text header (list of paragraphs)
379	Constructs a textbox under the drawing
380	Tell Excel that this name applies to the worksheet with the specified index instead of the entire workbook.
381	Find hyperlink assigned to the supplied shape
382	Initialize the xml signing environment and the bouncycastle provider
383	You can use Excel conditional formatting to shade bands of rows on the worksheet
384	Converts the shape flags into a more descriptive name.
385	Decompresses the given data, returning it as header + contents
386	Parses an RfX cell range from the data starting at the offset
387	instead of a password, it's also possible to decrypt via certificate
388	if v is zero length or contains no duplicates, return value is
389	Change a contained Entry's name
390	Excel seems to handle mismatched types initially by just stepping 'mid' ix forward to the first compatible value
391	Classifies an identifier as either a simple (2D) cell reference or a named range name
392	make the tabid record look like the current situation.
393	Removes the first occurrence in this list of the specified element (optional operation)
394	update cell references when shifting rows
395	Copy font attributes from CTFont bean into CTRPrElt bean
396	reads module from DIR node in input stream and adds it to the modules map for decompression later on the second pass through this function, the module will be decompressed
397	checks if the given name is already included in the linkTable
398	Validate the generated XML against the XML Schema associated with the XSSFMap
399	Create an array of records from an input stream obtained
400	Paints all pending paintings
401	Remove a part in this package
402	Modifies aptg in-place and return a reference to aptg if the first or last column of of the Area reference would move due to a column copy operation
403	update sheet-scoped named ranges in this workbook after changing the sheet order of a sheet at oldIndex to newIndex
404	with the same format may or may not return the same object.
405	For counts, this would return 1, for sums it returns a cell value or zero
406	Create an enclosing CellRange for the two cell ranges.
407	Log a message
408	Calculate how many workdays are there between a start and an end date, as excel representations, considering a range of holidays.
409	Parses a date from a string.
410	Called by paintBorder to paint the various versions of dash dot dot line borders for a cell.
411	Add an endnote to the document
412	org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt to org.openxmlformats.schemas.drawingml.x2006.main.CTFont adapter
413	this method update column header of sheet into table xssf table object title of column index of column
414	Checks if cell font bold matches.
415	Add a control in this presentation name of the control, e.g
416	Validate sheet index &lt; 0 || index &gt;= getNumberOfSheets()).
417	Remove a relationship by its ID
418	Prints out some simple debug on the base contents of the file.
419	this method write the XSSFWorkbook object data into embedded excel file
420	Calculates the start index of the given text run
421	Processes a DocumentInputStream into essentially Record events.
422	Reads all macros from all modules of the opened office file.
423	Finds the first occurrence of a record matching a particular sid and returns it's position
424	Removes a specific table from this header  footer
425	cannot appear on either side of the range (':') operator
426	static so enums can reference it without creating a whole instance
427	Utility method that returns the named BorderStyle value form the given map.
428	used internally to refresh the "first row" when the first row is removed.
429	Construct a new CTChartSpace bean
430	Read hyperlink relations, link them with CTHyperlink beans in this worksheet and initialize the internal array of XSSFHyperlink objects
431	Uses our CommandDefinitions to process the commands our chunk type has, and figure out the values for them.
432	Add a part to the package
433	Retrieves the text contents of the file, as best we can for these old file formats
434	Adds the supplied text onto the end of the TextParagraphs, creating a new RichTextRun for it to sit in.
435	Convert a single CustomGeometry object, i.e
436	the identifier to release
437	Inserts text onto the end of this range
438	Calls formulaCell.setFormulaResult(null, null) recursively all the way up the tree of dependencies
439	Adds the page break at the specified parameters
440	Called to actually save the data recovered from the Excel workbook as a CSV file
441	Add a new num with an abstractNumID and a numID
442	The main() method contains code that demonstrates how to use the class
443	The caller should clear (set blank) all cells in the returned range.
444	Called by paintBorder to paint the various versions of normal line borders for a cell.
445	Create a new child POIXMLDocumentPart equivalent part names and package implementers shall neither create nor recognize packages with equivalent part names.
446	Called by paintBorder to paint the double line borders for a cell.
447	takes in a column reference portion of a CellRef and converts it from
448	Identifies (in order) the parts of the paragraph sub-paragraph that correspond to character text runs, and builds the appropriate runs for these.
449	Finds the next available (1 based) drawing group id
450	build shape tree from escher container
451	Creates the complete footer string based on the left, center, and middle strings.
452	Try to guess the font group based on the codepoint
453	Completely dismantles all workbook environments that the supplied evaluators are part of
454	Create a cell style in this style table
455	Exports the data in an XML stream
456	Dispose of temporary files backing this workbook on disk
457	used internally to refresh the "last cell plus one" when the last cell is removed.
458	Inserts text into the front of this range
459	read support  for low level
460	there are no master slides or the master slides do not contain a text paragraph
461	add a style to the document
462	Serializes all records int the worksheet section into a big byte array
463	Open an Excel workbook ready for conversion
464	We've got 8 code worth to write out, so output along with the header
465	Insert a bulleted multi-level list into a cell
466	Iterate through the underlying PackagePart and create child POIXMLFactory instances using the specified factory
467	Reads the ole data as stream - the application specific stream is served
468	Perform WEEKDAY(date, returnOption) function
469	Convert an OPC item name into a zip URI by removing any leading forward slash if it exist
470	Dumps the Pictures OLE stream into XML.
471	Opens the specified file as a secure zip, or returns null if no such file exists
472	Takes a non-contiguous area reference, and returns an array of contiguous area references
473	Create a new font formatting structure if it does not exist, otherwise just return existing object.
474	Generalized method for read and write protection hash generation
475	Highlight multiple cells based on a formula
476	specifies decoration width of the head of a line.
477	Fetches the ALL the text of the powerpoint file, in a List of strings, one per text record
478	create a record, if there are MUL records than multiple records are returned digested into the non-mul form.
479	Evaluate for NETWORKDAYS
480	this pass didn't return a record that's suitable for returning (eg was a continue record).
481	This method formats the double in the units specified
482	Retrieves a relationship by its index in the collection
483	If the XPath is, for example, Node1Node2Node3 and Node1Node2 is the common XPath for the table, the local XPath is Node3
484	Debug  diagnostic method to get this token's 'operand class' type.
485	Add the specified part to the package
486	Called by paintBorder to paint the various versions of dotted line borders for a cell.
487	Removes a hyperlink in the collection of hyperlinks on this sheet
488	Updates named ranges due to moving of cells
489	Checks if cell font italics matches.
490	Utility method that returns the named FillPatternType value form the given map.
491	adds a new TableCell at the end of this tableRow
492	Add the xml:spaces="preserve" attribute if the string has leading or trailing spaces
493	Fetches the appropriate value from the cell, and uses the result, setting the text and color of a label before returning the result.
494	Convert an OPC item name into a zip item name by removing any leading forward slash if it exist
495	Add a new num with an abstractNumID
496	Traverse cell range from top left to bottom right cell.
497	Has our in-memory objects write their state to their backing blocks
498	Copy placeholders from this layout to the destination slide
499	Create and initialize a CTTwoCellAnchor that anchors a shape against top-left and bottom-right cells.
500	Adds an OLE package manager object with the given POIFS to the sheet
501	Builds CTAxDataSource object content from POI ChartDataSource.
502	For active worksheets only, will loop over rows and cells, evaluating formula cells there
503	add a new column for each row in this table
504	depends on how many parts the cell format has, the cell value and any
505	Creates a CellRangeAddress from a cell range reference string
506	Add the indexed picture to this drawing relations
507	Retrieves the index of the given font
508	Retrieve parts by name
509	Center a text over multiple columns using ALIGN_CENTER_SELECTION
510	'initial sheet records' are between INDEX and the 'Row Blocks'
511	Retrieves the fake font details for a given font
512	Creates an empty XSSFPivotTable and sets up all its relationships including: pivotCacheDefinition, pivotCacheRecords
513	this method add chart template into document
514	used internally to refresh the "last row" when the last row is removed.
515	Compute width of a column based on a subset of the rows and return the result
516	(Not all do, those that don't have a data portion)
517	Determine the OleObject which links shapes with embedded resources
518	Evaluate a formula outside a cell value, e.g
519	Creates a new font for a specific cell style
520	Add a thumbnail to the package
521	Expands a character
522	Called by HSSFEventFactory, passes the Record to each listener associated with a record.sid.
523	Tallies a count of the size of the cell records that are attached to the rows in the range specified.
524	Check if a given shape is associated with a sound
525	Calculate the best fit width for each tracked column in row
526	Append new text to this text run and apply the specify font to it
527	Goes through the Wokrbook, optimising the cell styles by removing duplicate ones, and ones that aren't used
528	Process the contents of a folder, convert the contents of each Excel workbook into CSV format and save the resulting file to the specified folder using the same name as the original workbook with the .xls or .xlsx extension replaced by .csv name of and path to either a folder containing those Excel workbook(s) or the name of and path to an individual Excel workbook that isare to be converted
529	Use to append default types XML elements, use by the save() method
530	Display the contents of multiple POIFS files
531	add a row to the sheet
532	Uses the result of applying this format to the value, setting the text and color of a label before returning the result.
533	For a given database returns the column number for a column heading.
534	Remove a part from this package as well as its relationship part, if one exists, and all parts listed in the relationship part
535	Creates a new DocumentBuilderFactory, with sensible defaults
536	Add column containing data from the referenced area.
537	Creates a new footer of the specified type, to which the supplied (and previously unattached!) paragraphs are added to.
538	The relationships transform takes the XML document from the Relationships part and converts it to another XML document.
539	Read short array the original byte array
540	Boolean literals ('TRUE', 'FALSE') treated similarly but NOT same as numbers.
541	Separates Area refs in two parts and returns them as separate elements in a String array, each qualified with the sheet name (if present)
542	Updates the cache of the raw contents
543	Adds a CRL to this revocation data set.
544	Creates a new package
545	For an external linked picture, return the last-seen path to the picture
546	Verify that the candidate region does not intersect with an existing multi-cell array formula in this sheet
547	Adjust all the text piece after inserting some text into one of them
548	Retrieves the part style depending on the location of this cell the part to be returned, usually this is null and only set when used as a helper method
549	Finds all cell comments in this sheet and adds them to the specified locations map
550	Finds the DrawingRecord for our sheet, and attaches it to the DrawingManager (which knows about the overall DrawingGroup for our workbook)
551	Helper method for adding informations after the signing.
552	Draws a group of cell borders for a cell range
553	Converts Excel file (97-2007) into XSL FO file
554	Initialize default structure of a new shape group
555	Clone the current record, via a call to serialize it, and another to create a new record from the bytes
556	print a sort of string representation ([SHARED FORMULA RECORD] id = x [SHARED FORMULA RECORD])
557	Create a unique identifier to be use as a temp file name.
558	Convert shape fill into java.awt.Paint
559	Creates a new Color Scale  Color Gradient formatting
560	Opens up the Styles Table, parses it, and returns a handy object for working with cell styles
561	Create the Extractor, if possible
562	Collects values from a single argument
563	Convert a RGB Color to it corresponding HSL values.
564	Save the document in the specified file
565	Create a new CTWorkbook with all values set to default
566	Check and add linebreaks to text runs leading other paragraphs
567	Register the provider for this TransformService
568	Creates a new Data Bar formatting
569	Print out a summary of the conditional formatting rules applied to cells on the given sheet
570	Create another group under this group.
571	Checks if cell font family matches.
572	Checks if the offset matches the PNG header.
573	create a high level HSSFCell object from an existing low level record
574	Create CFRecordsAggregate from a list of CF Records
575	add the xml signature to the document
576	Knuth-Morris-Pratt Algorithm for Pattern Matching
577	Finds that for example the 2nd entry in the body list is the 1st paragraph
578	register a POIFSReaderListener for a particular document
579	Compute width of a single cell in a row
580	Removes the hyperlink for this cell, if there is one.
581	Stores the data for the child records back into the Escher layer
582	Appends the specified element to the end of this list method).
583	Finds first (lowest index) exact occurrence of specified value
584	Takes a Display focused string, eg "Nick; Jim" and an iterator of emails, and does its best to return something like
585	remove an existing abstractNum false if abstractNum with abstractNumID not exists
586	insert a new Run in RunArray
587	Use Excel conditional formatting to shade alternating rows on the worksheet
588	Writes the property to an output stream
589	Adds the current cell reference to the exception for easier debugging
590	Loads the member variable workbook based on the fileName variable.
591	Creates a string to use to identify this chunk in the POI file system object.
592	Looks for text in the cell that should be unicode, like &alpha; and provides the unicode version of it.
593	For an existing set of text properties, build the list of properties coded for in a given run of properties.
594	(name + sheet index is unique), this method is more accurate
595	Parse cell formula and re-assemble it back using the new sheet name
596	packagehierarchy use only - reuse an existing evaluation workbook if available for caching
597	Uses the result of applying this format to the given date, setting the text and color of a label before returning the result.
598	Add the xml:spaces="preserve" attribute if the string has leading or trailing white spaces
599	Append a new run of text.
600	Restores the properties from the stack
601	Constructs a cell comment
602	Writes the header of the properties
603	Copy the cells from srcRow to this row
604	This tries to convert a LE byte array in cp950 (Microsoft's dialect of Big5) to a String
605	Calculate the workday past x workdays from a starting date, considering a range of holidays.
606	Write out this document to an Outputstream
607	Copy cell value, formula and style, from srcCell per cell copy policy
608	Resize this picture to the default size
609	Convert HSL values to a RGB Color.
610	Add a new child to the collection of children name
611	If we have something that looks like [book]Sheet1: or
612	Create a pivot table using the AreaReference or namedtable range on sourceSheet, at the given position
613	one
614	We have this method because the way in which arrays in escher works is screwed for seemly arbitrary reasons
615	Find all sound records in the supplied Document records
616	Find master slides
617	Basic extractor
618	Creates a time based data validation constraint
619	Some strings may contain encoded characters of the unicode private use area
620	Load the block, extending the underlying stream if needed
621	Creates an empty numbering if one does not already exist and sets the numbering member
622	Creates a single BATBlock, with all the values set to empty.
623	Applies the drawn borders to a Sheet
624	Uses input pattern to tile destination region, overwriting existing content
625	Convert from split R, G, B values to an integer RGB value
626	Create a header of the given type
627	Read and process the PropertiesTable and the
628	Collapses the drawing records into an aggregate
629	This is a helper functions, which is needed for adding new position dependent records or finally write the slideshow to a file
630	Adds a merged region of cells (hence those cells form one)
631	Creates a map (i.e
632	Property Set Format
633	Allows to add a new Conditional Formatting set to the sheet.
634	Constructs a textbox under the patriarch
635	Attempts to merge the col info record at the specified index with either or both of its neighbours
636	Utility method that returns the named VerticalAlignment value form the given map.
637	Calculate and set the preferred size (anchor) for this picture.
638	Creates a new TNEF Attribute by reading data from
639	paint the paragraphs starting from top left (x,y)
640	Add a new paragraph run to this shape, set to the provided rich text string
641	Tries to parse the next as special quantifier
642	Call each of the list creation methods
643	Register a new function in runtime.
644	Translates an Excel internal error code into the corresponding POI ErrorEval instance
645	extracts all text recursively through embedded tables and embedded SDTs
646	Verifies that cursor is on the right position.
647	Command line extractor, so people will stop moaning that they can't just run this.
648	MB 24 May 2010
649	or chopping the runs to the given length
650	Removes a specific paragraph from this header  footer
651	Determines whether the sheets columns should be re-sized to accommodate the image, adjusts the columns width if necessary and creates then returns a ClientAnchorDetail object that facilitates construction of an ClientAnchor that will fix the image on the sheet and establish it's size
652	Fetches the InputStream to read the contents, based of the specified core part, for which we are defined as a suitable relationship
653	Apply the shade
654	Add filter for the column with the corresponding index and cell value
655	Generate an HMAC, as specified in [RFC2104], of the encrypted form of the data (message), which the DataIntegrity element will verify by using the Salt generated in step 2 as the key
656	inits the character run list indexes.
657	calculates the Net Present Value of a principal amount given the discount rate and a sequence of cash flows (supplied as an array)
658	Register an external name in this workbook
659	Find hyperlinks in a text paragraph
660	Serialises out the String
661	unsupported by HPSF
662	Insert a table constructed from OOXML table markup.
663	Finds the external name definition for the given name, optionally restricted by externsheet index, and returns (if found) as a NameXPtg.
664	This method reads hex data from a filename and returns a byte array
665	Calculates the section's size
666	creates the PrintSetup Record and sets it to defaults and marks it invalid
667	Hex-dumps a portion of a byte array in typical format, also preserving dump-line alignment start of each line
668	Useful for logic like tablerange styling, where some elements apply based on relative position in a range.
669	Retrieve the string representation given a blip id.
670	Calculates how many holidays in a list are workdays, considering an interval of dates.
671	Find the given record in the record list by identity and removes it
672	Computes the failure function using a boot-strapping process, where the pattern is matched against itself.
673	Creates cacheSource and workSheetSource for pivot table and sets the source reference as well assets the location of the pivot table
674	Add a new run with a reference to the specified footnote
675	Format the table and apply the specified Line to all cell boundaries, both outside and inside
676	Applying a user-defined style (UDS) is special
677	Calculate checksum on all the data read from input stream
678	Adds a new table at the end of the header or footer
679	Checks a row in a database against a condition database
680	Compare number of rows in sheets.
681	Create an empty table with one row and one column as default.
682	Check if the two cell ranges have a shared border
683	Converts from a list of classes into a map that contains the record id as the key and the Constructor in the value part of the map
684	function Ptg which has been changed from default 'V' to 'A' type (due to requirements on the function return value).
685	Aggregates the drawing records and dumps the escher record hierarchy to the standard output.
686	Called once the parent ChunkGroup has been populated, to match up the
687	Modifies rptg in-place and return a reference to rptg if the cell reference would move due to a column copy operation
688	Add a col label using data from the given column.
689	Tries to determine the actual type of file and produces a matching text-extractor for it.
690	Find the 2D base data area for the pivot table, either from its direct reference or named tablerange.
691	Given a format ID and its format String, will check to see if the format represents a date format or not
692	This method retrieves the AWT Color representation from the colour hash table
693	Distinguishes formula expressions from simple value expressions
694	Creates the appropriate chunk at the given location.
695	Adds a vbaProject.bin file to the workbook
696	Apply this format part to the given value, applying the result to the given label.
697	Use Excel conditional formatting to highlight payments that are due in the next thirty days
698	Format the inside border using the specified Line object
699	When calling this to draw text, it assumes graphics is set properly to draw in the right style.
700	create a new XWPFTableRow object with as many cells as the number of columns defined in that moment
701	Add a column label using data from the given column and specified function
702	Opens a sample file from the test data directory
703	assumes both this and other are normalised
704	Use Excel conditional formatting to highlight items that are in a list on the worksheet.
705	Formats the given raw cell value, based on the supplied format index and string, according to excel style rules.
706	CellFormatResult} object with the results
707	Gives back the JAXB CertID data structure.
708	copy-pasted from XSSFWorkbook#updateNamedRangesAfterSheetReorder(int, int) update sheet-scoped named ranges in this workbook after changing the sheet order of a sheet at oldIndex to newIndex
709	Creates an empty footnotes element for the document if one does not already exist
710	When the second argument is a string, many things are possible
711	Grab the text, based on the WordToTextConverter
712	Creates a human readable name for built in types
713	Creates a non shared formula from the shared formula counterpart
714	Create an empty table with a number of rows and cols specified
715	Tree walking way of finding Escher Child Records
716	Creates a new Hyperlink and assign it to a shape
717	Writes the properties out into the given low-level stream
718	Retrieves the number of border colors assigned to a cell
719	Adds a name (named range or user defined function) to underlying workbook's names table
720	Takes an InputStream, verifies that it's not RTF or PDF, builds a
721	Specifies the border which shall be displayed between each paragraph in a set of paragraphs which have the same set of paragraph border settings.
722	assumed to represent 12:00 midnight on the respective day.
723	generates a sample workbook with conditional formatting, and prints out a summary of applied formats for one sheet
724	Creates a new Table, and associates it with this Sheet.
725	Clears all paragraphs and tables from this header  footer
726	Checks if cell under line matches.
727	Goes through the Workbook, optimising the fonts by removing duplicate ones
728	decrypt the bytes starting at encryptionOffset
729	create shape tree from existing escher records tree
730	Saves the modified paragraphstextrun to the records
731	Write out our header, and our children.
732	creates a new font record and adds it to the "font table"
733	Note - Excel function names are 'case aware but not case sensitive'
734	adds a merged region of cells (hence those cells form one) or multi-cell array formula on this sheet
735	Find correct position to add new CFHeader record
736	Create and add a part, with the specified name and content type, to the package
737	Create an OPC compliant part name by resolving it using a base part
738	Clones all the style information from another
739	Initialize a new cipher object with the given cipher properties
740	Create a blank chart on the given slide.
741	Create the Escher records associated with a new PPDrawing
742	Copies an Entry into a target POIFS directory, recursively
743	RK record is a slightly smaller alternative to NumberRecord
744	Write the block's data to an OutputStream be written stream
745	The IF() function gets marked up with two or three tAttr tokens
746	It is assumed that at least one row or cell value record has been found prior to the current record
747	Moves a number of entries in an array to another point in the array, shifting those inbetween as required.
748	Separates the sheet name, row, and columns from a cell reference string
749	used internally to set the properties given a Sheet object
750	Add the headerfooter text, if it's not empty
751	For a given named property entry, either return it or null if if it wasn't found
752	Uses a String in standard Excel format (SheetName!CellId) to locate a cell and evaluate it.
753	Add data field with data from the given column and specified function
754	Calculates the height of a client anchor in points.
755	Fired when the document is written to an output stream.
756	Use the PersistPtrHolder entries to figure out what is the "most recent" version of all the core records (Document, Notes, Slide etc), and save a record of them
757	Formats the byte array in a debug-friendly way, showing all of a short array, and the start of a longer one.
758	array
759	Add a new picture to this presentation.
760	supported, so it's the rsa variant of the main digest
761	The display methods allows escher variables to print the record names according to their hierarchy.
762	Writes out to disk the header, and then all the properties
763	Spits out a list of all the drawing records in the workbook.
764	Specifies the fonts which shall be used to display the text contents of this run
765	Specifies the border which shall be displayed on the left side of the page around the specified paragraph.
766	Calculate the best-fit width for a cell
767	Writes out the standard Document Information Properties (HPSF)
768	Creates an instance of this class from an embedded OLE Object
769	Adds the given Child Record after the supplied record
770	Read an excel file and spit out what we find.
771	Writes ourselves back out to a filesystem
772	need to be preserved with the xml:space=\"preserve\" attribute
773	Inserts a numbered list into a single cell
774	changes the cell type to the specified type, and resets the value to the default value for that type
775	Tell all contained evaluators that this environment should be discarded
776	Parse and Translate a Math Factor
777	Changes the type of the text
778	Performs a recursive search, identifying the pointers we contain, creating the Streams for where they point to, then searching those if appropriate.
