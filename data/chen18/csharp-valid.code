0	System.Web.Script.Serialization.JavaScriptSerializer oSerializer = \nnew System.Web.Script.Serialization.JavaScriptSerializer();\nstring sJSON = oSerializer.Serialize(YOUR CLASS HERE);
1	private void CopyWithProgress(string[] filenames)\n    {\n        // Display the ProgressBar control.\n        pBar1.Visible = true;\n        // Set Minimum to 1 to represent the first file being copied.\n        pBar1.Minimum = 1;\n        // Set Maximum to the total number of files to copy.\n        pBar1.Maximum = filenames.Length;\n        // Set the initial value of the ProgressBar.\n        pBar1.Value = 1;\n        // Set the Step property to a value of 1 to represent each file being copied.\n        pBar1.Step = 1;\n\n        // Loop through all files to copy. \n        for (int x = 1; x <= filenames.Length; x++)\n        {\n            // Copy the file and increment the ProgressBar if successful. \n            if(CopyFile(filenames[x-1]) == true)\n            {\n                // Perform the increment on the ProgressBar.\n                pBar1.PerformStep();\n            }\n        }\n    }
2	var dictionary = instructors.Elements("instructor")\n                            .Select((element, index) => new { element, index })\n                            .ToDictionary(x => x.index + 1,\n                                          x => x.element.Value);
3	var p = Process.Start( ... );\n\n// ...\n\nif (!p.WaitForExit(5000)) { // wait 5 seconds\n  p.Kill();\n}
4	string allValues = string.Join(System.Environment.NewLine, valueCollection.AllKeys.Select(key => valueCollection[key]));
5	string sInvite = @"\n\n*********************************************\n\n                   " + sGuest + @"\n        is invited to the wedding of:\n        " + sBride + @" and " + sGroom + @"\n    On Saturday 17 July 2016 at 2:00pm\n\n*********************************************";\n\nConsole.WriteLine(sInvite);
6	var lines = str.Split('\n')\n                .Where(s => !string.IsNullOrWhiteSpace(s));\n\nstr = string.Join("\n", lines);
7	protected void Application_Start()\n{\n    HttpConfiguration config = GlobalConfiguration.Configuration;\n    config.Formatters.JsonFormatter.SerializerSettings.ContractResolver = new CamelCasePropertyNamesContractResolver()\n    config.Formatters.JsonFormatter.UseDataContractJsonSerializer = false;\n}
8	gridView1.OptionsBehavior.AllowAddRows = DevExpress.Utils.DefaultBoolean.True;\n    gridView1.OptionsBehavior.AllowDeleteRows = DevExpress.Utils.DefaultBoolean.True;\n    gridView1.OptionsView.NewItemRowPosition = NewItemRowPosition.Bottom;\n    //...\n    var bindingList = new BindingList<IPerson>(){\n        new Person(){ Name="John", Age=23 },\n        new Person(){ Name="Mary", Age=21 },\n    };\n    bindingList.AddingNew += bindingList_AddingNew; //  <<--\n    bindingList.AllowNew = true;\n    gridControl1.DataSource = bindingList;\n}\n\nvoid bindingList_AddingNew(object sender, AddingNewEventArgs e) {\n    e.NewObject = new Person(); //   <<-- these lines did the trick\n}\n//...\npublic interface IPerson {\n    string Name { get; set; }\n    int Age { get; set; }\n}\nclass Person : IPerson {\n    public string Name { get; set; }\n    public int Age { get; set; }\n}
9	WriteableBitmap wb = new WriteableBitmap(1,1);\nawait wb.SetSourceAsync(str);
10	private void button1_Click(object sender, EventArgs e)\n{\n\n    SqlConnection con = new SqlConnection(@"Data Source=SUBASH-LAPTOP\COBRA;Initial Catalog=Test;Integrated Security=True");\n\n    SqlCommand Command = con.CreateCommand();\n\n    SqlDataAdapter dp = new SqlDataAdapter("Select * From orders where date_purchased <= @varDate", con);\n    dp.SelectCommand.Parameters.AddWithValue("@varDate", dateTimePicker1.Value);\n    DataSet ds = new DataSet();\n    dp.Fill(ds);\n    DataGridView d1 = new DataGridView();\n    d1.DataSource = ds;\n    d1.DataMember = ds.Tables[0].TableName;\n    this.Controls.Add(d1);\n\n}
11	pnlSettings.Location = new Point(0, 0);\n    pnlSettings.Size = this.ClientSize;\n    this.Controls.Add(pnlSettings);
12	var currentProcess = System.Diagnostics.Process.GetCurrentProcess();\n        var matchingProcesses = System.Diagnostics.Process.GetProcesses().Where(x => x.Id != currentProcess.Id && x.ProcessName == currentProcess.ProcessName);\n        foreach (var process in matchingProcesses) {\n            process.Kill();\n        }
13	var source = "sometext\n\t\t\t\t00:00\n\t\t\t\t05:32\n\t\t\t\t...."\n var result = source.Split(new []{"\n\t\t\t\t"}, StringSplitOptions.None);
14	var result = employees.SelectMany(x => x.WorkDays, (employeeObj, workDays) => \n                                                   new { employeeObj, workDays })\n                      .GroupBy(x => x.workDays.Date)\n                      .Select(x => new\n                             {\n                                Date = x.Key,\n                                NameAndHours = x.Select(z => \n                                    new { \n                                            Name = z.employeeObj.Name, \n                                            Hours = z.workDays.Hours \n                                        })\n                             }).ToList();
15	DateTime.FromOADate([double])
16	HtmlDocument doc = new HtmlDocument();\n doc.Load("file.htm");\n\n List<string> mp3Links = new List<string();\n foreach(HtmlNode link in doc.DocumentElement.SelectNodes("//a[@href"])\n {\n    if(link != null)\n    {\n      if(link["href"].EndsWith(".mp3"))\n      {\n        mp3Links.Add(link["href"].Value);\n      }\n    }\n }
17	Application.Run()
18	var context = new DbContext();\n\n// Load entity via whatever Id parameter you have.\nvar entityToUpdate = context.Set<Type>().FirstOrDefault(x => x.Id == idToUpdate);\n\nif(entityToUpdate != null)\n{\n    entityToUpdate.Value1 = newValue1;\n    entityToUpdate.Value2 = newValue2;\n\n    context.SaveChanges();\n}
19	var charSet = new HashSet<char>("abcde\x015f" + Regex.Unescape("\u0066"));\n//or var charSet = new HashSet<char>(new[] { 'a', 'b', 'c', 'd', 'e', '?', 'f'});\n//or var charSet = new HashSet<char>(new[] { '\x0061', '\x0062', '\x0063', '\x0064', '\x0065', '\x015F', '\x0066'});\n//or var charSet = new HashSet<char>(Regex.Unescape("\u0061\u0062\u0063\u0064\u0065\u015F\u0066"));\n//or var charSet = new HashSet<char>("\x0061\x0062\x0063\x0064\x0065\x015F\x0066");\n\nstring input = "abc  def? aaa xyz";\n\nvar words =  input.Split()\n                .Where(s => !String.IsNullOrWhiteSpace(s))\n                .Where(s => s.All(c => charSet.Contains(c)))\n                .ToList();
20	textbox.text = string.Empty;
21	modify = Regex.Replace(modify, @"FEW0*(\d+)0", "few clouds at $1,000.");
22	PrinterSettings settings = new PrinterSettings();//System.Drawing.Printing.PrinterSettings\n  PrintDocument printDoc = new PrintDocument();\n\n  settings.Copies = Copiesnumber; //put your number of copies\n\n  printDoc.PrinterSettings = settings;\n\n  PageSettings MyPage = new PageSettings(settings);\n\n  printDoc.DefaultPageSettings = MyPage;
23	CREATE PROCEDURE [dbo].[usp_ExecuteBulkInsertTask]  \n(  \n @dataFile   VARCHAR(255),  \n @bulkInsertFormatFile  VARCHAR(255),  \n @tableName  VARCHAR(255)  \n)  \nAS \nBEGIN\nBEGIN TRY\nDECLARE @SQL Varchar(4000)  \n\n SET @SQL = 'BULK INSERT ' + @tableName  + ' FROM ''' + @dataFile + ''' WITH (formatfile=''' + @bulkInsertFormatFile + ''', FIRSTROW=2)'  \n EXEC sp_sqlexec  @SQL\nEND TRY\nBEGIN CATCH\n --error handling\nEND CATCH\nEND
24	System.Net.Mail
25	Where="ConfiguredCarId.Contains(@ConfiguredCarId)"
26	NpgsqlDataAdapter da = new NpgsqlDataAdapter("Select NombreMarca From Marca Where UPPER(NombreMarca) ='"+cbMarca.Text.ToUpper()+"'", conn);
27	string date = string.Format("{0:MMddyyHHmmss}", DateTime.Now);
28	var dropDown  = GridView1.Rows[GridView1.EditIndex].FindControl("ddlprioridade") as DropDownList;
29	long num = 1234567890123456789;\nSystem.Diagnostics.Debug.WriteLine("Str=" + num.ToString("0"));
30	public void Save(Article article)\n{\n    ArticleDAL art = new ArticleDAL();\n    art.Save(article);\n}
31	var result = from ap in AvailablePacks  \n             join rp in RecommendedPacks \n               on ap.PackID equals rp.PackID\n               select new {\n                  PackQuantity = ap.Quantity\n               };
32	var t = str.split(':');\nvar result = '<Entry Name="'+t[1]+'" Code="'+t[0].trim().replace(/ /g,'')+'"/>';
33	/// <summary>\n/// Writes a string followed by a newline to the console\n/// </summary>\n/// <param name="s">The value to write</param>\npublic void WriteLine(string s)\n{\n    //Do something with a string\n}\n\n/// <summary>\n/// Writes the string representation of an object followed by a newline to the console\n/// </summary>\n/// <param name="o">The value to write</param>\npublic void WriteLine(object o)\n{\n    //Do something with an object\n}
34	private void richTextBox1_SelectionChanged(object sender, EventArgs e)\n{\n    int index = richTextBox1.SelectionStart;\n    int line = richTextBox1.GetLineFromCharIndex(index);\n    label1.Text = "cursor at line " + line.ToString();\n}
35	private void update_sql(object sender, KeyPressEventArgs e)\n{\n    if (e.KeyChar == (char)13)\n    {\n        fletera_facturasTableAdapter.Update(indarDataSet2.fletera_facturas);\n        **indarDataSet2.fletera_facturas.AcceptChanges();**\n    }\n}
36	var filtered = dt.AsEnumerable()\n                 .Where(r => r.Field<int>("ID") < 1000);\n\n\nDataView dv1 = filtered.AsDataView();\n\nDataView dv2 = filtered.Where(r => r.Field<string>("Salary") > 50000)\n                       .AsDataView();
37	String source = this.ServiceName;
38	DataRow[] foundRows = rightFileDT.Select(expression);\nif (foundRows.Length == 0)\n{\n    matchedFileDataRow["File_Match"] = "False";\n}\nelse\n{\n    matchedFileDataRow["File_Match"] = "True";\n}\nmatchedFileDataRow["Left_File_Name"] = leftFileMatch;\nmatchedFileDT.Rows.Add(matchedFileDataRow);
39	style.ParagraphFormat.OutlineLevel = OutlineLevel.BodyText;
40	public void jsonHome_GetDataCompleted(object snder, DownloadStringCompletedEventArgs e)\n{\n    NewReleasesCharts homeData = JsonConvert.DeserializeObject<NewReleasesCharts>(e.Result);\n\n    const int limit = 4;\n\n    this.listRelease.ItemsSource = homeData.results.featuredReleases.Take(limit);\n}
41	foreach(Form form in pnlMain.Controls.OfType<Form>().ToArray())
42	String.Format("{0:dd.MM.yyyy}", dataTable.Rows[0]["TIMEFROM"]);\nString.Format("{0:dd.MM.yyyy}", dataTable.Rows[0]["TIMETO"]);
43	var innerInnerQuery = from g in GROUPS\n                      where NPI == "roupnpi" \n                          && TAXID == "grouptin"\n                          && ADDRESSTYPE_RTK == "_REI0PVM65"\n                      select g.GROUP_K;\nvar innerQuery = from ga in GROUPADDRESS\n                 where innerInnerQuery.Contains(ga.GROUP_K)\n                 select ga.ADDRESS_K;\nvar query = from a in ADDRESSES\n            where ZIPCODE == "66210"\n                && innerQuery.Contains(a.ADDRESS_K)\n            select a;
44	var route = listOfRouteObj.SingleOrDefault(route => route.RouteID.Equals("1"));\nif(route != null)\n   route.Priority = 1000;
45	private void userTextBox_TextChanged(object sender, EventArgs e)\n{\n    string userInput = userTextBox.Text;\n    userInput = userInput.Trim();\n    string[] wordCount = userInput.Split(null);\n\n    int charCount = 0;\n    foreach (var word in wordCount)\n        charCount += word.Length;\n\n    wordCountOutput.Text = wordCount.Length.ToString();\n    charCountOutput.Text = charCount.ToString();\n}
46	var dateTimesDescending = myDic.Values.OrderByDescending(d => d);
47	int firstDayOfWeek = (int)DayOfWeek.Monday;\nvar q = \n    from u in TblUsers\n    let date = u.CreateDate.Value\n    let num = date.DayOfYear - 1\n    let num2 = ((int)date.DayOfWeek) - (num % 7)\n    let num3 = ((num2 - firstDayOfWeek) + 14) % 7\n    let week = (((num + num3) / 7) + 1)\n    group u by week into g\n    select new \n    {\n        Week = g.Key,\n        Count = g.Count ()\n    };
48	string s = Regex.Replace( \n    "ID:300,Order:1,Number:30.99,Other:null",\n    @"(?<=Number:).*?(?=,|$)",\n    m => "*" );
49	string arguments = string.Format(@"-density 300 {0}.pdf {1}.png", intputFileName, outputFileName");\nvar startInfo = new ProcessStartInfo {\n    Arguments = arguments,\n    Filename = @"C:\path\to\imagick\convert.exe"\n};\nProcess.Start(startInfo).WaitForExit();
50	public class MainWindowViewModel : ViewModelBase\n   {\n    public ViewModel1 ViewModel1 { get; set; }\n    public ViewModel2 ViewModel2 { get; set; }\n    public ViewModel3 Model3 { get; set; }\n\n    public MainWindowViewModel()\n    {\n        ViewModel1 = new ViewModel1();\n        ViewModel2 = new ViewModel2();\n        ViewModel3 = new ViewModel3();\n        ViewModel1.PropertyChanged += (s,e) => \n        {\n           if(e.PropertyName == "IsBusy") \n           { \n              // set the MainWindowViewModel.IsBusy property here\n              // for example:\n              IsBusy = ViewModel1.IsBusy;\n           }\n         }\n    //IsBusy = true; - its working\n   }\n}
51	Random rnd = new Random(); //Create this random class only once.\n\nJArray obj = (JArray)JsonConvert.DeserializeObject(json);\ndynamic item = obj[rnd.Next(0, obj.Count)];\nConsole.WriteLine(item.title);
52	ServiceConfiguration.ServiceName
53	// clicked OK, should I call SaveSettings() here?
54	[HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Zoom]\n"ZoomDisabled"=dword:00000001\n"ResetTextSizeOnStartup"=dword:00000001
55	Dim soapHeader As XmlElement = _xmlRequest.CreateElement("soap", "Header", "http://schemas.xmlsoap.org/soap/envelope/")\nDim soapBody As XmlElement = _xmlRequest.CreateElement("soap", "Body", "http://schemas.xmlsoap.org/soap/envelope/")
56	// Button_Click event\nWindow window = new Window\n{\n     Title = "Window2",\n     Content = new UserDataControl2("My Data");\n};\n\n\n// User Control class.\nstring _info;\n\npublic UserDataControl2(string info)\n{\n   _info = info.\n};
57	contactAddress = new []{"xxx","yyy"};
58	File.Replace
59	object GetSomething()\n{\n    var x = new { a = "b", i = 1 };\n    return x;\n}
60	AutoScroll=true
61	Dim tasks =\n    { Task.Delay(3000).ContinueWith(Function(_) 3),\n      Task.Delay(1000).ContinueWith(Function(_) 1),\n      Task.Delay(2000).ContinueWith(Function(_) 2),\n      Task.Delay(5000).ContinueWith(Function(_) 5),\n      Task.Delay(4000).ContinueWith(Function(_) 4),\n    }
62	public bool BatchInsert(string table, IEnumerable<string> values)\n    {\n        var sql = new StringBuilder();\n        sql.Append("INSERT INTO " + table + " VALUES(");\n\n        var newValues = values.Where(x => !x.StartsWith("LIFT")).Select(x => string.Format("'{0}'", x.Replace("'", "''")));\n        sql.Append(string.Join("","", newValues.ToArray()));\n        sql.Append(")");\n\n        using (var comm = new SqlCommand(statement, connectionPCICUSTOM))\n        {\n            try\n            {\n                comm.Connection.Open();\n                comm.ExecuteNonQuery();\n            }\n            catch (Exception e)\n            {\n                KaplanFTP.errorMsg = "Database error: " + e.Message;\n            }\n            finally\n            {\n                comm.Connection.Close();\n            }\n        }\n        return true;\n    }
63	Persons = new ObservableCollection<Person>(from i in Persons orderby i.Age select i);
64	System.Drawing.Printing.PageSettings pg=new System.Drawing.Printing.PageSettings();\n pg.Margins.Top = 0;\n pg.Margins.Bottom = 0;\n pg.Margins.Left = 0;\n pg.Margins.Right = 0;\n System.Drawing.Printing.PaperSize size = new PaperSize();\n size.RawKind = (int)PaperKind.A5;\n pg.PaperSize = size;\n reportViewer1.SetPageSettings(pg);\n this.reportViewer1.RefreshReport();
65	void listBox1_DragDrop(object sender, DragEventArgs e)\n{\n  e.Effect = DragDropEffects.Copy;\n}\n\nvoid listBox1_DragEnter(object sender, DragEventArgs e)\n{\n  e.Effect = DragDropEffects.Copy;\n}
66	ManagementObjectSearcher intquery1 = new ManagementObjectSearcher("SELECT * FROM Win32_NetworkAdapterConfiguration  WHERE Description ='" + comboBox1.Items[comboBox1.SelectedIndex].ToString() + "'");\nManagementObjectCollection queryCollection1 = intquery1.Get();\nqueryCollection1 = intquery1.Get();\n\nforeach (ManagementObject mo1 in queryCollection1)\n{\n   string[] addresses = (string[])mo1["IPAddress"];\n   string[] gateways = (string[])mo1["DefaultIPGateway"];\n   string[] subnets = (string[])mo1["IPSubnet"];\n\n   if (addresses != null)\n   {\n       listBox1.Items.Clear();\n       foreach (string ip in addresses)\n       {\n           listBox1.Items.Add(ip);\n       }\n   }\n   if (gateways != null)\n   {\n       foreach (string gateway in gateways)\n       {\n          TxtGateway.Text = (gateway);\n       }\n   }\n   if (subnets != null)\n   {\n       foreach (string subnet in subnets)\n       {\n           richTextBox1.Text = (subnet);\n       }\n   }\n}
67	string text = @"<div><span class=""help"">This is text.</span>Hello, this is text.      </div>\n                <div>I have a question.<span class=""help"">Hi</span></div>";\nHtmlDocument doc = new HtmlDocument();\ndoc.LoadHtml(text);\nvar nodes = doc.DocumentNode.SelectNodes("//span[@class='help']");\nforeach( HtmlNode node in nodes)\n{\n   node.Remove();\n} \nString result = doc.DocumentNode.InnerHtml;
68	if (FormsAuthentication.Authenticate(username, password))\n {\n  //you can set cookie\n  FormsAuthentication.SetAuthCookie(username, false);\n  //redirect when user is authenticated\n  FormsAuthentication.RedirectFromLoginPage(username, false);\n }\n else\n {\n  //invalid login\n }
69	string json = @"[{""Key"" : ""Microsoft"", ""Value"":[{""Key"":""Publisher"",""Value"":""abc""},{""Key"":""UninstallString"",""Value"":""c:\temp""}]}]";\n\nvar list = JsonConvert.DeserializeObject< List<KeyValuePair<string,List<KeyValuePair<string, string>>>> >(json);\n\nvar dict= list.ToDictionary(\n         x => x.Key, \n         x => x.Value.ToDictionary(y=>y.Key,y=>y.Value));
70	TextBox2.Text = System.Text.RegularExpressions.Regex.Replace(\n                    TextBox1.Text, \n                    @"^.{49}", \n                    "", \n                    RegexOptions.Multiline );
71	[StructLayout(LayoutKind.Explicit, Pack = 1)]\npublic unsafe struct PNIO_ADDR\n{\n    [FieldOffset(0)]\n    public PNIO_IO_TYPE AddrType;\n\n    [FieldOffset(4)]\n    public PNIO_IO_TYPE IODataType;\n\n    // container, size:20bytes\n    [FieldOffset(8)]\n    //[MarshalAs(UnmanagedType.ByValArray, SizeConst = 5)]\n    public fixed uint Reserved[5];\n\n    [FieldOffset(8)]\n    [MarshalAs(UnmanagedType.U4)]\n    public uint Addr;\n}
72	string entryid = ...\n\nvar outlookApp = new Outlook.Application();\nvar outlookNS = outlookApp.Session;\nvar fldContacts = outlookNS.GetDefaultFolder(Outlook.OlDefaultFolders.olFolderContacts);\nvar contact = outlookNS.GetItemFromID(entryid, fldContacts.StoreID);
73	Enum.GetValues(typeof(View)).Cast<View>().Take(6);
74	var temp = "The accounting equation asset = capital + liabilities, which of the             following is true. Ram has started business with 5,50,000 and has purchased goods worth 1,50,000 on credit <input type='radio' id='op1' name='q2option' value='1' /> a) 7,00,000 = 5,50,000 + 1,50,000 <input type='radio' id='op2' name='q2option' value='2' />b)7,00,000 = 6,50,000 + 50,000 <input type='radio' id='op3' name='q2option' value='3' /> c) 5,50,000 = 7,00,000 - 1,50,000 <input type='radio' id='op3' name='q2option' value='4' /> d)5,50,000 = 5,00,000 + 50,000";\n\nvar regInput = new Regex("(.*?)(\\<input[^\\>]*\\>)(.*?)");\n\nvar result =regInput.Replace(temp,"$1$3");
75	.OrderBy( z => z.AnswerId)
76	List<T>.BinarySearch
77	SnapIn.Console.ShowDialog
78	using System;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.Title = "Datetime checker";\n            Console.Write("Enter the date and time to launch from: ");\n            DateTime time1 = DateTime.Parse(Console.ReadLine());\n            Console.WriteLine();\n            Console.Write("Enter the time to take off: ");\n            TimeSpan time2 = TimeSpan.Parse(Console.ReadLine());\n            DateTime launch = time1.Subtract(time2);\n            Console.WriteLine("The launch time is: {0}", launch.ToString());\n            Console.ReadLine();\n        }\n    }\n}
79	class MathCalculations\n{\n    private Func<double, double, double> min = Math.Min;\n    private Func<double, double, double> max = Math.Max;\n    private Func<double, double> sin = Math.Sin;\n    private Func<double, double> tanh = Math.Tanh;\n\n    void DoCalculations()\n    {\n        var r = min(max(sin(3), sin(5)), tanh(40));\n    }\n}
80	enum Colors {Red, Green, Blue}\n\n// your code:\nColors color = (Colors)System.Enum.Parse(typeof(Colors), "Green");
81	bool bCreated;\nvar ev = new EventWaitHandle(true, EventResetMode.AutoReset, @"Global\myGlobalEvent", out bCreated);
82	for (numberOfBills[0] = 0; totalAmount >= 20; numberOfBills[0]++)\n    {\n        totalAmount = totalAmount - 20;\n    }\n    for (numberOfBills[1] = 0; totalAmount >= 10; numberOfBills[1]++)\n    {\n        totalAmount = totalAmount - 10;\n    }\n    for (numberOfBills[2] = 0; totalAmount >= 5; numberOfBills[2]++)\n    {\n        totalAmount = totalAmount - 5;\n    }\n    for (numberOfBills[3] = 0; totalAmount > 0; numberOfBills[3]++)\n    {\n        totalAmount = totalAmount - 1;\n    }
83	FileStream readStream = new FileStream(FILE_NAME, FileMode.Open, FileAccess.Read);\nBinaryReader read = new BinaryReader(readStream);\n\nwhile (read.PeekChar() != -1)\n{\n    book.readDataFrom(read);\n    book.display();\n}
84	if (item.PropertyType.IsGenericType) {\n    if (item.PropertyType.GetGenericType() == typeof(Nullable<>)) {\n        var valueType = item.PropertyType.GetGenericArguments()[0];\n    }\n}
85	Type type2 = Type.GetType(type.AssemblyQualifiedName);
86	var xDoc = XDocument.Load(fname);\nXNamespace ns = "http://soap.sforce.com/2006/04/metadata";\n\nvar folder = xDoc.Root.Element(ns + "rffolder").Value;
87	public static String getJsonData(String webServiceName,String parameter)\n{  \ntry  \n{\n    String urlFinal=SERVICE_URI+"/"+webServiceName+"?parameter=";\n    HttpPost postMethod = new HttpPost(urlFinal.trim()+""+URLEncoder.encode(parameter,"UTF-8"));\n\n    postMethod.setHeader("Accept", "application/json");\n    postMethod.setHeader("Content-type", "application/json");\n\n    HttpClient hc = new DefaultHttpClient();\n\n    HttpResponse response = hc.execute(postMethod);\n    Log.i("response", ""+response.toString());\n    HttpEntity entity = response.getEntity();\n    String responseText = EntityUtils.toString(entity);\n\n    string=responseText;\n    Log.i("Output", ""+responseText);\n      }\n      catch (Exception e) {\n        // TODO: handle exception\n    }\n\nreturn string;\n}
88	protected void Page_PreRender(object sender, EventArgs e)\n{\n    foreach (ListItem item in ckl_EditRole.Items)\n    {\n        item.Attributes["title"] = GetRoleTooltip(item.Value);\n    }\n}\n\nprivate static string GetRoleTooltip(string p)\n{\n    // here is your code to get appropriate tooltip message depending on role\n}
89	//Button Row    //GridView      //Parent row\nvar parentRow = (GridViewRow)sender.NamingContainer.NamingContainer.NamingContainer;\nvar index = parentRow.RowIndex;
90	XmlDocument doc = new XmlDocument();\nXmlDeclaration declaration = doc.CreateXmlDeclaration("1.0", "ISO-8859-1", null);\ndoc.AppendChild(declaration);\nXmlProcessingInstruction pi = doc.CreateProcessingInstruction("MyCustomNameHere", "attribute1=\"val1\" attribute2=\"val2\"");\ndoc.AppendChild(pi);
91	protected void DropDownList1_SelectedIndexChanged(object sender, EventArgs e)\n{\n  DropDownList ddl = (DropDownList) sender;\n  GridViewRow row = (GridViewRow) ddl.NamingContainer;\n  int rowIndex = row.RowIndex;\n}
92	var propertyInfo = typeof(Foo).GetProperty("Bar");\nobject convertedValue = null;\ntry \n{ \n    convertedValue = System.Convert.ChangeType("1256", \n        Nullable.GetUnderlyingType(propertyInfo.PropertyType));\n} \ncatch (InvalidCastException)\n{\n    // the input string could not be converted to the target type - abort\n    return;\n}\npropertyInfo.SetValue(fooInstance, convertedValue, null);
93	var item = new IPMAC();\nforeach (Match match in matches)\n{\n      Console.WriteLine("Hardware Address : {0}", match.Groups[1].Value);\n      item.mac = match.Groups[1].Value;\n}\n\n\nforeach (Match match in matchesIP)\n{\n      Console.WriteLine("IP Address : {0}", match.Groups[1].Value);\n      item.ip = match.Groups[1].Value;\n}\nipmac.Add(item);
94	{Binding}
95	public MyClass\n{    \n    private readonly IAuthorizationService _authorizationService;\n\n    public MyClass(IAuthorizationService authorizationService) \n    {\n        _authorizationService = authorizationService;\n    }\n\n    void MyMethod()\n    {\n        if(_authorizationService.HasCurrentUserCompletedSecurity()) ....\n    }    \n}
96	SHDocVw.ShellWindows shellWindows = new SHDocVw.ShellWindows();\n\n        string filename;\n        ArrayList windows = new ArrayList();\n\n        foreach (SHDocVw.InternetExplorer ie in shellWindows)\n        {\n            filename = Path.GetFileNameWithoutExtension(ie.FullName).ToLower();\n            if (filename.Equals("explorer"))\n            {\n                //do something with the handle here\n                MessageBox.Show(ie.HWND.ToString()); \n            }\n        }
97	[HttpPost]\npublic ActionResult YourActionMethod(FormCollection Collection)\n{\n        string Country = string.Empty;\n\n        if (Collection["txtCountry"] != null)\n            Country = Collection["txtCountry"].ToString();\n//Else you can assign the values to your model object.\n        return View();\n}
98	p.StartInfo.RedirectStandardInput = true;
99	FxCopCmd.exe /file:MyAssembly.dll /out:AnalysisResults.xml /ignoregeneratedcode
100	[WebMethod]\n    public String GetPONumber(string Database)\n    {   \n        //Create Object ready for Value\n        object po = "";\n\n        //Set Connection\n        SqlConnection Connection = new SqlConnection(GetConnString(Database));\n\n        //Open Connection\n        Connection.Open();\n\n        //Set Query to string\n        string Query = @" SQL QUERY GOES HERE!!!! ";\n\n        //Run Query\n        SqlCommand Command = new SqlCommand(Query, Connection);\n\n        //Set Value from Query\n        try\n        {\n            po = Command.ExecuteScalar();\n        }\n        catch\n        {\n            //Error\n        }\n\n        //Clean up sql\n        Command.Dispose();\n        Command = null;\n\n\n        //Clean up connection\n        Connection.Close();\n        Connection.Dispose();\n        Connection = null;\n\n        //Return Value\n        return po.ToString();\n    }
101	SpriteSortMode.BackToFront
102	FileStream s2 = new FileStream(name, FileMode.Open, FileAccess.Read, FileShare.None);
103	protected override void WndProc(ref Message m) {\n        if (m.Msg == 0x86) m.WParam = (IntPtr)1;\n        base.WndProc(ref m);\n    }
104	HasManyToMany(x => x.RelatedTo)\n                .Table("RelatedItems")\n                .ParentKeyColumn("ItemId")\n                .ChildKeyColumn("RelatedItemId");\n\nHasManyToMany(x => x.RelatedToMe)\n                .Table("RelatedItems")\n                .ChildKeyColumn("ItemId")\n                .ParentKeyColumn("RelatedItemId");
105	someObject.GetType()\n     .GetProperties(BindingFlags.Instance | BindingFlags.Public)\n          .ToDictionary(prop => prop.Name, prop => prop.GetValue(someObject, null))
106	AsEnumerable()
107	SessionId  EventType  .... your session data here ... SessionCount   \n1.     1         Login         ................                 1\n2.     2         Login         ................                 2\n3.     3         Login         ................                 3\n4.     1         Logout        ................                 2\n5.     4         Login         ................                 3\n6.     4         Logout        ................                 2\n7.     2         Logout        ................                 1\n8.     3         Logout        ................                 0\n9.     5         Login         ................                 1\n10.    6         Login         ................                 2
108	IHTMLDocument2 doc = (IHTMLDocument2) webBrowser1.Document.DomDocument;\nIHTMLControlRange imgRange = (IHTMLControlRange) ((HTMLBody) doc.body).createControlRange();\n\nforeach (IHTMLImgElement img in doc.images)\n{\n  imgRange.add((IHTMLControlElement) img);\n\n  imgRange.execCommand("Copy", false, null);\n\n  using (Bitmap bmp = (Bitmap) Clipboard.GetDataObject().GetData(DataFormats.Bitmap))\n  {\n    bmp.Save(@"C:\"+img.nameProp);\n  }\n}
109	using System;\n\n[Serializable]  //the missing piece\npublic class RegisterFormData\n{\n    public string username { get; set; }\n    public string pass1 { get; set; }\n    public string pass2 { get; set; }\n    public string email { get; set; }\n    public string firstname { get; set; }\n    public string lastname { get; set; }\n}
110	string input = "[l=9;f=0;r=5;p=2];[l=9;f=0;r=6;p=2]";\nvar list = Regex.Matches(input, @"\[.+?\]")\n            .Cast<Match>()\n            .Select(m => m.Value)\n            .ToList();
111	public int Foo\n{\n   [SecurityPermission(...)]\n   get\n   {\n      return GetFoo();\n   }\n\n   [SecurityPermission(...)]\n   set\n   {\n      SetFoo(value);\n   }\n}
112	StringBuilder _header = new StringBuilder();\n_header.Append(string.Format("{0,4}", "0128"));\n_header.Append(string.Format("{0,-20}", name ));
113	string testCase = "http://test/mediacenter/Photo Gallery/Conf 1/1.jpg";\n    string urlBase = "http://test/mediacenter/Photo Gallery/";\n\n    if(!testCase.StartsWith(urlBase))\n    {\n        throw new Exception("URL supplied doesn't belong to base URL.");\n    }\n\n    Uri uriTestCase = new Uri(testCase);\n    Uri uriBase = new Uri(urlBase);\n\n    if(uriTestCase.Segments.Length > uriBase.Segments.Length)\n    {\n        System.Console.Out.WriteLine(uriTestCase.Segments[uriBase.Segments.Length]);\n    }\n    else\n    {\n        Console.Out.WriteLine("No child segment...");\n    }
114	var jo = JObject.Parse(json);\n        var data = (JObject)jo["Job"];\n        foreach (var item in data)\n        {\n            JToken token = JToken.Parse(item.Value.ToString());\n\n            Console.WriteLine(token.Value<String>("id"));\n        }
115	DateTime.ParseExact("091223", "yyMMdd", CultureInfo.InvariantCulture);
116	static private List<T> AmplifyPCM<T>(ICollection<T> samples, ushort bitDepth, float volumePercent)\n{\n    var highestSample = 0;\n    var temp = new List<T>();\n\n    foreach (var sample in samples)\n    {\n        if ((dynamic)sample < 0)\n        {\n            temp.Add(-(dynamic)sample);\n        }\n        else\n        {\n            temp.Add(sample);\n        }\n    }\n\n    foreach (var sample in temp)\n    {\n        if ((dynamic)sample > highestSample)\n        {\n            highestSample = (dynamic)sample;\n        }\n    }\n\n    temp = null;\n\n    var ratio = (volumePercent * (Math.Pow(2, bitDepth) / 2)) / highestSample;\n    var newSamples = new List<T>();\n\n    foreach (var sample in samples)\n    {\n        newSamples.Add((dynamic)(T)sample * ratio);\n    }\n\n    return newSamples;\n}
117	using (var dataContext = new ContextEntities())\n{\n   dataContext.Connection.Open();\n   var trx = dataContext.Connection.BeginTransaction();\n\n   var sql = "DELETE TestTable WHERE SomeCondition";\n   dataContext.ExecuteStoreCommand(sql);\n\n   var list = CreateMyListOfObjects(); // this could throw an exception\n   foreach (var obj in list)\n      dataContext.TestTable.AddObject(obj);\n   dataContext.SaveChanges(); // this could throw an exception\n\n   trx.Commit();\n}
118	TextReader.ReadLine
119	[Test]\n    public void CustomMapping()\n    {\n        //arrange\n        Mapper.CreateMap<Source, Destination>()\n            .ForMember(d=>d.Value, opt=>opt.ResolveUsing(ResolveValue));\n        Mapper.CreateMap<SourceDataType, DestinationDataType>();\n\n        var source = new Source { Value = new SourceDataType() };\n\n        //act\n        var destination = Mapper.Map<Source, Destination>(source);\n\n        //assert\n        destination.Value.Should().Be.OfType<DestinationDataType>();\n    }\n\n    private object ResolveValue(ResolutionResult result)\n    {\n        var source = result.Context.SourceValue as Source;\n\n        if (result.Context.IsSourceValueNull || source == null || !(source.Value is SourceDataType))\n        {\n            return null;\n        }\n        var sourceValue = source.Value as SourceDataType;\n\n        return result.Context.Engine.Map<DestinationDataType>(sourceValue);\n    }
120	var product = products.FirstOrDefault(p => p.Id == menuItem.ProductId);\nvar orderItem = new OrderItem\n{\n    ProductId = product.Id,\n    Quantity = 1,\n    UnitPrice = product.Price,\n    ListValue = 1 * product.Price,\n    //Product = product don't do this\n};
121	Match sendMessage = Regex.Match(message,\n    @"\[message:(?<userpin>[A-Z1-9]{5})\](?<message>.+)");\n\nstring pin = sendMessage.Groups["userpin"].Value;\nstring message = sendMessage.Groups["message"].Value;
122	public void Exec(string commandName, vsCommandExecOption executeOption, ref object varIn, ref object varOut, ref bool handled)\n{\n    handled = false;\n    if(executeOption == vsCommandExecOption.vsCommandExecOptionDoDefault)\n    {\n        if(commandName == "AddinTest.Connect.AddinTest")\n        {\n            // Find the output window.\n            Window outputWindow = _applicationObject.Windows.Item(Constants.vsWindowKindOutput);\n            // Show the window. (You might want to make sure outputWindow is not null here...)\n            outputWindow.Visible = true;\n\n            handled = true;\n            return;\n        }\n    }\n}
123	protected void btn1_Click(object sender, EventArgs e)\n{\n    foreach (Control cont in tag1.Controls)\n    {\n        lbl1.Text += cont.ClientID + " ";\n    }\n\n    foreach (Control cont in tag2.Controls)\n    {\n        lbl2.Text += cont.ClientID + " ";\n    }\n}
124	ScriptManager.RegisterStartupScript(this, this.GetType(), "clearUpload", String.Format("$find('{0}').deleteAllFileInputs()", rada_attach.ClientID), true);
125	[XmlText]\npublic string PriceValueString { get; set; }
126	string attachment = "attachment; filename=Export.xls";\n\n    Response.ClearContent();\n\n    Response.AddHeader("content-disposition", attachment);\n\n    Response.ContentType = "application/ms-excel";\n\n    StringWriter sw = new StringWriter();\n\n    HtmlTextWriter htw = new HtmlTextWriter(sw);\n\n    // Create a form to contain the grid\n\n    HtmlForm frm = new HtmlForm();\n\n   gv.Parent.Controls.Add(frm);\n\n    frm.Attributes["runat"] = "server";\n\n    frm.Controls.Add(gv);\n\n    frm.RenderControl(htw);\n\n\n\n    //GridView1.RenderControl(htw);\n\n    Response.Write(sw.ToString());\n\n    Response.End();
127	public class Program\n{\n    static void Main(string[] args)\n    {\n        Console.WriteLine(Counter.SerialString);\n        Counter.Serial++;\n        Console.WriteLine(Counter.SerialString);\n        Console.ReadKey();\n    }\n\n    public class Counter\n    {\n        public static int Serial;\n\n        public static string SerialString\n        {\n            get\n            {\n                return Serial.ToString("000");\n            }\n        }\n    }\n}
128	public interface ISerialPortWatcher\n{\n    event EventHandler<ReceivedDataEventArgs> ReceivedData;\n    event EventHandler StartedListening;\n    event EventHandler StoppedListening;\n\n    SerialPortSettings PortOptions { set; }\n\n    bool Listening { get; set; }\n    void Stop();\n    void Start();\n}\n\npublic class ReceivedDataEventArgs : EventArgs\n{\n    public ReceivedDataEventArgs(string data)\n    {\n        Data = data;\n    }\n    public string Data { get; private set; }\n}
129	var list = new List<ProductLine>(5);\n        list.Add(new ProductLine { Amount = list.Count });\n        list.Add(new ProductLine { Amount = list.Count });\n        list.Add(new ProductLine { Amount = list.Count });\n        list.Add(new ProductLine { Amount = list.Count });\n        list.Add(new ProductLine { Amount = list.Count });\n\n        var bs = new BindingSource {DataSource = list };\n        dataGridView1.DataSource = bs;
130	int numberOfColumns = dt.Columns.Count;\n\n// go through each row\nforeach (DataRow dr in dt.Rows)\n{\n    // go through each column in the row\n    for (int i = 0; i < numberOfColumns; i++)\n    {\n        // access cell as set or get\n        // dr[i] = "something";\n        // string something = Convert.ToString(dr[i]);\n    }\n}
131	ThreadPool.QueueUserWorkItem(FtpUpload, "path/to/file1.txt");\nThreadPool.QueueUserWorkItem(FtpUpload, "path/to/file2.txt");\nThreadPool.QueueUserWorkItem(FtpUpload, "path/to/file3.txt");\n\n...\n\nprivate static void FtpUpload(object state) {\n    var filePath = (string)state;\n    ... upload here ...\n}
132	foreach (String Row in File.ReadLines("Test.txt"))\n{\n    if (Row.IndexOf("asd", StringComparison.InvariantCultureIgnoreCase) != -1)\n    {\n        // The row contains the string.\n    }\n}
133	double F = 440.0 * Math.Pow(2.0, (n-49.0)/12.0);
134	private string getAccount(string dummyAccount)\n{\n    //e.g dummyAccount="resturant business";\n    string Account = string.Empty;\n\n    if ((new string[] { "abc", "Xyz", "MD" }).Any(a => dummyAccount.IndexOf(a, StringComparison.InvariantCultureIgnoreCase)>=0))\n    {\n        Account = "Unknown account";\n    }\n    else if ((new string[] { "shop", "hotel", "Resturant", "Business" }).Any(a => dummyAccount.IndexOf(a, StringComparison.InvariantCultureIgnoreCase) >= 0))\n    {\n        Account = "Business";\n    }\n    else if ((new string[] { "school", "college" }).Any(a => dummyAccount.IndexOf(a, StringComparison.InvariantCultureIgnoreCase) >= 0))\n    {\n        Account = "University";\n    }\n    return dummyAccount;\n}
135	keywordSearch.Value = keywords;
136	public IEnumerable<Post> GetPosts(object threadID, int pageSize, int index, out totalPosts) \n{\n    var results = session\n        .CreateMultiCriteria()\n        .Add(GetCriteria(threadID)\n             .SetFirstResult((index - 1) * pageSize)\n             .SetMaxResults(pageSize)\n        )\n        .Add(GetCriteria(threadID)\n             .SetProjection(Projections.RowCount())\n        )\n        .List();\n\n    var counts = (IList)results[1];\n    totalPosts = (int)counts[0];\n    return ((IList)results[0]).Cast<Post>();\n}\n\nprivate DetachedCriteria GetCriteria(object threadID)\n{\n    return DetachedCriteria\n        .For<Post>()\n        .Add(Expression.Eq("Thread.Id", threadID));\n}
137	int valueType;\nobject valueTypeLock = new object();\n\nvoid Foo()\n{\n    lock (valueTypeLock)\n    {\n        valueType = 0;\n    }\n}
138	public static string RenderPartialToString(string controlName, object viewData)\n    {\n        ViewPage viewPage = new ViewPage() { ViewContext = new ViewContext() };\n\n        viewPage.ViewData = new ViewDataDictionary(viewData);\n        viewPage.Controls.Add(viewPage.LoadControl(controlName));\n\n        StringBuilder sb = new StringBuilder();\n        using (StringWriter sw = new StringWriter(sb))\n        {\n            using (HtmlTextWriter tw = new HtmlTextWriter(sw))\n            {\n                viewPage.RenderControl(tw);\n            }\n        }\n\n        return sb.ToString();\n    }\nstring content = RenderPartialToString("myView", myModel);
139	public IApplicationEvents\n{\n     void OnClose();\n}
140	using System;\n\nclass Base\n{\n    public Base()\n    {\n        Console.WriteLine(ToString());\n    }\n}\n\nclass Derived : Base\n{\n    private int x = 5;\n    private int y;\n\n    public Derived()\n    {\n        y = 5;\n    }\n\n    public override string ToString()\n    {\n        return string.Format("x={0}, y={1}", x, y);\n    }\n}\n\nclass Test\n{\n    static void Main()\n    {\n        // Prints x=5, y=0\n        new Derived();\n    }\n}
141	string input = @"File Name=""Unstuck20140608124131432.txt"" Path=""Unstuck20140608124131432.txt"" Status=""Passed"" Duration=""0.44""";\nvar output = Regex.Replace(input, @"Path=\"".+?\""", "");
142	private List<DateTime> GetDayofWeekDateOcurrences(DateTime start, DateTime end, int everyNthWeek, List<DayOfWeek> dw)\n{\n    int numberOfDays = end.Subtract(start).Days + 1;\n\n    var dates = Enumerable.Range(0, numberOfDays)\n        .GroupBy(i => i / 7 % everyNthWeek)\n        .Where(g => g.Key == 0)\n        .SelectMany(g => g.Select(i => start.AddDays(i))\n                          .Where(d => dw.Contains(d.DayOfWeek)))\n        .ToList();\n\n    return dates;\n}
143	System.IO.File.Copy(oldPathAndName, newPathAndName);
144	Console.WriteLine (model.GetValue (iter, 0);
145	DataClasses1DataContext dc = new DataClasses1Datacontext();\n\nvar q = from table in dc.SomeTable\nselect table;
146	on delete cascade
147	0  0  0  0  0\n  0  0  0  0  0\n  0  0  0  0  0 \n  0  0  0  1  0 \n  R  G  B  0  1
148	Dictionary<string, string> myDict = new Dictionary<string, string>();\nmyDict.Add("A", "value1");\nmyDict.Add("a", "value2");
149	List<string> results = input.Except(compareTo).ToList();
150	mount -o offset=32256 /dev/sda /mnt/my_hd
151	var rand = new Random();\n  DataContext = new { PsychrometricLogs =\n    from i in Enumerable.Range(0, 5)\n    select new\n    {\n      Logs =\n        from j in Enumerable.Range(0, 10)\n        select new\n        {\n          TimeStamp = rand.Next(10),\n          Temparature = (decimal)rand.Next(100),\n          RelativeHumidity = (decimal)rand.Next(100),\n          GrainsPerPound = (decimal)rand.Next(10),\n          GrainsDepression = (decimal)rand.Next(10),\n        }\n    }};
152	public override void InputBuffer_ProcessInputRow(InputBufferBuffer Row) {\n\n    byte[] hashedData = CreateSha256Hash(Row.HashString);\n\n    Row.HashValue = Convert.ToBase64String(hashedData, 0, 12);\n\n}
153	string fileFormat = string.Empty;\n\n\nXmlDocument xDoc = new XmlDocument();\nxDoc.Load(fileName);\n\nXmlNodeList auxFilesList = xDoc.GetElementsByTagName("AuxFiles");\nfor (int i = 0; i < auxFilesList.Count; i++)\n{\n   XmlNode item = classList.Item(i);\n   if (item.Attributes["AttachmentType"].Value == "csv")\n   {\n      fileFormat = item.Attributes["FileFormat"].Value;\n   }\n}
154	var result = Path.GetFullPath("file.csv");\n// result == @"C:\Users\...Studio 2010\Projects\MyProject\bin\Debug\file.csv";
155	public List<string> Permission\n    {\n        get { return lstGivenPermissions.Items.Cast<string>().ToList(); } //\n        set { lstGivenPermissions.DataSource = value; }\n    }
156	using System.Web;\n\nvar encoded = HttpUtility.HtmlEncode(unencoded);
157	var v = new byte[8];\nv[7] = 0x3F;\nv[6] = 0x34;\nv[5] = 0x00;\ndouble total = BitConverter.ToDouble(v, 0);\nConsole.WriteLine(total.ToString("0.0000000000000"));
158	UserTablesDataAdapter.FillSchema(UserTablesDataSet, SchemaType.Mapped);
159	| N |   |   |   |   |   |   |   // newBlockIndex at 0, adding, newBlockIndex becomes 1\n | X | N |   |   |   |   |   |   // newBlockIndex at 1, adding, newBlockIndex becomes 2\n | X | X | N |   |   |   |   |   // newBlockIndex at 2, adding, newBlockIndex becomes 3\n |   | X | N |   |   |   |   |   // newBlockIndex at 3, removing, no item before index 0, we delete it\n |   | X | X | N |   |   |   |   // newBlockIndex at 3, adding, newBlockIndex becomes 4\n...
160	Shell parentShell = Window.GetWindow(this) as Shell;
161	private void PhoneApplicationPage_Loaded_1(object sender, RoutedEventArgs e)\n    {\n    if (IsolatedStorageSettings.ApplicationSettings.Contains("profile"))\n       {\n         Player player =(Player)IsolatedStorageSettings.ApplicationSettings["profile"];         \n        HelloName.Text ="Hello"+ player.FirstName;\n       }      \n    }
162	SystemA: Writes file theRealFile.txt\nSystemA: Writes file theRealFile.rdy (0byte)\nSystemB: Watches for .rdy files and then reads theRealFile.txt
163	class myClass{\n   public readonly int Value1;\n   public readonly string Value2;\n   public myClass(int value1, string value2){\n         Value1 = value1;\n         Value2 = value2;\n   }\n}
164	doorFI.get_Parameter(BuiltInParameter.HOST_ID_PARAM).AsElementId();
165	SuspendLayout();\n\nWidth = someFixedWidth;\nHeight = someFixedHeight;\n\npanel.Size = new Size(panelWidth, panelHeight);\n\npanel.Location = new Point( ClientSize.Width / 2 - panelWidth / 2, ClientSize.Height / 2 - panelHeight / 2);\npanel.Anchor = AnchorStyles.None;\npanel.Dock = DockStyle.None;\n\nResumeLayout();
166	public List<List<string >> retListTable()\n    {\n\n        DataTable dt = new DataTable();\n        adap.Fill(dt);\n\n        List<List<string>> lstTable = new List<List<string>>();\n\n        foreach (DataRow row in dt.Rows)\n        {\n            List<string> lstRow = new List<string>();\n            foreach (var item in row.ItemArray )\n            {\n                lstRow.Add(item.ToString().Replace("\r\n", string.Empty));\n            }\n            lstTable.Add(lstRow );\n        }\n\n        return lstTable ;\n\n    }
167	protected void Page_Load(object sender, EventArgs e)\n    {\n        if (Page.IsPostBack)\n        {\n            currentTab = Int32.Parse(HiddenTabValue.Value);\n        }\n\n    }
168	List<T>
169	Properties.Settings.Default.Save();
170	public class Example\n{\n  private BlockingQueue<Task> m_Queue = new BlockingQueue<Task>();\n\n  public void StartExample()\n  {\n    Thread producer = new Thread(() => Producer());\n    Thread consumer = new Thread(() => Consumer());\n    producer.Start();\n    consumer.Start();\n    producer.Join();\n    consumer.Join();\n  }\n\n  private void Producer()\n  {\n    for (int i = 0; i < 10; i++)\n    {\n      m_Queue.Enqueue(new Task());\n    }\n  }\n\n  private void Consumer()\n  {\n    while (true)\n    {\n      Task task = m_Queue.Dequeue();\n    }\n  }\n}
171	foreach (object item in ItemsSource)\n{\n    var property = item.GetType().GetProperty(DisplayMemberPath);\n    var value = property.GetValue(item, null);\n    // Use the value here\n}
172	XDocument document = XDocument.Parse(xml); // xml string\nvar query = from file in document.Descendants("file")\n            select new\n                {\n                    Monitored = (int)file.Element("monitored"),\n                    Name = (string)file.Element("name"),\n                    Size = (int)file.Element("size")\n                };\n\nforeach (var file in query)\n{\n    Console.WriteLine("{0}\t{1}", file.Name, file.Size);\n}
173	attachment.Dispose()
174	var result = numbers.Where((v, i) => i != MasterIndex).ToList();
175	public class TestBase {\n     public TestBase() {\n       // Global setup\n     }\n}\n\npublic class MyTest : TestBase {\n     // Tests\n}
176	Dim D = DateTime.Now.ToString(System.Globalization.CultureInfo.InvariantCulture)\n    '-or-\n    Dim D = DateTime.Now.ToString(New System.Globalization.CultureInfo("en-us"))
177	SQL> CREATE TABLE EMP_50\n2 ORGANIZATION EXTERNAL\n3 ( TYPE oracle_datapump\n4 DEFAULT DIRECTORY dmp_dir\n5 LOCATION (???emp_50.dmp'))\n6 )\n7 AS SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID = 50\n8 ;
178	class ConnectivityTests\n{\n    // Variables\n    String serverName = "";\n    String databaseName = "";\n    String dataSourceName = "";\n\n    [Test]\n    public void TestDataSourceConnection()\n    {\n        try\n        {\n\n            // Creates an instance of the Server\n            Server server = new Server();\n            server.Connect(serverName);\n\n            // Gets the Database from the Server\n            Database database = server.Databases[databaseName];\n\n            // Get the DataSource from the Database\n            DataSource dataSource = database.DataSources.FindByName(dataSourceName);\n\n            // Attempt to open a connection to the dataSource.  Fail test if unsuccessful\n            OleDbConnection connection = new OleDbConnection(dataSource.ConnectionString);\n\n            connection.Open();\n        }\n        catch (Exception e)\n        {\n            Assert.Fail(e.ToString());\n        }\n        finally\n        {\n            connection.Close();\n        }\n\n     }\n}
179	asyncCall.Subscribe(result => DoSomething(result), ex => Oops(ex));
180	webBrowser.Document.GetElementById("myCombo").Enabled = False '<--- for disable the control\n webBrowser.Document.GetElementById("myCombo").Enabled = True'<--- for enable the control
181	var x = from list in optionLists\n        from option in list\n        where optionLists.All(l => l.Any(o => o.Value == option.Value))\n        orderby option.Value\n        select option;
182	var users = Sitecore.Security.Accounts.UserManager.GetUsers();\n        foreach (Sitecore.Security.Accounts.User user in users)\n        {\n            var membershipUser = System.Web.Security.Membership.GetUser(user.Name, false);\n            if (membershipUser != null)\n            {\n                var date = membershipUser.CreationDate;\n            }\n        }
183	string[] stringParts = columns[0].Split('-');\nint valueOfConcern = Convert.ToInt32(stringParts[1]);\nif (valueOfConcern >= 2999 && valueOfConcern <= 6000)\n{\n    //take your action\n}
184	public List<string> vyhledavaniOS()\n{\n    List<string> listToReturn = new List<string>();\n\n    foreach (Vozidlo voz in nab?dka)\n    {\n        if (voz is Osobn?Vuz)\n            listToReturn.Add((voz.TypVozidla() + ": SPZ: " + voz.JakaSPZ + ", Znacka: " + voz.JakaZnacka + ", Barva: " + voz.JakaBarva));\n    }\n\n    return listToReturn;\n}
185	static string Search(string expression)\n{\n  int run = 0;\n  for (int i = 0; i < expression.Length; i++)\n  {\n    char c = expression[i];\n    if (Char.IsDigit(c))\n      run++;\n    else if (run == 5)\n      return expression.Substring(i - run, run);\n    else\n      run = 0;\n  }\n  return null;\n}\nconst string pattern = @"\d{5}";\nstatic string NotCached(string expression)\n{\n  return Regex.Match(expression, pattern, RegexOptions.Compiled).Value;\n}\n\nstatic Regex regex = new Regex(pattern, RegexOptions.Compiled);\nstatic string Cached(string expression)\n{\n  return regex.Match(expression).Value;\n}
186	[Register("MySourceList")]\nprivate class MySourceList : NSOutlineView\n{\n    // Need this constructor for items created in .xib\n    public MySourceList(IntPtr handle) : base(handle)\n    { }
187	if(article.IndexOf(value, StringComparison.OrdinalIgnoreCase) >= 0)\n{\n//   ....\n}\nelse\n{\n// .....\n}
188	List<PerformanceCounter> instancesList = new List<PerformanceCounter>();\nprivate void InitializeCounter(string[] instances)\n{\n\n    foreach(string name in instances)\n    {\n        instancesList.Add(new PerformanceCounter("Network Interface", "Bytes Received/sec", name));\n    }\n\n}\nprivate void updateCounter()\n{\n    foreach(PerformanceCounter counter in instancesList)\n    {\n        bytes += Math.Round(counter.NextValue() / 1024, 2);\n        textBox1.Text = bytes.ToString();\n    }\n}
189	string pathToSomeMsi = Path.GetTempFileName();\n\nusing (var resStream = Assembly.GetExecutingAssembly().GetManifestResourceStream("theMsi.msi"))\nusing (var fileStream = File.OpenWrite(pathToSomeMsi))\n{\n    resStream.CopyTo(fileStream);\n}\n\ninstallMsi(pathToSomeMsi);
190	OnTopReplica/WindowSeekers/TaskWindowSeeker.cs
191	private void Form1_Load(object sender, EventArgs e)\n{\n   DataTable dt = new DataTable();\n   dt.Columns.Add("c1", typeof(int));\n   dt.Columns.Add("c2");\n   for (int j = 0; j < 10; j++)\n   {\n      dt.Rows.Add(j, "aaa" + j.ToString());\n   }\n\n   this.dataGridView1.DataSource = dt;\n   this.dataGridView1.EditingControlShowing +=\n      new DataGridViewEditingControlShowingEventHandler(\n         dataGridView1_EditingControlShowing);\n}\n\nprivate bool IsHandleAdded;\n\nvoid dataGridView1_EditingControlShowing(object sender,\n    DataGridViewEditingControlShowingEventArgs e)\n{\n   if (!IsHandleAdded &&\n       this.dataGridView1.CurrentCell.ColumnIndex == 0)\n   {\n      TextBox tx = e.Control as TextBox;\n      if (tx != null)\n      {\n         tx.KeyPress += new KeyPressEventHandler(tx_KeyPress);\n         this.IsHandleAdded = true;\n      }\n   }\n}\n\nvoid tx_KeyPress(object sender, KeyPressEventArgs e)\n{\n   if (!(char.IsNumber(e.KeyChar) || e.KeyChar == '\b'))\n   {\n      e.Handled = true;\n   }\n}
192	public class KeyListItem\n{ \n  public int Id { get; set; }\n  public string Name { get; set; }\n  public string Algorithm { get; set; }\n  public int Bits { get; set; }\n}
193	if(bookCountDataTable.Rows.Count > 0)\n{\n     totalNumberOfBooks = Convert.ToInt32(bookCountDataTable.Rows[0]["TotalNumberOfBooks"]);\n}
194	string[] rand_word = {apple, bannnana, cat, dog, eatttt}//5 words to check with the dictionary. Amount of words in here can vary later, that's why I am using a loop bellow\nstring likelihood = 0;\nList<Thread> threads = new List<Thread>();\nforeach (string line in rand_word)\n{        \n    Thread thread1 = new Thread(new ThreadStart(() => dictionary_match(line, ref likelihood)));\n    thread1.Start();\n    threads.Add(thread1);\n    Console.WriteLine("Value of likelihood Inside the Loop= " + likelihood); //Will show 0 since the dictionary_match function isn't finished running\n\n}\n\nConsole.WriteLine("Value of likelihood after the Loop= " + likelihood);//Will give 0 since the dictionary_match function isn't finished\n\nforeach (var thread in threads)\n{\n    thread.Join();\n}\n\nConsole.WriteLine("Final Value likelihood = " + likelihood); //After pausing for a while, dictionary_match function finished processing and gives an appropriate value for likelihood variable
195	insert_new( Node* node, value)\n    {\n\n    if(value > node->value)\n    {\n       if(node->right != null)\n       {\n         insert_new(node->right,value);\n       }\n       else\n       {\n         node->right = new Node(value);\n         return;\n       } \n   }\n   else\n   {\n      if(node->left != null)\n      {\n       insert_new(node->left,value)\n      }\n      else\n      {\n       node->left = new Node(value);\n       return;          \n      } \n   }\n}
196	protected void Button1_Click(object sender, EventArgs e)\n   {\n       DataTable dt = new DataTable();\n       DataColumn dc = new DataColumn();\n\n       if (dt.Columns.Count == 0)\n       {\n           dt.Columns.Add("PayScale", typeof(string));\n           dt.Columns.Add("IncrementAmt", typeof(string));\n           dt.Columns.Add("Period", typeof(string));\n       }\n\n       DataRow NewRow = dt.NewRow();\n       NewRow[0] = TextBox1.Text;\n       NewRow[1] = TextBox2.Text;\n       dt.Rows.Add(NewRow); \n       GridView1.DataSource = dt;\n       GridViewl.DataBind();\n   }
197	System.IO.Path.GetFileName("localhost/abcd/abcs/document.doc") //document.doc
198	public ActionResult Index(string @event, string email, ...) {
199	AssemblyBuilder assemblyBuilder = Thread.GetDomain().DefineDynamicAssembly(\n      assemblyName , AssemblyBuilderAccess.Run, assemblyAttributes);\nModuleBuilder moduleBuilder = assemblyBuilder.DefineDynamicModule("ModuleName");\nTypeBuilder typeBuilder = moduleBuilder.DefineType(\n      "MyNamespace.TypeName" , TypeAttributes.Public);\n\ntypeBuilder.DefineDefaultConstructor(MethodAttributes.Public);\n\n// Add a method\nnewMethod = typeBuilder.DefineMethod("MethodName" , MethodAttributes.Public);\n\nILGenerator ilGen = newMethod.GetILGenerator();\n\n// Create IL code for the method\nilGen.Emit(...);\n\n// ...\n\n// Create the type itself\nType newType = typeBuilder.CreateType();
200	string line;\n        StreamReader sr = new StreamReader(@"C:\Users\justin\Desktop\texts\First.txt");\n\n        StreamReader sr2 = new StreamReader(@"C:\Users\justin\Desktop\texts\Second.txt");\n\n        List<String> fileOne = new List<string>();\n        List<String> fileTwo = new List<string>();\n\n        while (sr.Peek() >= 0)\n        {\n            line = sr.ReadLine();\n            if(line != "")\n            {\n                fileOne.Add(line);\n            }\n        }\n        sr.Close();\n        while (sr2.Peek() >= 0)\n        {\n            line = sr2.ReadLine();\n            if (line != "")\n            {\n                fileTwo.Add(line);\n            }\n        }\n        sr2.Close();\n        var t = fileOne.Except(fileTwo);\n\n        StreamWriter sw = new StreamWriter(@"C:\Users\justin\Desktop\texts\First.txt");\n\n        foreach(var z in t)\n        {\n            sw.WriteLine(z);\n        }\n        sw.Flush();
201	string longString =\n    "Lorem ipsum dolor sit amet, consectetur adipisicing " + \n    "elit, sed do eiusmod tempor incididunt ut labore et dolore magna " + \n    "aliqua. Ut enim ad minim veniam.";
202	public static string[] GetSplitStrings(string input)\n{\n    IList<string> splitStrings = new List<string>();\n    var counter = 0;\n\n    var sb = new StringBuilder();\n    var inLessGreater = false; // sometimes <> can contain "\n    foreach (var character in input)\n    {\n    if (character.Equals('<'))\n    {\n        inLessGreater = true;\n        counter++;\n    }\n\n    if (character.Equals('>'))\n    {\n        inLessGreater = false;\n        counter++;\n    }\n\n    if (character.Equals('"') && !inLessGreater)\n    {\n        counter++;\n    }\n\n    if ((character.Equals(' ') && counter == 0) || (counter == 2))\n    {\n        if (sb.ToString().Equals("") == false)\n        {\n        if (character.Equals('"') || character.Equals('>'))\n        {\n            sb.Append(character);\n        }\n        splitStrings.Add(sb.ToString());\n        }\n        sb.Clear();\n        counter = 0;\n    }\n    else\n    {\n        sb.Append(character);\n    }\n    }\n\n    return splitStrings.ToArray();\n}
203	using System.ComponentModel;\n\n[Category("Layout"), Description("Your Description Here"), DefaultValue(true)]\nbool  yourPropertyName\n{\n    .....\n}
204	protected override void ProcessRecord()\n{\n  // Get the current processes\n  Process[] processes = Process.GetProcesses();\n\n  // Write the processes to the pipeline making them available\n  // to the next cmdlet. The second parameter of this call tells \n  // PowerShell to enumerate the array, and send one process at a \n  // time to the pipeline.\n  WriteObject(processes, true);\n}
205	protected override void OnCustomCommand(int command)
206	GeoPoint point = new GeoPoint((int)(Latitude * 1E6), (int)(Longitude * 1E6));
207	Directory.Delete("the dir", true);
208	using System;\nusing System.Text.RegularExpressions;\n\npublic class Program\n{\n    public static void Main()\n    {\n        Regex rgx = new Regex(@"?*\.*\(\w*\)\.*?*");\n        Console.WriteLine(rgx.Replace("(something)?keepThisOne", string.Empty));\n        Console.WriteLine(rgx.Replace("keepThisOne?(something)", string.Empty));\n        Console.WriteLine(rgx.Replace("(something)...keepThisOne?(somethingelse)", string.Empty));\n\n    }\n}
209	wsType.GetMethod(function, BindingFlags.Static | BindingFlags.Public | BindingFlags.Instance);
210	public int Compare(Person p1, Person p2)\n{\n    int primary = p1.Name.CompareTo(p2.Name);\n    if (primary != 0)\n    {\n        return primary;\n    }\n    // Note reverse order of comparison to get descending\n    return p2.Age.CompareTo(p1.Age);\n}
211	string x = string.Empty;\nint index = sdr.GetOrdinal("x");\nif (!sdr.IsDBNull(index))\n     x = sdr.GetString(index);\n\nlong? y;\nindex = sdr.GetOrdinal("y");\nif (!sdr.IsDBNull(index))\n    y = sdr.GetInt64(index);
212	foreach (BloodBank b in stockDetails)\n{\n    FieldInfo f = typeof(BloodBank).GetField("fieldName");\n    if (f != null)\n    {\n       f.SetValue(b, TextBox1.Text);\n    }\n}
213	[Serializable]\npublic class SettingItem\n{\n    public string Name { get; set; }\n    public string Value { get; set; }\n}\n\nprivate List<SettingItem> ProjSettings = new List<SettingItem>();\nProjSettings.Add(new SettingItem {Name = "SomeKey", "SomeValue"});
214	foreach ( AssemblyName assemName in assemComponents )\n{\n    foreach ( var type in Assembly.Load( assem ).GetTypes() )\n    {\n        // look for classes that derive from SettingsBase named "Settings"\n        if ( type.Name == "Settings" && typeof( SettingsBase ).IsAssignableFrom( type ) )\n        {\n            // get the value of the static Default property\n            var defaults = (SettingsBase)type.GetProperty( "Default" ).GetValue( null, null );\n\n            // walk the property list and get the value from the Default instance\n            foreach ( SettingsProperty prop in defaults.Properties )\n            {\n                Debug.WriteLine( string.Format( "{0}: {1}", prop.Name, defaults[ prop.Name ] ) );\n            }\n        }\n    }\n}
215	string s = line.Substring(line.IndexOf("<?xml "));
216	private void listView1_ItemCheck(object sender, ItemCheckEventArgs e) {\n        // Disable checking odd-numbered items\n        if (e.Index % 2 == 1) e.NewValue = e.CurrentValue;\n    }
217	private void button_Click(object sender, RoutedEventArgs e)\n    {\n        ThicknessAnimation animate = new ThicknessAnimation(new Thickness(0, -40, 0, 0), TimeSpan.FromSeconds(1));\n        animate.Completed += new EventHandler(animate_Completed);\n\n        testCanvas.BeginAnimation(Canvas.MarginProperty, animate);\n    }\n\n    private void animate_Completed(object sender, EventArgs e)\n    {\n        testLabel.Content = "ANIMATION TEST";\n\n        testCanvas.BeginAnimation(Canvas.MarginProperty,\n            new ThicknessAnimation(new Thickness(0, 0, 0, 0), TimeSpan.FromSeconds(1))\n        );\n    }
218	Dictionary<int, QualificationLevel> unitsWithLevels = \nfilteredCollection\n.Where(x => x.QualificationLevel != null \n&& SearchCriterionQualificationUnitLevels.Any(unitLevel => unitLevel.Equals(x.QualificationLevel.Value)));
219	CruiseControl.Net Command-Line Utility\nProvides command-line access to a CruiseControl.Net server\n\nCCCmd <command> [options]\n\ncommand: one of the following actions\n  help:         display this help screen\n  retrieve:     retrieve details on a project or server\n  forcebuild:   forces a build on a project\n  abortbuild:   aborts a build on a project\n  startproject: starts a project integrator\n  stopproject:  stops a project integrator
220	XmlNode requestNode =  bigDoc.FirstChild;\nrequestNode.AppendChild(\n    requestNode.OwnerDocument.ImportNode(\n        anotherXMLDocument.DocumentElement, true));
221	var merged = this.DB.Links\n        .Where(l=>l.INSTANCE_ID==123456 && l.CONTACT_ID.HasValue && l.ORGANISATION_ID.HasValue)\n        .GroupBy(l => l.CONTACT_ID)\n        .SelectMany(s => s.Where(x => s.Count() == 1 || x.DEFAULT_LINKED_ORGANISATION)\n                          .Select(link => link.LINK_ID));
222	float x = Screen.width / 2f;\nfloat y = Screen.height / 2f;\n\nvar ray = Camera.main.ScreenPointToRay(new Vector3(x, y, 0));\nclone.velocity = ray.direction * laserSpeed;
223	using(SqlConnection con = new SqlConnection(.....))\n{\n   ... do your work with the database here ....\n}
224	var xml = XDoxument.Load("https://ws1.webservices.nl/rpc/get-simplexml/blah/blah");
225	var groups = items.GroupBy(item => item.ListId);\n\nforeach(var group in groups)\n{\n     Console.WriteLine("List with ID == {0}", group.Key);\n     foreach(var item in group)\n        Console.WriteLine("    Item: {0}", item.ItemName);\n}
226	...\ngroup s by new {s.StudentID, s.StudentName} into g\n...
227	// add this line - it's different from ClearSelection()\nSubTopicDropDownList.Items.Clear();\n\nforeach (string item in chosenItem)\n{\n    SubTopicDropDownList.Items.Add(item);\n}
228	private string _name;\npublic string Name\n{\n   get{ return _name; }\n   set\n   {\n      SomeHandler("Name", value);\n      _name = value;\n   }\n}
229	var userDetail =\n    context.Orders\n        .GroupBy(i => i.UserId_Fk)\n        .Select(i => new {\n                         UserId_Fk = i.Key,\n                         OrderCount = i.Count(),\n                         ProductQuantity = i.Sum(j => context.OrderDetails.Where(k=> k.OrderId_Fk == j.OrderId).Sum(k=> k.Quantity))\n                      });
230	[TARGETDIR]
231	IEnumerable<WriteConcernResult> results = collection.InsertBatch(records)
232	public class Member\n{\n    [Key]\n    public int Id { get; set; }\n\n    public virtual Address Address { get; set; }\n}\n\npublic class Address\n{\n    [Key]\n    public int MemberId {get;set;}\n}\n\nprotected override void OnModelCreating(DbModelBuilder modelBuilder)\n{\n    modelBuilder\n        .Entity<Address>()\n        .HasKey(t => t.MemberID);\n\n    modelBuilder\n        .Entity<Member>()\n        .HasRequired(t => t.Address)\n        .WithRequiredPrincipal();\n}
233	Func<SomeClass> c1 = () => Program.someClass;
234	private IEnumerable<int> GetAgesBetween(string agesText) {\n    var parts = agesText.Split('-');\n    var start = int.Parse(parts[0].Trim());\n    var end = int.Parse(parts[1].Trim());\n    return Enumerable.Range(start, 1 + end-start);\n}
235	//on main form:\nint i = 0; \n//parse the textbox1.text to int and check the result:\nif(!int.TryParse(textbox1.Text,out i)||i<0||i>9999)\n{\n  //incorrect int value \n  MessageBox.Show("Please enter a valid value");\n}\nelse //correct int value\n{\n  subform mysub=new subform(i);\n  subform.ShowDialog();\n}\n//on your subform:\nint timebeforeclose=0;\npublic subform(int count)\n{\n  timebeforeclose=count;\n}\n\nprivate void btnSave_Click(object sender, EventArgs e)\n{\n  //1.save your data or whatever...\n  //2.empty any fields you want..\n  //update timebeforeclose:\n  timebeforeclose--;\n  //check the timebeforeclose:\n\n  if(timebeforeclose==0)\n  {\n    this.Close(); //close this form when reaches the specified number.\n  }      \n}
236	distributed mode
237	ImportAddressTable.cs
238	Hosting a Windows Forms Control in WPF
239	x:TypeArguments
240	XNamespace xn = "http://webService";\ndoc.Descendants(xn + "downloadInfoReturn")
241	string pathToRemove = @"c:\\outputpath\\";\nRegex sourceRegex = new Regex(pathToRemove, RegexOptions.IgnoreCase);\nstring sanity = sourceRegex.Replace(input, string.Empty);
242	public class CameraWindow : PictureBox\n{\n    [Browsable(true)]\n    public int MyProperty{get;set;}\n}
243	int sum = 0;\n\nforeach (DataGridViewRow row in dataGridView.Rows)\n{\n    //here 0 is the index of columns you want to get values from \n    // you can also use column name instead of index\n    sum += (int) row.Cells[0].Value;\n}\n\n//for showing the user message box\nMessageBox.Show("Sum of all the values is {0}", sum.ToString());
244	gvProjectList.DataBind();
245	public class User\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public string Surname { get; set; }     \n    public int CountryId { get; set; }\n\n    [ForeignKey("CountryId")]\n    public virtual Country Country { get; set; }\n}\n\npublic class Country\n{\n    public int Id { get; set; }\n    public string CountryName { get; set; }\n\n    public virtual ICollection<User> Users { get; set; }\n}\n\nUser user = new User()\n{\n     Name = model.Name,\n     Surname = model.Surname,  \n     CountryId = 1;\n};
246	String version = "1.0.420.50.0";\nString [] versionArray = version.Split(".");\nvar newVersion = string.Join(".", versionArray.Take(4));
247	class Program\n{\n    static void Main()\n    {\n        ConsoleKeyInfo cki;\n\n        do\n        {\n            Console.Write("Press a key: ");\n            cki = Console.ReadKey(true);\n            Console.WriteLine();\n\n            if (cki.Key == ConsoleKey.D1)\n            {\n                Console.Write("You pressed: 1");\n            }\n        }\n        while (cki.Key != ConsoleKey.D2);\n\n    } // <-- application terminates here\n}
248	IEnumerable<byte> udpDnsPacket = /*...*/;\n\nbyte[] result = udpDnsPacket.ToArray();
249	string path = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
250	System.Diagnostics.PerformanceCounter
251	if(configuration.Elements("...").Any()){...}
252	messageQueue.Formatter = new System.Messaging.XmlMessageFormatter(new Type[] { typeof(System.String) });
253	bool ok = false; \n\nwhile(!ok)\n{    \n    try\n    {\n        TryWritingToFile();          \n        ok = true; \n    }\n    catch (Exception)\n    {\n        CreateFile();\n        //now I want to go back and try to write to the file again. \n    }\n}
254	Dictionary<string, int> dicSum = new Dictionary<string, int>();\n    foreach (DataRow row in dt.Rows)\n    {\n        string group=row["Group"].ToString();\n        int rate=Convert.ToInt32(row["Rate"]);\n        if (dicSum.ContainsKey(group))\n            dicSum[group] += rate;\n        else\n            dicSum.Add(group, rate);\n    }\n    foreach (string g in dicSum.Keys)\n        Console.WriteLine("SUM({0})={1}", g, dicSum[g]);
255	private void SaveThumbnail()\n        {\n            Deployment.Current.Dispatcher.BeginInvoke(() =>\n            {\n                var w = (int)_videoCaptureDevice.PreviewResolution.Width;\n                var h = (int)_videoCaptureDevice.PreviewResolution.Height;\n\n                var argbPx = new Int32[w * h];\n\n                _videoCaptureDevice.GetPreviewBufferArgb(argbPx);\n                var wb = new WriteableBitmap(w, h);\n                argbPx.CopyTo(wb.Pixels, 0);\n                wb.Invalidate();\n\n                using (var isoStore = IsolatedStorageFile.GetUserStoreForApplication())\n                {\n                    var fileName = _isoVideoFileName + ".jpg";\n\n                    if (isoStore.FileExists(fileName))\n                        isoStore.DeleteFile(fileName);\n\n                    var file = isoStore.CreateFile(fileName);\n                    wb.SaveJpeg(file, w, h, 0, 20);\n                    file.Close();\n                }\n            });\n        }
256	label1.AutoSize = false
257	DGrid.ItemsSource = dt.AsDataView();
258	List<List<string>> rows = (from myRow in data.AsEnumerable()\n                            select new List<string> {myRow["FirstName"].ToString(),\n                                myRow["LastName"].ToString(),\n                                myRow["Department"].ToString(),\n                                myRow["Birthdate"].ToString(),\n                                myRow["Description"].ToString()\n                            }).ToList();
259	var searchTerms = "John Doe".Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n\nvar query = session.Advanced.LuceneQuery<Person, PersonIndex>();\nquery = query.OpenSubclause(); // optional\n\nforeach (var term in terms)\n{\n    query = query.WhereStartsWith("FirstName"), term).OrElse();\n    query = query.WhereStartsWith("LastName"), term).OrElse();\n}\n\nquery = query.WhereEquals("Id", null);\nquery = query.CloseSubclause(); // if OpenSubclause() was used
260	MyClient client = new MyService.MyClient();\nclient.Endpoint.Address = new EndpointAddress(new Uri("target URL"));\nclient.Open();
261	public bool IsValidEmailAddress(string emailAddress)\n{\n    try\n    {\n        MailAddress m = new MailAddress(emailAddress);\n        return true;\n    }\n    catch (FormatException)\n    {\n        return false;\n    }\n}
262	Vector2 IntermediatePoint(Vector2 p0, Vector2 p1, float t)\n{\n    Vector2 delta = p1 - p0;\n\n    float distance = delta.Length();\n\n    if (distance == 0.0f)\n    {\n        return p0;\n    }\n    else\n    {\n        Vector2 direction = delta / distance;\n\n        return p0 + direction * (distance * t);\n    }\n}
263	context.tagService.GetTagList().Where(x => x.tag.name.Length < 20 \n                                   && x.tag.name.Length>4)\n                               .Take(20).ToList();
264	class Program\n{\n    static void Main(string[] args)\n    {\n        Process p = new Process\n        {\n            StartInfo = {FileName = "notepad.exe"}\n        };\n        p.Start();\n\n        p.Dispose();\n        // Notepad still runs...\n        GC.Collect(); // Just for the diagnostics....\n        // Notepad still runs...\n        Console.ReadKey();\n    }\n}
265	using System.Drawing;\n\nprotected void RadGrid1_ItemDataBound(object sender, Telerik.Web.UI.GridItemEventArgs e)\n {\n  if (e.Item is GridDataItem)\n    {\n     TableCell celltoVerify1 = dataBoundItem["status"];\n       if (celltoVerify1.Text== "REJECTED")\n        {\n            celltoVerify1.ForeColor =  Color.Red;\n            //celltoVerify1.Font.Bold = true;\n            //celltoVerify1.BackColor = Color.Yellow;\n        }\n    }\n }
266	protected static List<TSub> MyStaticList = BaseUtil.MyStaticList
267	string uri = "http://services.odata.org/OData/OData.svc/Products" \nstring odataQuery = "?$format=json"\nvar request = WebRequest.Create(uri+"/"+odataQuery);\nrequest.Method = "GET";\nvar reader = new StreamReader(stream: request.GetResponse().GetResponseStream());\nstring neededData = reader.ReadToEnd(); //json format
268	int n = 3; // 0..8 \nint mask = 0xFF00;\nbyte result  = (byte) (mask >> n);
269	Image1.ImageUrl = "data:image/jpeg;base64," + base6;
270	document.getElementById('<%= hidHTML.ClientID %>').value = encodeURI(document.body.innerHTML);
271	public class GameResultModel\n{\n    public int WinnerUserId { get; set; }\n    public int LoserUserId { get; set; }\n}
272	String css = "div#test .note span:first-child";\nString xpath = css2xpath.Transform(css);
273	you need to have solid Unit Tests
274	.HeaderBarThreshold:hover a\n{\n     color: Red !important; // !important may not be necessary \n}
275	string szMgwGCCPath = "C:\\mingw32\\bin\\mingw32-gcc.exe"; // Example of location\nstring szArguments = " -c main.c -o main.exe"; // Example of arguments\nProcessStartInfo gccStartInfo = new ProcessStartInfo(szMgwGCCPath , szArguments );\ngccStartInfo.WindowStyle = ProcessWindowStyle.Hidden;\nProcess.Start(gccStartInfo );
276	cmd.Parameters.AddWithValue("@gender", genderCombo.SelectedValue);
277	string urlpath = "http://www.example.com/folder/"\n    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(urlpath);\n    using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())\n    {\n       using (StreamReader reader = new StreamReader(response.GetResponseStream()))\n       {\n           string html = reader.ReadToEnd();\n           Regex regEx = new Regex(@".*/(?<filename>.*?)\.zip");\n           MatchCollection matches = regEx.Matches(html);\n           if (matches.Count > 0)\n           {\n                foreach (Match match in matches)\n                {\n                  if (match.Success)\n                  {\n\n                    Console.WriteLine(match.Groups["filename"].Value);\n                  }\n            }\n       }\n\n   }
278	string path;\n path = System.IO.Path.GetDirectoryName( \n System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase );
279	var nodes = doc.DocumentNode.SelectNodes("//div[@class='class1']");\n\nvar nodes2 = nodes.Select(c1 => c1.SelectNodes("div[@class='class2']"));
280	var tasks = users.Select(async user =>\n{\n    var products = await this.repository.GetProducts(user.UserName);\n    return new { user, products };\n});\nvar results = await Task.WhenAll(tasks);\nvar resultsAsDictionary = results(x => x.user, x => x.products);
281	foreach (Item MarketItem in MarketSet.OrderBy(x => x.Fields["Menu Title"].Value))\n  MarketLinks.Text += string.Format("<a href=\"{0}\">{1}</a>", ScHelper.GetRegionPath(MarketItem), MarketItem.Fields["Menu Title"].Value);
282	[TestMethod]\n    public void HomeControllerReturnsIndexViewWhenUserIsAdmin() {\n        var homeController = new HomeController();\n\n        var userMock = new Mock<IPrincipal>();\n        userMock.Expect(p => p.IsInRole("admin")).Returns(true);\n\n        var contextMock = new Mock<HttpContextBase>();\n        contextMock.ExpectGet(ctx => ctx.User)\n                   .Returns(userMock.Object);\n\n        var controllerContextMock = new Mock<ControllerContext>();\n        controllerContextMock.ExpectGet(con => con.HttpContext)\n                             .Returns(contextMock.Object);\n\n        homeController.ControllerContext = controllerContextMock.Object;\n        var result = homeController.Index();\n        userMock.Verify(p => p.IsInRole("admin"));\n        Assert.AreEqual(((ViewResult)result).ViewName, "Index");\n    }
283	Workbook book = ****xyz****;\nif (book.HasPassword)\n{\n    book.Password = Properties.Settings.Default.ExcelFilePW;\n    MessageBox.Show("Excel file is encrpyted");\n}
284	private void button2_Click(object sender, EventArgs e)\n    {\n        if (iCount == 0)\n        {\n            iTemp = 20;\n            iCount++;\n        }\n        iTemp = iTemp - 1;\n        MessageBox.Show(iTemp.ToString());\n    }\n}
285	private bool _isFirstKeyPressedW = false;\n\nprivate void Form1_KeyDown(object sender, KeyEventArgs e)\n{\n    if (e.Control & e.KeyCode == Keys.W) \n    {\n        _isFirstKeyPressedW = true;\n    }\n    if (_isFirstKeyPressedW) \n    {\n        if (e.Control & e.KeyCode == Keys.S) \n        {\n            //write your code \n        } \n        else \n        {\n            _isFirstKeyPressedW = e.KeyCode == Keys.W;\n        }\n    }\n}
286	_wbs.OpenText(Path:=pathTemp,Datatype:=xlDelimited,Other:=True,Otherchar:="*");
287	Process regeditProcess = Process.Start("regedit.exe", "/s \"C:\\Program Files\\Test Folder\\sample.reg\"");
288	Call service first then assign result.\n\nvar benefits = customerBenefits\n                        .Select(n => {\n                            var user = serService.GetByUserID(n.AddedByUserID.Value);\n\n                            return new CustomerBenefit(\n                                n.BenefitID,                   \n                                n.AddedByUserID.HasValue ? (user== null ? String.Empty : ).DisplayName) : n.AddedByAgentID,\n                                n.Reason} );
289	int id = (int)(TempData["ID"]);
290	Element.setAttribute("width", Element.offsetWidth, 0);\nElement.setAttribute("height", Element.offsetHeight, 0);\nElement.setAttribute("src", "images/newimage.png", 0);
291	.NET Base Class Libraries : Long Path
292	var query = source.GroupBy(x => new { x.Column1, x.Column2 });
293	static string LittleEndian(string num)\n{\n    int number = Convert.ToInt32(num, 16);\n    byte[] bytes = BitConverter.GetBytes(number);\n    string retval = "";\n    foreach (byte b in bytes)\n        retval += b.ToString("X2");\n    return retval;\n}
294	public static AceDataObjectCollection<T> ToAceDataObjectCollection<T>(this IEnumerable<T> col) where T : IAceDataObject \n{    \n   AceDataObjectCollection<T> objects = new AceDataObjectCollection<T>();\n\n   foreach (T item in col)\n      objects.Add(item);\n\n   return objects; \n}
295	using System.Deployment.Application;\n...\n\nprivate void DisplayChangeLog()\n{\n    if (!ApplicationDeployment.IsNetworkDeployed)\n        return;\n\n    if (!ApplicationDeployment.CurrentDeployment.IsFirstRun)\n        return;\n\n    ThreadPool.QueueUserWorkItem(state =>\n        Execute.OnUIThread(() => <Pop up window with latest changes> ));\n}
296	private static int MyComp(DataRow left, DataRow right)\n{\n    if (left["ID"] == right["ID"])\n    {\n       return 0;\n    } \n    else\n    {\n       return 1;\n    }\n}\n\nlst.Sort(MyComp)
297	Dispatcher.BeginInvoke(\n    new Action(delegate()\n    {\n        contentBox.Focus();         // Set Logical Focus\n        System.Windows.Input.Keyboard.Focus(contentBox); // Set Keyboard Focus\n    })\n);
298	public override void DataBind()\n    {\n        foreach (var item in (IEnumerable<LifestreamItem>)this.DataSource)\n        {\n            if (item is LifestreamTwitterItem)\n            {\n                TwitterTemplate.InstantiateIn(item); // instantiate inside the item which is also a control.\n            }\n            else\n            {\n                ItemTemplate.InstantiateIn(item);\n            }\n            item.DataBind(); // bind the item\n            Controls.Add(item); // add the item to the repeater\n        }\n    }
299	int sum = 0;\nforeach (int scores in bowlerScores)\n{\n    sum += scores;\n}\ndouble average = (double)sum / (double)SCORE_COUNT;
300	var nonIntersecting = a.Union(b).Except(a.Intersect(b));
301	string s = Encoding.UTF8.GetString(fileBytes);
302	void dataGridView_CellMouseClick(object sender, DataGridViewCellMouseEventArgs e)\n    {\n        // Make sure it is a left click\n        if(e.Button == MouseButtons.Left)\n        {\n            // Make sure it is on a cell\n            if (e.ColumnIndex >= 0 && e.RowIndex >= 0)\n            {\n                // Only allow certain columns to trigger selection changes (1 & 2)\n                if (e.ColumnIndex == 1 || e.ColumnIndex == 2)\n                {\n                    // Set my own private selected row index\n                    setSelectedRow(e.RowIndex);\n                }\n                else\n                {\n                    // Actions for other columns...\n                }\n            }\n        }\n    }
303	WebClient webClient = new WebClient();\nwebClient.DownloadFile(remoteFileUrl, localFileName);
304	MyList.Select(x => new { x.Id, x.Name }).ToList();
305	SqlByte x = 2;\nint y;\ny = (int) x;
306	// Type _ = Type.Missing;\nwkSheet.Range["A1", _].Value2 = "Heading 1";\nwkSheet.Range["B1", _].Value2 = "Heading 2";\nwkSheet.Range["C1", _].Value2 = "Heading 3";
307	string oneWay = "5 ? 7";\nstring anotherWay = "5 \u00F7 7";
308	ulong value1 = 0xFEDCBA9876543210UL;  // 18364758544493064720\nlong value2 = (long)value1;           // -81985529216486896\nulong value3 = (ulong)value2;         // 18364758544493064720
309	var copyFrom = agendaTable.Rows[i].Cells[1].Range;\nvar copyTo = otherTablesRow.Cells[1].Range;\n\ncopyFrom.MoveEnd(WdUnits.wdCharacter, -1);\ncopyTo.FormattedText = copyFrom.FormattedText;
310	List<string> duplicateLabelsList = allResourcesLookup.SelectMany(x => x).Select(x => x.LoaderOptions.Label).Duplicates<string, string>().ToList(); ; \nif (duplicateLabelsList.Any()) \nthrow new DuplicateResourceLoaderLabelsException(duplicateLabelsList);
311	foreach (GridViewRow row in gvUsers.Rows)\n    {\n        TextBox txtFirstName = row.FindControl("txtFirstName") as TextBox;\n        TextBox txtLastName = row.FindControl("txtLastName") as TextBox;\n\n        if (txtFirstName.Text!="" && txtLastName.Text!="")\n        {\n           // do what you need with values\n        }\n\n    }
312	var persons = person.Select(c=> new {\n               name = c.firstname\n               //other attributes here \n                });
313	List<string> test1 = txtDir.Text.Split('/').ToList();
314	If DataGridViewCell.Value.ToString() = "some value" Then
315	public class CustomDateTimeTypeConverter : TypeConverter\n{\n    public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)\n    {\n        return DateTime.ParseExact(value.ToString(), "yyyy-MM-dd HH-mm-ss", culture);\n    }\n}\n\n[TypeConverter(typeof(CustomDateTimeTypeConverter))]\nstruct AdvancedDateTime\n{\n}\n\n[TestFixture]\npublic class DateTime\n{\n    [Test]\n    public void TypeConvert_StrangeFormat_ConvertsWithoutProblem()\n    {\n        string datetime = "2011-04-21 23-12-13";\n        TypeConverter converter = TypeDescriptor.GetConverter( typeof (AdvancedDateTime) );\n        var convertedFromString = converter.ConvertFromString(datetime);\n        Assert.AreEqual(new DateTime(2011,4,21, 23,12,13), convertedFromString);\n    }\n}
316	var str = "name(name, content(content, content, content), number)";\nConsole.WriteLine(str.Substring(0, str.IndexOf(',')) + str.Substring(str.LastIndexOf(',')) );
317	using System.Drawing.Drawing2D;\n...\n    public partial class Form1 : Form {\n        public Form1() {\n            InitializeComponent();\n            panelPath = new GraphicsPath();\n            panelPath.AddCurve(new Point[] { new Point(470, 470), new Point(430, 440), new Point(400, 480), new Point(470, 560), });\n            panelPath.AddCurve(new Point[] { new Point(470, 470), new Point(510, 440), new Point(540, 480), new Point(470, 560), });\n            panel1.Paint += new PaintEventHandler(panel1_Paint);\n        }\n\n        void panel1_Paint(object sender, PaintEventArgs e) {\n            e.Graphics.TranslateTransform(-360, -400);\n            e.Graphics.FillPath(Brushes.Green, panelPath);\n            e.Graphics.DrawPath(Pens.Red, panelPath);\n        }\n        GraphicsPath panelPath;\n    }
318	string sampletext = "text";\nSystem.Security.Cryptography.SHA1 hash = System.Security.Cryptography.SHA1CryptoServiceProvider.Create();\nbyte[] plainTextBytes = Encoding.UTF8.GetBytes(sampletext);\nbyte[] hashBytes = hash.ComputeHash(plainTextBytes);\n\nforeach (byte b in hashBytes) {\n    Console.Write(string.Format("{0:x2}", b));\n}
319	using System;\nusing System.Net;\n\npublic class Test\n{\n    static void Main(string[] args)\n    {\n        Check(new DateTime(2005, 1, 12));\n        Check(new DateTime(2009, 2, 28));\n        Check(new DateTime(2009, 12, 31));\n        Check(new DateTime(2000, 1, 29));\n        Check(new DateTime(2100, 1, 29));\n    }\n\n    static void Check(DateTime date)\n    {\n        DateTime? next = OneMonthAfter(date);\n        Console.WriteLine("{0} {1}", date,\n                          next == null ? (object) "Error" : next);\n    }\n\n    static DateTime? OneMonthAfter(DateTime date)\n    {\n        DateTime ret = date.AddMonths(1);\n        if (ret.Day != date.Day)\n        {\n            // Or throw an exception\n            return null;\n        }\n        return ret;\n    }\n}
320	{\n    "success": true,\n    "message": "test"\n}
321	var container = new UnityContainer();\n\n        var manager = container.Resolve<EventManager>();\n        container.RegisterInstance<IEventManager>(manager, new ContainerControlledLifetimeManager());\n        container.RegisterInstance<IEventSource>("EventManager", manager, new ContainerControlledLifetimeManager());\n\n        container.RegisterType<IEventSource, EventSourceA>("EventSourceA");\n        container.RegisterType<IEventSource, EventSourceB>("EventSourceB");\n        container.RegisterType(typeof(Component));\n\n        container.Resolve<Component>();
322	public getBackground (HttpSessionState session) {\n    String bg = (string) session["session.randomBG"];\n    if (bg == null) {\n        // pick a random BG & store  it.\n        bg = "pick one";\n        session["session.randomBG"] = bg;\n    }\n    return bg;\n}
323	public List<UserPrincipal> FindAllUsers(List<Guid> allGuids)\n{\n   List<UserPrincipal> result = new List<UserPrincipal>();\n\n   // set up domain context\n   using (PrincipalContext ctx = new PrincipalContext(ContextType.Domain))\n   {\n       foreach(Guid userGuid in allGuids)\n       { \n          // find a user\n          UserPrincipal user = UserPrincipal.FindByIdentity(ctx, userGuid);\n\n          if(user != null)\n          {\n              result.Add(user);\n          }\n       }\n    }\n\n    return result;\n}
324	protected void DataList1_ItemCommand(object source, DataListCommandEventArgs e)\n        {\n            if (e.CommandName == "Select")\n            {\n                ((TextBox)e.Item.FindControl("Textboxname")).Text = ((Label)e.Item.FindControl("LabelName")).Text;\n            }\n        }
325	Missing missing = Missing.Value;\nApplication excel = new Application();\nWorkbook workbook = excel.Workbooks.Open(sourceFilePath,\n    missing, missing, missing, missing, missing,\n    missing, missing, missing, missing, missing,\n    missing, missing, missing, XlCorruptLoad.xlRepairFile);\nworkbook.SaveAs(savedFile, XlFileFormat.xlWorkbookDefault,\n    missing, missing, missing, missing,\n    XlSaveAsAccessMode.xlExclusive, missing,\n    missing, missing, missing, missing);\nworkbook.Close(true, missing, missing);
326	SolidColorBrush brush = LayoutRoot.Background as SolidColorBrush;\nif (brush != null) {\n    if (brush.Color == Colors.White) {\n        // Do something\n    }\n}
327	public partial class LinqGrid<T> : UserControl where T : class, new()\n{\n        System.Data.Linq.Table<T> tmpDataTable;\n        public LinqGrid()\n        {\n            InitializeComponent();\n        }\n        public void Bind(System.Data.Linq.Table<T> listSource)\n        {          \n            Project.dbClassesDataContext dbc = new Project.dbClassesDataContext();\n            tmpDataTable = listSource;\n            var query = (from c in listSource select c);\n            dgvRecords.DataSource = query.Take(10).ToList();\n        }\n        private void btnNext_Click(object sender, EventArgs e)\n        {\n            tmpDataTable.Skip(10).Take(10); ....\n        }\n   }
328	Guid userGuid = (Guid)Membership.GetUser(User.Identity.Name).ProviderUserKey;\n\nUserIdLabel.Text = userGuid.ToString();
329	var Result = setA.Union(setB)
330	Match match = Regex.Match(input, @"<th>Total enrolments</th>\s*<td>\s*(\d+)\s*</td>", RegexOptions.Multiline);\nif (match.Success)\n{\n    Console.WriteLine(match.Groups[1].Value);\n}
331	Panel panel = new Panel();\npanel.Size = new Size(300, 100);\npanel.Dock = DockStyle.Bottom;\n\nButton button = new Button();\nbutton.Size = new Size(70, 25);\nbutton.Location = new Point((panel.Width - button.Width) / 2, (panel.Height - button.Height) / 2);\nbutton.Anchor = AnchorStyles.None;\n\npanel.Controls.Add(button);\nthis.Controls.Add(panel);
332	using System.Linq;\n...\n\nforeach (ClsPC pc in iclsobj.GetPC()) \n{     \n    if (listBox1.Items.Count == 0) \n    { \n        listBox1.Items.Add(pc.IPAddress); \n    } \n    else \n    { \n        if (!listBox1.Items.Any(i => String.Compare(i.ToString(), pc.IPAddress, true) == 0))\n        {\n           listBox1.Items.Add(pc.IPAddress); \n        }\n   } \n}
333	var dbUsernames = context.Database.SqlQuery<string>("SELECT UserName FROM UserProfile");\nforeach (string dbUsername in dbUsernames)\n{\n    string[] userRoles = Roles.GetRolesForUser(dbUsername);\n    if (userRoles != null && userRoles.Length > 0)\n    {\n        Roles.RemoveUserFromRoles(dbUsername, userRoles); \n    }\n    int userId = context.Database.SqlQuery<int>("SELECT UserId FROM UserProfile WHERE UserName = {0}", dbUsername).First();\n    // HERE: Delete any other dependent rows in other tables that use UserId, and have referential integrity\n    // Now tear down any final bits and delete the user, for example: \n    Membership.DeleteUser(dbUsername, true);\n    context.Database.ExecuteSqlCommand(\n        "DELETE FROM webpages_Membership WHERE UserId = {0}", userId);\n}
334	Queries.List = new ObservableCollection<Query>(Queries.List.Where(x => x.Name.Equals(value)));
335	protected void MyControlId_EventName(object sender, EventArgs e);
336	public DbReturn spExample_upd(int id1)\n{\n    return (DbReturn)spExample_upd_internal(id1);\n}\n\n[Function(Name = "spExample_upd")]\nprivate int spExample_upd_internal([Parameter(Name = "Id1", DbType = "int")] int id1)\n{\n    var result = ExecuteMethodCall(this, (MethodInfo)MethodInfo.GetCurrentMethod(), id1);\n    return (int)result.ReturnValue;\n}
337	using System.Windows.Forms;\nusing System.Windows.Forms.Design;\n\n    public override void Initialize(IComponent component)\n    {\n        base.Initialize(component);\n\n        if (this.Control is MyUserControl)  // replace this with your usercontrol type\n        {\n            // cast this.Control to you type of usercontrol to get at it's\n            // controls easier\n            var i = this.Control as MyUserControl; // replace ***\n\n            this.EnableDesignMode(i.label1, "unique_name1");\n            this.EnableDesignMode(i.pictureBox1, "unique_name2");\n        }\n    }
338	protected void Buton_Click(object sender, EventArgs e)\n{\n        SqlDataSource1.UpdateParameters["pic"].DefaultValue = "string fetched from substring method";\n        SqlDataSource1.Update();\n}
339	static object s_lock = new object();\nstatic IDictionary<Type, Func<BinaryReader, dynamic>> s_readers = null;\nstatic T ReadData<T>(string fileName)\n{\n    lock (s_lock)\n    {\n        if (s_readers == null)\n        {\n            s_readers = new Dictionary<Type, Func<BinaryReader, dynamic>>();\n            s_readers.Add(typeof(int), r => r.ReadInt32());\n            s_readers.Add(typeof(string), r => r.ReadString());\n            // Add more here\n        }\n    }\n\n    if (!s_readers.ContainsKey(typeof(T))) throw new ArgumentException("Invalid type");\n\n    using (var fs = new FileStream(fileName, FileMode.Open, FileAccess.Read, FileShare.Read))\n    using (var reader = new BinaryReader(fs))\n    {\n        return s_readers[typeof(T)](reader);\n    }\n}
340	using System;\nusing Microsoft.Office.Interop.Excel\nusing VBA = Microsoft.Vbe.Interop;\n\n...\n\nVBA.Forms.UserForm form;\nVBA.Forms.Control c;\n\nforeach (VBA.VBComponent mod in wb.VBProject.VBComponents)\n{\n    // Use only VBA Forms\n    if (!(mod.Designer is VBA.Forms.UserForm)) continue;\n\n    form = (VBA.Forms.UserForm) mod.Designer;\n\n    for (int i = 1; i < form.Controls.Count; i++)\n    {\n        c = (VBA.Forms.Control)form.Controls.Item(i);\n        ...\n    }\n}
341	void Main()\n{\n    const long PageSizeLimit = 1000000;\n    var url = "http://www.stackoverflow.com";\n    HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);\n    request.Method = "HEAD";\n    long pageSize;\n    string page;\n\n    using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())\n    {\n        pageSize = response.ContentLength;\n    }\n\n    // if content lenth is not present -> get full page\n    if (pageSize > 0 && pageSize < PageSizeLimit)\n    {\n        page = DownloadPage(url);\n        ProcessPage(page);\n    }\n    else\n    {\n        page = DownloadPage(url);\n\n        if (page.Length < PageSizeLimit)\n        {\n            ProcessPage(page);\n        }\n    }\n}\n\npublic string DownloadPage(string url)\n{\n    using (var webClient = new WebClient())\n    {           \n        return webClient.DownloadString(url);\n    }\n}\n\npublic void ProcessPage(string page)\n{\n    // do your processing\n}
342	var q = Persons.Where(p => Countries.Any(c => p.Id== c.PersonId))
343	class SiteMap : ClassMap<Site>\n{\n    public SiteMap()\n    {\n        Join("MySchema.Options", join =>\n        {\n            join.KeyColumn("SiteId");\n            join.Component(x => x.Options, c => c.Map(x => x.Prop1));\n        });\n    }\n}
344	^(?:(?!ABC).)*XYZ
345	var parts = s.Split(new[] { '|' }, StringSplitOptions.RemoveEmptyEntries);\n\nforeach (string word in parts)\n{\n  Console.WriteLine(word);\n}
346	public class person\n{\n  public string firstname { get;set;}\n  public string lastname { get;set;}\n\n  public person(string fname, string lname)\n  {\n    firstname = fname;\n    lastname = lname;\n  }\n\n  public string GetEmailRespPattern()\n  {\n    //split firstname, take what you want\n    //take what you want from last name.\n   // add extra information.\n   //concatenate and return it.\n  }\n}
347	class LengthComparer : IComparer<String>\n{\n    public int Compare(string x,string y)\n    {\n        int lengthComparison=x.Length.CompareTo(y.Length)\n        if(lengthComparison==0)\n        {\n           return x.CompareTo(y);\n        }\n        else\n        {\n           return lengthComparison;\n        }\n    }\n }
348	var ips = new List<string>();\nvar domains = new List<string>();\nforeach (var elements in txt.Text\n    .Split(new[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)\n    .Skip(1)\n    .Select(line => line.Split(new[] { " " }, StringSplitOptions.RemoveEmptyEntries)))\n{\n    ips.Add(elements[0]);\n    domains.Add(elements[1]);\n}\nipsArray = ips.ToArray();\ndomainsArray = domains.ToArray();
349	public void AddToGoogle()\n    {\n        var client = new DatabaseClient(Settings.Default.GmailAccount, Settings.Default.GmailPassword);\n        string dbName = Settings.Default.WorkBook;\n\n        var db = client.GetDatabase(dbName) ?? client.CreateDatabase(dbName);\n        string tableName = Settings.Default.WorkSheet;\n\n        var t = db.GetTable<ActivityLog>(tableName) ?? db.CreateTable<ActivityLog>(tableName);\n        var all = t.FindAll();\n\n        t.Add(this);\n    }
350	PdfReader pdfReader = new PdfReader(filename);\n\nIList<Dictionary<string, object>> bookmarks = SimpleBookmark.GetBookmark(pdfReader);\n\nfor(int i=0;i<bookmarks.Count;i++)\n{\n    MessageBox.Show(bookmarks[i].Values.ToArray().GetValue(0).ToString());\n\n    if (bookmarks[i].Count > 3)\n    {\n        MessageBox.Show(bookmarks[i].ToList().Count.ToString());\n    }\n}
351	if (formSubmitted)\n{\n    acceptButton.Enabled = false; \n    declineButton.Enabled = false;\n}
352	public static class StaticRandom\n{\n    static int seed = Environment.TickCount;\n\n    static readonly ThreadLocal<Random> random =\n        new ThreadLocal<Random>(() => new Random(Interlocked.Increment(ref seed)));\n\n    public static int Rand()\n    {\n        return random.Value.Next();\n    }\n}
353	private void yourTextBox_TextInput(object sender, TextCompositionEventArgs e)\n{  \n    if (e.Text == "K")\n    {\n    }\n}
354	private void dgv_DataBindingComplete(object sender, DataGridViewBindingCompleteEventArgs e)\n{\n    dgv.Rows[0].Cells[0].Style.BackColor = Color.Red;\n}
355	using (StreamWriter sw = File.CreateText("ExtractedText.txt"))\n{\n    var excelApp = new Excel.Application();\n    var workBook = excelApp.Workbooks.Open(thisFile);\n\n    foreach (var sheet in workBook.Worksheets)\n    {\n      foreach (var row in sheet.UsedRange.Rows)\n      {\n        foreach (var cell in row.Columns)\n        {\n          sw.Write(cell.Value + " ");\n        } \n        sw.WriteLine();\n      }\n    }\n}
356	protected void Login1_LoggedIn(object sender, EventArgs e)\n{\n    if (Login1.UserName == "YourUserName")\n        Login1.DestinationPageUrl = "YourDestinationPageUrl";\n}
357	XmlDocument doc = new XmlDocument();\ndoc.Load(fileName);\nXmlNodeList nodes = doc.SelectNodes("//Setting[@name='File1']");
358	public Vector2 ScreenToWorld(Vector2 onScreen)\n    {\n        var matrix = Matrix.Invert(World.Camera.CurrentTransformation);\n        return Vector2.Transform(onScreen, matrix);\n    }
359	public class LibraryRequestViewModel  {\n     private LibraryRequest request;\n\n     public LibraryRequestViewModel(LibraryRequest request){\n          this.request = request;\n     }\n\n     [Required]\n     public string Password {\n         get { return this.request.Password; }\n         set { this.request.Password = value; }\n     }\n     // do this for all fields you need\n  }
360	MyObj o = null;\nAssembly a = Assembly.LoadFrom("my.dll");\nType t = a.GetType("type info here");\n\nConstructorInfo ctor = t.GetConstructor(new Type[] { typeof(string) });\nif(ctor != null)\n   o = ctor.Invoke(new object[] { s });
361	string root_str = ((ConverterCollections.AbstractConverterCacheEntry)         (cacheItem)).Key.ToString();\nstring parent_str = ((DictionaryEntry)(a)).Key.ToString();\nstring child_str = ((object[])(((DictionaryEntry)(a)).Value))[0].ToString();
362	public static TransactionOptions GetTransactionOptions()\n{\n    TransactionOptions tranOpt = new TransactionOptions();\n    tranOpt.IsolationLevel = IsolationLevel.Serializable;\n    return tranOpt;\n}
363	public override object EditValue(ITypeDescriptorContext context, System.IServiceProvider provider, object value)\n    {\n        IWindowsFormsEditorService service = provider.GetService(typeof(IWindowsFormsEditorService)) as IWindowsFormsEditorService;\n        OptoSigmaLinearSettings opto = value as OptoSigmaLinearSettings;\n        opto = (OptoSigmaLinearSettings)value;\n\n        if (opto == null)\n        {\n            opto = new OptoSigmaLinearSettings();\n        }\n\n        if (service != null)\n        {\n            using (OptoSigmaLinearSetup form = new OptoSigmaLinearSetup(opto))\n            {\n                DialogResult result;\n                result = service.ShowDialog(form);\n\n                if (result == DialogResult.OK)\n                {\n                    opto = form.GeneralSettings;\n\n                }\n            }\n        }\n        return opto;\n    }
364	arrayOfStrings = arrayOfStrings.Select(s => s.Replace("abc", "xyz")).ToArray();
365	Series.IsXValueIndexed = true;
366	Visibility="{Binding myPropertyRegistrationName, RelativeSource={RelativeSource FindAncestor, AncestorType=myNS:myType}}"
367	private void dataGridView1_RowsAdded(object sender, \n    DataGridViewRowsAddedEventArgs e)\n{\n    if (dataGridView1.Rows[e.RowIndex].IsNewRow)\n    {\n        return;\n    }\n\n    dataGridView1[1, e.RowIndex].Value = \n        (dataGridView1.Rows[e.RowIndex].DataBoundItem as DomainModel).Name;\n}
368	bool designMode = (LicenseManager.UsageMode == LicenseUsageMode.Designtime);
369	// Just using fields for simplicity and no attributes shown.\ninterface WCFDataContract\n{\n    // Header details\n    public int id;\n    public int version;\n    public DateTime writeDateTime;\n\n    public string xmlBlob;\n\n    // Footer details\n    public int anotherBitOfInformation;\n    public string andSoemMoreInfo;\n    public book andABooleanJustInCase;\n\n}
370	bytenumber = port.Read(data, 0, 10);\n\n        if (data[0] == 0xFF)\n        {\n        }\n    }
371	HtmlDocument doc = new HtmlWeb().Load(String.Format("http://sitecontainingspan.com"));\n\nvar value = doc.DocumentNode.SelectSingleNode("//span[@class='market_listing_price market_listing_price_with_fee']").InnerText;
372	string propertyName = "bar";\nFieldInfo fieldInfo = typeof(foo).GetField(propertyName, BindingFlags.NonPublic | BindingFlags.Static);\nobject fieldValue = fieldInfo.GetValue(null);
373	byte[] octets = System.Text.Encoding.ASCII.GetBytes("abcd");
374	var CommonNumbers = from a in A.AsEnumerable<double>()\n                    join b in B.AsEnumerable<double>() on a equals b\n                    select a;\ndouble JaccardIndex = (((double) CommonNumbers.Count()) /\n                       ((double) (A.Count() + B.Count())));
375	System.DirectoryServices.DirectoryEntry entry = new System.DirectoryServices.DirectoryEntry();               \n\n// Push the property values from AD back to cache.\n\nentry.RefreshCache(new string[] {"cn", "www" });
376	var psi = new ProcessStartInfo(@"wmic");\npsi.Arguments = @"baseboard get product,manufacturer";\npsi.WindowStyle = ProcessWindowStyle.Hidden;\npsi.UseShellExecute = false;\npsi.RedirectStandardOutput = true;\n\nstring val = String.Empty;\n\nvar p = Process.Start(psi);\np.BeginOutputReadLine();\np.OutputDataReceived += delegate(object sender, DataReceivedEventArgs eventArgs)\n{\n    val += eventArgs.Data + "\r\n";\n};\np.WaitForExit();\n\nMessageBox.Show(val); // Start parsing it here
377	var types = assembly.GetTypes().Where(type => type.Name == "MyClass");\nvar firstType = types.FirstOrDefault();
378	CREATE TABLE dbo.Orders\n(\n    OrderID into IDENTITY(1,1),\n    -- other columns\n)
379	// Get the activity from bindingListActivity, whose k._dataGridViewId is equal to 1.\nvar activity = bindingListActivty.SingleOrDefault(k => k._dataGridViewId == 1);\n\n// If the activity has been found and the a new BuyOrders object.\nif(activity!=null)\n    activity.addBuyOrders(new BuyOrders());
380	void RemoveGroup(string groupName)\n{\n    string path = string.Format("WinNT://domain/myServer/{0}", groupName);\n    using (DirectoryEntry entry = new DirectoryEntry(path, @"domain\serviceAccount", @"********"))\n    {\n        using (DirectoryEntry parent = rootEntry.Parent)\n        {\n            parent.Children.Remove(entry);\n        }\n    }\n}
381	//Declare the object for return (if any)\nStudent objWorkingObject = new Student();\n\n//Populate into XML\nXmlDocument _Doc = new XmlDocument();\n_Doc.LoadXml(strOrigObject);\nvar ser = new System.Xml.Serialization.XmlSerializer(typeof(Student));\nobjWorkingObject = (Student)ser.Deserialize(new XmlNodeReader(_Doc.DocumentElement));
382	string str = string.Join(string.Empty, File.ReadAllLines(FileName));
383	Account Accounttype = new Account();\nStorageKind strgKind = StorageKind.Phone;\n\nAccounttype.Kind = strgKind;
384	object[] x = new object[2];\n\nx[0] = new { firstName = "john", lastName = "walter" };\nx[1] = new { brand = "BMW" };
385	foreach (HtmlElement i in webBrowser1.Document.All)\n    {\n        if (i.OuterText == "CSV Text File" && i.GetAttribute("href") != "")\n        {\n            webBrowser1.Navigate(i.GetAttribute("href"));\n        }\n    }
386	string targetUrl = "http://www.url.url";\n\n        var postBytes = Encoding.Default.GetBytes(@"authenticity_token=pkhn7pwt3QATOpOAfBERZ%2BRIJ7oBEqGFpnF0Ir4RtJg%3D&question%5Bquestion_text%5D=TEST+TEST+TEST&authenticity_token=pkhn7pwt3QATOpOAfBERZ%2BRIJ7oBEqGFpnF0Ir4RtJg%3D");\n\n        var httpRequest = (HttpWebRequest)WebRequest.Create(targetUrl);\n\n        httpRequest.ContentLength = postBytes.Length;\n        httpRequest.Method = "POST";\n\n        using (var requestStream = httpRequest.GetRequestStream())\n            requestStream.Write(postBytes, 0, postBytes.Length);\n\n        var httpResponse = httpRequest.GetResponse();\n\n        using (var responseStream = httpResponse.GetResponseStream())\n            if (responseStream != null)\n                using (var responseStreamReader = new StreamReader(responseStream))\n                {\n                    var serverResponse = responseStreamReader.ReadToEnd();\n                }
387	ReportDataSource rds = new ReportDataSource("dsChart",ObjectDataSource1);\n\nReportDataSource rds2 = new ReportDataSource("DataSet1",ObjectDataSource2);\n\nrptViewer.LocalReport.DataSources.Clear();\n\nrptViewer.LocalReport.DataSources.Add(rds);\n\nrptViewer.LocalReport.DataSources.Add(rds2);
388	var rigaStagioneSerie = document.DocumentNode.SelectNodes("//td[@class='rigaStagioneSerie']");\nList<string> pageTitles = new List<string>();\n\nforeach (var title in rigaStagioneSerie)\n{\n    if (title.ChildNodes.Count == 1)\n    {\n        pageTitles.Add(title.InnerText.Replace("\n", string.Empty).Replace("\t", string.Empty));\n    }\n\n}\n\nvar titoloSerie = document.DocumentNode.SelectNodes("//span[@class='titoloSerie']");\n\nforeach (var title in titoloSerie)\n{\n    pageTitles.Add(title.InnerText);\n}
389	private void AddItemsToCollectionAndInvokePropertyChanged<T,U>(Expression<Func<U>> propertyNameExpression, IList<T> addItems)\n{\n    var p = (PropertyInfo)((MemberExpression)propertyNameExpression.Body).Member;\n    var c = (ExtendedObservableCollection<T>)p.GetValue(this, null);\n    c.AddItems(addItems);\n    OnPropertyChanged(propertyNameExpression);\n}
390	DateTimePicker dateTimePicker1 = new DateTimePicker();\ndateTimePicker1.ShowCheckBox = true;\ndateTimePicker1.Checked= false;
391	Insert(String query)\n{\n   Execute the Sql Query: query\n   result = Execute the Sql Query: "SELECT last_insert_id"\n   return the first element of result\n}
392	List<MyOrder> sortedList = myOrders\n    .OrderBy(myOrder => myOrder.OrderItems.Min(myItem => myItem.ItemCreateDate))\n    .ToList();
393	this.Close(); //Will close the window but keep the application running.\n\nvar mw = new MainWindow();\nmw.Show(); //Will open a new MainWindow and show it.\nmw.Close(); //Close this one too.
394	json.SerializerSettings.PreserveReferencesHandling = PreserveReferencesHandling.Objects;
395	deleteAppointmennt.Delete(DeleteMode.SoftDelete, SendCancellationsMode.SendToNone);
396	SelectedItem="{Binding ElementName=this,\n           Path=ProductID,\n           Mode=TwoWay,\n           UpdateSourceTrigger=LostFocus}"
397	int index = sourceString.IndexOf(removeString);\nstring cleanPath = (index < 0)\n    ? sourceString\n    : sourceString.Remove(index, removeString.Length);
398	Microsoft.Office.Interop.Word.Paragraph oPara2;\n        object oRng = oDoc.Bookmarks.get_Item(ref oEndOfDoc).Range;\n        oPara2 = oDoc.Content.Paragraphs.Add(ref oRng);\n        oPara2.Range.Text = "Heading 2";\n        oPara2.Format.SpaceAfter = 6;\n        oPara2.Range.InsertParagraphAfter();\n        oDoc.Bookmarks.Add("BookmakrName3", oRng);\n\n\n        object oAddress = "#BookmakrName3";\n\n        //Add text after the chart.\n        wrdRng = oDoc.Bookmarks.get_Item(ref oEndOfDoc).Range;\n        wrdRng.InsertParagraphAfter();\n        wrdRng.InsertAfter("Click here to jump");\n        wrdRng.Hyperlinks.Add(wrdRng, ref oAddress);
399	using Microsoft.Office.Interop.Excel;\nusing Application = Microsoft.Office.Interop.Excel.Application;\nusing Excel = Microsoft.Office.Interop.Excel;\n\nApplication excelApplication = new Excel.Application\n{\n    Visible = true,\n    ScreenUpdating = true\n};\n\n_Workbook workbook = excelApplication.Workbooks.Open(@"C:\Temp\Book1.xlsx");\n_Worksheet sheet = workbook.Worksheets[1];\nRange range = sheet.Range["B1"];\nrange.Formula = "Test";\n\nexcelApplication.Quit();
400	Stream stream = TitleContainer.OpenStream("Content\\" + fileName + ".xml");\nXDocument doc = XDocument.Load(stream);
401	using (Cairo.Context g = CairoHelper.Create (myWindow.GdkWindow)) {\n    g.MoveTo (0, 0);\n    g.LineTo (10, 10);\n    g.Color = new Color (1, 1, 1);\n    g.Stroke ();\n}
402	Type gt = typeof(ManagedThread<>).MakeGenericType(ThreadType);\nobject t = Activator.CreateInstance(gt, this,this.GetConfiguration(ThreadType));
403	var settings = new JsonSerializerSettings() { \n                     TypeNameHandling = TypeNameHandling.All };\n\nvar json = JsonConvert.SerializeObject(obj, settings);\nvar newObj = JsonConvert.DeserializeObject<SomeType>(json, settings);
404	var result = query.TrimEnd(',', ' ', '\n');
405	extension/mime-type
406	[DataObjectMethod(DataObjectMethodType.Update)]\npublic static void UpdateAnimeList(string name, string **animeImage**, string synopsis, \n    string type, short episodes, string genres, decimal rating, int original_animeID,\nint animeID) {\n    ...\n}
407	[HttpPost]\npublic ActionResult Index(HttpPostedFileBase fil)\n{\n    if (fil != null && fil.ContentLength > 0)\n    {\n        // Read bytes from http input stream\n        BinaryReader b = new BinaryReader(file.InputStream);\n        byte[] binData = b.ReadBytes(file.InputStream.Length);\n        string result = System.Text.Encoding.UTF8.GetString(binData);\n        Session["doc2"] = result;\n\n    }\n    return RedirectToAction("Xmlview");\n}\n\n[HttpGet]\npublic ActionResult Xmlview()\n{\n    Value model2 = new Value();\n    string strall = "";\n    string content = Session["doc2"].ToString();\n    if (!String.IsNullOrEmpty(content))\n    {\n        XDocument xml = XDocument.Parse(content);  \n        var allElements = xml.Elements();\n    }\n}
408	stringBuilderObject.Remove(0, stringBuilderObject.Length)
409	void ShowMessage (Window parent, string title, string message)\n{\n    Dialog dialog = null;\n    try {\n        dialog = new Dialog (title, parent,\n            DialogFlags.DestroyWithParent | DialogFlags.Modal,\n            ResponseType.Ok);\n        dialog.VBox.Add (new Label (message));\n        dialog.ShowAll ();\n\n        dialog.Run ();\n    } finally {\n        if (dialog != null)\n            dialog.Destroy ();\n    }\n}
410	XmlDocument xDoc = new XmlDocument();\nxDoc.Load("Server.MapPath("~/XMLFile.xml")");\n\nXmlNodeList nodeList;\nnodeList = xDoc.DocumentElement.SelectNodes("Employee");\n\nforeach (XmlNode emp in nodeList)\n{\n    foreach (XmlNode child in emp.ChildNodes)\n    {\n        Response.Write(child.LocalName);\n        Response.Write(":");\n        Response.Write(child.InnerText);\n        Response.Write("\n");\n    }\n\n}
411	void Main()\n{\n    var queryInfo = new DomainQuery();\n    var ContentList = new List<Content>();\n\n    var query = ContentList\n        .Where(q=>queryInfo.PhrasesIncludeAny\n            .Any(item=>q.Summary.Any(subitem=>subitem == item)))\n        .Where(q=>queryInfo.PhrasesIncludeAll\n            .All(item=>q.Summary.All(subitem=>subitem == item)))\n        .Where(q=>!queryInfo.PhrasesIncludeAll\n            .All(item=>q.Summary.All(subitem=>subitem == item)))\n        .Where(q=>q.CreatedDate < queryInfo.CreatedBefore)\n        .Where(q=>q.CreatedDate > queryInfo.CreatedAfter);\n\n}
412	this.Load += (sender,args)=>{ /*do all your work here*/  \n     string extractededVal = Iengn.ExtractPageValue(Iengn.itrfWebEng);\n     string flnm = @" the directory path to file --> \dolarRate.asp";\n     File.WriteAllText(fn, extractededVal);\n     Application.Exit(); \n  };
413	Canvas.SetLeft(Rendershape, e.GetPosition(canvasArea).X - ( Rendershape.Width / 2.0 ) );\nCanvas.SetTop(Rendershape, e.GetPosition(canvasArea).Y - ( Rendershape.Height / 2.0 ) );
414	static byte[] DoubleToReal48(double d)\n{\n    byte[] r = new byte[6];\n\n    long bits = BitConverter.DoubleToInt64Bits(d);\n    bool negative = ((bits >> 63) & 1) != 0;\n    long exponent = ((bits >> 52) & 0x7FF) - 1023;\n    long mantissa = bits & 0xFFFFFFFFFFFFFL;\n\n    long raw = (negative ? 1 : 0);\n    raw = (raw << 39) | (mantissa >> 13);\n    raw = (raw << 8) | ((exponent + 129) & 0xFF);\n\n    for (int k = 0; k < 6; k++)\n    {\n        r[k] = (byte)(raw & 0xFF);\n        raw >>= 8;\n    }\n    return r;\n}\n\nstatic double Real48ToDouble(byte[] r)\n{\n    long raw = 0;\n    for (int k = 5; k >= 0; k--)\n    {\n        raw = (raw << 8) | r[k];\n    }\n\n    long mantissa = (raw << 5) & 0xFFFFFFFFFD000L;\n    long exponent = (((raw & 0xFF) - 129 + 1023) & 0x7FF) << 52;\n    long sign = (((raw & ~0x7FFFFFFFFFFFL) != 0) ? 1 : 0) << 63;\n\n    return BitConverter.Int64BitsToDouble(sign | exponent | mantissa);\n}
415	machine.config
416	{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}, Path=DataContext.HasPermissions}
417	string userAgent = "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.3; .NET4.0C; .NET4.0E; MS-RTC LM 8)";\n\nclient.Headers[HttpRequestHeader.UserAgent] = userAgent;
418	[Required]\npublic bool Saturday{ get; set; }\n\n[Required]\npublic bool Sunday{ get; set; }\n\n[NotMapped]\npublic bool SatSun\n{\n    get\n    {\n        return (!this.Saturday && !this.Sunday);\n    }\n}\n\n[RequiredIf("SatSun",true)]\npublic string Holiday{ get; set; }
419	byte[] data = ...\n  int len = data.Length;\n  byte[] prefix = Bitconverter.GetBytes(len);\n  stream.Write(prefix, 0, prefix.Length); // fixed 4 bytes\n  stream.Write(data, 0, data.Length);
420	NavigateUrl='<%# "Rep_calc.aspx?year=" + Eval("bal")%>'
421	[DllImport("MockVadavLib.dll", CharSet = CharSet.Ansi)]\npublic static extern IntPtr TheFunction(ref UserRec userRec);
422	private void ToggleStateButton_Click(object sender, EventArgs e) {\n        if (this.FormBorderStyle == FormBorderStyle.None) {\n            this.FormBorderStyle = FormBorderStyle.Sizable;\n            this.WindowState = FormWindowState.Normal;\n        }\n        else {\n            this.FormBorderStyle = FormBorderStyle.None;\n            if (this.WindowState == FormWindowState.Maximized) this.WindowState = FormWindowState.Normal;\n            this.WindowState = FormWindowState.Maximized;\n        }\n    }
423	new Thread(() => BattleArena.ArenaGame(12)).Start();
424	// Create a Subkey\nRegistryKey newKey = Registry.CurrentUser.CreateSubKey("SOFTWARE\\SuperSoft\\App");\n\n// Write Values to the Subkey\nnewKey.SetValue("Value1", "Content1");\nnewKey.SetValue("Value2", "Content2");\n\n// read Values from the Subkey\nif (SubKeyExist("SOFTWARE\\SuperSoft\\App"))\n{\n  RegistryKey myKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\SuperSoft\\App");\n  string firstApp = (string)myKey.GetValue("Value1");\n  string secondApp = (string)myKey.GetValue("Value2");\n}
425	var message = new MailMessage("abc@somedomain.com", "administrator@anotherdomain.com");\nmessage.Subject = "Testing";\nmessage.IsBodyHtml = true;\nmessage.Body = "<html><body><div>Test message</div><a href=\"http://www.google.com\">some link</a></body></html>";
426	x.ToString("+#;-#;+0")
427	IL_000a:  ldc.r4     69.
428	Workbook workBook = new Workbook();\n\nWorksheet workSheetIntroduction = workBook.Worksheets[0];\n\n\n//This Style object will make the fill color Red and font Bold\n\nStyle boldStyle = workBook.CreateStyle();\n\nboldStyle.ForegroundColor = Color.Red;\n\nboldStyle.Pattern = BackgroundType.Solid;\n\nboldStyle.Font.IsBold = true;\n\n\n//Bold style flag options\n\nStyleFlag boldStyleFlag = new StyleFlag();\n\nboldStyleFlag.HorizontalAlignment = true;\n\nboldStyleFlag.FontBold = true;\n\n\n//Apply this style to row 1\n\nRow row1 = workBook.Worksheets[0].Cells.Rows[0];\n\nrow1.ApplyStyle(boldStyle, boldStyleFlag);\n\n\n\n//Now set the style of indvidual cell\n\nCell c = workSheetIntroduction.Cells["B1"];\n\n\nStyle s = c.GetStyle();\n\ns.ForegroundColor = Color.Red;\n\ns.Pattern = BackgroundType.Solid;\n\ns.Font.IsBold = true;\n\nc.SetStyle(s);\n\n\n//Save the workbook\n\nworkBook.Save("output.xlsx");
429	ExcelWorksheet worksheet = xlPackage.Workbook.Worksheets.Add("Tinned Goods");
430	string fileName = "YourDocument.doc";\nstring path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, fileName);
431	public static void AddClass(this WebControl control, string newClass)\n{\n    if(!string.IsNullOrEmpty(control.CssClass))\n    {\n         control.CssClass += " " + newClass;\n    }\n    else\n    {\n       control.CssClass = newClass;\n    }\n}
432	private void btnCancel_Click(object sender, System.Windows.RoutedEventArgs e)\n        {\n            Dispatcher.Invoke(new Action(() => btnCancel.Command.Execute(null)), DispatcherPriority.Send);\n        }
433	int samplesCount = samples.Count;\n\nfor (int j = numLowestSamples; j < samplesCount; j++)\n{\n    double sample = samples[j];\n\n    if (sample > 0 && sample < currentMax)\n    {\n        int k;\n\n        for (k = 0; k < numLowestSamples; k++)\n        {\n           if (sample < lowestSamples[k])\n           {\n              Array.Copy(lowestSamples, k, lowestSamples, k + 1, numLowestSamples - k - 1);\n              lowestSamples[k] = sample;\n\n              break;\n           }\n        }\n\n        if (k == numLowestSamples)\n        {\n           lowestSamples[numLowestSamples - 1] = sample;\n        }\n\n        currentMax = lowestSamples[numLowestSamples - 1];\n    }\n}
434	var orders =  orderResponse\n                  .Select(order => order.SomeProperty && ..)\norders.ToCsv().Print();
435	// Turn the read only field non-readonly\nWebServicesSection wss = WebServicesSection.Current;\nSoapExtensionTypeElement e = new SoapExtensionTypeElement(typeof (TraceExtension), 1, PriorityGroup.High);\n\nFieldInfo readOnlyField = typeof(System.Configuration.ConfigurationElementCollection).GetField("bReadOnly", BindingFlags.NonPublic | BindingFlags.Instance);\nreadOnlyField.SetValue(wss.SoapExtensionTypes, false);\n\n// Bind to web services section of config\nwss.SoapExtensionTypes.Add(e);\n\n// Restore the original so other things don't break\nMethodInfo resetMethod = typeof(System.Configuration.ConfigurationElementCollection).GetMethod("ResetModified", BindingFlags.NonPublic | BindingFlags.Instance);\nresetMethod.Invoke(wss.SoapExtensionTypes, null);\n\nMethodInfo setReadOnlyMethod = typeof(System.Configuration.ConfigurationElementCollection).GetMethod("SetReadOnly", BindingFlags.NonPublic | BindingFlags.Instance);\nsetReadOnlyMethod.Invoke(wss.SoapExtensionTypes, null);
436	System.Deployment
437	using UnityEngine;\nusing System.Collections;\n\npublic class ExampleClass : MonoBehaviour {\n\n    private bool newTouchesInThisScene = false;\n\n    void Update() {\n        for(int i = 0; i < Input.touchCount; ++i) {\n            if (Input.GetTouch(i).phase == TouchPhase.Began) {\n                newTouchesInThisScene = true;\n            }\n        }\n    }\n}
438	TreeListNode parentNode = treeList1.AppendNode(..., null);\n    TreeListNode childNode = treeList1.AppendNode(..., parentNode);
439	var sortedWords = words.Where(x => x.Contains("comp"))\n                       .OrderByDescending(x => x);
440	Panel panel = new Panel();\n    panel.Controls.Add(new Button() { Text = "Button 1" });\n    panel.Controls.Add(new Button() { Text = "Button 2" });\n\n    UltraPopupControlContainer container = new UltraPopupControlContainer();\n    container.PopupControl = panel;\n\n    ultraDropDownButton1.PopupItem = container;
441	myGraph.AxisChange()
442	client.AddParameter("imageData[]", data1);\nclient.AddParameter("imageData[]", data2);
443	// use nested using block to decrease the indent\nusing (var ctx = new DataClassesCallCenterDataContext())\nusing (var scope = new TransactionScope())\n{\n    var test =\n        from c in ctx.sp_CallCenterAnketEntity()\n        select c;\n\n    // if you're sure that query result will have at least one record.\n    // else an exception will occur. use FirstOrDefault() if not sure.\n    // and why int? - is it the type of ID. Isn't int the type?\n    int? ID = test.First().ID; \n\n    // here you can use object initializer\n    var question = new QuestionsYesNo\n    {\n        Question = "Test3?",\n        Date = DateTime.Now\n    };\n\n    ctx.QuestionsYesNos.InsertOnSubmit(question);\n    ctx.SubmitChanges();\n\n    Rehber rehber = (\n        from r in ctx.Rehbers\n        where r.ID == ID\n        select r).First(); // again about being sure and FirstOrDefault\n\n    rehber.Name = @"SQL Server 2005'i bir [many more characters] izleyin.";\n\n    ctx.SubmitChanges();    \n    scope.Complete();\n}
444	foreach (var item in data)\n   {\n     QuestionMaster temp = new QuestionMaster();\n\n   }
445	public static int ExecuteNonQuery(ref DbCommand command, out string ErrorMessage)
446	public partial class Form1 : Form\n{\n    BackgroundWorker _worker;\n    public Form1()\n    {\n        InitializeComponent();\n        _worker = new BackgroundWorker();\n        _worker.WorkerReportsProgress = true;\n        _worker.DoWork += _worker_DoWork;\n        _worker.ProgressChanged += _worker_ProgressChanged;\n    }\n\n    private void _worker_ProgressChanged( object sender, ProgressChangedEventArgs e )\n    {\n        label1.Text = e.UserState.ToString();\n    }\n\n    private void _worker_DoWork( object sender, DoWorkEventArgs e )\n    {\n        for( int i = 0; i < 100; ++i )\n        {\n            _worker.ReportProgress( i, i );\n            // allow some time between each update,\n            // for demonstration purposes only.\n            System.Threading.Thread.Sleep( 15 );\n        }\n    }   \n\n    private void button1_Click( object sender, EventArgs e )\n    {\n        _worker.RunWorkerAsync();\n    }\n}
447	var mock = new Mock<IRepository>();\nvar mockStore = new Mock<Store>();\nmock.Setup(x => x.GetById<Store>(It.IsAny<int>())).Returns(mockStore.Object);\n\nmockStore.SetupGet(s => s.Id).Returns(5);\nmockStore.SetupGet(s => s.Value).Returns("Walmart");\n\nvar store = Repository.GetById<Store>(5);\nAssert.That(store.Id == 5);
448	for (int i = topLevelForm.OwnedForms.Length - 1; i >= 0; --i) {\n  topLevelForm.OwnedForms[i].Dispose();\n}
449	var methodParameterTypes = classMethod.GetParameters().Select(p => p.ParameterType).ToArray();\nMethodInfo interfaceMethodInfo = interfaceType.GetMethod(classMethod.Name, methodParameterTypes);
450	public partial class L2SEntity {\n    public void Scale(double d) {\n        if (this.Amount.HasValue) {\n            this.Amount *= d;\n        }\n    }\n}
451	if (test == null)\n    {\n         throw new HttpResponseException(Request.CreateErrorResponse(HttpStatusCode.NotFound, \n"this item does not exist");\n    }
452	int IndexOfLongestRun(string input)\n{\n    int bestIndex = 0, bestScore = 0, currIndex = 0;\n    for (var i = 0; i < input.Length; ++i)\n    {\n        if (input[i] == input[currIndex])\n        {\n            if (bestScore < i - currIndex) \n            {\n                bestIndex = currIndex;\n                bestScore = i - currIndex;\n            }\n        }\n        else\n        {\n            currIndex = i;\n        }\n    }\n    return bestIndex;\n}
453	var scripts = TableCreationScript\n    .Trim()\n    .Replace("create", "#create")\n    .Split(new []{'#'}, StringSplitOptions.RemoveEmptyEntries);\n\nfor each (var script in scripts)\n{\n    SqlCeCommand cmd = new SqlCeCommand(script);\n    cmd.Connection = connection;\n    cmd.ExecuteNonQuery();\n}
454	lblAnswer3.Text = string.Join(", ", number);
455	var orgFileName = "1250a2d5-cd40-4bcc-a979-9d6f2cd62b9fLog.txt";\n  var newFileName = orgFileName.Substring (36);\n  File.Copy (orgFileName, newFileName, true);\n  zip.AddFile (newFileName);
456	List<Point> dots = new List<Point>();\nint totalX = 0, totalY = 0;\nforeach (Point p in dots)\n{\n    totalX += p.X;\n    totalY += p.Y;\n}\nint centerX = totalX / dots.Count;\nint centerY = totalY / dots.Count;
457	private bool mblnFlag;\n\npublic String Flag \n{\n   get\n   {\n      return mblnFlag;\n   }\n   set\n   {\n      mblnFlag = (value == "1")\n   }\n}
458	var impl = session.CreateCriteria<User>().AddOrder(Order.Asc("Id")) as CriteriaImpl;\n\nforeach (CriteriaImpl.OrderEntry entry in impl.IterateOrderings())\n{\nOrder order = entry.Order;\n    // now you have the order and you can either parse it : "propertyName asc" \n                                                         or "propertyName desc"\n    // or you can check it out in debug, it has a few protected fields that you could reflect. \n    // not sure if there's another way.\n}
459	using System.Globalization;\nstatic void Main(string[] args)\n{\n    Console.Write("Enter a Number to find out what Month it is: ");\n\n    int userInput = Convert.ToInt16(Console.ReadLine());\n    if(userInput > 0 && userInput < 13)\n    {            \n         string monthName = CultureInfo.CurrentCulture.DayTimeFormat.MonthNames[userInput-1];\n         int daysInMonth = DateTime.DaysInMonth(2013, userInput);\n         ......\n\n    }\n}
460	protected void Application_BeginRequest()\n{\n    var ci = CultureInfo.GetCultureInfo("en-US");\n\n    if (Thread.CurrentThread.CurrentCulture.DisplayName == ci.DisplayName)\n    {\n        ci = CultureInfo.CreateSpecificCulture("en-US");\n        ci.NumberFormat.CurrencyNegativePattern = 1;\n        Thread.CurrentThread.CurrentCulture = ci;\n        Thread.CurrentThread.CurrentUICulture = ci;\n    }\n}
461	private string GetDecimalDigits(double d, int digitsCount)\n{\n    double substracted = d - Math.Floor(d);\n    return Math.Round(substracted * Math.Pow(10, digitsCount)).ToString();\n}\n\nstring result = GetDecimalDigits(59.123, 2);
462	var editableTextBox = cmbExpressions.Template.FindName("PART_EditableTextBox", cmbExpressions) as TextBox;\nif (editableTextBox != null)\n{\n    var text = editableTextBox.SelectedText;\n}
463	using System.Net;\nusing Microsoft.SharePoint.Client;\n\nusing (ClientContext context = new ClientContext("http://yourserver/")) {\n    context.Credentials = new NetworkCredential("user", "password", "domain");\n    List list = context.Web.Lists.GetByTitle("Some List");\n    context.ExecuteQuery();\n\n    // Now update the list.\n}
464	string filename = "file.dcm";\nDicomFile theFile = new DicomFile(filename);\ntheFile.Load(DicomReadOptions.Default);\nforeach (DicomAttribute attribute in theFile.DataSet)\n{\n    Console.WriteLine("Tag: {0}, Value: {1}", attribute.Tag.Name, attribute.ToString());\n}
465	DateTime startDate = DateTime.Today;\nDateTime endDate = startDate.AddDays(1).AddSeconds(-1);
466	int tabCount = 0;\n        foreach (TabPage tp in customTabControl1.TabPages)\n        {\n            tp.Tag = tabCount;\n            foreach (Control ctrl in tp.Controls)\n            {\n                if (ctl is YourUserControlTypeHere)\n                {\n                    YourUserControlTypeHere uc = (YourUserControlTypeHere)ctl;\n                    uc.BrowserCount = TabCount; // Error Unknown member BrowserCount\n                }\n            }\n        }
467	DateTime value = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1).AddDays(-1);
468	FrameworkElement fe = sender as FrameworkElement;\n\nwhile ((fe.GetType() != typeof(DataGrid)) &&\n       (fe != null))\n{\n     fe = VisualTreeHelper.GetParent(fe) as FrameworkElement;\n}
469	private void Button_Click(object sender, RoutedEventArgs e)\n{\n    lista.Add(new Lista() { Hexnumber_op_Code = "1D", Background_OP_Code = "hallo", OP_Code = "red" });\n    lista.Add(new Lista() { Hexnumber_op_Code = "1D", Background_OP_Code = "hallo", OP_Code = "red" });\n}
470	public string SQL_CONNECTION_STRING\nget{return get("SQL_CONNECTION_STRING"); }
471	public RecordConfiguration<TStage, TKey> EnsureUnique>(params Expression<Func<TStage, object>>[] propertyAccessors)\n{\n    // ...\n    properyAccessors.Select((val,index)=>new{ val,index})\n                    .ForEach(i =>columnSet.AddAt(i.index, i.val));\n    // ...\n}
472	var result = users.GroupBy(u => u.UserId)\n                  .Where(g => g.Select(u => u.City).Distinct().Count() > 1)\n                  .Select(g => g.Key)\n                  .ToList();
473	double cost=5123456.55;\nConsole.WriteLine(cost.ToString("C", new System.Globalization.CultureInfo("en-US")));\n// The example displays the output: $5,123,456.55
474	Dim row As GridViewRow = DirectCast(DirectCast(e.CommandSource, Control).NamingContainer, GridViewRow)\n\nCType(row.FindControl("lbActiveCheck"), LinkButton).Text = "Make As Inactive"
475	var fileTarget = (FileTarget) LogManager.Configuration.FindTargetByName("file");\n// Need to set timestamp here if filename uses date. \n// For example - filename="${basedir}/logs/${shortdate}/trace.log"\nvar logEventInfo = new LogEventInfo {TimeStamp = DateTime.Now}; \nstring fileName = fileTarget.FileName.Render(logEventInfo);\nif (!File.Exists(fileName))\n    throw new Exception("Log file does not exist.");
476	[0-9]{7,}\n\nbool includesPhone = Regex.IsMatch("phone number 123456789", "[0-9]{7,}");
477	Private Function _find_item_in_rev(itemCode As String) As xStockitem\n    Dim myTempItem As New xStockitem\n    Debug.Print(currentRevItems.Count.ToString)\n\n    For Each thisItem As xStockitem In currentRevItems\n\n        If thisItem.stockCode = itemCode Then 'found item\n            myTempItem.stockCode = itemCode\n            myTempItem.price = thisItem.price\n            myTempItem.quantity = thisItem.quantity\n            currentRevItems.Remove(thisItem)\n            Return myTempItem\n        End If\n\n    Next\n    Return Nothing 'nothing found\nEnd Function
478	string body = @"<html><body>\n<a href=""foo.bar"" class=""blap"">blip</a>\n...\n</body></html>";
479	public string NonStaticMethod()\n{\n    var instance = new MyNewClass();\n    return instance.MyStringMethod(); //Can call non static method\n}
480	List<Control> controlsToBeRemoved = new List<Control>();\n    foreach (Control item in this.Controls.OfType<PictureBox>())\n    {\n        controlsToBeRemoved.Add(item);\n    }\n\n    foreach (Control item in controlsToBeRemoved)\n    {\n        this.Controls.Remove(item);\n    }
481	while (iterator.MoveNext())\n{\n    //Do Stuff\n}
482	byte[] bytesToBeEncrypted = File.ReadAllBytes(files[i]);\nbyte[] passwordBytes = Encoding.UTF8.GetBytes(passWord);\n\n// Hash the password with SHA256\npasswordBytes = SHA256.Create().ComputeHash(passwordBytes);\nbyte[] bytesCyrpt = new byte[0];\nif (Mode == "Encrypt")\n{\n    bytesCyrpt = AES_Encrypt(bytesToBeEncrypted, passwordBytes);\n    File.WriteAllBytes(encryptedFileName(files[i]), bytesCyrpt);\n    File.Delete(files[i]);\n}\nelse\n{\n    bytesCyrpt = AES_Decrypt(bytesToBeEncrypted, passwordBytes);\n    File.WriteAllBytes(decryptFileName(files[i]), bytesCyrpt);\n}
483	using System;\nusing System.Threading;\n\nnamespace Input\n{\n    class MainClass\n    {\n        public static void Main (string[] args)\n        {\n            // This is to stop the worker thread\n            var workerShouldStop = false;\n\n            var worker = new Thread(() => \n            {\n                // do work\n                while (!workerShouldStop) {\n                    Thread.Sleep(1000);\n                    Console.WriteLine("doing things ...");\n                };\n            });\n\n            worker.Start();\n\n            string input;\n            do \n            {\n                Console.Write ("Your input (enter to quit):");\n                input = Console.ReadLine();\n                Console.WriteLine("input is:" + input);\n            } while(!String.IsNullOrWhiteSpace(input));\n\n            // Stop the worker thread\n            workerShouldStop = true;\n        }\n    }\n}
484	public static IEnumerable<XElement> Parents(this XObject obj)\n{\n    XElement e = obj.Parent;\n    while (e != null)\n    {\n        yield return e;\n        e = e.Parent;\n    }\n}
485	var parsed = DateTime.ParseExact("20100825161500","yyyyMMddHHmmss", null);
486	resp.Headers
487	nupdwn.Minimum = -10;\nnupdwn.Maximum = 10;\nnupdwn.Increment = 0.25;\nnupdwn.DecimalPlaces = 2;
488	class Program\n    {\n        static void Main(string[] args)\n        {\n            List<A> lst = new List<A>();\n\n            for (int j = 1; j < 4; j++)\n            {\n                var tmp = new A() { Value = j * 1000 };\n                for (int i = 0; i < 150; i++)\n                {\n                    tmp.SubItems.Add(new B { Value = i + 1, Parent = tmp });\n                }\n                lst.Add(tmp);\n            }\n\n            List<B> result = lst.SelectMany(x => x.SubItems.Take(10)).ToList();\n        }\n    }\n\n    public class A\n    {\n        public A()\n        {\n            SubItems = new List<B>();\n        }\n\n        public int Value { get; set; }\n        public List<B> SubItems { get; set; }\n    }\n\n\n    public class B\n    {\n        public int Value { get; set; }\n        public A Parent { get; set; }\n    }
489	if(!postback){//code here}\n  else\n  {\n    Control cont = this.Page.FindControl(Request.Form["__EVENTTARGET"]);\n    if (cont != null)\n        cont.Focus();\n  }
490	var startTime = DateTime.Parse("2012-01-28 18:00:00");\nvar endTime = startTime.AddHours(3);\nwhile (startTime <= endTime)\n{\n  System.Console.WriteLine(startTime.ToShortTimeString());\n  startTime = startTime.AddMinutes(30);\n}
491	public interface IValidationCRUD\n{\n    ICRUDValidation IsValid(object obj);\n}\n\npublic abstract class ValidationCRUDBase: IValidationCRUD {\n    public abstract ICRUDValidation IsValid(object obj);\n    protected abstract void AddError(ICRUDError error);\n}
492	public void ReloadPage()\n{\n    UrlBuilder url = new UrlBuilder(Context, Request.Path);\n    foreach (string queryParam in Request.QueryString.AllKeys)\n    {\n        string queryParamValue = Request.QueryString[queryParam];\n        url.AddQueryItem(queryParam, queryParamValue);\n    }\n    Response.Redirect( url.ToString(), true);\n}
493	public class NumberRank\n{\n   public int Number {get; set;}\n   public int Rank {get; set;}\n\n   public NumberRank(int number, int rank)\n   {\n      Number = number;\n      Rank = rank;\n   }\n}\n\nclass Test\n{\n   static void Main()\n   {\n      List<int> numbers = new List<int>();\n\n      numbers.Add(650);\n      numbers.Add(150);\n      numbers.Add(500);\n      numbers.Add(200);\n\n      List<NumberRank> numberRanks = numbers.OrderByDescending(n => n).Select((n, i) => new NumberRank(n, i + 1)).ToList();\n\n      // check it worked\n      foreach(NumberRank nr in numberRanks) Console.WriteLine("{0} : {1}", nr.Rank, nr.Number);\n      Console.ReadKey();  \n   }\n}
494	private void Button1_Click(Object sender, EventArgs e ) \n{\n   var myForm = new Form1();\n   myForm.Show();\n}
495	public interface IHomeUpContext\n{\n    DbSet<channel> channel { get; set; }\n    int SaveChanges();\n}
496	string csv = "Name,Surname,Telephone,Address";\nstring[] split = csv.Split(',');\n\nDataGridViewTextBoxColumn subject = new DataGridViewTextBoxColumn();\nsubject.HeaderText = "Subject Type";\nsubject.Name = "Subject";\n\ndataGridView1.Columns.Add(subject);\n\nforeach (string item in split)\n{\n    dataGridView1.Rows.Add(item);\n}
497	public T GetCache<T>(string key, Func<T> valueFactory...) \n{\n    // note here that I use the key as the name of the mutex\n    // also here you need to check that the key have no invalid charater\n    //   to used as mutex name.\n    var mut = new Mutex(true, key);\n\n    try\n    {   \n        // Wait until it is safe to enter.\n        mut.WaitOne();\n\n        // here you create your cache\n    }\n    finally\n    {\n        // Release the Mutex.\n        mut.ReleaseMutex();\n    }   \n}
498	Interlocked.Add(ref long, long)
499	com.ExecuteNonQuery();
500	XmlDocument doc = new XmlDocument();\ndoc.Load(Path.GetDirectoryName(System.Reflection.Assembly.GetEntryAssembly().Location) + @"\test.xml");
501	lblOUT.Text += Convert.ToString(num2) + Environment.NewLine;
502	myTreeView.SetValue(VirtualizingPanel.IsVirtualizingProperty, true);\nmyTreeView.SetValue(VirtualizingPanel.VirtualizationModeProperty, VirtualizationMode.Recycling);
503	public void Init(HttpApplication context)\n{\n    context.PostMapRequestHandler += OnPostMapRequestHandler;\n}\n\nvoid OnPostMapRequestHandler(object sender, EventArgs e)\n{\n    HttpContext context = ((HttpApplication)sender).Context;\n    Page page = HttpContext.Current.CurrentHandler as Page;\n    if (page != null)\n    {\n        page.PreRenderComplete += OnPreRenderComplete;\n    }\n}\n\nvoid OnPreRenderComplete(object sender, EventArgs e)\n{\n    Page page = (Page) sender;\n    // script injection here\n}
504	private byte _myByte;\npublic byte LowerHalf\n{\n    get\n    {\n        return (byte)(_myByte & 15);\n    }\n    set\n    {\n        _myByte = (byte)(value | UpperHalf * 16);\n    }\n}\npublic byte UpperHalf\n{\n    get\n    {\n        return (byte)(_myByte / 16);\n    }\n    set\n    {\n        _myByte = (byte)(LowerHalf | value * 16);\n    }\n}
505	animals.Friends = new List<Animal> { new Kangaroo(), new Bird() };\nforeach ( var kangaroo in animals.Friends.OfType<Kangaroo>()) {\n  kangaroo.Hop();\n}
506	foreach(Control c in this.Controls) {\n    if(c is TextBox)\n        Console.WriteLine(c.Text);   \n}
507	foreach ( MailItem oItem in theMailFolder.Items.OfType<MailItem>()) {\n  ..\n}
508	public TDestination Map<TDestination>(object source, Action<IMappingOperationOptions> opts)\n    {\n        var mappedObject = default(TDestination);\n        if (source != null)\n        {\n            var sourceType = source.GetType();\n            var destinationType = typeof(TDestination);\n\n            mappedObject = (TDestination)Map(source, sourceType, destinationType, opts);\n        }\n        return mappedObject;\n    }
509	Form.Show(ownerForm)
510	DirectorySearcher search = new DirectorySearcher("LDAP://DCHS");\nsearch.Filter = String.Format("(SAMAccountName={0})", UserName);\nSearchResult result = search.FindOne();    \nDirectoryEntry entry = result.GetDirectoryEntry();\n_UPN = entry.Properties["userPrincipalName"].Value.ToString();
511	new SchemaExport(config).Execute(ddlScript => {\n    using (var writer = new StreamWriter(fileName, true))\n    {\n        writer.Write(ddlScript);\n        writer.Flush();\n    }\n}, false, false);
512	[DllImport(@"test.dll")]\nprivate static extern void methodToCall(\n    [MarshalAs(UnmanagedType.BStr)]\n    string aFirstParameter,\n    [MarshalAs(UnmanagedType.BStr)]\n    ref string aSecondParameter\n);
513	[Obsolete("For serialization only", true)]\n public Foo() {}
514	++count % 23 == 0
515	public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException\n    {\n        String s = json.getAsString().replace("/Date(", "").replace(")/", "");\n\n        //if there us no data passed in - that means NULL\n        if (s.equals("")) return null;\n\n        //If we got timezone info handle separately:\n        long offset = 0;\n        if (s.length() > 5 && (s.indexOf("-") == s.length()-5 || s.indexOf("+") == s.length()-5))\n        {\n            //get offset minutes\n            offset = Long.valueOf(s.substring(s.length()-4, s.length()-2))*60 + Long.valueOf(s.substring(s.length()-2, s.length()));\n            //Apply direction\n            if (s.indexOf("-") == s.length()-5) offset = -offset;\n\n            //Cutoff offset\n            s = s.substring(0, s.length()-5);\n        }\n\n        return new Date(Long.valueOf(s) + offset * 60 * 1000);\n\n    }
516	public class ColoredButton : Control {\n    protected override void OnPaint(PaintEventArgs e) {\n        Graphics graphics = e.Graphics;\n        Pen pen = new Pen(Color.Black, 1f);\n        SolidBrush brush = new SolidBrush(Color.Red);\n\n        graphics.FillRectangle(brush, 0, 0, Width, Height);\n        graphics.DrawRectangle(pen, 0, 0, Width-1, Height-1);\n    }\n}
517	[DataContract]\nclass Foo \n{\n    [DataMember]\n    public string Name { get; set; }\n}
518	public string[] MyProperty\n? ? ? ? {\n? ? ? ? ? ? get\n? ? ? ? ? ? {\n? ? ? ? ? ? ? ? List<string> list = new List<string>();\n? ? ? ? ? ? ? ? foreach (MyObject obj in ListMyObjects)\n? ? ? ? ? ? ? ? ? ? list.Add(obj.Name);\n? ? ? ? ? ? ? ? return list.ToArray();\n? ? ? ? ? ? }\n? ? ? ? ? ? set\n? ? ? ? ? ? {\n? ? ? ? ? ? ? ? foreach (string name in value)\n? ? ? ? ? ? ? ? ? ? ListMyObjects.Add(new MyObject(name));\n? ? ? ? ? ? }\n? ? ? ? }
519	Form3 getup = new Form3();\ngetup.ShowDialog();\nexample = getup.example;
520	private void button1click(object sender, EventArgs e)\n{\n       Foo();\n}\n\n\nvoid EnterPressed(object sender, KeyEventArgs e)\n{\n    if (e.KeyCode == Keys.Enter)\n    {\n        Foo();\n    }\n}\n\nvoid Foo()\n{\n    //Do Something\n}
521	static MyClass()\n{\n    Initialized = false;\n}
522	private UsersRepository _usersRepository;\nprivate  UsersRepository UsersRepository\n{\n    get\n    {\n        if(_usersRepository == null)\n        {\n            _usersRepository = new UsersRepository();\n        }\n        return _usersRepository;\n    }\n}
523	string data = "<data><test>foo</test><test>foobbbbb</test><bar>123</bar><username>foobar</username></data>";\n\nXDocument doc = XDocument.Parse(data);\nDictionary<string, string> dataDictionary = new Dictionary<string, string>();\n\nforeach (XElement element in doc.Descendants().Where(p => p.HasElements == false)) {\n    int keyInt = 0;\n    string keyName = element.Name.LocalName;\n\n    while (dataDictionary.ContainsKey(keyName)) {\n        keyName = element.Name.LocalName + "_" + keyInt++;\n    }\n\n    dataDictionary.Add(keyName, element.Value);\n}
524	var userAddress = HttpContext.Current.Request.UserHostAddress;
525	[JsonProperty("cost_center.code")]\npublic string CostCenter{ get; set; }
526	div#ContentWrapper { display: table; }\ndiv#LeftSidebar { display: table-cell; }\ndiv#MainContent { display: table-cell; }
527	Regex.Escape(pattern) == pattern
528	public string PersistanceKey\n{\n    get { \n        if(ViewState["PersistanceKey"] == null)\n           ViewState["PersistanceKey"] = "Object" + Guid.NewGuid().ToString();\n\n        return (string)ViewState["PersistanceKey"];\n    }\n}\n\npublic PersistanceObject Persistance\n{\n    get {\n        if(Session[this.PersistanceKey] == null)\n            Session[this.PersistanceKey] = new PersistanceObject();\n\n        return (PersistanceObject)Session[this.PersistanceKey];\n}
529	private void Panel_MouseIn(object sender, EventArgs e)\n{\n  Panel pan = sender as Panel;\n  pan.BackColor = Color.Red;\n}
530	int number = items.Count;\n        int number2 = number / 2;\n\n        List<TableItem> firstList = items.GetRange(0, number2);\n        List<TableItem> secondList = items.GetRange(number2, number % 2 == 0? number2 : number2 + 1);\n\n\n        listView1.Adapter = new HomeScreenAdapter(this, firstList);\n        listView2.Adapter = new HomeScreenAdapter (this, secondList);
531	Model.TicketNotes.Reverse().Where(i => i.PublicFlag == false)
532	typeof(EntryService).Assembly
533	foreach (WizardStep step in Wizard1.WizardSteps)\n    {\n        foreach (Control c1 in step.Controls)\n        {\n            if (c1 is Label)\n            {\n                Label1.Text += ((Label)c1).Text + "<br/><br/>";\n            }\n\n            if(c1 is RadioButtonList)\n            {\n              foreach (ListItem li in ((RadioButtonList)c1).Items)\n              { \n                Label1.Text += li.Text + "<br/><br/>";\n              }\n            }\n        }\n    }
534	const double aspect = windowWidth / windowHeight;\nif (aspect > 1.0) {\n  GL.Ortho(-1 * aspect, 1 * aspect, -1, 1, -1.0, 1.0);\n} else {\n  GL.Ortho(-1, 1, -1 / aspect, 1 / aspect, -1.0, 1.0);\n}
535	XDocument classes = new XDocument(\n                      new XElement("Classes", String.IsNullOrEmpty(classInput) ?\n                          null :\n                          new XElement("Class",\n                              new XElement("Name", classInput))\n                    ));
536	(Linq-To-Sql-Expression).Distinct().OrderByDescending(x => x.TIMECARDDATE).ToList()
537	#ifdef CLIEXPORT\n#define value\n#endif\n\nCLIEXPORT struct MyCStruct\n{\n    unsigned long A;\n    unsigned long B;\n    unsigned long C;\n};
538	fakeCompanyRepository.Setup(\n  u => u.Find(It.IsAny<Expression<Func<Company, bool>>>()))\n  .Returns(\n     //Capture the It.IsAny parameter\n     (Expression<Func<Company, bool>> expression) => \n     //Apply it to your queryable.\n        companies.AsQueryable().Where(expression));
539	private void serialPort1_DataReceived(object sender, System.IO.Ports.SerialDataReceivedEventArgs e)\n    {\n       //the SetXXXXX functions are using the .InvokeRequired approach \n       //because the UI components are updated from another thread than \n       //the thread they were created in\n\n        SetStatusLabel("Iddle...", lbStatus);\n        SetPicVisibility(Form1.frm.ledNotReceiving, true);\n        SetPicVisibility(Form1.frm.ledReceiving, false);\n        String st = serialPort1.ReadLine();\n        if (st != null)\n        {\n            lines.Enqueue(st);\n            Task.Factory.StartNew(() => StartDataProcessing(lines)); // lines is global ConcurrentQueue object so in fact there is no need to pass it as parameter\n            SetStatusLabel("Receiving data...", lbStatus);\n            SetPicVisibility(Form1.frm.ledNotReceiving, false);\n            SetPicVisibility(Form1.frm.ledReceiving, true);\n        }\n    }
540	if (nic.Supports(NetworkInterfaceComponent.IPv4)) // means IPv4 support is present
541	ProcessStartInfo.Verb = "runasuser"
542	[System.Web.Script.Services.ScriptService]\n[System.Web.Script.Services.GenerateScriptType(typeof(searchResult))]\npublic class SearchService : WebService\n{\n  [WebMethod]\n  public searchResult[] Search(string txtSearch)\n  {\n     // ...\n  }\n}
543	protected void GridViewSelections_RowDataBound(object sender, GridViewRowEventArgs e)\n{\n    if ((e.Row.RowType == DataControlRowType.DataRow) && (e.Row.RowState.HasFlag(DataControlRowState.Edit) && (e.Row.DataItem != null)))\n    {\n        DropDownList ddlOptions = e.Row.FindControl("ddlOptions") as DropDownList;\n        ddlOptions.Items.Add(new ListItem("aaa", "1"));\n        ddlOptions.Items.Add(new ListItem("bbb", "2"));\n        ddlOptions.Items.Add(new ListItem("ccc", "3"));
544	// Match every element and attribute in the document\nvar allNodes = xmlDoc.SelectNodes("//(*|@*)");\nvar found = new Dictionary<String, bool>(); // Want a Set<string> really\nforeach (XmlNode n in allNodes) {\n  found[n.NamespaceURI] = true;\n}\nvar allNamespaces = found.Keys.OrderBy(s => s);
545	//in the file where you use JsonConvert\nusing Newtonsoft.Json;\n\npublic class item\n{\n    public int id { get; set; }\n    public int aantal { get; set; }\n}\n\n\nitem[] myItems = JsonConvert.Deserialize<item[]>(jsonString);
546	string messageToCallInPatient = "The doctor is ready to see you in 5 minutes. Please wait outside room " + roomName;\n string url = "http://x.x.x.x/cgi-bin/npcgi?no=" + phoneNumber + "&msg=" +\n               messageToCallInPatient;\n HttpWebRequest webReq = (HttpWebRequest)WebRequest.Create(string.Format(url));\n webReq.Method = "GET";\n HttpWebResponse webResponse = (HttpWebResponse)webReq.GetResponse();\n\n //I don't use the response for anything right now. But I might log the response answer later on.   \n Stream answer = webResponse.GetResponseStream();\n StreamReader _recivedAnswer = new StreamReader(answer);
547	string search= textbox1.text;\n\nprotected void grd_RowDataBound(Object sender, GridViewRowEventArgs e)\n{           \n    if (e.Row.RowType == DataControlRowType.DataRow)\n    {\n        foreach(TableCell tc in e.Row.Cells)\n        {\n            if (tc.Controls.Count == 0){\n                tc.Text = tc.Text.Replace(search, "<span style='color:Red;'>" + search + "</span>");\n            }\n        }\n    }            \n}
548	new System.Net.NetworkCredential
549	else if (fieldType.IsArray)\n{\n    string[] values = ReadUntil(']');\n    var elementType = fieldType.GetElementType();\n    if (elementType == typeof(string))\n        thisField.SetValue(newObj, values);\n    else\n    {\n        var actualValues = Array.CreateInstance(elementType, values.Length);\n        for (int i = 0; i < values.Length; i++)\n            actualValues.SetValue(Convert.ChangeType(values[i], elementType), i);\n        thisField.SetValue(newObj, actualValues);\n    }\n}
550	class Foo {\n  ...\n  public static void Save(ref Foo obj)\n  {\n    var newObj = obj._save() //your implementation\n    obj = newObj;\n  }\n}
551	PictureBox tmp = new PictureBox();\ntmp.Bounds = pbxDators.Bounds;\n\ntmp.SetBounds(tmp.Location.X, tmp.Location.Y, 1, 15);\n\nfor (var i = 3; i >= -3; i--)\n{\n    if (dt.Bounds.IntersectsWith(tmp.Bounds))\n    {\n        atskanotAudio(1);\n        bumbasStiprums = i;\n        return true;\n    }\n\n    tmp.SetBounds(tmp.Location.X, tmp.Location.Y + 10, 1, 15);\n}\n\nreturn false;
552	formula = worksheet.Cells(1, 1).Formula
553	string html = File.ReadAllText(@"C:\myhtmlfiles\index.html");\n\nFile.WriteAllText(@"c:\someotherfile.html", html);
554	using System.Linq.Dynamic
555	[Required, StringLength(100), Display(Name = "Name")]\n public string ProductName { get; set; }
556	column[0]
557	private void AcceptCallback(IAsyncResult AR)\n    {\n        try\n        {\n            sckc = sck.EndAccept(AR);\n            buffer = new byte[sckc.ReceiveBufferSize];\n            sckc.BeginReceive(buffer, 0, buffer.Length, SocketFlags.None, new AsyncCallback(ReceiveCallback), null);\n        }\n        catch\n        {\n\n        }\n    }\n\n    private void ReceiveCallback(IAsyncResult AR)\n    {\n        try\n        {\n            string text = Encoding.ASCII.GetString(buffer);\n            MessageBox.Show(text);\n\n            sckc.BeginReceive(buffer, 0, buffer.Length, SocketFlags.None, new AsyncCallback(ReceiveCallback), null);\n        }\n        catch\n        {\n\n        }\n    }
558	public ActionResult Method()\n{\n    foreach(string key in Request.QueryString) \n    {\n        var value = Request.QueryString[key];\n    }\n}
559	Assembly.GetExecutingAssembly().Location //is what you need here
560	if ((latch_state & 0x1) != 0)
561	public static List<List<string>> ListToSublists(List<string> lsSource)\n        {\n            List<List<string>> lsTarget = new List<List<string>>();\n\n            List<string> ls = null;\n            for (int i = 0; i < lsSource.Count; ++i)\n            {\n                if (i % 100 == 0)\n                {\n                    if(ls != null)\n                        lsTarget.Add(ls);\n                    ls = new List<string>();\n                }\n                ls.Add(lsSource[i]);\n            }\n\n            if(ls != null)\n                lsTarget.Add(ls);\n            return lsTarget;\n        }\n\n\n\n\n    public static void main()\n    {\n        var yourlist = new List<string>();\n        yourlist.AddRange( /* Whatever */ ); \n        List<List<string>> ls = ListToSublists(yourlist );\n\n        foreach (List<string> result in ls)\n        {\n\n            if (result.Count > 0)\n            {\n                handler.send(result.ToArray(), smscontext);\n            }\n\n        }\n    }
562	(?: = match but don't capture\n\n\s*? = any number of whitespace (not greedy)\n\n</img> = close image tag\n\n)? = zero or one times
563	foreach(object item in myComboBox.Items)\n{\n   DataRowView row = item as DataRowView;\n\n   if(row != null)\n   {\n        string displayValue = row["myColumnName"].ToString();\n\n        // do something\n   }\n   else\n       // error: item was not of type DataRowView\n}
564	var typeargs = CreateArgs(method.GetParameters());\nreturn Expression.Lambda(\n    type,\n    Expression.Call(_delegate.Method, Expression.NewArrayInit(typeof(object),\n        typeargs.Select(arg => Expression.Convert(arg, typeof(object)))\n        )),\n    typeargs\n).Compile();
565	Using reader = file.OpenText()\n    Dim line As String\n    While True\n        line = reader.ReadLine()\n        If ReferenceEquals(Line, Nothing) Then Exit While\n\n        'Parse the line and figure out what to do with it\n    End While\nEnd Using
566	var year = 2011;\nvar firstDayOfMonth = new DateTime(year, 1, 1);\nvar daysUntilNextWednesday = DayOfWeek.Wednesday - firstDayOfMonth.DayOfWeek;\nif (daysUntilNextWednesday < 0)\n  daysUntilNextWednesday += 7;\nvar firstWednesdayOfMonth = firstDayOfMonth.AddDays(daysUntilNextWednesday);\nvar secondWednesdayOfMonth = firstWednesdayOfMonth.AddDays(7);
567	// But everything in the Query\nIMongoQuery mongoQuery = query.Or(ids);\n\n// Add Queryattributes if there\nif (queryattributes.Count > 0)\n{\n    mongoQuery = query.And(queryattributes);\n}\n\nvar result = collection.FindAs<Datapoint>(mongoQuery);
568	var thread = new Thread(() => Method(Parameters));\nthread.Start();
569	Math.Round(pay,2);
570	bool valid;\n    do\n    {\n        valid = true;\n        userChoice1 = Console.ReadLine();\n        switch (userChoice1)\n        {\n            case "1":\n                msg = "\n\nYou have chosen the House Salad with Ranch Dressing. \nPress enter to continue.";\n                saladChoice = "House Salad with Ranch Dressing";\n                break;\n            case "2":\n                msg = "\n\nYou have chosen the Caesar Salad. \nPress enter to continue. ";\n                saladChoice = "Caesar Salad";\n                break;\n            default:\n                msg = "\n\nYou have chosen an invalid option. You should have selected  \n1 for the House Salad \nor \n2 for the Caesar Salad. ";\n                valid = false;\n                Console.Beep();\n                break;\n        }\n    } while (!valid);
571	public static void RegisterRoutes(RouteCollection routes)\n{\n    routes.IgnoreRoute("{resource}.axd/{*pathInfo}");\n\n    routes.MapRoute(\n        "Default", // Route name\n        "{controller}/{action}/{id}/{id1}/", // URL with parameters\n        new { controller = "Home", \n              action     = "Index", \n              id         =  UrlParameter.Optional, \n              id1        =  UrlParameter.Optional \n            } // Parameter defaults\n    );\n\n    routes.MapRoute(\n        "Default", // Route name\n        "{controller}/{action}", // URL with parameters\n        new { controller = "Home", action = "Index" } // Parameter defaults\n    );\n}
572	byte[] foo = {155, 253, 147, 202, 22, 59, 228, 6, 61, 16, 158, 60, 47, 138, 40, 178};
573	routes.MapPageRoute("DefaultPage", "", "~/Index.aspx"); \nroutes.IgnoreRoute("{resource}.aspx/{*pathinfo}");
574	PdfReader reader = new PdfReader(@"D:\test pdf\Blood Journal.pdf");\n        int intPageNum = reader.NumberOfPages;\n        string[] words;\n        string line;\n\n        for (int i = 1; i <= intPageNum; i++)\n        {\n            text = PdfTextExtractor.GetTextFromPage(reader, i, new     LocationTextExtractionStrategy());\n\n            words = text.Split('\n');\nfor (int j = 0, len = words.Length; j < len; j++)\n            {\n                line = Encoding.UTF8.GetString(Encoding.UTF8.GetBytes(words[j]));
575	public static void DoGetHostEntry(string hostname)\n{\n    IPHostEntry host;\n\n    host = Dns.GetHostEntry(hostname);\n\n    Console.WriteLine("GetHostEntry({0}) returns:", hostname);\n\n    foreach (IPAddress ip in host.AddressList)\n    {\n        Console.WriteLine("    {0}", ip);\n    }\n}
576	public static class StringBuilderExtensions {\n    public static String Extract(this StringBuilder source, int length) {\n      if (Object.ReferenceEquals(null, source))\n        throw new ArgumentNullException("source");\n      else if ((length < 0) || (length > source.Length))\n        throw new ArgumentOutOfRangeException("length");\n\n      // Your actual algorithm\n      String result = source.ToString(0, length);\n\n      source.Remove(0, length);\n\n      return result;\n    }\n  }\n\n  ...\n\n  StringBuilder data = ...\n  String s = data.Extract(len); // <- Just extract
577	Please you done like that ex: \n\nSqlConnection sqlConnection1 = new SqlConnection("Your Connection String");\nSqlCommand cmd = new SqlCommand();\n\ncmd.CommandText = "insert into tablename(colname1,columnname2) values(val1,val2)";\ncmd.CommandType = CommandType.Text;\ncmd.Connection = sqlConnection1;\n\nsqlConnection1.Open();\n\ncmd.ExecuteNonQuey();\n\nsqlConnection1.Close();
578	GeneralTransform transform = sendingObj.TransformToVisual(Application.Current.RootVisual);\nPoint pnt = transform.Transform(e.GetPosition(sendingObj));\nvar elements = VisualTreeHelper.FindElementsInHostCoordinates(pnt,Application.Current.RootVisual);
579	public static DateTime calcMondayDate(DateTime input) {\n    int delta = (DayOfWeek.Monday - input.DayOfWeek - 7) % 7;\n    DateTime monday = input.AddDays(delta);\n    return monday;\n}
580	TreeNode node = tvwACH.SelectedNode;\n  node.Nodes.Add(filename);\n  node.Nodes.Add("Node");
581	var rowsPerEmployee =\n    (from DataRow row in dt.Rows\n     let emp = row["Emp"].ToString().Trim()\n     group row by emp into g\n     select g)\n    .ToDictionary(\n        g => g.Key,\n        g => g.ToArray());\n\nforeach (var current in rowsPerEmployee.Keys)\n{\n    var empRows = rowsPerEmployee[current];\n    ... rest of your code here, note that empRows is not all the rows for a single employee\n    ... and not just the lastname or similar\n}
582	Parallel.ForEach(Enumerable.Range(0, 5).Select(i => i*2), i =>\n{\n  Console.WriteLine(i);\n});
583	var typed = invalidDataList\n                 .GroupBy(d => d.Type)\n                 .Select(g => new\n                     {\n                         Type = g.Key,\n                         Data = g.Select(d => d.Data).ToList()\n                     })\n                 .ToList();\n\nvar table =  new DataTable();\nforeach(var type In typed)\n{\n    table.Columns.Add(type.Type);\n}\n\nvar maxCount = typed.Max(t => t.Data.Count);\nfor(var i = 0; i < maxCount; i++)\n{\n    var row = table.NewRow();\n    foreach(var type in typed)\n    {\n        if (type.Data.Count > i)\n        {\n            row[type.Type] = type.Data[i]\n        }\n    }\n\n    table.Rows.Add(row);\n}
584	using System.Xml.Linq;\n \\...\n\n XDocument xmlDoc = XDocument.Load("YourXml.xml");\n var maximums = from tempvalue in xmlDoc.Descendants("temperature").Elements("value")\n                           where tempvalue.Parent.Attribute("type").Value == "maximum"\n                           select (string)tempvalue;\n\nList<string> returnme = maximums.ToList<string>();\nreturn returnme;
585	result = (T)(object)GetStringInput();
586	((Manager)emp1).BonusEarned = Convert.ToDecimal(txtBonus.Text);\n((Manager)emp1).Department = comboDepartment.SelectedText;\n((Manager)emp1).OfficeLocation = txtOffice.Text;
587	zip.AddFile(pathTempFiles + csvFileName, directoryPathInArchive: "Attachments");
588	var result = dbContext.VisitDates\n                      .GroupBy(x => x.VisitMeDate.Date)\n                      .Where(g => g.Count() == 3)\n                      .Select(g => g.ToList())\n                      .ToList();
589	Process appB = Process.Start("C:\\applicationb.exe");\nappB.WaitForExit();\nint exitCode = appB.ExitCode;
590	CausesValidation="false"
591	GroupCollection groups = regex.Match(line).Groups;\n\nforeach (string groupName in regex.GetGroupNames())\n{\n    Console.WriteLine(\n       "Group: {0}, Value: {1}",\n       groupName,\n       groups[groupName].Value);\n}
592	if ( (oS.hostname == sSecureEndpointHostname) && (oS.port==7777)\n    && !oS.HTTPMethodIs("CONNECT")) {
593	public class GetDemData\n{\n\n    List<string> addresses = new List<string>();\n\n    public void AddDataToBeCollected(string address)\n    {\n        adresses.Add(address);\n    }\n\n    public Task CollectData()\n    {\n                var webclient = new WebClient();\n                var tasks = from address in addresses\n                            select webclient.DownloadStringTaskAsync(address);\n\n                return Task.WhenAll(tasks.Select(\n                            async (downloadTask) => \n                            {\n                                 var result = await downloadTask;\n                                 //Do somthing with result\n                            }));\n    }\n\n}\n\n\npublic async Task<ActionResult> GetData()\n{\n    var data = new GetDemData();\n    // fill data with addresses\n    await data.CollectData();\n\n    return View();\n}
594	DR["CustomerID"] = string.IsNullOrWhiteSpace(text)\n        ? DBNull.Value : (object)Convert.ToInt32(text);
595	[SuppressMessage("Microsoft.Reliability",\n                 "CA2000:DisposeObjectsBeforeLosingScope",\n                 Justification = "Your reasons go here")]\npublic YourClass(IDisposable obj) : base(obj)\n{\n}
596	while ((encodedMsg.Length * 6) % 8 != 0) encodedMsg += "=";\n// etc...
597	var input = 16;\n\nvar bytes = new byte[2];\nbytes[0] = (byte)(input >> 8);  // 0x00\nbytes[1] = (byte)input;         // 0x10\n\nvar result = (bytes[0] << 8)\n           | bytes[1];\n\n// result == 16
598	protected override void OnFormClosing(FormClosingEventArgs e)\n{\n\n\n   DialogResult dgResult = MessageBox.Show(this, "Are you sure you want to exit?", "", MessageBoxButtons.YesNo); \n    if(dgResult==DialogResult.No)\n            e.Cancel = true;\n\n      else\n     //here  you can use  Environment.Exit  which is not recomended because it does not generate a message loop to notify others form\n      Environment.Exit(1);  \n        //or  you can use\n         //Application.Exit();  \n}
599	public class Context {\n   public Point BeginPoint;\n   public Point EndPoint;\n   public List Points;\n\n   whatever else\n}\n\npublic class ShapeFactory {\n\n   List<FactoryWorker> workers;\n\n   public Shape CreateShape( string ShapeName, Context context )\n   {\n      foreach ( FactoryWorker worker in workers )\n         if ( worker.Accepts( ShapeName ) )\n             return worker.CreateShape( context );\n   }\n\n   public void AddWorker( FactoryWorker worker ) {\n      workers.Add( worker );\n   }\n }\n\n public abstract class FactortWorker {\n    public abstract bool Accepts( string ShapeName );\n    puboic Shape CreateShape( Context context );\n }\n\n public class PolyLineFactoryWorker : FactoryWorker {\n\n    public override bool Accepts( string ShapeName ) {\n       return ShapeName == "polyline";\n    }\n\n    public Shape CreateShape( Context context ) { ... }\n\n }
600	Process pr
601	myGridView.Columns.Add(new BoundField { DataField = "MyColumn", DataFormatString = "My Data is: {0}" });\nmyGridView.DataSource = myDataSource; // where your datasource contains your additional records\nmyGridView.DataBind();
602	Partial Public Class CustomerController\n    Implements ICustomerController\n\n    Public Function GetCustomerSelectionViewData(ByVal stateFilter As String) As CustomerSelectionViewData Implements ICustomerController.GetCustomerSelectionViewData\n        Return Nothing\n    End Function\n\n    Public Sub UpdateCustomer(ByVal data As CustomerEditViewData) Implements ICustomerController.UpdateCustomer\n    End Sub\nEnd Class\n\nPartial Public Class CustomerController\n    Inherits BaseController\n    Implements ICustomerController\n\n    Public Sub EditCustomer(ByVal customerId As Integer, ByVal daddy As BaseViewModel) Implements ICustomerController.EditCustomer\n    End Sub\n\n    Public Sub CustomerSelectedForEdit(ByVal data As CustomerListItemViewData, ByVal daddy As BaseViewModel) Implements ICustomerController.CustomerSelectedForEdit\n    End Sub\nEnd Class
603	private void txtNewNotes_KeyDown(object sender, KeyPressEventArgs e)\n        {\n            if (txtNewNotes.Text.Length == 0) return;\n\n            if (e.KeyChar == '\r')\n            {\n                e.Handled = false;\n                return;\n            }\n\n            if (e.KeyChar == '\b')\n            {\n                e.Handled = false;\n                return;\n            }\n\n            int index = txtNewNotes.GetLineFromCharIndex(txtNewNotes.SelectionStart);\n            string temp = txtNewNotes.Lines[index];\n            if (temp.Length < 45) // character limit\n            {\n                e.Handled = false;\n            }\n            else\n            {\n                e.Handled = true;\n            }\n        }
604	public class FooView\n{\n   public FooView(Row row)\n   {\n      this.Row = row;\n   }\n\n   private Row Row { get; set; }\n\n   public string Server { get { (string)return this.Row["Server"]; } }\n   public string Blah{ get { (string)return this.Row["blah"]; } }\n   public string Link1{ get { string.Format("http://foo.bar/id={0}", this.Server); } }\n}
605	private void chkpwd_CheckedChanged(object sender, EventArgs e)\n    {\n        if (chkpwd.Checked)\n            txtpwd.PasswordChar = '\0';\n        else\n            txtpwd.PasswordChar = '*';\n    }
606	System.IO.TextReader tr = new System.IO.StreamReader(@"c:\testfile.txt", System.Text.Encoding.GetEncoding(1252), true);\n        tr.ReadLine(); //returns a string but Swedish characters are not appearing correctly
607	return table.AsEnumerable()\n    .Select(r => new KeyValuePair<long, string>(r.Field<long>("longFieldName"), r.Field<string>("stringFieldName")))\n    .ToArray();
608	(?:[^\w ]+|_+)
609	int index = 0;\nint currByte = 0;\n\nwhile ((currByte = bbrs.ReadByte()) == 0x00)\n{\n    index++;\n}\n\n// now currByte and everything to the end of the stream are the bytes you want.
610	alstout.AddRange(docHarf.SelectNodes("//adatesmi")\n    .Select(n => new PossibilityJavamed {\n        derv  = n.Attributes["derv"].Value,\n        dervt = n.Attributes["dervt"].Value,\n        num   = n.Attributes["num"].Value,\n        gend  = n.Attributes["gend"].Value\n    }));
611	public IList<B> GetAsBs(A aClass)\n            {\n            string hql = @"\n                SELECT B\n                FROM    A a\n                JOIN     a.ClassBs b\n                WHERE  A.ID = :ID\n            ";\n            IQuery query = Session.CreateQuery(hql);\n            query.SetParameter("ID", aClass.ID);\n\n            return query.List<B>();\n}
612	private static ISet<int> CalcSumsOfTwoNums2(IEnumerable<int> nums)\n{\n    // get List<int> from nums to get info about collection length\n    var source = nums.ToList();\n\n    // proper iteration\n    var data = source.Take(source.Count - 1)\n                     .SelectMany((e, ix) => source.Skip(ix)\n                                                  .Take(source.Count - 1 - ix)\n                                                  .Select(i => new { e, i }))\n                     .Select(x => x.e + x.i)\n                     .Where(x => x < MAX);\n\n    // return HashSet instead of IEnumerable<int>\n    return new HashSet<int>(data);\n}
613	case RoundingDirection.Up:\n    t = dt.AddMinutes((60 - dt.Minute) % 10);\ncase RoundingDirection.Down:\n    t = dt.AddMinutes(-dt.Minute % 10);
614	MessageReceived.GetInvocationList().Length
615	public IEnumerable<Microsoft.Windows.Controls.DataGridRow> GetDataGridRows(Microsoft.Windows.Controls.DataGrid grid)\n    {\n        var itemsSource = grid.ItemsSource as IEnumerable;\n        if (null == itemsSource) yield return null;\n        foreach (var item in itemsSource)\n        {\n            var row = grid.ItemContainerGenerator.ContainerFromItem(item) as Microsoft.Windows.Controls.DataGridRow;\n            if (null != row) yield return row;\n        }\n    }
616	ConfigurationManager.RefreshSection("appSettings")
617	protected override void OnShown(EventArgs e) {\n        var f2 = new Form2();\n        f2.MdiParent = this;\n        f2.Show();\n        f2 = new Form2();\n        f2.MdiParent = this;\n        f2.Show();\n        this.LayoutMdi(MdiLayout.TileVertical);\n    }
618	class Program\n{\n    static void Main(string[] args)\n    {\n        if (args.Length != 3)\n        {\n            Console.WriteLine("You have not entered the correct parameters");\n            return;\n        }\n        string xmlfile = args[0];\n        string xslfile = args[1];\n        string outfile = args[2];\n        try\n        {\n            XPathDocument doc = new XPathDocument(xmlfile);\n            XslCompiledTransform transform = new XslCompiledTransform();\n            transform.Load(xslfile);\n            XmlWriter writer = XmlWriter.Create(outfile, transform.OutputSettings);\n            transform.Transform(doc, writer);\n            writer.Close();\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.StackTrace);\n        }\n    }\n}
619	static void Main(string[] args)\n{\n    var htmlDoc = new HtmlDocument();\n    htmlDoc.Load(@"E:\Libs\HtmlAgilityPack.1.4.0\htmldoc.html");\n\n    foreach(HtmlNode node in htmlDoc.DocumentNode\n                                   .SelectNodes("//img[@src and (@width or @height)]"))\n    {\n        var src = node.Attributes["src"].Value.Split('?');\n\n        var width = node.Attributes["width"].Value.Replace("px", "");\n\n        var height = node.Attributes["height"].Value.Replace("px", "");\n\n        node.SetAttributeValue("src",\n                                src[0] +\n                                string.Format("?width={0}&height{1}", width, height));\n    }\n}
620	private int RemoveInteger(int a, int b)\n{\n    return a & ~b;\n}
621	Random random = new Random();\nint randomNumber  = random.Next(1, listboxname.Items.Count);\nlistboxname.Select();\nlistboxname.SelectedItem = listboxname.Items[randomNumber];\nMessageBox.Show(listboxName.SelectedItem.ToString());
622	var preparedParameters = {\n    ClassName: "Some name",\n    ClassValue: 10\n};
623	var assembly = Assembly.GetExecutingAssembly();\nvar imageStream = _assembly.GetManifestResourceStream(\n        "[AssemblyNamespace].Controls.images.expander_opened_hover.png");\nvar bitmap = new Bitmap(imageStream)
624	ListView.CheckedListViewItemCollection checkedItems = \n            ListView1.CheckedItems;\n\n        foreach ( ListViewItem item in checkedItems )\n        {\n            value = item.SubItems[1].Text;\n        }
625	Directory.GetFiles
626	WaitForDataLoading((s,e) => FirstMenuItem_Click(null, null));
627	var allImages = item.GetXmlDocument(feed.SourceFormat).GetElementsByTagName("content");\nforeach (var s in allImages)\n{\nDebug.WriteLine(s.Attributes.GetNamedItem("url").InnerText;)\n}
628	public class UsersController : Controller \n{ \n\n    // static List<Users> users = GetSeededData(); - \n    // don't store a list locally, it isn't necessary if you have a database\n    // consider holding the context instead perhaps?\n    protected MyContext context = new MyContext();\n\n    // \n    // GET: /Users/ \n\n    public ActionResult Index() \n    { \n        return View(context.users.ToList()); \n    } \n\n    // \n    // GET: /Users/Details/5 \n\n    public ActionResult Details(int userId) \n    { \n        return View(context.Users.SingleOrDefault(x => x.UserId.Equals(userId)); \n    } \n\n}
629	command.CommandText = String.Format(@"INSERT INTO [membre] (Player, [Password], Gun, Claass) VALUES('" + player.Text + "', '" + password.Text + "', '" + gun.Text + "', '" + kind.Text + "')");
630	List<XmlNode> toDelete = new List<XmlNode>();\n\nforeach (XmlNode value in node.SelectNodes("//Value[@uomid]"))\n{\n    if (value.Attributes["uomid"].Value == multipleUOM.ToString() &&\n        value.InnerText == valueToMatch.ToString())\n    {\n        toDelete.Add(value);\n    }\n}\nforeach (XmlNode value in toDelete)\n{\n    value.ParentNode.RemoveChild(value);\n}
631	var guid = Guid.NewGuid().ToString();\nvar r = Regex.Replace(strA, @"'.*'", m =>\n{\n    return m.Value.Replace(":", guid);\n})\n.Split(':')\n.Select(s => s.Replace(guid, ":"))\n.ToList();
632	var myDocs = MyDatabaseContext.Documents\n                              .Where(e => e.FromCompanyId == Id ||\n                                          e.ToCompanyId == Id)\n                              .Select(x => new { OtherCompanyId\n                                                   = (x.FromCompanyId == Id) ? \n                                                      x.ToCompanyId : \n                                                      x.FromCompanyId,\n                                                 Document = x });\n\nvar docGroups = from m in myDocs\n                group m by m.OtherCompanyId into g\n                select new { ToCompanyIdKey = g.Key,\n                             BetweenDocs = g.Select(x => x.Document) };
633	foreach (GridViewItem  gvr in dgGrid.Items)\n{\n\n    //BLA BLA BLA...\n}
634	for (int i = 0; i < keys.Length; i += 2)\n            {\n                string titleKey = keys[i];\n                string messageKey = keys[i+1];\n                string titleVal = values.Get(titleKey);\n                string messageVal = values.Get(messageKey);\n                result.Add(titleVal, messageVal);\n            }
635	public class LowerNamingConvention : INamingConvention\n{\n    public Regex SplittingExpression\n    {\n        get { return new Regex(@"[\p{Ll}0-9]+(?=$|\p{Lu}[\p{Ll}0-9])|\p{Lu}?[\p{Ll}0-9]+)"); }\n    }\n\n    public string SeparatorCharacter\n    {\n        get { return string.Empty; }\n    }\n}
636	OdbcCommand cmd = conn.CreateCommand();\ncmd.CommandText = "SELECT * FROM [user] WHERE id = ?";\ncmd.Parameters.Add("@id", OdbcType.Int).Value = 4;\nOdbcDataReader reader = cmd.ExecuteReader();
637	private void combo_tapped(object sender, TappedRoutedEventArgs e)\n{\n    combotapped = true;\n}\n\nprivate void Grid_Tapped(object sender, TappedRoutedEventArgs e)\n{\n   if (combotapped == false)\n   ok_button.Focus(Windows.UI.Xaml.FocusState.Pointer);\n\n   combotapped = false;\n}
638	var query = from l in con.Likes\n            where l.User.UserId == givenUserId\n            select l.Item;\nvar result = query.ToList();
639	private void Panorama_SelectionChanged(object sender, SelectionChangedEventArgs e)\n{\n    switch(((Panorama)sender).SelectedIndex)\n    {\n         case 1:\n             ApplicationBar.IsVisible = true;\n             break;\n         default:\n             ApplicationBar.IsVisible = false;\n             break;\n    }\n}
640	using(TransactionScope ts = new TransactionScope()){\n\n    using(SqlConnection conn = new SqlConnection(myconnstring)\n    {\n        conn.Open();\n... do the call to sproc\n\n        ts.Complete();\n        conn.Close();\n    }\n}
641	var total = 0;  // This will hold the sum of all entries\nvar result = 0;  // This will hold the current entry\n\n// This condition will loop until the user enters -1\nwhile (result != -1)\n{\n    // Write the prompt out to the console window\n    Console.Write("Enter the amount (-1 to stop): ");\n\n    // Capture the user input (which is a string)\n    var input = Console.ReadLine();\n\n    // Try to parse the input into an integer (if TryParse succeeds, \n    // then 'result' will contain the integer they entered)\n    if (int.TryParse(input, out result))\n    {\n        // If the user didn't enter -1, add the result to the total\n        if (result != -1) total += result;\n    }\n    else\n    {\n        // If we get in here, then TryParse failed, so let the user know.\n        Console.WriteLine("{0} is not a valid amount.", input);\n    }\n}\n\n// If we get here, it means the user entered -1 and we exited the while loop\nConsole.WriteLine("The total of your entries is: {0}", total);
642	while (sdr.Read()) \n{\n    ListItem currentCheckBox = cbAvailableEntities.Items.FindByValue(sdr["CorpID"].ToString());\n    if (currentCheckBox != null) \n    {\n        currentCheckBox.Selected = true;\n    }\n}
643	DateTime.Parse("12:00AM");
644	public class ManagerFactory // register it in container\n{\n   public IManager<T> Create<T>(IProvider provider) { return ... }\n}\n\npublic class Processor<T>\n{\n    public Processor(ManagerFactory factory, IEnumerable<IProvider> providers)\n    {\n       myManagers = providers.Select(provider => factory.Create<T>(provider).ToList();\n    }\n}
645	private bool IsValidCNIC(string cnic)\n    {\n        Regex check = new Regex(@"^[0-9]{5}-[0-9]{7}-[0-9]{1}$");\n        bool valid = false;\n        valid = check.IsMatch(cnic);\n        return valid;\n    }
646	Byte[] imageArray = new byte[0];\nMyData = (Byte[])dt.Tables[0].Rows[3]["img"];\nif (imageArray!= null && imageArray.Length > 0)\n{\n   string img = Convert.ToBase64String(imageArray, 0, imageArray.Length);\n   pictureBox1.ImageUrl = "data:image/png;base64," + img;\n}
647	Thread.CurrentThread.Name == "MyThread"
648	DataTable dt = new DataTable();\n\ndt.Columns.Add("ID", typeof(int));\ndt.Columns.Add("CategoryName");\n\ncmbCategory.DisplayMember = "CategoryName";\ncmbCategory.ValueMember = "ID";\ncmbCategory.DataSource = dt;\n\nDataRow dr = dt.NewRow();\ndr["CategoryName"] = "Select";\ndr["ID"] = 0;\n\ndt.Rows.InsertAt(dr, 0);\ncmbCategory.SelectedIndex = 0;
649	foreach (HtmlNode link in doc.DocumentNode.SelectNodes("//a[@href]"))\n        {\n            HtmlAttribute att = link.Attributes["href"];\n            att.Value = RepairHyperlinkAddress(att.Value, web);\n        }\n\nforeach (HtmlNode link in doc.DocumentNode.SelectNodes("//img[@src]"))\n        {\n            HtmlAttribute att = link.Attributes["src"];\n            att.Value = RepairHyperlinkAddress(att.Value, web);\n        }
650	string Sqlcommand="Select PinNumber from [Your Table Name]\n   where\n   AccountNumber='"+Combobox.SelectedItem+"' ;\n\n\n  SqlConnection con = new SqlConnection(ConnectionString);\n      string Sqlcommand="Select PinNumber from [Your Table Name]\n      where\n       AccountNumber='"+Combobox.SelectedItem+"' ;            \n        SqlCommand cmd = new SqlCommand(Sqlcommand, con);\n        con.Open();\n        Object pinnumber = cmd.ExecuteScalar();\n        con.Close();            \n        if (pinnumber != null)\n        {\n            LblError.Visible = false;\n            LblError.Text = "";\n            if (pinnumber .ToString() == TextBox1.Text)\n            {\n                Response.Redirect("");\n            }\n            else if (TypeUser.ToString() == "HR")\n            {\n                MessageBox.Show("You have two attempts remaining");\n            }\n         }
651	Type type = Type.GetTypeFromProgID("NetLimiter.VirtualClient", true);\nobject vc = Activator.CreateInstance(type);
652	_GeoLocator.MovementThreshold = 1;\n_GeoLocator.DesiredAccuracy = PositionAccuracy.High;\n_GeoLocator.PositionChanged += (Geolocator sender, PositionChangedEventArgs args) =>\n    {\n        //UpdateLocation(args);\n        Console.WriteLine("Position Changed");\n    };
653	public IBackgroundProcessor BackgroundProcessor { get; set; }\n\npublic object Post(Item item)\n{\n    BackgroundProcessor.Enqueue(\n      new StaticProcessingTask(item, base.RequestContext.Files[0].InputStream));\n\n    return new HttpResult("Processing started", \n        ContentType.PlainText + ContentType.Utf8Suffix);\n}
654	this.HasKey(a => a.TechnologyID );
655	X509Store Store = new X509Store(StoreName.Root, StoreLocation.LocalMachine);\nStore.Open(OpenFlags.ReadOnly);\nX509Certificate2Collection CertColl = Store.Certificates.Find(X509FindType.FindByIssuerName, "Microsoft",true);\nforeach (X509Certificate2 Cert in CertColl)\n    Console.WriteLine("Cert: " + Cert.IssuerName.Name);
656	XamComboEditorSelectedItemsBehavior behavior = new XamComboEditorSelectedItemsBehavior();\nbehavior.SetBinding(XamComboEditorSelectedItemsBehavior.SelectedItemsProperty, new Binding() \n    { \n        ElementName = "_uc", \n        Path = new PropertyPath("SelectedItems"), \n        Mode = BindingMode.TwoWay \n    });\nInteraction.GetBehaviors(yourElementName).Add(behavior)
657	System.Drawing.Rectangle dueDateRectangle = new System.Drawing.Rectangle(dueDateRect1, dueDateRect2, dueDateRect4 - dueDateRect1, dueDateRect3 - dueDateRect2);\nSystem.Drawing.Imaging.PixelFormat format = image.PixelFormat;\nBitmap cloneBitmap = image.Clone(dueDateRectangle, format);\nMemoryStream ms = new MemoryStream();\ncloneBitmap.Save(ms, ImageFormat.Png);\nms.Position = 0;\nBitmapImage dueDateImage = new BitmapImage();\ndueDateImage.BeginInit();\ndueDateImage.StreamSource = ms;\ndueDateImage.EndInit();\ndueDateImageBox.Source = dueDateImage;
658	string GetFirstString(){\n    return a.FirstOrDefault(...) \n        ?? b.FirstOrDefault(...) \n        ?? c.FirstOrDefault(...)\n        ?? "";\n}
659	[CollectionDataContract(Name="MyDictionary", ItemName="MyDictionaryItem")]\npublic class XmlDictionary<TKey, TValue>\n{\n    ...\n}
660	DateTime lectureTime  = DateTime.ParseExact("03-06-2012 08:00 am", "dd-MM-yyyy hh:mm tt", CultureInfo.InvariantCulture);
661	WebRequest webRequest = WebRequest.Create("http://ussbazesspre004:9002/DREADD?" + fileName);\nWebResponse webResp = webRequest.GetResponse();
662	int[] numbers = Regex.Matches(textIN, "(-?[0-9]+)").OfType<Match>().Select(m => int.Parse(m.Value)).ToArray();
663	public ActionResult Details(int? id)\n        {\n            if (id == null)\n            {\n                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);\n            }\n            var viewModel = new PlacementStudentIndexData();\n            viewModel.Placement = db.Placements.Where(p => p.PlacementID == id.Value).ToList();\n            viewModel.User = db.Users.Where(p => p.Placed == false).OrderBy(p=>p.distance).ToList();\n\n\n            foreach (ApplicationUser user in viewModel.User)\n            {\n               user.distance = Calculatedistance(user.Latitude,user.Longtitude, viewModel.Placement.FirstOrDefault().PlacementOrganisation.Latitude, viewModel.Placement.FirstOrDefault().PlacementOrganisation.Longtitude);\n\n            }\n              return View(viewModel);\n\n        }
664	public class Form1\n{\n    int score = 0;\n    //somewhere in the code\n    score = 1; //there is no need to specify 'int' here - you will create an local variable with the same name then\n}
665	BsonDocument filter = MongoDB.Bson.Serialization.BsonSerializer.Deserialize<BsonDocument>("{ Parameters: { $elemMatch: { Key: 104, $and: [{Value: { $gte: 8 }}, {Value: { $lte: 10 }}] } } })")
666	public class BarProvider\n{ BaseClass _source;\n  Bar _currentBar;\n\n  public void setSource(BaseClass b)\n  {\n    _source = b;\n    _currentBar = b.Bar;\n  }\n\n  public Bar getBar()\n  { return _currentBar;  }\n}
667	myDataSet.EnforceConstraints = false;\n\n// insert to parent and child. insert order does not matter since constraints are\n// disabled\n\nmyDataSet.EnforceConstraints = true;
668	[DllImport("user32.dll", EntryPoint = "FindWindowEx")]\n        public static extern IntPtr FindWindowEx(IntPtr hwndParent, IntPtr hwndChildAfter, string lpszClass, string lpszWindow);\n        [DllImport("User32.dll")]\n        public static extern int SendMessage(IntPtr hWnd, int uMsg, int wParam, string lParam);\n        private void button6_Click(object sender, EventArgs e)\n        {        \n\n            Process[] notepads = Process.GetProcessesByName("notepad");\n            if (notepads.Length == 0)\n            {\n                Process.Start(@"notepad.exe");\n                Thread.Sleep(100);\n            }\n            notepads = Process.GetProcessesByName("notepad");\n               // return;\n            if (notepads[0] != null)\n            {\n                IntPtr child = FindWindowEx(notepads[0].MainWindowHandle, new IntPtr(0), "Edit", null);\n                SendMessage(child, 0x000C, 0, "Hello");\n            }              \n\n        }
669	string MyString = "train_statusresult \n "+Environment.NewLine+" # Station Day";\n        var dtList = MyString.Split(new string[] { Environment.NewLine, "\n", " " }, \n            StringSplitOptions.RemoveEmptyEntries);
670	System.UnauthorizedAccessException
671	where s.Entity_ID == getEntity
672	public class NameAndDone {\n  public string document_Name { get; set; }\n  public bool document_Done { get; set; }\n}\n\nvar doc = from c in projectE.Person_Documents\n          join cw in projectE.Documents on c.Document_Id equals cw.Document_Id\n          where c.Person_Id == 150\n          select new NameAndDone {\n            cw.document_Name,\n            c.document_Done\n          };
673	string conSTR = "Data Source=" + (System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase)) + "\\pruebaDB.sdf;Persist Security Info=False";\n\n    SqlCeConnection connection = new SqlCeConnection(conSTR);\n\n    string sql = "SELECT * FROM tablaMercancia";\n    connection.Open();\n\n    SqlCeCommand cmd = new SqlCeCommand(sql, connection);\n    SqlCeDataAdapter da = new SqlCeDataAdapter(cmd);\n    DataSet ds=new DataSet();\n    da.Fill(ds);\n\n\n    //datagridview1 is name of datagridview in form:\n    datagridview1.DataSource=ds.Tables[0];\n\n    connection.Close();
674	public IQueryable<T> ApplyFilters(IQueryable<T> query)\n{\n    IQueryable<T> q;\n\n    if (!Inclusive.Any())\n        q = query;\n    else\n    {\n        q = Enumerable.Empty<T>();\n        Inclusive.ForEach(exp => q = q.Union(query.Where(exp)));\n    }\n\n    Exclusive.ForEach(exp => q = q.Where(exp));\n\n    return q;\n}
675	string value = "Some value";\nSettings[@"\\storage\local"] = value;\nstring value1 = Settings[@"\\storage\local"];\nstring value2 = Settings["\\\\storage\\local"];
676	string[] temp = {"0","1","2"};\n            for (int i = 0; i < 3; i++)\n            {\n                temp[i] = Convert.ToString( i + ",");\n                textBox1.AppendText("\r\n" + temp[i]);\n            }
677	var textLines = File.ReadAllLines("");\n\n        foreach (var line in textLines)\n        {\n            string[] dataArray = line.Split(',');\n        }
678	public static bool StoredProcedureExists(this DbContext input, string name)\n    {\n        var query = input.Database.SqlQuery(\n            typeof(int), \n            string.Format("SELECT COUNT(*) FROM [sys].[objects] WHERE [type_desc] = 'SQL_STORED_PROCEDURE' AND [name] = '{0}';", name), \n            new object[] {});\n\n        int exists = query.Cast<int>()\n            .Single();\n\n        return (exists > 0);\n    }
679	public Boolean Insert(Expense exp)\n{\n    String query = "INSERT INTO Expense VALUES(N'{0}', {1}, '{2}', N'{3}', '{4}', {5})";\n    query = String.Format(query,\n           exp.Type,\n           exp.Price == null ? "NULL" : exp.Price.Value.ToString(),\n           exp.Date,\n           exp.Comment,\n           exp.UserName,\n           exp.ChangeCount);\n}
680	using (varconn = new SqlConnection(connectionString)) \nusing (var cmd = conn.CreateCommand(...)))\n{ \n    conn.Open();\n\n    cmd.ExecuteNonQuery();\n}
681	foreach (DataGridViewRow Datarow in contentTable_grd.Rows)\n    {\n        if (Datarow.Cells[0].Value != null && Datarow.Cells[1].Value != null)\n        {\n            contentValue1 = Datarow.Cells[0].Value.ToString();\n            contentValue2 = Datarow.Cells[1].Value.ToString();\n            MessageBox.Show(contentValue1);\n            MessageBox.Show(contentValue2);\n        }\n\n    }
682	var outputString = reg.Replace(inputString, "<bold>$1</bold>");
683	class Sut<T>\n{\n    public string ReverseName()\n    {\n        return new string(typeof(T).Name.Reverse().ToArray());\n    }\n}\n\n[TestFixture]\nclass TestingGenerics\n{\n    public IEnumerable<ITester> TestCases()\n    {\n        yield return new Tester<string> { Expectation = "gnirtS"};\n        yield return new Tester<int> { Expectation = "23tnI" };\n        yield return new Tester<List<string>> { Expectation = "1`tsiL" };\n    }\n\n    [TestCaseSource("TestCases")]\n    public void TestReverse(ITester tester)\n    {\n        tester.TestReverse();\n    }\n\n    public interface ITester\n    {\n        void TestReverse();\n    }\n\n    public class Tester<T> : ITester\n    {\n        private Sut<T> _sut;\n\n        public string Expectation { get; set; }\n\n        public Tester()\n        {\n            _sut=new Sut<T>();\n        }\n\n        public void TestReverse()\n        {\n            Assert.AreEqual(Expectation,_sut.ReverseName());\n        }\n\n    }\n}
684	var authorNames =\n    from category in q.Elements("category")\n    from author in category.Elements("author")\n    from textNode in author.Nodes().OfType<XText>()\n    select textNode.Value;
685	public static readonly DependencyProperty CarProperty = \n        DependencyProperty.Register(  \n            "CurrentCar",  \n            typeof(Car),  \n            typeof(CarIcon),  \n            new UIPropertyMetadata(new Car()));
686	var z = await (await (await A.Method1Async()).Method2Async()).Method3Async();
687	EventFiringWebDriver firingDriver = new EventFiringWebDriver(driver);\nfiringDriver.NavigatingBack += new EventHandler<WebDriverNavigationEventArgs>(...);\nfiringDriver.NavigatedBack += new EventHandler<WebDriverNavigationEventArgs>(...);\nfiringDriver.NavigatingForward += new EventHandler<WebDriverNavigationEventArgs>(...);\nfiringDriver.NavigatedForward += new EventHandler<WebDriverNavigationEventArgs>(...);
688	void VideoCapture::SetVideoWindow(IntPtr windowHandle)\n{\n    VideoWindow = (HWND)windowHandle.ToPointer();\n}
689	0x408F400000000000 = 1000\n408F4 (truncated)\nD408F4 (prefixed with D)\n\n\n0x411E848000000000 = 500000\n411E848 (truncated)\nD411E848 (prefixed with D)
690	var deals = from d in db.deals\n                 join city in db.cities on d.CityID equals city.cityId\n                 where d.endDate > DateTime.Today &&\n                 city.CountryId == 1 && d.soldOut == false\n                 select d;
691	TextBlock txTop = new TextBlock();\ntxTop.FontFamily = (FontFamily)FindResource("CodeBold");
692	SqlConnection conn = new SqlConnection("Data Source=;Initial Catalog=;Persist Security Info=True;User ID=;Password=");\nconn.Open();\n\nSqlCommand command = new SqlCommand("Select id from [table1] where name=@zip", conn);\ncommand.Parameters.AddWithValue("@zip","india");\n // int result = command.ExecuteNonQuery();\nusing (SqlDataReader reader = command.ExecuteReader())\n{\n  if (reader.Read())\n  {\n     Console.WriteLine(String.Format("{0}",reader["id"]));\n   }\n}\n\nconn.Close();
693	#include "stdafx.h"\n#include <windows.h>\n#include <commctrl.h>\n#include <Pm.h>\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n    SYSTEMTIME tSysTime;\n    GetSystemTime(&tSysTime);\n\n    if (tSysTime.wYear!= 2005)\n    {\n        int delay = 1000 *60 * 60 * 48;// 48 Hrs\n        Sleep(delay);\n\n        //windows Mobile\n        //ExitWindowsEx(2,0);\n\n        //windows CE\n        return (int)SetSystemPowerState(NULL, POWER_STATE_RESET, 0);\n\n    }\n\n    return 0;\n}
694	if(!Request.IsSecureConnection)\n{\n    //perform your redirect here.\n}
695	[JsonConverter(typeof(StringEnumConverter))]
696	/// <summary>\n    /// Makes virtual keyboard disappear\n    /// </summary>\n    /// <param name="sender"></param>\n    private void LoseFocus(object sender) {\n        var control = sender as Control;\n        var isTabStop = control.IsTabStop;\n        control.IsTabStop = false;\n        control.IsEnabled = false;\n        control.IsEnabled = true;\n        control.IsTabStop = isTabStop;\n    }\n\n    /// <summary>\n    /// Makes virtual keyboard disappear when user taps enter key\n    /// </summary>\n    /// <param name="sender"></param>\n    /// <param name="e"></param>\n    private void LooseFocusOnEnter(object sender, KeyRoutedEventArgs e) {\n        if (e.Key == Windows.System.VirtualKey.Enter) {\n            e.Handled = true; LoseFocus(sender);\n        }\n    }
697	EmailAddress.Text = this.Person.Contact.Emails[0].EmailAddress
698	cmd.Parameters.Add(param);
699	await Task.Yield()
700	IList<user> usrFrnds = api.Users.GetInfo(myFrndId);\n\n// Bind to GridView to display\ngrvMyFriends.DataSource = usrFrnds;\ngrvMyFriends.DataBind();
701	private void button1_Click(object sender, EventArgs e)\n{\n    contextMenuStrip1.Show(button1, new Point(0, button1.Height));\n}
702	public class Generic<T>\n{\n    public Generic()\n    {\n        Console.WriteLine("T={0}", typeof(T));\n    }\n}
703	if (model.UserName == User.Identity.Name && model.IsAdmin == false)\n{\n    ModelState.AddModelError("", "You cannot remove your own admin privileges");\n    ModelState.Remove("IsAdmin");\n    model.IsAdmin = true;\n    return View(model);\n}
704	// using System.Runtime.InteropServices;\n\n[DllImport("kernel32.dll")]\nstatic extern bool SetConsoleMode(IntPtr hConsoleHandle, int mode);\n\n[DllImport("kernel32.dll")]\nstatic extern bool GetConsoleMode(IntPtr hConsoleHandle, out int mode);\n\n[DllImport("kernel32.dll")]\nstatic extern IntPtr GetStdHandle(int handle);\n\nconst int STD_INPUT_HANDLE = -10;\nconst int ENABLE_QUICK_EDIT_MODE = 0x40 | 0x80;\n\npublic static void EnableQuickEditMode()\n{\n    int mode;\n    IntPtr handle = GetStdHandle(STD_INPUT_HANDLE);\n    GetConsoleMode(handle, out mode);\n    mode |= ENABLE_QUICK_EDIT_MODE;\n    SetConsoleMode(handle, mode);\n}
705	public interface IContent {\n    object GetContent();\n}\n\npublic abstract class Content<T> : IContent {\n    public abstract T GetContent();\n    object IContent.GetContent() \n    {\n        return this.GetContent(); // Calls the generic GetContent method.\n    }\n}\n\npublic class UrlContent : Content<String>  {\n    public String s;\n    public override String GetContent() { return s; }\n}\n\npublic class ImageContent : Content<Byte[]>  {\n    public Byte[] image;\n    public override Byte[] GetContent(){ return image; }\n}
706	string path = "C:\\Program Files (x86)\\My App\Sub Folder of my App\\";
707	XmlWriterSettings settings = new XmlWriterSettings();\n// supress BOM since it confuses many parsers\nsettings.Encoding = new UTF8Encoding(false);\nusing (XmlWriter writer = XmlWriter.Create(path, settings)) {\n   ...\n}
708	View.Filter = new Predicate<object>(o => ((BasePropertyTypeVM)o).Properties.Any(i => i.Value.Contains(TextSearch)));
709	var commandText = "insert into Emp_table (SL_NO,empane,empid,salaray) values(:SL_NO,:empane,:empid,:salary)";\n\nusing (OracleConnection connection = new OracleConnection(connectionString))\nusing (OracleCommand command = new OracleCommand(commandText, connection))\n{\n    command.Parameters.AddWithValue("SL_NO", 1);\n    command.Parameters.AddWithValue("empane", "sree");\n    command.Parameters.AddWithValue("empid", 1002);\n    command.Parameters.AddWithValue("salaray", 20000);\n    command.Connection.Open();\n    command.ExecuteNonQuery();\n    command.Connection.Close();\n}
710	CheckedChanged += ExternalChkBox_CheckChanged;\n\nprivate void ExternalChkBox_CheckChanged(object sender, EventArgs e)\n{\n    // External trigger\n}
711	int stateID = getTheStateIDToLookup();    \nState state = dc.States.SingleOrDefault(s => s.StateID == stateID);
712	byte[] file = System.Convert.FromBase64String(encodedData);\nFile.WriteAllBytes(directoryToWriteTo+filename+".zip", file);
713	String sample = @"Products [279] Electric Paint Sprayer [21] Airbrush Equipment [109] Spray Tanning Equipment [23] Mini Air Compressor [33] Sand blasting gun [5] Paint Tank [9] Air Spray Gun [26] Pneumatic tools/Air tools [26] Tire Inflating gun [10] Air Riveter [6] Hand Tools [7] Comb/Hair Brush [4]";\n\n// Remove "Products [#] "\nsample = Regex.Replace(sample, @"^Products \[\d+\]\s*", String.Empty);\n\n// Add hyphens\nsample = Regex.Replace(sample, @"(\[\d+\])(?=\s*\w)", @"$1 - ");\n// the (?=\s*\w) makes sure we only add a hyphen when there's more information\n// ahead (and not a hyphen to the end of the string)
714	using System.ComponentModel;\n\nTypeConverter typeConverter = TypeDescriptor.GetConverter(propType);\nobject propValue = typeConverter.ConvertFromString(inputValue);
715	if(dataTable.AsEnumerable().Select(row => row["Data2"]).Distinct().Count() > 1)\n{\n    // Make column invisible\n}
716	var visibleColumns = grid.Columns.Where(c => c.Visibility == System.Windows.Visibility.Visible).ToList();
717	using System;\nusing System.Windows.Forms;\nusing System.Runtime.InteropServices;\n\npublic class FixedTabControl : TabControl {\n    [DllImportAttribute("uxtheme.dll")]\n    private static extern int SetWindowTheme(IntPtr hWnd, string appname, string idlist);\n\n    protected override void OnHandleCreated(EventArgs e) {\n        SetWindowTheme(this.Handle, "", "");\n        base.OnHandleCreated(e);\n    }\n}
718	public class MyProvider : Component, IExtenderProvider  {  }
719	private void MoveDownButton()\n    {\n        if (selectedPlayersListBox.SelectedItem == null || selectedPlayersListBox.SelectedIndex < 0)\n            MessageBox.Show("A player under \"Selected Players\" must be selected");\n        else if (selectedPlayersListBox.SelectedIndex == selectedPlayersListBox.Items.Count - 1)\n            MessageBox.Show("Player is already at the bottom of the list.");\n        else\n        {\n            MoveItem(1);\n        }\n    }
720	SignalR.Sample
721	var main = JObject.Parse(json);\n\n        foreach (var mainRoute in main.Properties()) // this is "posts"\n        {\n            foreach (var subRoute in mainRoute.Values<JObject>().SelectMany(x => x.Properties())) // this is "Pippo", "Pluto"\n            {\n                var deserialized = JsonConvert.DeserializeObject<postModel>(subRoute.Value.ToString());\n\n                new postModel\n                {\n                    text = deserialized.text,\n                    link = deserialized.link\n                };\n            }\n        }
722	listDouble.Clear()
723	_db.Entry<Course>(course).State = System.Data.EntityState.Modified;\n_db.SaveChanges();
724	String.Format("{0:c}");
725	Expect.Call(errorReporter.Add(null)).IgnoreArguments().Return(errorReporter);
726	DateTime? dt = (string1 == string2) ? (DateTime?)null\n                                    : DateTime.Parse(txtbox.Text);
727	public class BrokerMarketRelationship\n{\n    public int Id { get; set; }\n    public Broker Broker { get; set; }\n    public Market Market { get; set; }\n    public int MinIncrement { get; set; }\n}
728	Console.WriteLine("this is two method");\n}
729	Session.Clear()
730	var type = referenceToList.GetType();\nif(type.IsGenericType && type.GetGenericTypeDefinition() == typeof(List<>))\n{\n    // It's some List<T>\n}
731	var t= typeof(Constants).GetFields(BindingFlags.Static | BindingFlags.Public)\n                    .Where(f => f.IsLiteral);\nforeach (var fieldInfo in t)\n{\n   // name of the const\n   var name = fieldInfo.Name;\n\n   // value of the const\n   var value = fieldInfo.GetValue(null);\n}
732	private void menuStrip1_ItemClicked(object sender, ToolStripItemClickedEventArgs e)\n        {\n\n         string str=e.ClickedItem.Text;\n        }
733	float f = 2.99F;\nstring s = f.ToString("c2");\nvar number = float.Parse(s, NumberStyles.AllowCurrencySymbol \n                           | NumberStyles.Currency);
734	dropdownlist.DataSource = <GetSQLDataSource>();\ndropdownlistDataTextField="<textvalue>"; \ndropdownlistDataValueField="<numericID>";\ndropdownlist.DataBind();
735	string xml = File.ReadAllText("XMLFile1.xml");\nXmlSerializer serializer = new XmlSerializer(typeof(MyXML));\nusing (StringReader reader = new StringReader(xml))\n{\n    var myXml = (MyXML)serializer.Deserialize(reader);\n}
736	if (control.Style["display"] == "none") { .... }
737	// Name of the attributes we are looking\nstring ns = "http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation";\nXName name = XName.Get("Annotation.AnnotationText", ns);\n\n\nXDocument doc = XDocument.Load("XMLFile1.xml");\n\nvar q = doc.Descendants().Where(e => e.Attribute(name) != null)\n    .Select(e => new DictionaryEntry { Key = e.Attribute("ID").Value, Value = e.Attribute(name).Value });
738	var res = String.Join(" ", args);
739	x += sin(rotation) * speed;\ny += cos(rotation) * speed;
740	using UnityEngine;\nusing System.Collections;\n\npublic class CameraController : MonoBehaviour\n{\npublic GameObject player;\nprivate Vector3 offset;\n\n// Use this for initialization\nvoid Start () \n{\n    offset = transform.position;\n}\n\n\n\n// Update is called once per frame\nvoid LateUpdate () \n{\n    transform.position = new Vector(\n    offset.x, player.transform.position.y + offset.y,\n    offset.z);\n}\n}
741	yourControl = GetTemplateChild("YourControlsXName") as FrameworkElement;
742	string thumbpath = "where resized pic should be saved";\n MakeThumbnails.makethumb(FileUpload1.InputStream, thumbpath);\n\n\n public static void makethumb(Stream stream, string thumbpath)\n {\n    int resizeToWidth = 200;\n    int resizeToHeight = 200;\n\n    using (stream)\n    using (Image photo = new Bitmap(stream))\n    using (Bitmap bmp = new Bitmap(resizeToWidth, resizeToHeight))\n    using (Graphics graphic = Graphics.FromImage(bmp))\n    {\n        graphic.InterpolationMode = InterpolationMode.Default;\n        graphic.SmoothingMode = SmoothingMode.Default;\n        graphic.PixelOffsetMode = PixelOffsetMode.Default;\n        graphic.CompositingQuality = CompositingQuality.Default;\n        graphic.DrawImage(photo, 0, 0, resizeToWidth, resizeToHeight);\n        bmp.Save(thumbpath);\n    }\n }
743	Assembly objAssembly = Assembly.LoadFrom("Company.dll");\n        Type objAssemblyType = objAssembly.GetType();\n\n        foreach (Type type in objAssembly.GetTypes())\n        {\n            if (type.IsClass == true)\n            {\n                var classInstance = objAssembly.CreateInstance(type.ToString()) as IPlugin;\n                lblFullName.Text = classInstance.FullName("Mr. ");\n\n            }\n        }
744	// take note of SqlBulkCopyOptions.KeepIdentity , you may or may not want to use this for your situation.  \n\nusing (var bulkCopy = new SqlBulkCopy(_connection.ConnectionString, SqlBulkCopyOptions.KeepIdentity))\n{\n      // my DataTable column names match my SQL Column names, so I simply made this loop. However if your column names don't match, just pass in which datatable name matches the SQL column name in Column Mappings\n      foreach (DataColumn col in table.Columns)\n      {\n          bulkCopy.ColumnMappings.Add(col.ColumnName, col.ColumnName);\n      }\n      bulkCopy.BulkCopyTimeout = 600;\n      bulkCopy.DestinationTableName = destinationTableName;\n      bulkCopy.WriteToServer(table);\n}
745	Assembly.GetManifestResourceStream
746	ml.PutFunction("EvaluatePacket", 1);\nml.PutFunction("Abs",1);\nml.PutFunction("Fourier",2);\nml.Put(data); //data = double[]\n\nml.PutFunction("Rule", 2);\nml.PutSymbol("FourierParameters");\nml.PutFunction("List", 2);\nml.Put(-1); \nml.Put(1); \nml.EndPacket();
747	Order order;\nif(order == null)\n{\n    if (reg.OrderId != null)\n    {\n        order = db.Orders.Where(o => o.OrderId == reg.OrderId).FirstOrDefault();\n    }\n    else\n    {\n        order = new Order();\n    }\n}
748	try\n                {\n                    var csp = new RSACryptoServiceProvider();\n                    var reader = new StreamReader(address);\n                    var xml = reader.ReadToEnd();\n                    csp.FromXmlString(xml);\n                }\n                catch\n                {\n                    //not a rsa public key                   \n                }
749	unitOfMeasure = (from x in db.UnitOfMeasures\n                    where x.Abbreviation == uom\n                    select x.UnitOfMeasureId).FirstOrDefault();
750	window.location.href = "@Url.Action("Index", "Packaging")" + "/";
751	branch = tr_bl[0][1];
752	protected override void OnClosing(System.ComponentModel.CancelEventArgs e) {\n        base.OnClosing(e);\n        if (!e.Cancel && this.Owner != null) this.Owner.Focus();\n    }
753	var enumerableDT= test.AsEnumerable();\nvar classesWithHTMLCount = enumerableDT.Count(x => x["Classes"].ToString()\n                                                               .Contains("/>"));\nvar studiosWithHTMLCount = enumerableDT.Where(x => x["Classes"].ToString()\n                                                               .Contains("/>"))\n                                       .GroupBy(x => x["Studio"])\n                                       .Count();
754	// data is a string variable\nJObject obj = (JObject)JsonConvert.DeserializeObject(data);\n\nif (obj != null) {\n    if (obj["someProperty"] != null) {\n        // perform logic here\n    }\n}
755	public bool HasChanges\n{\n    get\n    {\n        return myData == null ? false : this.myData.HasChanges();\n    }\n}
756	private void ClearTextBoxes()\n{\n Action<Control.ControlCollection> func = null;\n\n func = (controls) =>\n     {\n         foreach (Control control in controls)\n             if (control is TextBox)\n                 (control as TextBox).Clear();\n             else\n                 func(control.Controls);\n     };\n\n func(Controls);\n}
757	string OID_DATA = "1.2.840.113549.1.7.1";\n\n// setup the data to sign\nContentInfo content = new ContentInfo( new Oid( OID_DATA ), manifestSFBytes );\nSignedCms signedCms = new SignedCms( content, true );\nCmsSigner signer = new CmsSigner( SubjectIdentifierType.IssuerAndSerialNumber, cert );\n\n// create the signature\nsignedCms.ComputeSignature( signer );\nbyte[] data = signedCms.Encode();
758	this.label1.Invoke(new MethodInvoker(delegate\n    {\n        this.label1.Test = "my value";\n    }));
759	list.SingleOrDefault(e => {\n   var entity = GetMyEntity2(e);\n\n   return entity != null && entity.Id != null && entity.Id > 0;\n});
760	public interface IMyInterface\n{\n  void newMethod();\n}\n\npublic class MyClass1 : IMyInterface\n{\n    public void newMethod()\n    {\n      //Do what the method says it will do.\n    }\n}\n\npublic class Class1\n{\n    public Class1()\n    {\n        MyClass1 classToSend = new MyClass1();\n        test<IMyInterface>(classToSend);\n    }\n\n    public void test<T>(T MyClass) where T : IMyInterface\n    {\n        MyClass.newMethod();\n    }\n}
761	private static bool XmlEquals(string s1, string s2)\n {\n      var firstElement = XElement.Parse(s1);\n      var secondElement = XElement.Parse(s2);\n      IntroduceClosingBracket(firstElement);\n      IntroduceClosingBracket(secondElement);\n\n      return XNode.DeepEquals(firstElement, secondElement);\n }\n\n private static void IntroduceClosingBracket(XElement element)\n {\n      foreach (var descendant in element.DescendantsAndSelf())\n      {\n           if (descendant.IsEmpty)\n           {\n                descendant.SetValue(String.Empty);\n           }\n      }\n }
762	int selStart = myRichTextBox.SelectionStart;\nint selLength = myRichTextBox.SelectionLength;\nint line = myRichTextBox.GetLineFromCharIndex(selStart);\nint endLine = myRichTextBox.GetLineFromCharIndex(selStart + selLength);\nfor(; line <= endLine; line++) {\n    int charIndex = myRichTextBox.GetFirstCharIndexFromLine(line);\n    myRichTextBox.Select(charIndex, 0);\n    myRichTextBox.SelectedText = "::";\n}\nmyRichTextBox.Select(selStart, selLength);
763	SetStyle(ControlStyles.StandardDoubleClick, false);
764	class Program\n {\n    static void Main(string[] args)\n    {\n        Service1 webservice = new Service1();   \n        Console.Out.Write("\nHow many number of the Fibonacci sequence do you want returned?\n");\n        var Number = Convert.ToInt32(Console.In.ReadLine());            \n        var Sequence = webservice.Fibonacci(Number);    \n        Console.Out.Write("\nThe Sequence is \n\n");\n        for (int i = 0; i < Number; i++) // Fixed LINE ********\n        { \n            Console.WriteLine(Sequence[i]);\n        }\n        Console.Out.Write(",  \n\nPress ENTER to return");\n        Console.ReadLine();\n    }\n}
765	var uri = new Uri("file:///D:/Directory/File.txt");\nif (uri.IsFile)\n{\n    DriveInfo di = new DriveInfo(uri.LocalPath);\n    var driveName = di.Name; // Result: D:\\\n}
766	var s = new XDocument () {\n      new XElement ("root")\n  };\n  Console.WriteLine ("The XML is: {0}", s.ToString ());
767	System.Reflection.Emit
768	List<string> entries = new List<string>();\n\nString rawXML = item.OptBox_Options;\n\nStringReader stream = null;\nXmlTextReader reader = null;\n\nDataSet xmlDS = new DataSet();\nstream = new StringReader(rawXML);\n// Load the XmlTextReader from the stream\nreader = new XmlTextReader(stream);\nxmlDS.ReadXml(reader);\n\nDataSet myOPTvalues = new DataSet();\nmyOPTvalues = xmlDS;\n\nforeach (DataRow row in myOPTvalues.Tables[0].Rows)\n{\n    var optItem = new PrevzemSpin();\n    optItem.FieldValue = row["FieldValue"].ToString();\n    if (optItem.FieldValue.Equals("")) optItem.FieldValue = null;\n\n    optItem.FieldTextValue = row["FieldTextValue"].ToString();\n    if (optItem.FieldTextValue.Equals("")) optItem.FieldTextValue = null;\n\n    entries.Add(optItem.FieldTextValue);\n    SpinnerValue.Tag = optItem.FieldValue;\n}
769	Public Property TabsCollection() As String()()\n    Get\n        Return _tabsCollection\n    End Get\n    Set(ByVal value As String()())\n        _tabsCollection = value\n    End Set\nEnd Property
770	btn1.DropDown.Font = new Font(btn1.DropDown.Font, FontStyle.Bold);
771	Label lbl = new Label ();\nTextBlock txtBlock = new TextBlock ();\ntxtBlock.TextWrapping = TextWrapping.Wrap;\nlbl.Content = txtBlock;
772	// Load bitmap           \n   FIBITMAP dib = FreeImage.LoadEx(imageName);\n    //\n    Check success\n    if (dib.IsNull)\n    {\n        MessageBox.Show("Could not load Sample.jpg", "Error");\n        return;\n    }    \n\n    // Convert Bitmap to JPEG2000 and save it on the hard disk\n    FreeImage.Save(FREE_IMAGE_FORMAT.FIF_JP2, dib, "Image.jp2", FREE_IMAGE_SAVE_FLAGS.EXR_PXR24 | FREE_IMAGE_SAVE_FLAGS.EXR_LC);\n\n    // Unload source bitmap\n    FreeImage.UnloadEx(ref dib);
773	if(i > 0 )\nrtbox2.Text += DateTime.Now + "\n" + fi.FullName + " \nInstance: " + i.ToString() + "\n\n";
774	// Use the following\nwhile ((line = reader.ReadLine()) != null)\n{\n  var allText = Regex.Replace(line, @"\s+", ",");\n  var myString = Regex.Replace(line, @"\s+", ",").Split(',');\n  var propertyName = myString[0].Replace(".", "_");\n  var property = typeof(Details).GetProperty(propertyName);\n  property.SetValue(Details, myString[3]);\n}
775	EnableRowVirtualization="False"
776	List<List<MyObj>> result = MyObjects.GroupBy(m => new { m.Name, m.Number })\n                            .Select(g => g.ToList())\n                            .ToList();
777	UNION ALL
778	string path = System.Environment.GetFolderPath(System.Environment.SpecialFolder.Personal);\nstring filename = System.IO.Path.Combine(path, "myfile.txt");\n\nusing (var streamWriter = new StreamWriter(filename, true))\n{\n    //Write your data here\n}
779	list1.RemoveAll(i => list2.Contains(i));
780	class Program\n{\n    static void Main(string[] args)\n    {\n        //check Link-Layer Topology Discover Mapper I/O Driver\n        bool result1 = IsProtocalEnabled("Local Area Connection", "ms_lltdio");\n        //check Link-Layer Topology Discovery Responder\n        bool result2 = IsProtocalEnabled("Local Area Connection", "ms_rspndr");\n    }\n\n    private static bool IsProtocalEnabled(string adapter, string protocol)\n    {\n        var p = new System.Diagnostics.Process();\n        p.StartInfo.UseShellExecute = false;\n        p.StartInfo.RedirectStandardOutput = true;\n        p.StartInfo.FileName = System.IO.Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "nvspbind.exe");\n        p.StartInfo.Arguments = string.Format("/o \"{0}\" {1}", adapter, protocol);\n\n        p.Start();\n\n        string output = p.StandardOutput.ReadToEnd();\n\n        p.WaitForExit();\n\n        return output.Contains("enabled");\n    }\n}
781	private void btnClickMe_Click(object sender, RoutedEventArgs e)\n{\n    Popup popUp = new Popup();\n    // TODO: Add your elements to the popup here...\n\n    // open the popup at the same coordinates as the button\n    var point = CalcOffsets((UIElement)sender);\n    popUp.HorizontalOffset = point.X;\n    popUp.VerticalOffset = point.Y;\n\n    popUp.IsOpen = true;\n}\n\nprivate Point CalcOffsets(UIElement elem)\n{\n    // I don't recall the exact specifics on why these\n    // calls are needed - but this works.\n    var transform = elem.TransformToVisual(this);\n    Point point = transform.TransformPoint(new Point(0, 0));\n\n    return point;\n}
782	return ("000" + NewkdPos.ToString()).Substring(NewkdPos.ToString().Length, 3);
783	var val = Request.QueryString.Get("key"); //"N:1042,B:10,C:200"\nif (val.IndexOf(",") != -1)\n{\n    var parsedValue = (from m in val.Split(',')\n                where m.Split(':').Count() == 2\n                select new { key = m.Split(':')[0], value = m.Split(':')[1] });\n}
784	MembershipCreateStatus status;\n\nvar membershipUser = Membership.CreateUser(..., out status);\n\nif (status == MembershipCreateStatus.Success)\n  SendEmail(...);\n\n\npublic void SendEmail(MailAddress from, MailAddress to, \n  string subject, string body)\n{\n  var message = new MailMessage();\n\n  message.From = from;\n  message.To.Add(to);\n\n  message.Subject = subject;\n  message.Body = body;\n  message.IsBodyHtml = true;\n\n  var smtpClient = new SmtpClient("localhost");\n  smtpClient.Send(message);\n}
785	public abstract class Base\n{\n     public virtual void BeforeSave()\n     {\n\n     }\n\n}\n\npublic class User : Base\n{\n     public string Name { get; set; }\n     public int Age { get; set; }      \n\n     public override void BeforeSave()\n     {\n          // You can access your properties here\n          if (this.Name.Trim() == "")\n              throw new Exception("Name is mandatory!")\n     }\n\n}\n\npublic class DBObject<T>\n    where T: Base\n{\n    public void Save()\n    {\n        T.BeforeSave();\n    }\n}
786	return _cacheManager.Get<Clients>(_key, _cacheSettings.AbsoluteExpiration.AddHours(1.0).ToString()).ToList();
787	GetCustomAttributes()
788	public void Delete(string ouPath, string groupPath)\n{\n    if (DirectoryEntry.Exists("LDAP://" + groupPath))\n    {\n        try\n        {\n            DirectoryEntry entry = new DirectoryEntry("LDAP://" + ouPath);\n            DirectoryEntry group = new DirectoryEntry("LDAP://" + groupPath);\n            entry.Children.Remove(group);\n            group.CommitChanges();\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message.ToString());\n        }\n    }\n    else\n    { \n        Console.WriteLine(path + " doesn't exist"); \n    }\n}
789	myDataContext dc = new myDataContext();\nList<FunderText> myList = myDataContext.tbl_funderTexts.ToList();\n\nList<string> result1 = new List<string>();\nforeach(var theValue in myValues)\n{\n  result1.Add(\n    myList.First(f => f.funderID == theValue.funderId && f.eng_code == element).funderText\n  );\n}
790	protected void Button1_Click(object sender, EventArgs e)\n{\n   TextBox TextBox1 = ContentPlaceHolder1.FindControl("TextBox1") as TextBox;\n   if (TextBox1 != null)\n   {\n       Label1.Text = TextBox1.Text;\n   }\n}
791	var months = Enumerable.Range(0, 2)\n    .Select(x => endDate.AddMonths(-1*x).Month))\n    .ToList();\n\nvar results = visits\n    .GroupBy(v => v.Author)\n        .SelectMany(v => months\n            .Select(m =>\n                new {\n                    author = v.Key,\n                    month = m,\n                    reportedVisits = v.Count(v => v.Reported && v.DateScheduled.Month = m),\n                    unreportedVisits = v.Count(v => v.Unreported && v.DateScheduled.Month = m),\n                });
792	Regex.Escape
793	Word.Application app = new Word.Application();\nWord.Document doc = new Word.Document();
794	INSERT INTO tab_photo VALUES(...,'System.Byte[]', ...)";
795	interface IFoo\n{\n  object UntypedBlah(object arg);\n}\n\nclass Foo<T> : IFoo\n{\n  object UntypedBlah(object arg)\n  {\n    return Blah((T)arg);\n  }\n\n  T Blah(T arg)\n  {\n    //...\n  }\n\n}\n\nList<IFoo> foos = new List<IFoo>();\nfoos.Add(new Foo<int>());\nfoos.Add(new Foo<string>());
796	Rectangle form = this.Bounds; \nusing (Bitmap bitmap = new Bitmap(form.Width, form.Height)) \n{ \n    using (Graphics graphic = \n        Graphics.FromImage(bitmap)) \n    { \n        graphic.CopyFromScreen(form.Location, \n            Point.Empty, form.Size); \n    } \n    bitmap.Save("D://test.jpg", ImageFormat.Jpeg); \n}
797	DataColumn col = mesakem.Tables["fullname"].Columns.Add("Id");\ncol.SetOrdinal(0);\nforeach (DataRow row in mesakem.Tables["fullname"].Rows)\n{\n    foreach (oved o in ovdimlist)\n    {\n        if (o.name == row["Name"].ToString())\n            row["Id"] = o.id;\n    }\n}
798	int width = _img.Width;\nint height = _img.Height;\nfor (int aRowIndex = 0; aRowIndex < width; aRowIndex += subsample)\n{\n    for (int aColumnIndex = 0; aColumnIndex < height; aColumnIndex += subsample)\n    {\n    }\n}
799	checkmate.ID = "checkmate";
800	MethodInfo method = c.GetType()\n                     .GetMethod("Load");\n                     .MakeGenericMethod(this.t);\n\nLoadedFile = method.Invoke(path, new object[] {path});
801	static bool IsMyClass(object obj)\n{\n    return obj == null ? false : IsMyClass(obj.GetType());\n}\nstatic bool IsMyClass(Type type)\n{\n    while (type != null)\n    {\n        if (type.IsGenericType &&\n            type.GetGenericTypeDefinition() == typeof(MyClass<>))\n        {\n            return true;\n        }\n        type = type.BaseType;\n    }\n    return false;\n}
802	m_helper.Partial(tab.PartialName);
803	SavingForm saving = new SavingForm();\nsavingForm.ShowDialog(this);
804	var bytes = reader.GetSqlBytes(index);\nResponse.BinaryWrite(bytes.Value);
805	private void Form1_Load(object sender, EventArgs e)\n{\n   listBox1.Items.Add("Item1");\n   listBox1.Items.Add("Item2");\n   listBox1.Items.Add("Item3");\n   listBox1.Items.Add("Item4");\n }\n\nprivate void listBox1_SelectedIndexChanged(object sender, EventArgs e)\n{\n   label1.Text = listBox1.SelectedItem.ToString();   \n}
806	string msg = "13,G,true";\nvar myArray = msg.Split(",");\n\n// parse the elements\nint number;\nif (!Int32.TryParse(myArray[0], out number) throw new ArgumentException("Whrong input format for number");\nstring letter = myArray[1];\nstring b = myArry[2];\n\n// or also with a boolean instead\nbool b;\nif (!Int32.TryParse(myArray[2], out b) throw new ArgumentException("Whrong input format for boolean");
807	var methodNode = (MethodDeclarationSyntax)node;\nstring modelClassName = string.Empty;\n\nforeach (var param in methodNode.ParameterList.Parameters)\n{\n    var metaDataName = document.GetSemanticModelAsync().Result.GetDeclaredSymbol(param).ToDisplayString();\n//'document' is the current 'Microsoft.CodeAnalysis.Document' object\n    var members = document.Project.GetCompilationAsync().Result.GetTypeByMetadataName(metaDataName).GetMembers();\n    var props = (members.OfType<IPropertySymbol>());\n\n    //now 'props' contains the list of properties from my type, 'Type1'\n    foreach (var prop in props)\n    {\n        //some logic to do something on each proerty\n    }\n\n}
808	public abstract class Repository<T, TId>\n{\n    public T Get(TId id)\n    {\n    }\n}
809	//  It will be on your submit button click \n    protected void getPinCode()\n    {\n        foreach (GridViewRow grdRows in gvSurvey.Rows)\n        {\n            RadioButton rbt1 = (RadioButton)grdRows.FindControl("rdbtn1");\n            RadioButton rbt2 = (RadioButton)grdRows.FindControl("rdbtn2");\n            RadioButton rbt3 = (RadioButton)grdRows.FindControl("rdbtn3");\n            RadioButton rbt4 = (RadioButton)grdRows.FindControl("rdbtn4");\n\n            string Value = RadioValue(rbt1);\n           //Similarly you can do for all radio button \n            if(!string.IsNullOrEmpty(Value))\n            {\n\n                lblMsg.Text = nominationsBiz.SaveSuggestion(ticketNo.ToString(), qtn_no, sqtn_no, Value);\n            }\n\n        }\n    }\n\n\n    protected string RadioValue(RadioButton Rbtlst)\n    {\n        string Value = "";\n\n        if (Rbtlst.Checked == true)\n        {\n            Value = Rbtlst.Text;\n        }\n        return Value;\n    }
810	var results = from c in db.Customers\n    where c.LastName == 'Smith'\n    select c;
811	strings.FirstOrDefault(s=>s.StartsWith("J"));
812	//Set the Picture Server URL for Sandbox \n            apiContext.EPSServerUrl = "https://api.sandbox.ebay.com/ws/api.dll";\n            //For production use this URL \n            //context.EPSServerUrl = "https://api.ebay.com/ws/api.dll"; \n\n\n            //Set file path of the picture on the local disk  \n            apiCall.PictureFileList = new StringCollection();\n\n            apiCall.PictureFileList.Add(@"C:\Users\Danny\Desktop\MyGalleryPicOnHardDrive.jpg");\n\n            //To specify a Gallery Image \n            item.PictureDetails = new PictureDetailsType();\n            //The first picture is used for Gallery URL \n            item.PictureDetails.GalleryType = GalleryTypeCodeType.Gallery;\n\n            //To add more pictures \n            //apiCall.PictureFileList.Add(@"C:\TEMP\pic2.gif");
813	private void treeView1_NodeMouseClick(object sender, TreeNodeMouseClickEventArgs e) {\n        var hit = treeView1.HitTest(e.Location);\n        if (hit.Location == TreeViewHitTestLocations.Label) {\n            // etc..\n        }\n    }
814	List<float> optionList = specialBuildings\n    .AsParallel()\n    .Select(item => Vector2.Distance(item, house))\n    .ToList();
815	public void ProcessRequest(System.Web.HttpContext context)\n{\n    context.Response.Write(mystring);\n}
816	int index = Nodes1.FindIndex(var => var.nid == 1001);\n        double here4 = Nodes1[index].x;
817	protected void LinkButton2_Click(object sender, EventArgs e)\n{\n    Panel2.Visible = !Panel2.Visible;\n}
818	DECLARE\n  TYPE id_array_type IS TABLE OF NUMBER INDEX BY PLS_INTEGER;\n  TYPE options_array_type IS TABLE OF VARCHAR2 (100) INDEX BY PLS_INTEGER;\n\n  t_ids        id_array_type := :ids;\n  t_options    options_array_type  := :options;\n  v_state_id   NUMBER := :stateId;\nBEGIN\n  FORALL i IN 1 .. t_ids.count\n    EXECUTE IMMEDIATE '\n      MERGE INTO worker target\n      USING (SELECT :id id, :options options FROM dual) source\n      ON (source.id = target.id)\n      WHEN MATCHED THEN UPDATE SET target.stateId = :state_id, target.options = source.options'\n      USING t_ids (i), t_options (i), v_state_id;\nEND;
819	private Dictionary<string, Action<int>> doMethods = new Dictionary<string, Action<int>>();\npublic SomeClass()\n{\n    Type t = typeof(SomeClass);\n    var methods = t.GetMethods().Where(m => m.Name.StartsWith("Do"));\n\n    foreach(var method in methods)\n         doMethods.Add(method.Name, (Action<int>)Delegate.CreateDelegate(typeof(Action<int>), this, method, true));\n}\n\npublic void ActionFunction(string name, int num)\n{\n    this.doMethods[name](num);\n}
820	textblock.Measure(new Size());\ntextblock.Arrange(new Rect());
821	string response = "access_token=129858573723395|2.AQB8yp6_GcD5hfxp.3600.1308506400.1-100000676383590|DUjbM8aN5PP-qzkLfTkGiZeCaLx4&expires=6099";\nstring token = response.Split('&')[0].Split('=')[1];\nConsole.WriteLine(token);\nConsole.ReadKey();
822	var args = new Dictionary<string, object>();\n args["name"] = "Check this out";\n args["link"] = "www.xyz.com";\n args["caption"] = "";\n args["description"] = "description";\n args["picture"] = "";\n args["message"] = "Check this out";\n args["actions"] = "";\n\nFacebookAsyncCallback callBack = new FacebookAsyncCallback(this.postResult);\n fbApp.PostAsync("me/feed", args, callBack);  \n\n    private void postResult(FacebookAsyncResult asyncResult)\n    {\n        System.Diagnostics.Debug.WriteLine(asyncResult);\n    }
823	//Resets the placeholder text for password textbox\n    private void textBox2_Leave(object sender, EventArgs e)\n    {\n        if(!textBox2.Focused && textBox2.Text.Trim() == String.Empty)\n            textBox2.Text = "Password: ";\n    }\n\n//Resets the placeholder text for password textbox\n    private void textBox1_Leave(object sender, EventArgs e)\n    {\n        if(!textBox1.Focused && textBox1.Text.Trim() == String.Empty)\n            textBox1.Text = "Name: ";\n    }
824	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"\nxmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"  \n\n<i:Interaction.Triggers>\n    <ei:DataTrigger Binding="{Binding IsChecked,RelativeSource={RelativeSource AncestorType=RadioButton}}" Value=True>\n         <i:InvokeCommandAction Command="{Binding DataContext.OnTypeChangedCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" CommandParameter="{Binding Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}}" />       \n    </ei:DataTrigger>\n</i:Interaction.Triggers>
825	double number = int.Parse(textbox1.Text);\ndouble _95Percentage = number * 95 / 100;\ndouble _05Percentage = number - _95Percentage;\ntextbox2.Text = _95Percentage.ToString();\ntextbox3.Text = _05Percentage.ToString();
826	System.Uri u = new System.Uri(url);\nstring LOC = System.Web.HttpUtility.ParseQueryString(u.Query).Get("LOC");
827	string description = document.DocumentEntry.Description;
828	var imageData = Convert.FromBase64String("/9j/4AAQSkZJRgABAgEASABIAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB");\n\nvar contentId = Guid.NewGuid().ToString();\nvar linkedResource = new LinkedResource(new MemoryStream(imageData), "image/jpeg");\nlinkedResource.ContentId = contentId;\nlinkedResource.TransferEncoding = TransferEncoding.Base64;\n\nvar body = string.Format("<img src=\"cid:{0}\" />", contentId);\nvar htmlView = AlternateView.CreateAlternateViewFromString(body, null, "text/html");\nhtmlView.LinkedResources.Add(linkedResource);
829	List<string> GetUserDetails()\n    {\n        List<string> allUsers = new List<string>();\n        PrincipalContext ctx = new PrincipalContext(ContextType.Domain, "myDomain",\n                                                "OU=ounit,dc=myDC,dc=com");\n\n        UserPrincipal qbeUser = new UserPrincipal(ctx);\n\n        qbeUser.GivenName = _UITxtUserName.Text;\n\n        PrincipalSearcher srch = new PrincipalSearcher(qbeUser);\n        foreach (var found in srch.FindAll())\n        {\n\n            allUsers.Add(found.DisplayName + "(" + found.SamAccountName + ")");\n        }\n        qbeUser = null; \n        qbeUser = new UserPrincipal(ctx);\n\n        qbeUser.Surname = _UITxtUserName.Text;\n\n        PrincipalSearcher srch1 = new PrincipalSearcher(qbeUser);\n        foreach (var found in srch1.FindAll())\n        {\n\n            allUsers.Add(found.DisplayName + "(" + found.SamAccountName + ")");\n        }\n\n        allUsers.Sort();\n\n        return allUsers;\n    }
830	public class Card\n{\n    public int Rank { get; set; }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        var cards = new[] \n        {\n            new Card { Rank = 1 },\n            new Card { Rank = 2 },\n            new Card { Rank = 3 },\n            new Card { Rank = 2 },\n            new Card { Rank = 1 },\n        };\n\n        var groups = cards.GroupBy(x => x.Rank);\n        foreach (var group in groups)\n        {\n            Console.WriteLine("Cards with rank {0}", group.Key);\n            foreach (var card in group)\n            {\n                Console.WriteLine(card.Rank);\n            }\n        }\n    }\n}
831	datagridviewRowClickedEventHandler(new object(), new eventargs());
832	sqlCommand.CommandText = \n    @"DELETE FROM foo; \n      INSERT INTO foo (name) VALUES ('name1'); \n      INSERT INTO foo (name) VALUES ('name2');\n    ";
833	using (FileStream fs = \n         File.Open("MyFile.txt", FileMode.Open, FileAccess.Read, FileShare.None))\n{\n   // use fs\n}
834	byte[] fileBytes = System.IO.File.ReadAllBytes(System.IO.Path.Combine(DocumentsLocation, name + ".pdf"));\nstring fileName = name + ".pdf";\nreturn File(fileBytes, System.Net.Mime.MediaTypeNames.Application.Octet, fileName);
835	public ObservableCollection<T> ToObservableCollection<T>(IEnumerable<T> enumeration)\n{\n    return new ObservableCollection<T>(enumeration);\n}
836	someControl.ClientId
837	create PROCEDURE [dbo].[getcelldata]\n    @name varchar(50),@col varchar(5)\nAS\nBEGIN\ndeclare @sql varchar(100);\nset @sql  = 'SELECT [' + @col + '] from table where Name = '+ @name;    \nexec (@sql);\nEND
838	BindingList<Member> comboBoxList = new BindingList<Member>();\nwhile (dbReader.Read())\n{\n    aMember = new Member\n                (dbReader["FirstName"].ToString(),\n                 dbReader["LastName"].ToString(),\n                 dbReader["StudentId"].ToString(),\n                 dbReader["PhoneNumber"].ToString());\n    // tb1.Text = dbReader["FirstName"].ToString();\n    // tb2.Text = dbReader["LastName"].ToString();\n    // tb1.Text = aMember.X().ToString();\n    //tb2.Text = aMember.Y(aMember.ID).ToString(); \n\n    comboList.Add(aMember)\n\n}\n\ncomboBox1.DataSource = comboBoxList; \n                        comboBox1.DisplayMember = "FirstName"; \n                        comboBox1.ValueMember = "ID";
839	try\n {\n   XDocument xd1 = new XDocument();\n   xd1 = XDocument.Load(myfile);\n }\n catch (XmlException exception)\n {\n     ShowMessage("Your XML was probably bad...");\n }
840	/GROUP_ID/feed
841	var includes = new List<string>();\nvar regex = new Regex("#include\\W+file=\"([^\"]+)\"");\nvar matchResult = regex.Match(fileContent);\nwhile (matchResult.Success) {\n    includes.Add(matchResult.Groups[1].Value);\n    matchResult = matchResult.NextMatch();\n}
842	var assemblyLocation = Assembly.GetExecutingAssembly().Location;\nvar applicationDirectory = Path.GetDirectoryName(assemblyLocation);\nvar imagesDirectory = Path.Combine(applicationDirectory, "Images");
843	Public Function GoToPoint(ByVal start As TextPointer, ByVal x As Integer) As TextPointer\n    Dim out As TextPointer = start\n    Dim i As Integer = 0\n    Do While i < x\n        If out.GetPointerContext(LogicalDirection.Backward) = TextPointerContext.Text Or _\n             out.GetPointerContext(LogicalDirection.Backward) = TextPointerContext.None Then\n            i += 1\n        End If\n        If out.GetPositionAtOffset(1, LogicalDirection.Forward) Is Nothing Then\n            Return out\n        Else\n            out = out.GetPositionAtOffset(1, LogicalDirection.Forward)\n        End If\n\n\n    Loop\n    Return out\nEnd Function
844	myGrid.ItemsSource = null;\nmyGrid.ItemsSource = myDataSource;
845	private void categoriesListPicker_SelectionChanged(object sender, SelectionChangedEventArgs e)\n{\n    if (categoriesListPicker.SelectedItem != null)\n    {\n                string selectedItem = categoriesListPicker.SelectedItem as string;\n                MessageBox.Show(selectedItem);\n    }\n}
846	string sql= "insert into gtable (1text, 1memo) " + \n            "values ('" + textBox3.Text.Replace("'", "''") + "', null)";
847	using (DbTransaction dbTrans = myDBConnection.BeginTransaction())\n{\n     using (DbCommand cmd = myDBConnection.CreateCommand())\n     {\n         ...\n     }\n     dbTrans.Commit();\n}
848	foo(1,2,d:true); //will call the second method.
849	using System;\nusing System.Management;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            ManagementClass mangnmt = new ManagementClass("Win32_LogicalDisk");\n            ManagementObjectCollection mcol = mangnmt.GetInstances();\n            string result = "";\n            foreach (ManagementObject strt in mcol)\n            {\n                result += "Name              : " + Convert.ToString(strt["Name"]) + Environment.NewLine;\n                result += "VolumeName        : " + Convert.ToString(strt["VolumeName"]) + Environment.NewLine;\n                result += "VolumeSerialNumber: " + Convert.ToString(strt["VolumeSerialNumber"]) + Environment.NewLine;\n                result += Environment.NewLine;\n            }\n            Console.Out.WriteLine(result);\n            Console.In.ReadLine();\n        }\n    }\n}
850	textLabel.Attributes.Add("data", textLabel.Text);
851	string serviceName = "aspnet_state";\n\nSelectQuery query = new System.Management.SelectQuery(string.Format(\n    "select name, startname from Win32_Service where name = '{0}'", serviceName));\nusing (ManagementObjectSearcher searcher =\n    new System.Management.ManagementObjectSearcher(query))\n{\n    foreach (ManagementObject service in searcher.Get())\n    {\n        Console.WriteLine(string.Format(\n            "Name: {0} - Logon : {1} ", service["Name"], service["startname"]));\n    }\n}
852	Type netFwPolicy2Type = Type.GetTypeFromProgID("HNetCfg.FwPolicy2");\nINetFwPolicy2 mgr = (INetFwPolicy2)Activator.CreateInstance(netFwPolicy2Type);\n\n// Gets the current firewall profile (domain, public, private, etc.)\nNET_FW_PROFILE_TYPE2_ fwCurrentProfileTypes = (NET_FW_PROFILE_TYPE2_)mgr.CurrentProfileTypes;\n\n// Get current status\nbool firewallEnabled = mgr.get_FirewallEnabled(fwCurrentProfileTypes);\nstring frw_status = "Windows Firewall is " + (firewallEnabled ?\n"enabled" : "disabled");\n\n// Disables Firewall\nmgr.set_FirewallEnabled(fwCurrentProfileTypes, false);
853	Cost.ToString("0.00")
854	if (folderfinder.ShowDialog() == DialogResult.OK)\n{\n    Console.Write(folderfinder.SelectedPath);\n}
855	var optionList = new List<ListItem>();\n\nfor (var i = 0; i < 4; i++)\n{\n  var newItem = new ListItem()\n  {\n      Value = count.ToString(),\n      Text = string.Format("Option {1}", count.ToString());\n  };\n\n  optionList.Add(newItem);\n}\n\nAnswers.DataSource = optionList;\nAnswers.DataBind();
856	SqlDataReader reader = com.ExecuteReader();\nDataTable dt = new DataTable();\ndt.Load(reader);
857	ds.Tables[0].Rows.Count
858	private void copyToolStripMenuItem_Click(object sender, EventArgs e) {\n    int width, height;\n    width   = webBrowser1.ClientRectangle.Width;\n    height  = webBrowser1.ClientRectangle.Height;\n    using (Bitmap image = new Bitmap(width, height)) {\n        using (Graphics graphics = Graphics.FromImage(image)) {\n            Point p, upperLeftSource, upperLeftDestination;\n            p                       = new Point(0, 0);\n            upperLeftSource         = webBrowser1.PointToScreen(p);\n            upperLeftDestination    = new Point(0, 0);\n            Size blockRegionSize = webBrowser1.ClientRectangle.Size;\n            graphics.CopyFromScreen(upperLeftSource, upperLeftDestination, blockRegionSize);\n        }\n        image.Save("C:\\Test.bmp");\n    }\n}
859	CREATE VIEW StoreWithStatistics AS\n  SELECT s.*, \n         COUNT(r.StoreRating) OVER (PARTITION BY s.StoreID) AS Number_of_Ratings_Recieved,  \n         AVG(r.Rating_for_Store_out_of_Ten) OVER (PARTITION BY s.StoreID) AS Average_Rating\n  FROM STORE s\n  LEFT JOIN Rating r on s.StoreID = r.StoreID
860	RewriteBase /\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^.{100} /Default.aspx [R=301,L]
861	private void myDataGridView_ColumnHeaderMouseClick(object sender, DataGridViewCellMouseEventArgs e)\n  {\n     DataGridViewColumn column = myDataGridView.Columns[e.ColumnIndex];\n\n     _isSortAscending = (_sortColumn == null || _isSortAscending == false);\n\n     string direction = _isSortAscending ? "ASC" : "DESC";\n\n     myBindingSource.DataSource = _context.MyEntities.OrderBy(\n        string.Format("it.{0} {1}", column.DataPropertyName, direction)).ToList();\n\n     if (_sortColumn != null) _sortColumn.HeaderCell.SortGlyphDirection = SortOrder.None;\n     column.HeaderCell.SortGlyphDirection = _isSortAscending ? SortOrder.Ascending : SortOrder.Descending;\n     _sortColumn = column;\n  }
862	public static class HelperExtensions\n{\n    public static MvcHtmlString Menu(this HtmlHelper html, Action<IList<ToolbarAction>> addActions)\n    {\n        var menuActions = new List<ToolbarAction>();\n        addActions(menuActions);\n\n        var htmlOutput = new StringBuilder();\n\n        htmlOutput.AppendLine("<div id='menu'>");\n\n        foreach (var action in menuActions)\n            htmlOutput.AppendLine(html.ActionLink(action.Text, action.Action, action.Controller, new { @class = action.Name }).ToString());\n\n        htmlOutput.AppendLine("</div>");\n\n        return new MvcHtmlString(htmlOutput.ToString());\n    }\n}
863	foreach (Word.Section section in document.Sections)\n{\n    foreach (Word.HeaderFooter wordFooter in section.Headers)\n    {\n        foreach (Word.Paragraph para in wordFooter.Range.Paragraphs) // see the change of wordFooter in this line\n        {\n            Word.Range range = para.Range;\n\n            range.SetRange(1, 5);\n            range.Delete();\n        }\n    }\n}
864	(?i)(associate DEGREE in ELECtronics)
865	for (int i = 0; i < grdList.Rows.Count; i++)\n    {\n        string key = grdList.DataKeys[i].Value.ToString();\n        if (((CheckBox)grdList.Rows[i].FindControl("chkSelect")).Checked)\n            foreach (TargetObject obj in objects)\n                if (obj.Key == key)\n                {\n                    //do something like below\n                    flag = true;\n                    break;\n                }\n    }
866	DataView view = tables.DefaultView;\n\nview.Sort = "Name";\n\nforeach (DataRowView row in view)\n{\n}
867	// Listen to the window directly so focus isn't required\n                Window.Current.CoreWindow.Dispatcher.AcceleratorKeyActivated +=\n                    CoreDispatcher_AcceleratorKeyActivated;\n                Window.Current.CoreWindow.PointerPressed +=\n                    this.CoreWindow_PointerPressed;
868	myClient.Client.RemoteEndPoint
869	var stub = new StubIObject\n{\n    Foo = (value) => \n       {\n           if (value == 100)  \n              // This covers the case (It.Is<int>(t => t == 100))\n              return value * 1.10;\n           return value;    // This covers the default case (It.IsAny<T>)\n        }\n};
870	Type t = Type.GetType(className);\n\n// get the method\nMethodInfo method = t.GetMethod("MyStaticMethod",BindingFlags.Public|BindingFlags.Static);\n\nThen you call the method:\n\nmethod.Invoke(null,null); // assuming it doesn't take parameters
871	void Enumerate<T>(List<T> items)\n{\n  for(var item in items) \n  {\n    //...\n  }\n}
872	var s = "2109389";\nvar sub = s.SubString(0,2);
873	ArrayList arList = new ArrayList(); \nforeach (object obj in listBox1.Items)\n{\n    arList.Add(obj);\n} \narList.Sort(); \nlistBox2.Items.Clear();\nforeach(object obj in arList)\n{\n    listBox2.Items.Add(obj); \n}
874	DataRow row = ResultDT.NewRow();\nfor (int i = 0; i < ValToAppendDt.Count; i++)\n    {            \n        row[i] = ValToAppendDt[i].ToString();            \n    }\nResultDT.Rows.Add(row);
875	((IObjectContextAdapter)context).ObjectContext.CommandTimeout = 180;
876	Dictionary<string, Dictionary<string, Dictionary<string, string>>> dict= new Dictionary<string, Dictionary<string, Dictionary<string, string>>>(); \n if (dict.ContainsKey(outerKey))\n {\n   var innerDict = dict[outerKey];\n   if (innerDict.ContainsKey(innerKey))\n   {  \n       var innerMost = innerDict[innerKey];\n       if (innerMost.ContainsKey(innerMostKey))\n        var item = innerMost[innerMostKey]; // This is the item of inner most dict\n    }\n }
877	var item = from c in containers\n           from o in c.Objects\n           group c.ContainerName by o into g\n           where g.Distinct().Count() > 1\n           select g.Key;
878	DateTime yeer;\n\nif (!string.IsNullOrEmpty(txtBookDate.Text))\n    yeer = Convert.ToDateTime(txtBookDate.Text);\nelse\n    yeer = new DateTime(9999, 12, 31);
879	Point mousePoint;\n\nprivate void panel1_MouseMove(object sender, MouseEventArgs e)\n{\n    mousePoint = e.Location;\n}\n\nprivate void button1_MouseMove(object sender, MouseEventArgs e)\n{\n    mousePoint = new Point(button1.Location.X + e.Location.X, button1.Location.Y + e.Location.Y);\n}
880	Employee employee = context.Employees.Single(e => e.employeeID == 1);\n\nInt32 vendorID = (Int32)employee.tbl_vendorsReference.EntityKey.\n   EntityKeyValues[0].Value;
881	SalesProductReport rptDoc = new SalesProductReport(); //Main report\n\n    DataTable dt1, dt2;\n    dt1 = new SalesMasterRepository().GetSalesHeaderData(Salesid);\n\n     dt2 = new SalesMasterRepository().GetSalesFooterData(Salesid);\n\n     DataTable dtproductview=getProductViewDetails();\n    salesrpt.Subreports["Sales_header1.rpt"].SetDataSource(dt1);//datasource for subreport\n\n        rptDoc .SetDataSource(dtproductview);//Mainreport datasourcce\n       rptDoc .Subreports["SalesFooter.rpt"].SetDataSource(dt2);//datasource for subreport\n\n    CrystalReportViewer1.ReportSource = rptDoc ;
882	Consumer consumer = consumers.Take();\nvar result = consumer.Read(data); //do stuff with result \nif (consumers.TryAdd(consumer)) \n{ \n   //ok \n}
883	[IntentFilter (new[]{Intent.ActionSearch})]\n[MetaData ("android.app.searchable", Resource="@xml/searchable")]
884	if (this.tcpClient == null)\n  {\n    this.tcpClient = new TcpClient();\n  }\n\n  try\n  {\n    if (!this.tcpClient.Connected)\n    {\n      this.tcpClient.Connect(EthernetAddress, TcpPort);\n    }\n  }\n  catch(Exception ex)\n  {\n    throw new TimeoutException("The device did not respond.\n" + ex.Message);\n  }
885	atmgr.exe
886	var results = from p in db.Persons \n              join c in db.CitysInfo on p.cityID equals c.cityId\n              select new \n              {\n                name = p.name,\n                family = p.family,\n                CityName = c.CityName,\n              }
887	protected override bool ProcessCmdKey(ref Message msg, Keys keyData) {\n        if (keyData == (Keys.Control | Keys.P)) {\n            printDialog1.ShowDialog(this);\n            return true;\n        }\n        return base.ProcessCmdKey(ref msg, keyData);\n    }
888	internal const string DateTimeFormat = "yyyy-MM-dd HH:mm:ss";\ncmd.Parameters.Add("@Threshold", DbType.DateTime).Value = threshold.ToString(DateTimeFormat);
889	M  78\ne  101  -> Is prime number\nh  104\nt  116\na  97   -> Is prime number
890	PartnershipIDs = p.Partnerships.Select(par => par.ID).ToList()
891	String userName = "LICTowner";\nString prefix = userName.Substring(0,4); // LICT\nString restOfWord = userName.Substring(4); // owner
892	String.Join(" ? ", "Products ? X1 ? X3".Split(new[]{" ? "}, \n    StringSplitOptions.None).Reverse().ToArray());
893	var settings = new ObservableCollection<SettingsClassType>();\nSettingsCollView = CollectionViewSource.GetDefaultView(settings);\nSettingsCollView.Filter += (o) => {\n  var setting = (SettingsClassType)o;\n  return string.IsNullOrEmpty(YourSearchInput)\n         || setting.Name.Contains(YourSearchInput);\n}\n\nprivate string yourSearchInput;\npublic bool YourSearchInput\n{\n  get { return yourSearchInput; }\n  set\n  {\n    if (value == yourSearchInput) {\n      return;\n    }\n    yourSearchInput= value;\n    // filer your collection here\n    SettingsCollView.Refresh();\n    this.NotifyPropertyChanged("YourSearchInput");\n  }\n}
894	List<int> a = new List<int>(1, 2, 3);\nList<int> b = new List<int>(1, 2, 3); //different instance than a\n\nDictionary<List<int>, int>> map = new Dictionary<List<int>, int>>();\nmap.Add(a, a.Sum());\nint aSum = map[b]; //KeyNotFoundException because this is a different instance.\n\n\nHashSet<int> a = new HashSet<int>(1, 2, 3);\nHashSet<int> b = new HashSet<int>(1, 2, 3); //different instance than a\n\nDictionary<HashSet<int>, int>> map1 = new Dictionary<HashSet<int>, int>>();\nmap1.Add(a, a.Sum());\nint aSum = map1[b]; //KeyNotFoundException because this is a different instance.\n\n\nHashSet<int> a = new HashSet<int>(1, 2, 3);\nHashSet<int> b = new HashSet<int>(1, 2, 3); //different instance than a\n\nDictionary<HashSet<int>, int>> map2 = new Dictionary<HashSet<int>, int>>\n  (HashSet<int>.CreateSetComparer()); //instance comparison not used - equal sets are equal\nmap2.Add(a, a.Sum());\nint aSum = map2[b]; //6
895	public abstract class FooBase\n{\n    private readonly IDictionary<string,object> _readonlyCache;\n\n    protected FooBase(IDictionary<string,object> cache)\n    {\n        _readonlyCache = cache;\n    }\n}
896	System.Windows.MessageBox
897	class Converter : TypeConverter<Foo, Bar>\n{\n    protected override Bar ConvertCore(Foo source)\n    {\n        if (source.Code != 0)\n            return null;\n        return new Bar();\n    }\n}\n\n\nstatic void Main(string[] args)\n    {\n        Mapper.CreateMap<Foo, Bar>()\n            .ConvertUsing<Converter>();\n\n\n        var bar = Mapper.Map<Bar>(new Foo\n        {\n            Code = 1\n        });\n        //bar == null true\n    }
898	this.Hide();\nForm2 form2 = new Form2();\nform2.Show();
899	[HttpPost]\npublic ActionResult Index(int CustomerId)\n{\n   //process\n   Return View("Load")\n\n}
900	DirectorySecurity objSecObj = directory.GetAccessControl();\nAuthorizationRuleCollection acl = objSecObj.GetAccessRules(true, true,\n                                            typeof(System.Security.Principal.NTAccount));\nobjSecObj.SetAccessRuleProtection(true, false); //to remove inherited permissions\nforeach (FileSystemAccessRule ace in acl) //to remove any other permission\n{    \n    objSecObj.PurgeAccessRules(ace.IdentityReference);  //same as use objSecObj.RemoveAccessRuleSpecific(ace);\n}\n\ndirectory.SetAccessControl(objSecObj);
901	foreach (Type tp in currentAssembly.GetTypes())\n    foreach (MethodInfo func in tp.GetMethods())\n        if(func.GetParameters().Any(p=>p.IsOptional))\n            Console.WriteLine(func.ToString());
902	int a = 123456;\nint result = a;\n\nwhile (result >= 10)\n   result = result.ToString()\n                  .Sum(x => int.Parse(x.ToString()));
903	private class DataContainer\n{\n    private readonly int[,] _data;\n    private HashSet<int> _index;\n\n    public DataContainer(int[,] data)\n    {\n        _data = data;\n    }\n\n    public bool Contains(int value)\n    {\n\n        if (_index == null)\n        {\n            _index = new HashSet<int>();\n            for (int i = 0; i < _data.GetLength(0); i++)\n            {\n                for (int j = 0; j < _data.GetLength(1); j++)\n                {\n                    _index.Add(_data[i, j]);\n                }\n            }\n        }\n        return _index.Contains(value);\n    }\n}
904	[XmlElement("Valid")]\n    public string _Valid\n    {\n        get;\n        set;\n    }\n\n    [XmlIgnore]\n    public bool? Valid\n    {\n        get\n        {\n            if (!string.IsNullOrWhiteSpace(_Valid))\n            {\n                return bool.Parse(_Valid);\n            }\n\n            return null;\n        }\n    }
905	Session.TimeOut= [=nMinutes]
906	private int GetSmallestNonNegative(int a , int b)\n{\n    if (a >= 0 && b >= 0)\n        return Math.Min(a,b);\n    else if (a >= 0 && b < 0)\n        return a;\n    else if (a < 0 && b >= 0)\n        return b;\n    else\n        return 0;\n}
907	System.Data.CommandType.StoredProcedure
908	string str = @"//\n// Use a new char[] array of two characters (\r and \n) to break\n// lines from into separate strings."+ @" \n" + @" Use RemoveEmptyEntries\n// to make sure no empty strings get put in the string array. \n//";
909	[Obsolete("Please use LatestGreatest instead.")]\npublic class OldSchool\n{\n    private LatestGreatest _Target;\n\n    public OldSchool()\n    {\n        _Target = new LatestGreatest();\n    }\n\n    public void DoSomething()\n    {\n        _Target.DoSomething();\n    }\n\n    [Obsolete("Please use LatestGreatest.DoItInSomeOtherWay()")]\n    public void DoTheOldWay()\n    {\n        _Target.DoItInSomeOtherWay();\n    }\n}\n\npublic class LatestGreatest\n{\n    public void DoSomething()\n    {\n        Console.WriteLine("I'm so fresh and cool.");\n    }\n\n    public void DoItInSomeOtherWay()\n    {\n        Console.WriteLine("Let's do it...");\n    }\n}
910	string closestColor = "";\ndouble diff = 200000; // > 255?x3\n\nforeach(string colorHex in validColors)\n{\n    Color color = System.Drawing.ColorTranslator.FromHtml("#"+colorHex);\n    if(diff > (diff = (c.R - color.R)?+(c.G - color.G)?+(c.B - color.B)?))\n        closestColor = colorHex;\n}\n\nreturn closestColor;
911	MapControl.SetLocation(st, new Geopoint(/* Your location info */));\nMyMap.Children.Add(st);
912	static void Main(string[] args)\n    {\n        string partialName = "171_s";\n\n        DirectoryInfo hdDirectoryInWhichToSearch = new DirectoryInfo(@"c:\");\n        FileInfo[] filesInDir = hdDirectoryInWhichToSearch.GetFiles("*" + partialName + "*.*");\n\n        foreach (FileInfo foundFile in filesInDir)\n        {\n            string fullName = foundFile.FullName;\n            Console.WriteLine(fullName);\n        }\n\n    }
913	x => x * 2;
914	return myItems.Where(i => i.Name == name).ToList();
915	using System;\nusing System.Linq;\nusing System.Reflection;\n\npublic class Program\n{\n    public static void Main()\n    {\n        String input = "\"thing 1\" \"thing 2\" \"thing 3\" \"thing 4\"";\n        var result = input.Split(new char[]{'\"'}).Where(p=> !String.IsNullOrWhiteSpace(p));\n        foreach(string v in result)\n            Console.WriteLine(v);\n    }\n}
916	// Assuming the allLocks class member is defined as follows:\nprivate static AutoResetEvent[] allLocks = new AutoResetEvent[10];\n\n\n// And initialized thus (in a static constructor):\nfor (int i = 0; i < 10; i++) {\n    allLocks[i] = new AutoResetEvent(true);\n}\n\n\n// Your method becomes\nvar lockIndex = id % allLocks.Length;\nvar lockToUse = allLocks[lockIndex];\n\n// Wait for the lock to become free\nlockToUse.WaitOne();\ntry {\n    // At this point we have taken the lock\n\n    // Do the work\n} finally {\n    lockToUse.Set();\n}
917	await Launcher.LaunchUriAsync(new Uri(uri));
918	public class DateStringComparer : IComparer\n{\n    public int Compare(object x, object y)\n    {\n        return DateTime.Compare(DateTime.Parse(x.ToString()), DateTime.Parse(y.ToString()));\n    }\n}
919	this.DataContext = workAssignement;
920	foreach (var ctl in this.Controls)\n{\n    if (ctl is RadioButton)\n    {\n       // stuff\n    }\n}
921	var values = new List<KeyValuePair<string, string>>();\n\nvalues.Add(new KeyValuePair<string, string>("Item1", "Value1"));\nvalues.Add(new KeyValuePair<string, string>("Item2", "Value2"));\nvalues.Add(new KeyValuePair<string, string>("Item3", "Value3"));\n\nusing (var content = new FormUrlEncodedContent(values))\n{\n    client.PostAsync(postUri, content).Result)\n}
922	public static T GetFirstElementOrDefault<T>(IEnumerable<T> values)\n{\n  T value = default(T);\n  foreach(T val in values)\n  {\n    value = val;\n    break;\n  }\n  return value;\n}
923	xmlDoc.Root.Add(\n    new XElement("product",\n        new XElement("name", "456"),\n        new XElement("price", "456")));
924	Server.MapPath("_File1.txt");
925	Dns.GetHostAddresses
926	public SomeConstructor() \n  : base(Configuration.ConnectionString) {\n\n}\n\npublic static Configuration {\n  public static string ConnectionString {\n    get { \n      /* some logic to determine the appropriate value */\n#if DEBUG\n      return ConfigurationManager.ConnectionStrings["DebugConnectionString"]; \n#else\n      return ConfigurationManager.ConnectionStrings["ReleaseConnectionString"]; \n#endif\n    } \n  }\n}
927	List<String> Lines = new List<String>();\nSystem.IO.StreamReader file = \n   new System.IO.StreamReader("c:\\test.txt");\nwhile((line = file.ReadLine()) != null)\n{\n   myFlowDoc.Blocks.Add(new Paragraph(new Run(x)));\n   Lines.Add(line);\n}\n\nfile.Close();
928	config.Routes.MapHttpRoute("MyRoute", "Region/{regionId}/Countries", new { controller = "Region", action = "GetCountries" });
929	var v = yourObject.Elements.Names.OfType<XmlQualifiedName>().FirstOrDefault();\nvar w = yourObject.Elements.Values.OfType<XmlSchemaElement>().FirstOrDefault();
930	text.Substring(0, text.IndexOf('_'));
931	&IncludeSelector=Details,Description,TextDescription
932	UncaughtExceptionHandlers.Add((req, res, name, exception) =>\n{\n     //this is needed for inclusion of CORS headers in http error responses\n     //(for example when invalid user credentials passed)\n     res.ApplyGlobalResponseHeaders();\n});
933	else if(PageNumber < vcnt)\n{\n    //linkNext.Visible = true;\n    // Change it to\n\n    linkNext.Visible = !pagedData.IsLastPage;\n    linkPrevious.Visible = !pagedData.IsFirstPage;\n}
934	public void AddCompanyStorage(string subDomain)\n        {\n            //get the storage account.\n            CloudStorageAccount storageAccount = CloudStorageAccount.Parse(\n                System.Configuration.ConfigurationManager.AppSettings["StorageConnectionString"].ToString());\n\n            //blob client now\n            CloudBlobClient blobClient = storageAccount.CreateCloudBlobClient();            \n\n            //the container for this is companystyles\n           CloudBlobContainer container = blobClient.GetContainerReference(subDomain);\n\n            //Create a new container, if it does not exist\n           container.CreateIfNotExist();\n        }
935	protected override void OnClosed(EventArgs e)\n{\n    base.OnClosed(e);\n\n    if (ds != null)\n        ds.Dispose();\n}
936	MYSERVER\SQLEXPRESS
937	this.ObjectContext.Logs\n        .Where(w => w.Message == "Created User" || \n               w.Message == "Removed User" || \n               w.Message == "Updated User")\n        .GroupBy(w => w.Username)\n        .OrderByDescending(g => g.Count())\n        .Select(g => g.Key)\n        .Take(5);
938	private ManualResetEvent resetEvent = new ManualResetEvent(false);\nprivate RegisteredWaitHandle handle;\n\npublic void OnStart()\n{\n    resetEvent.Reset();\n    handle = ThreadPool.RegisterWaitForSingleObject(resetEvent, callBack, null, 7200000, false);\n}\n\npublic void OnStop()\n{\n    reset.Set();\n}\n\nprivate void callBack(object state, bool timeout)\n{\n    if (timeout)\n    {\n        //Do Stuff Here\n    }\n    else\n    {\n        handle.Unregister(null);\n    }   \n}
939	Math.Ceiling
940	pd.PrintPage += (s, eventArgs) =>\n{\n    Image i = Image.FromFile(newFile);\n    Point p = new Point(0, 0);\n    eventArgs.Graphics.DrawImage(i, p);\n};  // <-- here
941	if(e.Buttons == MouseButton.Right)\n          contextMenuStrip1.Show(e.X+val1, e.Y+val2);
942	var cars = brokenCars.Where(c => c.status == 3)\n                     .Select(c => new { status = "broken", c.name, c.type });
943	return Request.CreateResponse(HttpStatusCode.OK, Active);
944	DataTable table;\nImage blueStar = new Image();\n\nprotected void Page_Load(object sender, EventArgs e)\n{\n\n   blueStar = ImageBlueStar;\n\n   table= new DataTable();\n\n   table.Columns.Add("Title Text");\n\n   tabela.Rows.Add("URL FROM IMAGE", "SOME TEXT");\n\n   SPGridView novaGrid = new SPGridView();\n   novaGrid.DataSource = table.DefaultView;\n   novaGrid.AutoGenerateColumns = false;\n   novaGrid.Columns.Add(new ImageField { DataImageUrlField = "Title Text"});\n\n\n   Controls.Add(novaGrid);\n   novaGrid.DataBind();\n\n}
945	r1 = new WaveFileReader(...);\nr2 = new WaveFileReader(...);\nr1.Read(arr1, 0, arr1.Length);    \nr2.Read(arr2, 0, arr2.Length);\nshort[] firstPCM16 = ALawDecoder.ALawDecode(arr1);\nshort[] secondPCM16 = ALawDecoder.ALawDecode(arr2);\nbyte[] result1 = new byte[firstPCM16.Length * sizeof(short)];\nbyte[] result1 = new byte[secondPCM16.Length * sizeof(short)];\nBuffer.BlockCopy(firstPCM16, 0, result1, 0, result1.Length);\nBuffer.BlockCopy(secondPCM16, 0, result2, 0, result2.Length);\nfor (...)\n{                        \n    mixed[i] = (byte)(result1[i] + result2[i]);//No need to dividing by 2 because r1  and r2 are 8 bit ALaw and return value of ALawDecoder is 16 bit pcm\n}
946	//untested\nprivate void dgvItems_CellValueNeeded(object sender, DataGridViewCellValueEventArgs e)\n{\n  if (e.Column == 0)\n  {\n     e.Value = dgvItems.CurrentRow.Cells[2].Value * 5; //simplified example\n  }\n}
947	myForm.BeginInvoke(new Action(() => new LoadingForm().ShowDialog()));
948	var server = new HttpServer(configuration);\n        var invoker = new HttpMessageInvoker(server);\n        var certificate = GetCertificate();\n\n        var request = new HttpRequestMessage(HttpMethod.Get, "http://localhost/YourPath");\n        request.Properties[HttpPropertyKeys.ClientCertificateKey] = certificate;\n        var result = await invoker.SendAsync(request, CancellationToken.None);
949	string imgValue = doc.DocumentNode.SelectSingleNode("//input[@id = \"img\"]").GetAttributeValue("value", "0");\nstring xValue = doc.DocumentNode.SelectSingleNode("//input[@id = \"x\"]").GetAttributeValue("value", "0");\nstring yValue = doc.DocumentNode.SelectSingleNode("//input[@id = \"y\"]").GetAttributeValue("value", "0");
950	public class MyViewController : DialogViewController\n{\n    public MyViewController\n        : base(new RootElement("foo"), true)\n    {\n\n    }\n}
951	selectedNode.Nodes
952	var xdoc = XDocument.Load("buildings.kml");\nXNamespace kml = "http://www.opengis.net/kml/2.2";\nvar buildings = xdoc.Root.Elements(kml + "Document")\n                    .Select(d => new Building {\n                        BuildingName = (string)d.Element(kml + "name")\n                    }).ToList();
953	// Gets a reference to the same assembly that \n// contains the type that is creating the ResourceManager.\nSystem.Reflection.Assembly myAssembly = typeof(Program).Assembly;\n\n// Gets a reference to a different assembly.\nSystem.Reflection.Assembly myOtherAssembly;\nmyOtherAssembly = System.Reflection.Assembly.Load("ResourceAssembly");\n\n// Creates the ResourceManager.\nSystem.Resources.ResourceManager myManager = new \n   System.Resources.ResourceManager("ResourceNamespace.myResources", \n   myAssembly);\n\n// Retrieves String and Image resources.\nUnmanagedMemoryStream x = myManager.GetStream("StringResource");
954	public class TestClass\n{\n    public static void Main(string[] args)\n    {\n        bool isEqual = DownloadString("www.abc.com") == DownloadString("www.xyz.com")\n        // do whatever you want with it\n    }    \n\n    private static string DownloadString(string address)\n    {\n        using (WebClient client = new WebClient())\n        {\n            return client.DownloadString(address);\n        }\n    }\n}
955	// not a real code\nforeach(Test t in myTetsts.AsParallel())\n{\n   t.run();\n}
956	var a = new[] {1,2,3,4,5,6,7,8,9,10}\nvar a1 = a.Take(a.Length / 2).ToArray();\nvar a2 = a.Skip(a.Length / 2).ToArray();
957	using Microsoft.Tools.WindowsInstallerXml;
958	public ViewResult Index()\n{\n   var roleFilter = Roles.GetRolesForUser().First(r => !r.equals("Admin"));\n\n   return View(new UserViewModel\n                {\n                    Users = _userService.FindAll().Where(x => Roles.GetRolesForUser(x.UserName).Contains(roleFilter)),\n                    Roles = new [] {roleFilter}\n                });\n}
959	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)]\nsealed public class RedirectIfUserNotLoggedOnAttribute : ActionFilterAttribute\n{\npublic override void OnActionExecuting (ActionExecutingContext filterContext)\n  {\n    if (!IsUserLoggedOn)\n        {\n          filterContext.Result = new RedirectToRouteResult(new RouteValueDictionary(new\n                                                                                      {\n                                                                                        controller = "User",\n                                                                                        action = "WarnLogOutAsJson",\n                                                                                      }));\n        }\n}\n}
960	public class ABC \n{\n    public ABC(int count)\n    {\n       if (count < 1) \n       {\n           throw new ArgumentException("count must be a positive number", "count");\n       }\n        _textfillerDetails = Enumerable\n            .Range(1, count)\n            .Select(x => new TextDetail())\n            .ToList();\n    }\n\n    public IList<TextFillerDetail> TextFillerDetails { get { return _textfillerDetails; } }        \n    private List<TextFiller> _textfillerDetails;\n}
961	%windir%\Microsoft.NET\Framework64\v4.0.30128\aspnet_regiis.exe -ir
962	public static bool IsInEditMode(PropertyGrid grid)\n{\n    if (grid == null)\n        throw new ArgumentNullException("grid");\n\n    Control gridView = (Control)grid.GetType().GetField("gridView", BindingFlags.Instance | BindingFlags.NonPublic).GetValue(grid);\n    Control edit = (Control)gridView.GetType().GetField("edit", BindingFlags.Instance | BindingFlags.NonPublic).GetValue(gridView);\n    Control dropDownHolder = (Control)gridView.GetType().GetField("dropDownHolder", BindingFlags.Instance | BindingFlags.NonPublic).GetValue(gridView);\n\n    return ((edit != null) && (edit.Visible & edit.Focused)) || ((dropDownHolder != null) && (dropDownHolder.Visible));\n}
963	if ((int)sT != 0 && (sT & types) == sT) list.Add(sT);
964	shoplistview.Items.Count == 0
965	[Category("General")]\n    [DisplayName("Foos")]\n    [Description("Bla Foo Bla")]\n    [TypeConverter(typeof(FoosCoverter))]\n    public string[] Foos { get; set; }
966	for (int i = 0; i < 7; i++)\n    {\n\n        TableCell tCell = new TableCell();\n        TextBox txt = new TextBox();\n        tCell.Controls.Add(txt);\n        tRow.Cells.Add(tCell);\n\n    }
967	AutoSize = false
968	using HelpDeskBusinessDataObjects
969	var randomGenerator = new Random();\n\nstring[] prizes = { "vacation to Hawaii with all expenses covered",\n                    "used glue stick",\n                    "pile of dog dung",\n                    "vacation to Europe with all expenses covered" };\n\nstring firstDoor = prizes[randomGenerator.Next(prizes.Length)];\nstring secondDoor = prizes[randomGenerator.Next(prizes.Length)];\nstring thirdDoor = prizes[randomGenerator.Next(prizes.Length)];
970	foreach (MyObject obj in list.Where(o => o != null))\n    Console.WriteLine(obj.Value);
971	public String RetrieveClipboardHtmlText(String replacementHtmlText)\n{\n    String returnHtmlText = null;\n    if (Clipboard.ContainsText(TextDataFormat.Html))\n    {\n        returnHtmlText = Clipboard.GetText(TextDataFormat.Html);\n    }\n    return returnHtmlText;\n}
972	[Table(Name = "Locations")]\npublic class Location\n{\n\n    [Column(IsPrimaryKey = true, IsDbGenerated = true, AutoSync = AutoSync.OnInsert)]\n    internal int LocationId { get; set; }\n\n    [Column]        \n    public int? SiteId { get; set; }\n\n    [Association(ThisKey = "SiteId", OtherKey = "SiteId", IsForeignKey = true)]        \n    public Site Site\n    {\n        get;\n        set;\n    }\n\n}
973	SET @vSQL = 'UPDATE Clients SET LastOnline=GETDATE(), Status=''Open'' WHERE ClientID IN (' + @ClientIDs  + ')';
974	public void SendFolder(string srcPath, string destPath)\n    {\n        string dirName = Path.Combine(destPath, Path.GetFileName(srcPath));\n        CreateDirectory(dirName);  // consider that this method creates a directory at the server\n        string[] fileEntries = Directory.GetFiles(srcPath);\n        string[] subDirEntries = Directory.GetDirectories(srcPath);\n        foreach (string filePath in fileEntries)\n        {\n            Send(srcPath, dirName);\n        }\n        foreach (string dirPath in subDirEntries)\n        {\n            SendFolder(dirPath, dirName);\n        }\n    }
975	string EmplyeeId = Request["EmplyeeId "];
976	public async void Run(IBackgroundTaskInstance taskInstance)\n{\n    BackgroundTaskDeferral _deferral = taskInstance.GetDeferral();\n\n    Debug.WriteLine("Test");\n        Debug.WriteLine(DateTime.Now.ToString("g"));\n\n        StorageFolder dataFolder = ApplicationData.Current.LocalFolder;\n        StorageFile logFile = await dataFolder.CreateFileAsync("logFile.txt", CreationCollisionOption.OpenIfExists);\n\n        IList<string> logLines = await FileIO.ReadLinesAsync(logFile);\n\n        foreach( var s in logLines )\n        {\n            Debug.WriteLine(s);\n        }\n\n        logLines.Add(DateTime.Now.ToString("g"));\n        if( logLines.Count > 5 )\n        {\n            logLines.RemoveAt(0);\n        }\n\n        await FileIO.AppendLinesAsync(logFile, logLines);\n\n    _deferral.Complete(); \n}
977	XmlDocument doc = new XmlDocument();\ndoc.Load("path.xml");\nforeach (XmlElement  pointCoord in doc.SelectNodes("/place/point/coordinate"))\n{\n    /Do something\n}
978	public static class MyPhpStyleExtension\n{\n    public void SplitInTwo(this string str, char splitBy, out string first, out string second)\n    {\n        var tempArray = str.Split(splitBy);\n        if (tempArray.length != 2) {\n            throw new NotSoPhpResultAsIExpectedException(tempArray.length);\n        }\n\n        first = tempArray[0];\n        second = tempArray[1];\n    }\n}
979	public IList<TextFillerDetail> TextFillerDetails        \n{            \n    get { return _textfillerDetails; }\n}        \n\nprivate List<TextFiller> _textfillerDetails = new List<TextFiller>();
980	Grid.Column="{Binding [0], Source={x:Static Member=local:GridProperties.gridColumn}}"
981	//short example string - may contain 1000's     \nstring newstr = ...;\n\nstring[] keysAndValues = newstr.Split(':');\nvar mydictionary = new Dictionary<string, List<string>>(keysAndValues.Length);\nforeach (string item in keysAndValues)     \n{         \n    List<string> list = new List<string>(item.Split(','));         \n    mydictionary.Add(list[0], list);\n    // remove key from list to match Jon Skeet's implementation\n    list.RemoveAt(0);\n}
982	var argb = Convert.ToInt32(\n    ((DataRowView)this.dataGridView1.Rows[e.RowIndex].DataBoundItem)["Color"]);\nColor = Color.FromArgb(argb);
983	var result = list.GroupBy(x => new { x.FirstName, x.LastName, x.Mobile, x.Email })\n                 .Select(x => new \n                                 {\n                                    Id = String.Join("|",x.Select(z => z.Id)),\n                                    FirstName = x.Key.FirstName\n                                    LastName = x.Key.LastName,\n                                    Mobile = x.Key.Mobile,\n                                    Email = x.Key.Email\n                                 });
984	class SomeClass\n{\n    public void DoSomething<M,T>(M instance) where T : Base \n                                             where M : GenericClass<T>\n    {\n       // Do something...\n    }\n}
985	public B Convert<A, B>(A element) where B : A, new()\n    {\n        //get the interface's properties that implement both a getter and a setter\n        IEnumerable<PropertyInfo> properties = typeof(A)\n            .GetProperties()\n            .Where(property => property.CanRead && property.CanWrite).ToList();\n\n        //create new object\n        B b = new B();\n\n        //copy the property values to the new object\n        foreach (var property in properties)\n        {\n            //read value\n            object value = property.GetValue(element);\n\n            //set value\n            property.SetValue(b, value);\n        }\n\n        return b;\n    }
986	var bytes = Encoding.Default.GetBytes(htmlString);
987	textBlock.LineStackingStrategy = LineStackingStrategy.BlockLineHeight,\ntextBlock.LineHeight = 20 // Or some other value you fancy.
988	var sort = new Lucene.Net.Search.Sort(\n    new Lucene.Net.Search.SortField("date", Lucene.Net.Search.SortField.LONG),\n    true);
989	TypeIcon.Source = (ImageSource) Resources["Project"];
990	public static Expression<Func<T, bool>> LikeLambdaString<T>(string propertyName, string value)\n{\n    var linqParam = Expression.Parameter(typeof(T), propertyName);\n    var linqProp = GetProperty<T>(linqParam, propertyName);\n\n    var containsFunc = Expression.Call(linqProp,\n        typeof(string).GetMethod("Contains"),\n        new Expression[] { Expression.Constant(value) });\n\n    return Expression.Lambda<Func<T, bool>>(containsFunc,\n        new ParameterExpression[] { linqParam });\n}
991	IEnumerable<Package> apps = Windows.Phone.Management.Deployment.InstallationManager.FindPackagesForCurrentPublisher();\napps.First().Launch(string.Empty);
992	var result = _expectations.Where(e => _properties.Any(p => p.Key == e.Key && e.Value.Matches(p.Value)));
993	Lazy<T>
994	var results = from r in dc.Registration\n              join o1 in dc.Optional1 on r.RegistrationID equals o1.RegistrationID\n              select r;
995	dt = city.GetAllCity();//your datatable\n    string attachment = "attachment; filename=city.xls";\n    Response.ClearContent();\n    Response.AddHeader("content-disposition", attachment);\n    Response.ContentType = "application/vnd.ms-excel";\n    string tab = "";\n    foreach (DataColumn dc in dt.Columns)\n    {\n        Response.Write(tab + dc.ColumnName);\n        tab = "\t";\n    }\n    Response.Write("\n");\n    int i;\n    foreach (DataRow dr in dt.Rows)\n    {\n        tab = "";\n        for (i = 0; i < dt.Columns.Count; i++)\n        {\n            Response.Write(tab + dr[i].ToString());\n            tab = "\t";\n        }\n        Response.Write("\n");\n    }\n    Response.End();
996	ListOfItems = store.Items.Where(p => (p.Type > 159 && p.Type < 169) || (p.Type > 220 && p.Type < 241)).ToList()
997	static IEnumerable<string> GetVariations(string s)\n    {\n        int[] indexes = new int[s.Length];\n        StringBuilder sb = new StringBuilder();\n\n        while (IncrementIndexes(indexes, s.Length))\n        {\n            sb.Clear();\n            for (int i = 0; i < indexes.Length; i++)\n            {\n                if (indexes[i] != 0)\n                {\n                    sb.Append(s[indexes[i]-1]);\n                }\n            }\n            yield return sb.ToString();\n        }\n    }\n\n    static bool IncrementIndexes(int[] indexes, int limit)\n    {\n        for (int i = 0; i < indexes.Length; i++)\n        {\n            indexes[i]++;\n            if (indexes[i] > limit)\n            {\n                indexes[i] = 1;\n            }\n            else\n            {\n                return true;\n            }\n        }\n        return false;\n    }
998	int x = (int) me.position.X + me.width/2; \nint y = (int) me.position.Y + me.height/2; \nint dist = 2; \nme.moveTo(rand.Next(x-dist,x+dist), rand.Next(y-dist, y+dist), running); //kick off moveTo function
999	String url = @"http://www.example.com/";\n  Byte[] dat = null;\n\n  // In case you need credentials for Proxy\n  if (Object.ReferenceEquals(null, WebRequest.DefaultWebProxy.Credentials))\n    WebRequest.DefaultWebProxy.Credentials = CredentialCache.DefaultCredentials;\n\n  using (WebClient wc = new WebClient()) {\n    // Seems that you need raw data, Byte[]; if you want String - wc.DownLoadString(url);\n    dat = wc.DownloadData(url);\n  }
1000	do {\n     Console.WriteLine("Enter reg. number: ");\n     newStudent.regNumber = Console.ReadLine();\n     if (newStudent.regNumber.Length == 7 && newStudent.regNumber[0] == 'E'){\n         break;\n     }\n     else\n     {\n         Console.WriteLine("wrong reg number");\n     }\n } while (true);
1001	FirstOrDefault()
1002	_arr[i] = new Label();   \n _arr[i].Click += (s, e) => MessageBox.Show("Message");
1003	string filePath = @"C:\Users\me\Documents\MASTERDIRECTORY\Folder7"\n\n                foreach (string Folder in Directory.GetDirectories(filePath))\n                {\n\n                  foreach (string file in Directory.GetFiles(Folder))\n                     {\n                       // here you can grab the log file path and add it to you Gridview\n                     }\n\n                }
1004	var cacheDir = Path.Combine(\n    Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData), \n    "MyApplicationName");
1005	public static IEnumerable<Type> GetTypesFromNamespace(Assembly assembly, \n                                               String desiredNamespace)\n{\n    return assembly.GetTypes()\n                   .Where(type => type.Namespace == desiredNamespace);\n}
1006	string s = File.ReadAllText("input.txt");\nstring empty = "buildLetter.Append(\"\").AppendLine();" + Environment.NewLine;\ns = s.Replace(empty, "");\ns = Regex.Replace(s, @"(?<="").*(?="")",\n         match => { return match.Value.Replace("\"",  "\\\""); }\n    );
1007	GlobalStrings.AddRange(localStrings);
1008	var mobileNumbers = testxml.Descendants("data").Select(x => new {\n                        mobilenumber = x.Element("mobilenumber").Value,\n                        address = x.Element("address").Value,\n                    }).ToList();
1009	Regex.Replace(input, @"[abc]", m => string.Format(@"\{0}", m.Value))
1010	var keys = new List<Key> { Key.Space, Key.OemPeriod, Key.D1, [...]};\nforeach(var key in keys)\n{\n     this.InputBindings.Add(new KeyBinding() { Command = MyCommandClass.KeyboardCommand, CommandParameter = key});\n]
1011	var result = _session.CreateCriteria...\n             .List<object[]>\n             .ToDictionary(x => (int)x[0], x => (int)x[1]);
1012	Random rnd = new Random();\nint myRandomNo= rnd.Next(10000000, 99999999); // creates a 8 digit random no.
1013	context.BillingDetails.AddOrUpdate(billDetails);\n        context.Entry(billDetails).State = EntityState.Added;
1014	dataGridView1.RowPostPaint += OnRowPostPaint;\n\nvoid OnRowPostPaint(object sender, DataGridViewRowPostPaintEventArgs e)\n{\n    MyObject value = (MyObject) dataGridView1.Rows[e.RowIndex].DataBoundItem;\n    DataGridViewCellStyle style = dataGridView1.Rows[e.RowIndex].DefaultCellStyle;\n\n    // Do whatever you want with style and value\n    ....\n}
1015	MIDL_INTERFACE("43826d1e-e718-42ee-bc55-a1e261c37bfe")\n   IShellItem : public IUnknown\n   {\n       // etc..\n   }
1016	XmlDocument doc = new XmlDocument();\ndoc.Load("sample.xml");\nXmlElement root = doc.DocumentElement;\nXmlNodeList nodes = root.SelectNodes("some_node"); // You can also use XPath here\n\nforeach (XmlNode node in nodes)\n{ \n    listView1.Items.Add(node.Attributes["element name"].Value);\n    // or add here your listview items\n}
1017	public int? value { get; set;}
1018	public class NotifyService\n    {\n        public static NotifyService DefaultInstace;\n\n        public NotifyService()\n        {\n            DefaultInstace = this;\n\n\n        }\n     ///.....SNIP......      \n   }
1019	public static void CallingFooBar()\n{\n   using (var ts=new TransactionScope())\n   {\n      var foo=new Foo();\n      foo.Bar();\n      ts.Complete();\n   }\n}
1020	try\n{\n    // get image from object\n    byte[] _ImageData = new byte[0];\n    _ImageData = (byte[])_SqlRetVal;\n    System.IO.MemoryStream _MemoryStream = new System.IO.MemoryStream(_ImageData);\n    _Image = System.Drawing.Image.FromStream(_MemoryStream);\n}\ncatch (Exception _Exception)\n{\n    // Error occurred while trying to create image\n    // send error message to console (change below line to customize error handling)\n    Console.WriteLine(_Exception.Message);\n\n    return null;\n}
1021	private void btPlayer_Click(object sender, EventArgs e)\n    {\n        foreach(Button btn in this.Controls.OfType<Button>())\n        {\n            if (!btn.Equals(btPlayer))\n            {\n                if (btPlayer.Bounds.IntersectsWith(btn.Bounds))\n                {\n                    Console.WriteLine("btPlayer intersects with " + btn.Name);\n                }\n            }\n        }\n    }
1022	0: a\n1: b\n..\n25: z\n26: 0
1023	The Windows Registry in C#
1024	private void ListView1_ItemSelectionChanged(Object sender, ListViewItemSelectionChangedEventArgs e) \n{\n    ListView1_ItemActivate(sender, e);\n}
1025	int y = 10;\nforeach (string name in names)\n{        \n    Button button = new Button();\n    button.Text = name;\n    button.Position = new Point(10, y);\n    y += 20;\n    button.Click += HandleButtonClick;\n    Controls.Add(button);\n}
1026	class Credentials\n{\n  public string User { get; set; }\n  public string Password { get; set; }\n}
1027	private void button1_Click(object sender, EventArgs e)\n{\n    var textInEachLine = richTextBox1.Text.Split(new string[] {"\n"}, StringSplitOptions.RemoveEmptyEntries);\n    string whereClause = string.Join("', '", textInEachLine).ToString();\n    MessageBox.Show(" IN ( '" + whereClause + "')");\n}
1028	int output(int deg, int zeropoint)\n    {\n        var relative = deg - zeropoint;\n        if (relative > 180)\n            relative -= 360;\n        else if (relative < -179)\n            relative += 360;\n        return relative;\n    }
1029	var strings = list.Select(item => item.Item3).ToArray();
1030	var groupedByBothConditions = lsEQData.GroupBy(x => new\n{\n    Range = ranges.FirstOrDefault(r => r > x.MagnitudeInMl),\n    IncEpicentre = x.IncEpicentre\n})\n.Select(g => new { g.Key,  TotalHits = g.Count().ToString()});
1031	// The database path.   \npublic static string DB_PATH =Path.Combine(Path.Combine(ApplicationData.Current.LocalFolder.Path, "sample.sqlite"));   \n// The sqlite connection.   \nprivate SQLiteConnection dbConn = new SQLiteConnection(DB_PATH);\ndbConn.CreateTable<Task>();
1032	object nullobj = Missing.Value;\ndoc = wordApp.Documents.Open(ref file,\n                             ref nullobj, ref nullobj, ref nullobj,\n                             ref nullobj, ref nullobj, ref nullobj,\n                             ref nullobj, ref nullobj, ref nullobj,\n                             ref nullobj, ref nullobj, ref nullobj,\n                             ref nullobj, ref nullobj, ref nullobj);\n\ndoc.Activate();\ndoc.Visible = true;\nint dialogResult = wordApp.Dialogs[Microsoft.Office.Interop.Word.WdWordDialog.wdDialogFilePrint].Show(ref nullobj);\n\nif (dialogResult == 1)\n{\n    doc.PrintOut(ref nullobj, ref nullobj, ref nullobj, ref nullobj, \n                 ref nullobj, ref nullobj, ref nullobj, ref nullobj, \n                 ref nullobj, ref nullobj, ref nullobj, ref nullobj, \n                 ref nullobj, ref nullobj, ref nullobj, ref nullobj, \n                 ref nullobj, ref nullobj);\n}
1033	ClientScript.RegisterClientScriptBlock(typeof(Page), "yourKey", "$().ready(function () { csscody.alert('Hello')});", true);
1034	static void Main(string[] args)\n{\n if (args.Length > 0)\n {\n    String paramValue1 = args[0];\n }\n}
1035	TextReader reader = new StreamReader(path);\n IEnumerable<string> data = this.ReadLines(reader);  \n\n foreach (var s in data){\n     // make sure its not null doesn't start with an empty line or something.\n     if (s != null && !string.IsNullOrEmpty(s) && !s.StartsWith("  ") && s.Length > 0){\n        s = s.ToLower().Trim();\n\n        // use regex to find some key in your case the "ID".\n        // look into regex and word boundry find only lines with ID\n        // double check the below regex below going off memory. \B is for boundry\n        var regex = new Regex("\BID\B");\n        var isMatch = regex.Match(s.ToLower());\n        if(isMatch.Success){ \n           // split the spaces out of the line.\n           var arr = s.split(' ');\n           var id = arr[1]; // should be second obj in array.\n\n        }\n\n     }\n }
1036	//Your custom GeoCoord container\n[DataContractAttribute]\npublic class GeoCoordContainer{\n  [DataMember]\n  public double lat = 0;\n\n  [DataMember]\n  public double lon = 0;\n\n  public GeoCoordContainer(Double lat, Double lon){\n    this.lat = lat;\n    this.lon = lon;\n  }\n}\n\n\n//Then in your Navigated from method\n  GeoCoordContainer cont = new GeoCoordContainer(MyGeoPosition.Lattitude,MyGeoPosition.Longitued);\n\n  //Now save it to the storage using EZ_Iso\n  EZ_Iso.IsolatedStorageAccess.SaveFile("MyLocation",cont);\n\n\n //To Retrieve it from storage \n  GeoCoordContainer cont = (GeoCoordContainer)EZ_Iso.IsolatedStorageAccess.GetFile("MyLocation",typeof(GeoCoordContainer));
1037	string data = "<your xml data>";\nXElement elem = XElement.Parse(data);\n\nvar departments = elem.Descendants("dept").ToList();\nforeach (var dept in departments)\n{\n    var sLegal = dept.Elements("startDate")\n            .First(p => p.Attribute("type").Value == "legal").Value;\n    var eLegal = dept.Elements("endDate")\n            .First(p => p.Attribute("type").Value == "legal").Value;\n    var sOp = dept.Elements("startDate")\n            .First(p => p.Attribute("type").Value == "operational").Value;\n    var eOp = dept.Elements("endDate")\n            .First(p => p.Attribute("type").Value == "operational").Value;\n    var attr=dept.Attribute("operationalStatus");\n    var opStatus = attr == null ? "" : attr.Value;                \n    attr = dept.Attribute("primaryRole");\n    var primaryRole = attr == null ? "" : attr.Value;                \n    attr = dept.Attribute("depChangeDate");\n    var depChangeDate = attr == null ? "" : attr.Value;\n    //do something with the values\n}
1038	bool result = xml.Descendants("ProductReceipt")\n    .Attributes().Single(x => x.Name == "ProductId")\n    .Value == productName;
1039	viewer.PTZControlURL = "http://ipaddress/axis-cgi/com/ptz.cgi";\nviewer.EnableAreaZoom = true;\nviewer.OneClicllkZoom = true;\nviewer.UIMode = "ptz-user-setting"
1040	var d = new DateTime(2013, 10, 04);\nvar str = d.ToString("M");\nConsole.WriteLine(d);
1041	HostContext.ServiceController.ExecuteMessage(new Message<T>(requestDto), httpReq);
1042	public interface IUpgradeDomainEvents\n{\n    IEnumerable<IDomainEvent> Upgrade(IDomainEvent e, string id);\n}
1043	this.Dispatcher.Invoke(DispatcherPriority.Normal, (Action)(() =>\n                {\n\n                        mshtml.HTMLDocument doc = ie.Document;\n\n                        mshtml.IHTMLWindow2 win = doc.parentWindow as IHTMLWindow2;\n                        win.execScript("init();", "javascript");\n\n\n                }));
1044	ProcessStartInfo processToRunInfo = new ProcessStartInfo();    \nprocessToRunInfo.Arguments = "Arguments");\nprocessToRunInfo.CreateNoWindow = true;\nprocessToRunInfo.WorkingDirectory = "C:\\yourDir\\";\nprocessToRunInfo.FileName = "test.exe";\n//processToRunInfo.CreateNoWindow = true;\n//processToRunInfo.WindowStyle = ProcessWindowStyle.Hidden;\nProcess process = new Process();\nprocess.StartInfo = processToRunInfo;\nprocess.Start();
1045	public bool IsFoobar(bool foo, bool bar)\n{\n    return db.Foobars.Any(fb => fb.foo == foo && fb.bar == bar);\n}
1046	// Create a request using a URL that can receive a post. \nWebRequest request = WebRequest.Create("http://localhost:8983/solr/update/extract?literal.id=doc1&commit=true");\n// Set the Method property of the request to POST.\nrequest.Method = "POST";\n// Create POST data and convert it to a byte array.\nstring postData = "myfile=@tutorial.html";\nbyte[] byteArray = Encoding.UTF8.GetBytes(postData);\n// Set the ContentType property of the WebRequest.\nrequest.ContentType = "application/x-www-form-urlencoded";\n// Set the ContentLength property of the WebRequest.\nrequest.ContentLength = byteArray.Length;
1047	DateTime.ParseExact("12/02/21 12:00 AM", "yy/MM/dd HH:mm tt", System.Globalization.CultureInfo.InvariantCulture).ToString("MMM. dd, yyyy HH:mm:ss");
1048	var str = loader.GetString("Greeting/Text");
1049	ProcessItem<object>(subDir, dir.MinAge,\n    ignored => subDir.NoArgs(),\n    /* ignored */ null,\n    string.Format(Messages.NotDeletedFolder, subDir.FullName));
1050	var message = new byte[] { 1, 2, 3 };\nvar s = new byte[32];\nbyte[] m;\nbyte[] x;\n\nusing (HashAlgorithm sha256 = SHA256.Create())\n{\n    m = sha256.ComputeHash(message);\n}\n\nusing (IncrementalHash sha256 = IncrementalHash.CreateHash(HashAlgorithmName.SHA256))\n{\n    sha256.AppendData(m);\n    sha256.AppendData(s);\n    x = sha256.GetHashAndReset();\n}
1051	dynamic myJson = Json.Decode(myJsonString);\nforeach (var url in myJson.data.images.standard_resolution){\n//DO SOMETHING\n}
1052	protected void listbox_mar_SelectedIndexChanged(object sender, EventArgs e)\n{\n    for (int i = 0; i < listbox_mar.Items.Count; i++)\n    {\n        if (listbox_mar.Items[i].Selected)\n        {\n            lbl_mar_cat.Text += listbox_mar.Items[i].Text+ " , " ;\n            listbox_mar.Items.Remove(listbox_mar.Items[i]);\n        }\n    }       \n}
1053	var query = dbConnection.Valgdata.GroupBy(u => u.omraade_id)\n      .Select(x => x.FirstOrDefault(y => x.Max(p => p.timestamp) == y.timestamp));
1054	Lazy<T>
1055	public void AddLog(Log log)\n{\n    try\n    {\n        richTextBox1.SelectAll();            \n        string oldText = this.richTextBox1.SelectedRtf;\n\n        this.richTextBox1.Text = log.User + ": " + log.Message + "\n";\n        this.richTextBox1.Select(0, log.User.Length);\n        this.richTextBox1.SelectionColor = Color.GreenYellow;\n        this.richTextBox1.Select(log.User.Length + 2, log.Message.Length);\n        this.richTextBox1.SelectionColor = Color.White;\n        this.richTextBox1.DeselectAll();\n        this.richTextBox1.SelectionStart = this.richTextBox1.TextLength;\n        this.richTextBox1.SelectedRtf = oldText;\n        this.richTextBox1.DeselectAll();\n\n    }\n    catch { }\n}
1056	public class StreamReader : TextReader\n{\n    public override void Close()\n    {\n        this.Dispose(true);\n    }\n\n    protected override void Dispose(bool disposing)\n    {\n        try\n        {\n            if ((this.Closable && disposing) && (this.stream != null))\n            {\n                this.stream.Close();\n            }\n        }\n        finally\n        {\n            if (this.Closable && (this.stream != null))\n            {\n                this.stream = null;\n                this.encoding = null;\n                this.decoder = null;\n                this.byteBuffer = null;\n                this.charBuffer = null;\n                this.charPos = 0;\n                this.charLen = 0;\n                base.Dispose(disposing);\n            }\n        }\n    }\n}
1057	value.ToString("X4")
1058	data: {"data": JSON.stringify(arrayRows.data)}
1059	string date = "2011-10-05T16:58:05.043GMT".Replace("GMT", "z");\nConsole.WriteLine(DateTime.Parse(date));
1060	db.SaveChanges()
1061	public class MockOperationBehavior : BehaviorExtensionElement,  IOperationBehavior, IEndpointBehavior\n{\n  public void ApplyDispatchBehavior(ServiceEndpoint endpoint, EndpointDispatcher endpointDispatcher)\n  {\n     foreach (var op in endpoint.Contract.Operations)\n     {\n         op.Behaviors.Add(this);\n     }\n  }\n}
1062	names.OrderBy(s => s.Split('-')[0]).ThenBy(s => s.Split('-')[1]);
1063	public void SaveChanges()\n{\n    foreach (var entry in Context.ChangeTracker.Entries<ICreatedAt>().Where(x => x.State == EntityState.Added && x.Entity.CreatedAt == default(DateTime)))\n            entry.Entity.CreatedAt = DateTime.Now;\n\n    foreach (var entry in Context.ChangeTracker.Entries<ICreatedBy>().Where(x => x.State == EntityState.Added && x.Entity.CreatedBy == null))\n        entry.Entity.CreatedBy = ContextManager.CurrentUser;\n\n    foreach (var entry in Context.ChangeTracker.Entries<IModifiedAt>().Where(x => x.State == EntityState.Modified))\n        entry.Entity.ModifiedAt = DateTime.Now;\n\n    foreach (var entry in Context.ChangeTracker.Entries<IModifiedBy>().Where(x => x.State == EntityState.Modified))\n        entry.Entity.ModifiedBy = ContextManager.CurrentUser;\n\n    Context.SaveChanges();\n}
1064	using rs = ReportService2005;\nusing re = ReportExecution;\n\n// ...\n\nrs.ParameterValue[] values = null;\nrs.DataSourceCredentials[] credentials = null;\nrs.ReportParameter[] parameters;\nre.ParameterValue v2 = ...;
1065	A user of the Tao Framework implemented this idea with promising results. He wrote wrappers for OpenGL resources and implemented the disposable pattern like this:\nprivate void Dispose(bool manual)\n{\n    if (!disposed)\n    {\n        if (manual)\n        {\n             Gl.glDeleteTextures(1, ref _tid);\n             GC.SuppressFinalize(this);\n             disposed = true;\n        }\n        else\n        {\n            GC.KeepAlive(SimpleOpenGlControl.DisposingQueue);\n            SimpleOpenGlControl.DisposingQueue.Enqueue(this);\n        }\n    }\n}
1066	SmtpServer.Port = ****;\n        SmtpServer.Send(mail); \n        Mail.Dispose();\n        Console.WriteLine("Message Sent");
1067	foreach (GridViewRow gvrow in GridView1)\n{\n    //loop through gridview's rows and find the row you're looking for\n}
1068	string sTest1 = "abc\0\0def";\n\nstring sTest2 = sTest1.Replace("\0", "");\nConsole.WriteLine(sTest2);\n\nint iLocation = sTest1.IndexOf('\0');\nstring sTest3 = "";\nif (iLocation >= 0)\n{\n    sTest3 = sTest1.Substring(0, iLocation);\n}\nelse\n{\n    sTest3 = sTest1;\n}\nConsole.WriteLine(sTest3);\n\nConsole.ReadLine();
1069	string newName = searcha.GetName().Name;\nif (!assemblyView.Items.Cast<ListViewItem>().Any(lvi => lvi.Text == newName))
1070	grid1.get_batchEditingManager().saveAllChanges();
1071	var res = _linq.sp_SelectRecords(txtParam1.Text);\n            foreach (var order in res)\n            {\n                ListViewItem lvi = new ListViewItem(new[] { order.Cod_Prod, order.Description, order.Price.ToString() });\n                ListView1.Items.Add(lvi);\n            }
1072	char ch = 'A';\nstring strOut = String.Format(@"\x{0:x4}", (ushort)ch);
1073	Array.Copy
1074	private static readonly int Target = 1234567890;\nprivate static readonly List<int> Parts = new List<int> { 4, 7, 18, 32, 57, 68 };\n\nstatic void Main(string[] args)\n{\n    Console.WriteLine(Solve(Target, Parts));\n    Console.ReadLine();\n}\n\nprivate static bool Solve(int target, List<int> parts)\n{\n    parts.RemoveAll(x => x > target || x <= 0);\n    if (parts.Count == 0) return false;\n\n    var divisor = parts.First();\n    var quotient = target / divisor;\n    var modulus = target % divisor;\n\n    if (modulus == 0)\n    {\n        Console.WriteLine("{0} X {1}", quotient, divisor);\n        return true;\n    }\n\n    if (quotient == 0 || parts.Count == 1) return false;\n\n    while (!Solve(target - divisor * quotient, parts.Skip(1).ToList()))\n    {\n        if (--quotient != 0) continue;\n        return Solve(target, parts.Skip(1).ToList());\n    }\n\n    Console.WriteLine("{0} X {1}", quotient, divisor);\n    return true;\n}
1075	if ((e.KeyCode == Keys.Enter) || (e.KeyCode == Keys.Tab))\n        {\n            Parent.SelectNextControl(textBox_Zakljucak, true, true, true, true);\n            e.Handled = e.SuppressKeyPress = true;\n        }
1076	Response.ContentType = "application/pdf";\nResponse.AddHeader("content-disposition", "attachment; filename="+filePath); \nResponse.WriteFile(path);\nHttpContext.Current.ApplicationInstance.CompleteRequest();
1077	pc.Limits.Set(new Vector3(-1,-1,-1), new Vector3(1,1,1));
1078	public class MyTextBox : TextBox\n{\n  public bool AllowDigitsOnly { get; set; }\n\n  protected override void OnKeyPress(KeyPressEventArgs e)\n  {\n    if (this.AllowDigitsOnly)\n    {\n      if (!char.IsDigit(e.KeyChar))\n        e.Handled = true;\n    }\n    base.OnKeyPress(e);\n  }\n}
1079	value.ToString("0.00");
1080	string result=list.Select(w=>w.Key+";"+w.Value).Aggregate((c,n)=>c+","+n);
1081	List<T>
1082	public static string Transform(XmlDocument doc, XmlDocument stylesheet)\n    {\n        try\n        {\n            System.Xml.Xsl.XslCompiledTransform transform = new System.Xml.Xsl.XslCompiledTransform();\n            transform.Load(stylesheet); // compiled stylesheet\n            System.IO.StringWriter writer = new System.IO.StringWriter();\n            XmlReader xmlReadB = new XmlTextReader(new StringReader(doc.DocumentElement.OuterXml));\n            transform.Transform(xmlReadB, null, writer);\n            return writer.ToString();\n        }\n        catch (Exception ex)\n        {\n            throw ex;\n        }\n\n    }
1083	string[] names = Enum.GetNames (typeof(MyEnum));
1084	delegate int GetNameFromDictionaryCallback(\n    UInt64 key, [MarshalAs(UnmanagedType.LPWStr)] StringBuilder value);\n\npublic bool GetNameFromDictionary(UInt64 key, StringBuilder value)\n{\n    string s;\n    if (dict.TryGetValue(key, out s))\n    {\n        value.Append(s);\n        return true;\n    }\n    return false;\n}
1085	Create procedure s_ProcTable\n@TableName varchar(128)\nas\n\ndeclare @sql varchar(4000)\n    select @sql = 'select count(*) from [' + @TableName + ']'\n    exec (@sql)\ngo
1086	public event PropertyChangedEventHandler PropertyChanged;\n    private void NotifyPropertyChanged(String info)\n    {\n        if (PropertyChanged != null)\n        {\n            PropertyChanged(this, new PropertyChangedEventArgs(info));\n        }\n    }
1087	window.location.replace('url');
1088	var Enumerable.Range(0,23)\n      .Join(MyTable.GroupBy(x => x.TableDate.Hour())\n             .Select(g => new { hour = g.Key, rev = g.Revenue.Sum() },\n            h => h,\n            g => g.hour,\n            (h , g) -> new { hour = h, revenue = g.rev });
1089	alt='<%# "Banner_" + Container.ItemIndex %>'
1090	public Result<Boolean> CreateLocation(LocationKey key)\n{\n    LocationDAO locationDAO = new LocationDAO();\n    return WrapMethod(() => locationDAO.CreateLocation(key));\n}\n\n\npublic Result<Boolean> RemoveLocation(LocationKey key)\n{\n    LocationDAO locationDAO = new LocationDAO();\n    return WrapMethod(() =>  locationDAO.RemoveLocation(key));\n}\n\n\nstatic Result<T> WrapMethod<T>(Func<Result<T>> func)\n{\n    try\n    {\n        return func();\n    }\n    catch (UpdateException ue)\n    {\n        return new Result<T>(default(T), ue.Errors);\n    }\n}
1091	[XmlIgnore]\npublic bool Active { get; set; }\n\n[XmlAttribute("Active"), Browsable(false)]\n[EditorBrowsable(EditorBrowsableState.Never)]\npublic string ActiveString {\n    get { return Active ? "Yes" : "No"; }\n    set {\n        switch(value) {\n            case "Yes": Active = true; break;\n            case "No": Active = false; break;\n            default: throw new ArgumentOutOfRangeException();\n        }\n    }\n}
1092	foreach(var tbox in new[]\n     {\n         tbox0, tbox1, tbox2\n     })\n{\n    tbox.KeyPress += (sender,e) => keypressed(sender,e);\n}\n\nprivate void keypressed(object sender, KeyPressEventArgs e)\n{\n    if (e.KeyChar == (char)Keys.Back)\n        ((Control)sender).GetNextControl((Control)sender, false).Select(); // .Focus()\n}
1093	var groups = from employee in employees\n             group employee by employee.ReportsTo into g\n             orderby g.Key\n             select g;
1094	private List<string> SelectedNodes = new List<string>();\n\nprivate void GetSelectedNodeText(NodeCollection nodes)\n{\n    foreach (Node node in nodes)\n    {\n        if (node.IsChecked != true && node.IsChecked != false)\n        {\n            SelectedNodes.Add(node.Text + "_" + GetSelectedChildNodeText(node.ChildNodes));\n        }\n        else if (node.IsChecked == true)\n        {\n            SelectedNodes.Add(node.Text);\n        }\n    }\n}\n\nprivate string GetSelectedChildNodeText(NodeCollection nodes)\n{\n    string retValue = string.Empty;\n\n    foreach (Node node in nodes)\n    {\n        if (node.IsChecked != true && node.IsChecked != false)\n        {\n            retValue = node.Text + "_" + GetSelectedChildNodeText(node.ChildNodes);\n        }\n        else if (node.IsChecked == true)\n        {\n            retValue = node.Text;\n        }\n    }\n\n    return retVal;\n}
1095	string input = "abcdefg@fedcba";\nstring result = input.Substring(0, input.IndexOf('@'));
1096	X-Forwarded-For: client1, proxy1, proxy2, ...
1097	private static void uploadImage()\n        {\n            try\n            {\n\n                foreach (var img in lImageSet)\n                {\n                    Console.WriteLine("Image Name: {0}", img.getName());\n                }\n\n                foreach (var img in lImageSet)\n                {\n                    //Counter to track the number of images that have been uploaded\n                    i++;\n\n\n                    //For every 10 images that are uploaded, to reduce congestion, log out of SharePoint and log back in.\n                    if (i % 10 == 0)\n                    {\n                        clientContext.Dispose();\n                        sharepointLogin();\n                    }\n\n                    ....
1098	var fadeInOutAnimation = new DoubleAnimation()\n{\n    From = 1,\n    To = 0,\n    Duration = TimeSpan.FromSeconds(1),\n};\n\nvar storyboard = new Storyboard\n{\n    Duration = TimeSpan.FromSeconds(2),\n    AutoReverse = true,\n    RepeatBehavior = RepeatBehavior.Forever\n};\n\nStoryboard.SetTarget(fadeInOutAnimation, MyCanvas);\nStoryboard.SetTargetProperty(fadeInOutAnimation,\n                             new PropertyPath(Canvas.OpacityProperty));\n\nstoryboard.Children.Add(fadeInOutAnimation);\nMyCanvas.BeginStoryboard(storyboard);
1099	decimal returnVal = 0;\n        for (int i = 1; i < rowused; i++) //NB: off-by-one error here? Shouldn't it be from 1 to <= rows ?\n        {\n            cRng = (Excel.Range)xlWorkSheet.Cells[i, rngResult.Column];\n            if (cRng != null)\n            {\n                decimal currentVal;\n                if( decimal.TryParse(cRng.Value2.ToString(), out currentVal) )\n                    returnVal += currentVal;\n            }\n        }\n        return returnVal.ToString();
1100	private void TextBox_KeyDown(object sender, KeyRoutedEventArgs e)\n{\n    if (e.Key == (VirtualKey)(189))\n    {\n         e.Handled = true;\n    }\n}
1101	var detail = (from x in result.Descendants("Transaction") \n                          select new { \n                              TransactionID = x.Element("TransactionID").Value, \n                              Frequency =  x.Element("Frequency").Value,\n                              Amount = x.Element("Amount").Value, \n                              Email = x.Element("Email").Value,\n                              Status = x.Element("Status").Value })\n                              .First();
1102	MyProcess.StartInfo.Arguments = "\"this argument has spaces\"";
1103	var query = from Apps in objApps\n            join ratings in objRatings\n              on Apps.AppId equals ratings.AppId\n            where ratings.RatingGiven == 1 \n            group Apps by Apps.AppId into g\n            select new { AppId = g.AppId, ItemCount = g.Count() }
1104	foreach (string Items in listBox39.Items)\n{\n    using (OracleCommand crtCommand = new OracleCommand(@"SELECT  REGEXP_REPLACE ( REPLACE ( dbms_metadata.get_ddl ('PROCEDURE', '" + Items + @"'), '""" + txtSrcUserID.Text.ToUpper() + @""".'),'^\s+', NULL, 1, 0, 'm') FROM dual", conn1))\n    {\n\n    }\n}
1105	foreach(oldCount in absenceCount)\n{\n  DataRow[] dr = dt.Select("Student ID='" + ID + "' AND Absence Count != '" + oldCount);\n  dr[0].Delete();\n}
1106	protected void Button1_Click(object sender, EventArgs e)\n    {\n\n    var test = new List<string>();\n\n    foreach (ListItem item in CheckBoxList1.Items)\n    {\n\n        if (item.Selected)\n        {\n            // oneSelected = true;\n\n            test.Add(item.Value);\n\n            Response.Write("<script LANGUAGE='JavaScript' >alert('"+item.Value+"')</script>");\n\n        }\n\n\n    }\n }
1107	.linkButton\n{\n   background-color: transparent;\n   border-style: none;\n   color: /* Something nice */\n   cursor: pointer;\n   text-align: left;\n   text-decoration: underline;\n   display: table-cell;\n}
1108	private void InitializeCursorMonitoring()\n{\n    var point = Mouse.GetPosition(Application.Current.MainWindow);\n    var timer = new System.Windows.Threading.DispatcherTimer();\n\n    timer.Tick += delegate\n    {\n        Application.Current.MainWindow.CaptureMouse();\n        if (point != Mouse.GetPosition(Application.Current.MainWindow))\n        {\n            point = Mouse.GetPosition(Application.Current.MainWindow);\n            Console.WriteLine(String.Format("X:{0}  Y:{1}", point.X, point.Y));\n        }\n        Application.Current.MainWindow.ReleaseMouseCapture();\n    };\n\n    timer.Interval = new TimeSpan(0, 0, 0, 0, 100);\n    timer.Start();\n}
1109	TextBox.IsReadOnly
1110	System.IO.Path.GetFileName(@"C:\Program Files\Internet Explorer\iexplore.exe")
1111	var d1 = new XmlDocument();\nd1.LoadXml("<Tags><Tag name =\"1\"></Tag></Tags>");\n\nvar d2 = new XmlDocument();\nd2.LoadXml("<Tags><Tag name =\"2\"></Tag></Tags>");\n\nvar newNode = d1.ImportNode(d2.SelectSingleNode("/Tags/Tag"), true);\nd1.DocumentElement.AppendChild(newNode);\n\nConsole.WriteLine(d1.OuterXml);
1112	XmlTextReader xml;\n                        WebRequest web;\n\n                        web = WebRequest.Create(xmlurl);\n                        if(Convert.ToBoolean(ConfigurationManager.AppSettings["behindproxy"].ToString()))\n                        {\n                            WebProxy prxy = new WebProxy();\n                            Uri prxyUri = new Uri("http://xxx:8080");\n\n                            prxy.Address = prxyUri;\n                            prxy.BypassProxyOnLocal = true;\n                            prxy.Credentials = new NetworkCredential(ConfigurationManager.AppSettings["proxyusername"].ToString(), ConfigurationManager.AppSettings["proxypassword"].ToString());\n                            web.Proxy = prxy;\n                        }\n\n                        var response = web.GetResponse().ToString();\n                        xml = new XmlTextReader(response);
1113	window.location.href = obj.MessageLink;
1114	sqlComm.ExecuteNonQuery();\nint lastID = (int)sqlComm.ExecuteScalar();
1115	List<CustomClass> SubList = ListOfObjects\n        .Where(obj => ListOfIDs.Contains(obj.ID))\n        .ToList();
1116	System.Random
1117	namespace MyCLRNamespace\n{\n    public partial class Window1 : Window\n    {\n        public Window1()\n        {\n            InitializeComponent();\n\n            Polygon MyPolygon = new Polygon();\n            MyPolygon.Points = new PointCollection {    new Point(100, 0),\n                                                        new Point(200, 200),\n                                                        new Point(0, 200)   };\n            //if (MyPolygon.IsMeasureValid == false)\n                MyPolygon.Measure(new Size( double.PositiveInfinity,\n                                            double.PositiveInfinity));\n\n            double PolyWidth = MyPolygon.DesiredSize.Width;\n        }\n    }\n}
1118	var searchResults = session.CreateCriteria<Product>()\n    //your query parameters here\n    .List<Product>();\nsession.CreateQuery(@"update Product set SearchCount = SearchCount + 1\n                      where Id in (:productIds)")\n       .SetParameterList("productIds", searchResults.Select(p => p.Id).ToList())\n       .ExecuteUpdate();
1119	select\n      new ItemManagementViewModel\n          {\n              FormType = value2.Name,\n              FormControllerID = value1.RecordId,\n              FormControllerName = value1.Name,\n              values = innerResult\n          }).ToList();
1120	using System;\nusing System.Xml;\n\npublic class Sample {\n\n  public static void Main() {\n\n    // Create the XmlDocument.\n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml("<item><name>wrench</name></item>"); //Your string here\n\n    // Save the document to a file and auto-indent the output.\n    XmlTextWriter writer = new XmlTextWriter("data.xml",null);\n    writer.Formatting = Formatting.Indented;\n    doc.Save(writer);\n  }\n}
1121	unsafe public void mf()\n   {\n      // Null-terminated ASCII characters in an sbyte array \n      sbyte[] sbArr1 = new sbyte[] { 0x41, 0x42, 0x43, 0x00 };\n      sbyte* pAsciiUpper = &sbArr1[0];   // CS0212\n      // To resolve this error, delete the previous line and \n      // uncomment the following code:\n      // fixed (sbyte* pAsciiUpper = sbArr1)\n      // {\n      //    String szAsciiUpper = new String(pAsciiUpper);\n      // }\n   }
1122	var resHeaders = sess.oResponse.headers.ToString();\n    var resBody = sess.GetResponseBodyAsString();
1123	routes.MapRoute(\n            name: "Default",\n            url: "{controller}/{action}/{param1}/{param2}",\n            defaults: new { controller = "home", action = "Index" , \n                param1 = UrlParameter.Optional, param2 = UrlParameter.Optional, }\n        );
1124	[assembly: OwinStartup(typeof(CRMWeb.Startup))]\n\nnamespace CRMWeb\n{\n    public class Startup\n    {\n        public void Configuration(IAppBuilder app)\n        {\n            app.MapSignalR();\n        }\n    }\n}
1125	DirectoryInfo directory = new DirectoryInfo(Directory.GetCurrentDirectory());\n        List<FileInfo> files = directory.GetFiles().ToList();\n        List<FileInfo> unAllowed = files.FindAll(f => !allowedFiles.Contains(f.Name));\n\n        if (unAllowed.Count > 0)\n        {\n            string notAllowedFiles = "";\n            unAllowed.ForEach(f => notAllowedFiles += f.Name + ",");\n            Message.Warning("Unallowed files found ! Please remove " + notAllowedFiles);\n            return;\n        }
1126	var addMethod = typeof(BagA).GetMethod("Add", new[] {typeof(string), typeof(BagB)});\naddMethod.Invoke(MyBagA, new object[] {"123", MyBagB});
1127	string result = Regex.Replace(input, ",+", ",").Trim(',');
1128	newGrid.SetRow(image, 0); \nnewGrid.SetColumn(image, 0); \nnewGrid.Children.Add(image); \n\n// Also \n\nLayoutRoot.Children.Add( newGrid );
1129	private List<DateTime> GetRange()\n {\n    var res = new List<DateTime>();\n    var start = DateTime.Parse(textBox1.Text);\n    var end = DateTime.Parse(textBox2.Text);\n    for (var date = start; date <= end; date = date.AddDays(1))\n         res.Add(date);\n\n    return res;\n }
1130	XpsConverter.Convert("D:\\Example\\test.xps");
1131	your_asp_literal.Text = "<img src='"+ GetGlobalResourceObject("your_resx_file", "your_picture_path").ToString() + "' alt='your_alt' height='42' width='42'/>";
1132	[DebuggerStepThrough]\nstatic void DebuggerStepThroughInPartialClass()\n{\n   WrappedClass.NonDebuggerStepThrough();\n}\n\nclass WrappedClass{\n   static void NonDebuggerStepThroughInNewClass()\n   {\n      int bar = 0;\n      bar++;\n   }\n}
1133	e.g. ErrorLogProvider.Instance.Write(something)
1134	private void btnaddcomp_Click(object sender, EventArgs e)\n{\n    DataTable ds = (DataTable)dgsetcompt.DataSource;\n\n    // Create a new row...\n    DataRow dr = ds.NewRow();\n\n    // Set the two fields\n    dr["code"] = this.dgsetcompt.Rows.Count + 1;\n    dr["date"] = new DateTime(2015, 1, 3);\n\n    // Add the newly created row to the Rows collection of the datatable\n    ds.Rows.Add(dr);\n\n    // Not needed\n    //dgsetcompt.DataSource = ds;\n}
1135	var formattedStatus = from status in _statusCollection.AsParallel()\n                      select FormatStatus(status);
1136	Textie.Attributes.Add("onblur", "javascript:CallMe('" + Textie.ClientID + "',        '" + Textie.ClientID + "')");
1137	StudentRecord student = new StudentRecord();\nstudent.ToString();
1138	string str = @"Microsoft Windows XP Professional x64 Edition|C:\WINDOWS|\Device\Harddisk4\Partition1";\nstring str2 = str.Split('|')[0];
1139	var newLine = new Line();\n\n// some newLine initializing\n\nBinding binding = new Binding();\nbinding.Source = topStack;\nbinding.Path = new System.Windows.PropertyPath("ActualWidth");\nnewLine.SetBinding(Line.X2Property, binding);\n\ntopStack.Children.Add(newLine);
1140	LineItem lineItemAlias = null;\nProduct productAlias = null;\n\nvar subQuery = QueryOver.Of<Order>()\n            .JoinAlias(x => x.LineItems, () => lineItemAlias)\n            .JoinAlias(() => lineItemAlias.Product, () => productAlias)\n            .Where(() => productAlias.Name == "foo")\n            .Select(Projections.Group<Order>(x => x.Id));\n\nvar results = Session.QueryOver<Order>()\n              .WithSubquery.WhereProperty(x => x.Id).In(subQuery)\n              .List();
1141	public static bool operator > (Circle x, Circle y) {\n   return x.CompareTo(y) > 0;\n}\n\n// and so on for the other operators
1142	int lcid = GetSystemDefaultLCID();\n        var ci = System.Globalization.CultureInfo.GetCultureInfo(lcid);\n        var page = ci.TextInfo.OEMCodePage;\n        // etc..\n\n    [System.Runtime.InteropServices.DllImport("kernel32.dll")]\n    public static extern int GetSystemDefaultLCID();
1143	StringCollection filesToBeReplaced = new StringCollection();\n\nprivate void button2_Click(object sender, EventArgs e)\n{\nforeach (string file in Directory.GetFiles(@"\\" + textBox1.Text +      @"\\d$\\NSB\\Coalition\\EDU", "*.err").Where(item => item.EndsWith(".err")))\n{\n  //Now you have file names without extension        \n  filesToBeReplaced.Add(Path.GetFileNameWithoutExtension (file));\n      File.Delete(file);\n  }\n}\nprivate void CopyGoodFilesFromSource()\n{\n  foreach(string fileName in filesToBeReplaced)\n  {\n     string sourceFilePath = Path.Combine("YOUR FOLDER FOR GOOD FILES", \nPath.ChangeExtension(fileName,"Your Extension")) ;\n      string destinationPath = Path.Combine("Destination Folder",\nPath.ChangeExtension(fileName, "Your Extension in destination folder");\n\n     File.Copy(sourceFilePath , destinationPath, true);\n  }\n}
1144	// Assuming you already have SPWeb and SPList objects\n...\nSPRoleAssignment roleAssignment = new SPRoleAssignment("dom\\user", "user@dom", "user", "some notes");\nSPRoleDefinition roleDefinition = web.RoleDefinitions.GetByType(SPRoleType.Contributor);\nroleAssignment.RoleDefinitionBindings.Add(roleDefinition);\nif (!myList.HasUniqueRoleAssignments)\n{\n    myList.BreakRoleInheritance(true); // Ensure we don't inherit permissions from parent\n} \nmyList.RoleAssignments.Add(roleAssignment);\nmyList.Update();
1145	string html = "<span>Hello world</sspan>";\n\nHtmlDocument doc = new HtmlDocument();\ndoc.LoadHtml(html);\n\nif (doc.ParseErrors.Count() > 0)\n{\n   //Invalid HTML\n}
1146	public void updateDB(object paramobj)\n{\n    foreach(var prop in paramobj.GetType().GetProperties())\n    {\n           //grab\n    }\n    // update\n }
1147	File.OpenRead(Server.MapPath("foo.txt"));
1148	YourCustomControl uc = null;\n\nprivate void button1_Click(object sender, EventArgs e)\n{\n     uc = new YourCustomControl();\n     this.Controls.Add(uc); // this represent the user control in which you want to add\n                            // You can add it in some container like Panel or GroupBox\n}
1149	MemoryStream memoryStream = new MemoryStream();\n\n        byte[] fileBytes = File.ReadAllBytes(filepath);\n        memoryStream.Write(fileBytes, 0, fileBytes.Length);\n        memoryStream.Position = 0;\n\n        BitmapSource img = BitmapFrame.Create(memoryStream);\n        BitmapMetadata meta = (BitmapMetadata)img.Metadata;\n        DateTime datetaken = DateTime.Parse(meta.DateTaken);\n        System.IO.File.Delete(filepath);
1150	listView1.Columns.Add("Col1");\nlistView1.Columns.Add("Col2");\n\nstring[] strArrGroups = new string[3] { "FIRST", "SECOND", "THIRD" };\nstring[] strArrItems = new string[4] { "uno", "dos", "twa", "quad" };\nfor (int i = 0; i < strArrGroups.Length; i++)\n{\n    int groupIndex = listView1.Groups.Add(new ListViewGroup(strArrGroups[i], HorizontalAlignment.Left));\n    for (int j = 0; j < strArrItems.Length; j++)\n    {\n        ListViewItem lvi = new ListViewItem(strArrItems[j]);\n        lvi.SubItems.Add("Hasta la Vista, Mon Cherri!");\n        listView1.Items.Add(lvi);\n        listView1.Groups[i].Items.Add(lvi);\n    }\n}
1151	static void Main(string[] args)\n{\n    Queue<string> lines = new Queue<string>();\n    using (var reader = new StreamReader(args[0]))\n    {\n        string line;\n        while ((line = reader.ReadLine()) != null)\n        {\n            if (line.Contains("error"))\n            {\n                Console.WriteLine("----- ERROR -----");\n                foreach (var errLine in lines)\n                    Console.WriteLine(errLine);\n                Console.WriteLine(line);\n                Console.WriteLine("-----------------");\n            }\n\n            lines.Enqueue(line);\n\n            while (lines.Count > 6)\n                lines.Dequeue();\n        }\n    }\n}
1152	string customPropertyNamespace = "http://schemas.microsoft.com/mapi/string/{00020329-0000-0000-C000-000000000046}/";    \nOutlook.Forlder oFolder = oPublicFolder.Folders["Babillards"].Folders["SYSOTI"].Folders["MEP"];\n\nRedemption.RDOSession session = new RDOSesssion();\nsession.MAPUIOBJECT = Application.Session.MAPIOBJECT;\nRedemption.RDOFolder rFolder = session.(RDOFolder)session.GetRDOObjectfromOutlookObject(oFolder);\nRedemption.RDOMail rMsg = rFolder.Items.Add("ipm.note.mep");\nrMsg.Fields[customPropertyNamespace + "prop1"] = "SomeText";\nrMsg.Save();\n//reopen in Outlook and display. Or you can use rMsg.Display()\nOutlook._MailItem oMep = Application.Session.GetItemFromID(rMsg.EntryID);\noMep.Display(false);
1153	string StrQuery;\ntry\n{\n    using (SqlConnection conn = new SqlConnection(ConnString))\n    {\n        using (SqlCommand comm = new SqlCommand())\n        {\n            comm.Connection = conn;\n            conn.Open();\n            for(int i=0; i< dataGridView1.Rows.Count;i++)\n            {\n                StrQuery= @"INSERT INTO tableName VALUES (" \n                    + dataGridView1.Rows[i].Cells["ColumnName"].Value +", " \n                    + dataGridView1.Rows[i].Cells["ColumnName"].Value +");";\n                comm.CommandText = StrQuery;\n                comm.ExecuteNonQuery();\n            }\n        }\n    }\n}
1154	bool hasDecimal = !percentage.Value.ToString("P1", CultureInfo.InvariantCulture).EndsWith(".0 %");\nstring percentageMask = hasDecimal ? "{0:P1}" : "{0:P0}";\nstring percentageValue = string.Format(CultureInfo.CurrentCulture, percentageMask, percentage);
1155	LinearGradientColorTable linGrBrush = new LinearGradientColorTable(\n           Color.DarkGray,\n           Color.DarkGray);\n\n        Office2007Renderer renderer = GlobalManager.Renderer as Office2007Renderer;\n        if (renderer == null) return;\n        Office2007ColorTable table = renderer.ColorTable;\n        // Stand-alone ComboBoxEx colors\n        Office2007ComboBoxColorTable comboColors = table.ComboBox;\n        comboColors.DefaultStandalone.Border = Color.DarkGray;\n        comboColors.DefaultStandalone.Background = Color.White;\n        comboColors.DefaultStandalone.ExpandText = Color.LightGray;\n        comboColors.DefaultStandalone.ExpandBorderInner = linGrBrush;\n        comboColors.DefaultStandalone.ExpandBorderOuter = linGrBrush;
1156	private IEnumerable<Component> EnumerateComponents()\n{\n    return this.GetType().GetFields(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)\n           .Where(f => typeof(Component).IsAssignableFrom(f.FieldType))\n           .Where(f => !typeof(Control).IsAssignableFrom(f.FieldType))\n           .Select(f => f.GetValue(this))\n           .OfType<Component>();\n}
1157	protected string FormatXml(XmlNode xmlNode)\n{        \n    StringBuilder builder = new StringBuilder();\n\n    // We will use stringWriter to push the formated xml into our StringBuilder bob.\n    using (StringWriter stringWriter = new StringWriter(builder))\n    {\n        // We will use the Formatting of our xmlTextWriter to provide our indentation.\n        using (XmlTextWriter xmlTextWriter = new XmlTextWriter(stringWriter))\n        {\n            xmlTextWriter.Formatting = Formatting.Indented;\n            xmlNode.WriteTo(xmlTextWriter);\n        }\n    }\n\n    return builder.ToString();\n}
1158	DateTime.Now.ToString("dd/MM/yyyy")));
1159	[Required(ErrorMessage = "Choose an image"), \nFileExtensions(Extensions = "jpg,gif,png", ErrorMessage = "Error")]\npublic HttpPostedFileBase BannerData { get; set; }
1160	class BetterLinkLabel : LinkLabel\n{\n  protected override bool ProcessMnemonic( char charCode )\n  {\n    if( base.ProcessMnemonic( charCode ) )\n    {\n      // TODO: pass a valid LinkLabel.Link to the event arg ctor\n      OnLinkClicked( new LinkLabelLinkClickedEventArgs( null ) );\n      return true;\n    }\n    return false;\n  }\n}
1161	expression = a => \n    (SearchResult.Name == null || a.Name == SearchResult.Name) && \n    (SearchResult.condition == null || Search.condition == (a.PersonType != null));
1162	Type t = obj.GetType();
1163	public Form1()\n        {\n            InitializeComponent();\n            B1.Text = "LOL";\n            Control ctl = FindControl(this, "B1");\n            if (ctl is TextBox)\n                listBox1.Items.Add(((TextBox)ctl).Text);\n        }\n        public static Control FindControl(Control parent, string ctlName)\n        {\n            foreach (Control ctl in parent.Controls)\n            {\n                if (ctl.Name.Equals(ctlName))\n                {\n                    return ctl;\n                }\n\n                FindControl(ctl, ctlName);\n            }\n            return null;\n        }
1164	if (Application.Current == null)\n  {\n       MyApplication = new Application\n       {\n          ShutdownMode = ShutdownMode.OnExplicitShutdown\n       };\n   }\n   else\n       MyApplication = Application.Current;
1165	float.Parse(reader.Value.Replace(',', '.'), System.Globalization.CultureInfo.InvariantCulture);
1166	Console.WriteLine(new decimal(0, 0, 0, false, 0)); //0\nConsole.WriteLine(new decimal(1, 0, 0, false, 0)); //1\nConsole.WriteLine(new decimal(0, 1, 0, false, 0)); //4294967296\nConsole.WriteLine(new decimal(0, 0, 1, false, 0)); //18446744073709551616\nConsole.WriteLine(new decimal(1, 0, 0, false, 1)); //0.1\nConsole.WriteLine(new decimal(1, 0, 0, true, 1)); //-0.1
1167	var topProducts = sellingLog\n       .Where(s => s.salesYear == 2014)\n       .GroupBy(u => u.productCode)\n       .Select(g => new { productCode = g.Key, sales = g.Sum(u => u.productSales) })\n       .OrderByDescending(x => x.productCode)\n       .Take(5)\n       .ToList();
1168	WIA.CommonDialog wiaDiag = new WIA.CommonDialog();
1169	doc.Delete(delIds);\ndoc.Regenerate();  // regenerate to cascade all changes.\nwallElem = doc.get_Element(wallElem.Id);\nbrutto = wallElem.get_Parameter(BuiltInParameter.HOST_AREA_COMPUTED).AsDouble();
1170	SmartCard.Transport.PCSC.SelectDialog dialog = new SmartCard.Transport.PCSC.SelectDialog();\nCardAccessor ca = new CardAccessor(dialog.SelectedReader);\nif(ca.Logon())\n{\nca.GetSerialNumber();\n}
1171	public string Name\n{\n  get {return _name;}\n  set { }\n}
1172	var result = (from dc in _context.DocClasses\n             join d in _context.Documents\n             on dc.DocClassID equals d.DocClassID\n             where dc.DocClassID != 0 && docIds.Contains(d.DocID)\n             let children = from p in _context.DocClasses\n                            where dc.ParentID == p.DocClassID\n                            select new Child {\n                                              ChildId = dc.DocClassID,\n                                              ChildDocClassName = dc.DocClassName,\n                                              ParentId = p.DocClassID,\n                                              ParentDocClassName = p.DocClassName\n                                              }\n              select children).SelectMany(c=>c).ToList();
1173	HasMany(n => n.LanguageValues)\n    .Access.ReadOnlyPropertyThroughCamelCaseField()\n    .AsMap<CultureInfo>("CultureName")\n    .Element("Phrase")\n    .Table("MultilingualPhraseValues");
1174	caspol -u -ag All_Code -url "{The assembly???s full path}" FullTrust -n "{The code group name}".
1175	public static UIELEMENT FindUiElementUpVisualTree(DependencyObject initial)\n    {\n        DependencyObject current = initial;\n\n        while (current != null && current.GetType() != typeof(UIELEMENT))\n        {\n            current = VisualTreeHelper.GetParent(current);\n        }\n        return current as UIELEMENT;\n    }
1176	protected override void OnModelCreating(DbModelBuilder modelBuilder)\n{\n    modelBuilder.Conventions.Remove<PluralizingTableNameConvention>();\n    modelBuilder.Entity<Entity1>()\n        .HasMany(b => b.Entities2)\n        .WithMany(p => p.Entities1)\n        .Map(m =>\n        {\n            m.ToTable("Entitie1Entity2");\n            m.MapLeftKey("Entity1Id");\n            m.MapRightKey("Entity2Id");\n        });            \n    }
1177	using(SvnClient client = new SvnClient())\n{\n    SvnStatusArgs sa = new SvnStatusArgs();\n    sa.Depth = SvnDepth.Empty; // Adjust this to check direct files, or (recursive) directories etc\n\n    Collection<SvnStatusEventArgs> statuses;\n    client.GetStatus("c:\\somefile.txt", sa, out statuses); \n\n    Assert.That(statuses.Count, Is.EqualTo(1));\n    Assert.That(SvnStatus.NotVersioned, Is.EqualTo(statuses[0].LocalContentStatus));\n}
1178	myList = myList.OrderByDescending(x => x.ProgramId)\n    .ThenBy(x => x.Level)\n    .ThenBy(x => x.Special);
1179	sqlQuery.ToString()
1180	//Get the current page\nPageDictionary = R.GetPageN(i);\n\n//Get all of the annotations for the current page\nAnnots = PageDictionary.GetAsArray(PdfName.ANNOTS);\n\nforeach (PdfObject A in Annots.ArrayList)\n{\n//code to check the annotation \n\n//remove the annotation\nAnnots.Remove(int idx);\n\n}
1181	SyndicationItem item = new SyndicationItem("Item Title", "Item Content", new Uri("http://Item/Alternate/Link"), "itemID", DateTimeOffset.Now);\nXmlWriter writer = XmlWriter.Create("outfile.xml");\nitem.SaveAsRss20(writer);\nwriter.Close();
1182	private int currentSongIndex = -1;\n\nvoid Player_MediaEnded(object sender, EventArgs e)\n{\n    if(currentSongIndex == -1)\n    {\n        currentSongIndex = listBox.SelectedIndex;\n    }\n    currentSongIndex++;\n    if(currentSongIndex < listBox.Items.Count)\n    {\n        player.Play(listBox.Items[currentSongIndex]);\n    }\n    else\n    {\n        // last song in listbox has been played\n    }\n}
1183	ScenarioContext.Current["KeyName"]
1184	Type type = typeof(StaffRosterEntry);\nint attributeCount = 0;\nforeach(PropertyInfo property in type.GetProperties())\n{\n attributeCount += property.GetCustomAttributes(false).Length;\n}
1185	Byte[] buffer = client.DownloadData(path);\n\n        if (buffer != null)\n        {\n            Response.ContentType = "application/pdf";\n            Response.AddHeader("content-length", buffer.Length.ToString());\n            Response.BinaryWrite(buffer);\n        }
1186	Configuration c = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);\nc.AppSettings.Settings["Your config"].Value=....;\nc.Save(ConfigurationSaveMode.Modified);
1187	e.Row.Cells[11].Style.Add("dir", "rtl");
1188	interface ITest\n{\n    void MethodOne();\n}\n\ninterface ITest2 : ITest\n{\n    void MethodTwo();\n}
1189	"{Binding DataContext.oTran, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"
1190	System.Diagnostics.EventLog
1191	lblPopup.Text = "<img src='Popup(Images)/notfound.png' />&nbsp;&nbsp;&nbsp;&nbsp; Access Denied,Contact Administrator";\nString strInsertStyle = " style=\"height: 100px; width: 100px;\"";\nint intInsertPoint = lblPopup.Text.IndexOf("<img") + 4;\nlblPopup.Text = lblPopup.Text.Substring(0, intInsertPoint) + strInsertStyle + lblPopup.Text.Substring(intInsertPoint);
1192	//This is preparing the counter as binary\nint nCounterIn = ...;\nint nCounterTotalInNetwork = System.Net.IPAddress.HostToNetworkOrder(nCounterIn);\nbyte[] byteFormat = BitConverter.GetBytes(nCounterTotalInNetwork);\nm_brWriter.Write(byteFormat);\nm_brWriter.Flush();
1193	xml.WriteStartDocument();\nxml.WriteStartElement("userProfiles");\nxml.WriteElementString("groupId", "1");\n\nforeach (var profile in profiles)\n{\n    xml.WriteStartElement("profile");\n    xml.WriteElementString("name", "test 1");\n    xml.WriteElementString("id", "10000");\n    xml.WriteStartElement("userPerformance");\n\n    xml.WriteElementString("type", "yearly");\n    // assume that I have the proper allDays as a List of DateTime\n    foreach (var days in allDays)\n    {\n        // What will be my StartElement?\n        xml.WriteStartElement("values");\n        xml.WriteElementString("start", DateTime.Now.ToString());\n        xml.WriteElementString("end", DateTime.Now.ToString());\n        xml.WriteElementString("value", "0815");\n        xml.WriteEndElement();\n    }\n    xml.WriteEndElement();\n    xml.WriteEndElement();\n}\n\nxml.WriteEndElement();
1194	IsMouseVisible = true
1195	List<string> Images = someList;\nvar update = Update.Set("Images", new BsonArray(Images));\ncollection.Update(query, update, UpdateFlags.Upsert);
1196	var users = Membership.GetAllUsers();\n\nList<MembershipUser> searchResults = users.Where(user => Profile.GetProfile(user.UserName).CustomerID.ToLowerInvariant().Contains(CustomerID.ToLowerInvariant())).ToList();
1197	DateTime a = DateTime.Now;\n      DateTime b = a.AddDays(2);\n\n      // ticks are in hns\n      long ticks = b.Ticks - a.Ticks;\n      long seconds = ticks / 10000000;\n      long minutes = seconds / 60;\n      long hours = minutes / 60;\n      long days = hours / 24;
1198	using(MemoryStream PDFData = new MemoryStream())\n    using(Document document = new Document(PageSize.A4, 50, 50, 80, 50))\n    {\n        PdfWriter PDFWriter = PdfWriter.GetInstance(document, PDFData);\n\n        document.Open();\n\n        Moviecollection movCol = new Moviecollection();\n\n        foreach (Movie mov in movCol.Movies)\n            document.Add(new Paragraph(mov.Description));\n    }
1199	public ActionResult Registration([Bind(Prefix = "data")] AccountViewInfo viewInfo);
1200	foreach (var presentedDocuments in innerdocuments)\n{\n    var doc = outerDocuments.FirstOrDefault(a => a.DocumentId.Equals(presentedDocuments.DocumentId));\n    if (doc != null)\n    {\n        presentedDocuments.IsValid = doc.IsValid;\n    }\n}
1201	public static int findNullRow(DataTable dt)\n   {\n       int row = 0;\n\n       for (int a = 0; a < dt.Rows.Count; a++)\n       {\n           if (dt.Rows[a][0] == null)\n           {\n               row = a;\n               break;\n           }\n       }\n\n       return row;\n   }\n\n   public static int findNullColumn(DataTable dt)\n   {\n       int col = 0;\n\n       for (int i = 0; i < dt.Columns.Count; i++)\n       {\n           if (dt.Rows[0][i] == null)\n           {\n               col = i;\n               break;\n           }\n       }\n\n       return col;\n   }
1202	if(plot)\n{\n    if(a)\n    {\n        b= !b;\n        if( b )\n        {\n            //do something meaningful stuff here\n        }\n    }\n    //some more stuff here that needs to be executed\n}
1203	private void button1_Click(object sender, EventArgs e)\n{\n    textBox1.Visible = false; // to hide textbox\n    button1.Size = new Size(60, 20);// for changing button layouts\n}
1204	public static bool WriteString(IntPtr handle, int address, string value)\n{\n    int written;\n\n    byte[] data = Encoding.Default.GetBytes(value + "\0");\n\n    return WriteProcessMemory(handle, address, data, data.Length, out written);\n}
1205	using System;\nusing System.Windows.Forms;\n\nclass MyDataGridView : DataGridView {\n    protected override bool ProcessCmdKey(ref Message msg, Keys keyData) {\n        if (keyData == (Keys.Control | Keys.C)) {\n            // Do stuff\n            //..\n            return true;\n        }\n        return base.ProcessCmdKey(ref msg, keyData);\n    }\n}
1206	using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Runtime.Serialization;\n\nnamespace SandboxConoleApp\n{\n\n    internal class Program\n    { \n        private static void Main(string[] args)\n        {\n            DatabaseRestoreStatus data = null;\n            using (var stream = File.Open("test.xml",FileMode.Open))\n            {\n                var formatter = new DataContractSerializer(typeof(DatabaseRestoreStatus));\n                data = (DatabaseRestoreStatus)formatter.ReadObject(stream);\n            } \n        }\n    }\n\n    [DataContract(Name = "job-status", Namespace = "http://marklogic.com/xdmp/job-status")]\n    public class DatabaseRestoreStatus\n    {\n        [DataMember(Name = "forest")]\n        public Forest Forest { get; set; }\n    }\n\n    [DataContract(Name = "forest", Namespace = "http://marklogic.com/xdmp/job-status")]\n    public class Forest\n    {\n        [DataMember(Name = "status")]\n        public string Status { get; set; }\n    }\n}
1207	string time = "09:19:30.5070000 AM";\n\nStringBuilder sb = new StringBuilder(time);\nstring final = sb.Remove(8, 8).ToString();
1208	yourControl.Dock = DockStyle.Fill
1209	using(var sqlConnection = new ReliableSqlConnection(_connectionString, _connectionRetry, _commandRetry)\n{\n    var command = sqlConnection.CreateCommand();\n    command.CommandText = "...";\n    sqlConnection.Open();\n\n    var dataReader = sqlConnection.ExecuteCommand<SqlDataReader>();\n    var dataTable = new DataTable();\n    dataTable.Load(dataReader);\n\n    // handle dataTable, in our case the data set only returns one table, so it's ok\n    ...\n}
1210	DataContractSerializer(typeof(List<ITestObject>)
1211	IEnumerable<A> result = (from a in A join b in B on a.id equals b.id_A\n                         group b by b.id_A into g\n                         select new\n                         {\n                             Name = a.name,\n                             Total = g.Sum(b => b.quantity)\n                         })\n                        .ToArray()\n                        .Select(item => new A\n                        {\n                            Name = item.Name,\n                            TotalQuantity = item.Total\n                        });
1212	private List<string> GetSearchResult(List<string> SourceList,string name, string[] items)\n{\n     return SourceList.Where(entry => entry.name == name && items.Contains(entry.id)).ToList();\n}
1213	[WebMethod]\npublic void ExceptionTest()\n{\n    try\n    {\n        throw new Exception("An Error Happened");\n    }\n    catch (Exception ex)\n    {\n        evlWebServiceLog.WriteEntry(ex.ToString(), EventLogEntryType.Error);\n        throw new Exception("Your message", ex);\n    }\n}
1214	using (FileStream fsStream = new FileStream("Bytes.data", FileMode.Create))\nusing (BinaryWriter writer = new BinaryWriter(fsStream, Encoding.UTF8))\n{\n    // Writing the strings.\n    writer.Write("The");\n    writer.Write(" strings");\n    writer.Write(" I");\n    writer.Write(" want");\n    writer.Write(".");\n\n    // Writing your bytes afterwards.\n    writer.Write(new byte[]\n                 {\n                     0xff,\n                     0xfe\n                 });\n}
1215	string sym = CultureInfo.CurrentCulture.NumberFormat.CurrencySymbol;\n Console.WriteLine("{0}{1,10:#,##0.00}",sym, number1);\n Console.WriteLine("{0}{1,10:#,##0.00}",sym, number2);
1216	(g)mcs -r:/path/to/MPAPI.dll Program.cs
1217	protected override void OnLoad(EventArgs e) {\n        base.OnLoad(e);\n        this.BeginInvoke(new Action(() => comboBox1.DroppedDown = true));\n    }
1218	UserType.Type
1219	[WebMethod]\npublic string GetJsonData()\n{\n    JArray jArray = new JArray();\n    JObject jObject = new JObject();\n    jObject.Add(new JProperty("name", "value"));\n    jArray.Add(jObject);\n    return jArray.ToString();\n}
1220	string res = "20120708";\nDateTime d = DateTime.ParseExact(res, "yyyyddMM", CultureInfo.InvariantCulture);\nConsole.WriteLine(d.ToString("MM/dd/yyyy"));
1221	char decimalChar = Convert.ToChar(CultureInfo.CurrentCulture.NumberFormat.NumberDecimalSeparator);\n\n  if (!char.IsDigit(e.KeyChar) && e.KeyChar != (char)Keys.Back && e.KeyChar != decimalChar)\n  {\n    e.Handled = true;\n  }\n  else if ((e.KeyChar == decimalChar) && ((sender as TextBox).Text.IndexOf(decimalChar) > -1))\n  {\n    e.Handled = true;\n  }\n  else if ((e.KeyChar == decimalChar) && ((sender as TextBox).Text.Length == 0))\n  {\n    e.Handled = true;\n  }
1222	private static DataTable CompareTwoDataTable(DataTable table1, DataTable table2)\n\n       {\n\n        DataTable table3 = new DataTable();\n        DataRow dr = null;\n        string filterExp = string.Empty;\n        for (int i = 0; i < table1.Rows.Count; i++)\n        {\n\n            string col = table1.Rows[i]["Par Name"].ToString();\n            if (table2.Columns.Contains(col))\n            {\n                if (!table3.Columns.Contains(col))\n                {\n                    table3.Columns.Add(col, typeof(double));\n                    filterExp = filterExp + col + " asc ,";\n                }\n\n                for (int j = 0; j < table2.Rows.Count; j++)\n                {\n                    if (table3.Rows.Count != table2.Rows.Count)\n                    {\n                        dr = table3.NewRow();\n                        table3.Rows.Add(dr);\n                    }\n                    table3.Rows[j][col] = table2.Rows[j][col];\n                }\n\n\n            }\n\n\n        }
1223	XNamespace ns1 = "http://localhost:8080/WsNFe2/lote";\nXNamespace tipos = "http://localhost:8080/WsNFe2/tp";\nXNamespace xsi = "http://www.w3.org/2001/XMLSchema-instance";\n\nvar doc = new XElement(ns1 + "ConsultaSeqRps",\n    new XAttribute(XNamespace.Xmlns + "ns1", ns1), \n    new XAttribute(XNamespace.Xmlns + "tipos", tipos), \n    new XAttribute(XNamespace.Xmlns + "xsi", xsi),\n    new XAttribute(xsi + "schemaLocation", \n      "http://localhost:8080/WsNFe2/lote http://localhost:8080/WsNFe2/xsd/ConsultaSeqRps.xsd")\n    );
1224	public class Session : ISession {\n    private const string CURRENTUSERKEY = "CurrentUser";\n    public static string CurrentUser {\n        get { return (string)HttpContext.Current.Session[CURRENTUSERKEY]; }\n        set { HttpContext.Current.Session[CURRENTUSERKEY] = value; }\n    }\n\n    public static void ClearAllSession() {\n        CurrentUser = null; // And the other props\n    }\n}
1225	Process.Start(@"console_app.exe");
1226	.Select(y => y.Attributes()\n              .ToDictionary(x => x.Name, x => x.Value))
1227	List<List<string>> myList = new List<List<string>>();\nmyList.Add(new List<string> { "a", "b" });\nmyList.Add(new List<string> { "c", "d", "e" });\nmyList.Add(new List<string> { "qwerty", "asdf", "zxcv" });\nmyList.Add(new List<string> { "a", "b" });\n\n// To iterate over it.\nforeach (List<string> subList in myList)\n{\n    foreach (string item in subList)\n    {\n        Console.WriteLine(item);\n    }\n}
1228	var doc = XDocument.Load(...);\nvar themeName = doc.Root.Element("themename").Value;\nGuid themeGuid = Guid.NewGuid();\nforeach (var element in doc.Root.Element("masterpages").Elements("masterpage"))\n{\n    ActiveTheme theme = new ActiveTheme\n    {\n        ThemeName = themeName,\n        ActiveThemeId = themeGuid,\n        Page = element.Attribute("page").Value,\n        MasterPage = element.Attribute("name").Value\n    };\n    portalContent.AddToActiveTheme(theme);\n}\nportalContext.SaveChanges();
1229	private void Form1_FormClosing( object sender, FormClosingEventArgs e ) {\n            var window = MessageBox.Show( "Close the window", buttons: MessageBoxButtons.YesNo );\n            if (window == DialogResult.No) e.Cancel = true;\n            else e.Cancel = false;\n        }
1230	foreach (PropertyInfo prop in obj.GetType().GetProperties(\n    BindingFlags.Public | BindingFlags.Instance))\n{\n    if (prop.PropertyType != typeof(int)) continue;\n\n    int val = (int)prop.GetValue(obj);\n    if(val != 0) Console.WriteLine("{0}={1}", prop.Name, val);\n}
1231	Task.Factory.StartNew(() =>\n  {\n    // Your permission checking code here.....\n  }).ContinueWith((t) =>\n  {\n    // Inform user of permissions status.\n  });
1232	private void keypressed(Object o, KeyPressEventArgs e)\n{\n    // The keypressed method uses the KeyChar property to check \n    // whether the ENTER key is pressed. \n\n    // If the ENTER key is pressed, the Handled property is set to true, \n    // to indicate the event is handled.\n    if (e.KeyChar == (char)Keys.Return)\n    {\n        e.Handled = true;\n    }\n}
1233	public interface IBaseUnit \n{\n     int HitPoints\n     ..\n}
1234	List<String> lst = new List<string>();\n        lst.Add("Life Skills");\n        lst.Add("Life Skills");\n        lst.Add("Communication");\n        lst.Add("Careers; Listening Skills;Life Skills; Personal Development; Questioning Skills; Coaching/Mentoring; Recognition; Recruitment and Selection.");\n        lst.Add("No Related Topics");\n\n        List<string> newList = new List<string>();\n\n        foreach (string str in lst)\n        {\n            var temp = str.Split(';');\n            if (temp.Length > 1)\n            {\n                for (int i = 0; i < temp.Length; i++)\n                {\n                    if (!newList.Contains(temp[i]))\n                    {\n                        newList.Add(temp[i]);\n                    }\n                }\n            }\n            else\n            {\n                if (!newList.Contains(str))\n                {\n                    newList.Add(str);\n                }\n            }\n        }
1235	var xEle = new XElement("t",\n                from ele in t\n                select new XElement("test1",\n                             new XElement("BINID", ele.ID),\n                               new XElement("NUMBER1", ele.Number1),\n                               new XElement("HOLOGRAPHIC", ele.Holigraphic)\n                           ));\n\n    xEle.Save("D:\\yourFile.xml");\n    Console.WriteLine("Converted to XML");
1236	private void departDate_SelectedDateChanged(object sender, SelectionChangedEventArgs e)\n{\n   returnDate.isDropDownOpen = true;\n}
1237	SET FOREIGN_KEY_CHECKS=0;\n\nALTER TABLE Profile DROP PRIMARY KEY,\nMODIFY _id INT PRIMARY KEY NOT NULL;\n\ninsert commmand here....\n\nALTER TABLE Profile DROP PRIMARY KEY,\nMODIFY _id INT AUTO_INCREMENT PRIMARY KEY NOT NULL;\n\nSET FOREIGN_KEY_CHECKS=1;
1238	private static void ExtractEmbeddedResource(string outputDir, string resourceLocation, List<string> files)\n    {\n        foreach (string file in files)\n        {\n            using (System.IO.Stream stream = System.Reflection.Assembly.GetExecutingAssembly().GetManifestResourceStream(resourceLocation + @"." + file))\n            {\n                using (System.IO.FileStream fileStream = new System.IO.FileStream(System.IO.Path.Combine(outputDir, file), System.IO.FileMode.Create))\n                {\n                    for (int i = 0; i < stream.Length; i++)\n                    {\n                        fileStream.WriteByte((byte)stream.ReadByte());\n                    }\n                    fileStream.Close();\n                }\n            }\n        }\n    }
1239	TradesFilter =\n  SortDirection.Equals(SortDirection.Ascending) ?\n  TradesFilter.OrderBy(s => s.TradeLineItems.Min(t => TradeDateTime)) :\n  TradesFilter.OrderBy(s => s.TradeLineItems.Max(t => TradeDateTime));
1240	foreach(Control ctrl in myTextBoxContainer.Controls)\n        { \n            if(ctrl is TextBox)\n            {\n                TextBox textbx = ctrl as TextBox; \n                if(textbx.ReadOnly == false)\n                {\n                    textbx.ReadOnly = true; \n                }\n            }\n        }
1241	_b.Tap += yourHandler;
1242	context.Questions\n.GroupJoin\n(\n    context.Answers,\n    x=>x.Id, // this is the pk on Questions\n    x=>x.QuestionId //this is the fk on Answers\n    (q,a)=>new Question\n    {\n        q.QuestionUId,\n        q.Text,\n        Answers = a.Select(an=>new Answer{an.AnswerId,an.AnswerText})\n    }    \n)
1243	Console.WriteLine("Here are a list of colors:");\n\nforeach(Color.clr item in Enum.GetValues(typeof(Color.clr)))\n{\n    Console.WriteLine(string.Format("{0} - {1}",(int)item,item.ToString()));\n}\nConsole.WriteLine("Please choose your color");\nstring colorInput = Console.ReadLine();\nint colorValue = 0;\nif(!int.TryParse(colorInput, out colorValue))\n{\n        Console.WriteLine(string.Format("{0} is not a valid number",colorInput));\n        return;\n}\n\n// This will give an error if they've typed a number that wasn't listed\n// So need to add a bit of checking here\nColor.clr tempColor = (Color.clr)colorValue;\n\n// Your code here
1244	int _campingDaysAdj = 30 - campingDays;\nif(_campingDaysAdj > 0 && pagesPerDay > 0)\n{\n    int months = page / ((30 - campingDays) * pagesPerDay);\n    int years = months / 12;\n    int remainingMonths = months % 12;\n\n    Console.WriteLine("{0} years {1} months", years, remainingMonths);\n}\nelse\n{\n    //throw an exception or an error message etc.\n}
1245	string json = JsonConvert.SerializeObject(array2D);
1246	appointment.recurrence
1247	Label.Text = re.Users.Single(u=> u.Name == struname).privilege;
1248	try/catch
1249	function clickOnLoadReport() {\n        var requestManager = Sys.WebForms.PageRequestManager.getInstance();\n        requestManager.add_initializeRequest(CancelPostbackForSubsequentSubmitClicks);\n\n        function CancelPostbackForSubsequentSubmitClicks(sender, args) {\n            if (requestManager.get_isInAsyncPostBack() &\n        args.get_postBackElement().id == 'BtnLoadReport') {\n                args.set_cancel(true);\n                document.getElementById("BtnLoadReport").setAttribute("disabled", "disabled");\n                //alert('A previous request is still in progress that was issued on clicking ' + args.get_postBackElement().id);\n            }\n        }\n    }
1250	// it will skip 0 elements and load only one element from nested array\n var slice = Fields.Slice("Participants", 0, 1);
1251	public class StringStuff\n{\n    private const char cr = '\x0d'; // segment terminator\n    private const char lf = '\x0a'; // data element separator\n    private const char rs = '\x1e'; // record separator\n    private const char sp = '\x20'; // white space\n\n    public string BuildString()\n    {\n        var a = "hello";\n        var b = "world";\n\n        var output = a + rs + b\n\n        return output;\n    }\n}
1252	for (int i = 0; i < invoiceList.Count; i++)\n    {\n        workSheet.Cells[1, 1, totalRows, totalCols].Copy(workSheet.Cells[i * totalRows + 1, 1]);\n    }
1253	protected override void OnFormClosing(FormClosingEventArgs e) {\n    if (!mCompleted) {\n        backgroundWorker1.CancelAsync();\n        this.Enabled = false;\n        e.Cancel = true;\n        mClosePending = true;\n        return;\n    }\n    base.OnFormClosing(e);\n}\n\nvoid backgroundWorker1_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e) {\n    mCompleted = true;\n    if (mClosePending) this.Close();\n}
1254	catch (AggregateException ex) when (ex.InnerException is DocumentClientException)\n{\n    DocumentClientException dce = (DocumentClientException)ex.InnerException;\n    switch ((int)dce.StatusCode)\n    {\n        case 429:\n            Thread.Sleep(dce.RetryAfter);\n            break;\n\n         default:\n             Console.WriteLine("  Failed: {0}", ex.InnerException.Message);\n             throw;\n     }                    \n}
1255	var dictionary = xdoc.Root.Elements("DataTable").Elements()\n               .ToDictionary(x => x.Name.LocalName, x => (string)x)
1256	var list = new List<Instance>();\n...\n\n// Serialization\n\nvar xs = new XmlSerializer(typeof(List<Instance>));\nusing (var writer = XmlWriter.Create(filename))\n{\n    xs.Serialize(writer, list);\n}\n\n...\n\n// Deserialization\n\nusing (var reader = XmlReader.Create(filename))\n{\n    list = xs.Deserialize(reader) as List<Instance>;\n}
1257	public string Serialize(object o)\n{\n    string result = ""; // TODO: use string builder\n\n    Type type = o.GeyType();\n\n    foreach (var pi in type.GetProperties())\n    {\n        string name = pi.Name;\n        string value = pi.GetValue(o, null).ToString();\n\n        object[] attrs = pi.GetCustomAttributes(true);\n        foreach (var attr in attrs)\n        {\n           var vp = attr as FIXValuePairAttribute;\n           if (vp != null) name = vp.Name;\n        }\n\n        result += name + "=" + value + ";";\n    }\n\n    return result;\n}
1258	System.Drawing
1259	List<int> input = new List<int>();\n\n// first read input till there are nonempty items, means they are not null and not ""\n// also add read item to list do not need to read it again    \nstring line;\nwhile ((line = Console.ReadLine()) != null && line != "") {\n     input.Add(int.Parse(line));\n}\n\n// there is no need to use ElementAt in C# lists, you can simply access them by \n// their index in O(1):\nStockItem[] stock = new StockItem[input.Count];\nfor (int i = 0; i < stock.Length; i++) {\n    stock[i] = new StockItem(input[i]);\n}
1260	var UnitPriceIndex = new SortedDictionary<double, LinkedList<OrderItem>>();\n\nforeach (OrderItem item in Data)\n{\n    // Make sure the key exists. If it doesn't, add it \n    // along with a new LinkedList<OrderItem> as the value\n    if (!UnitPriceIndex.ContainsKey(item.UnitPrice))\n    {\n        UnitPriceIndex.Add(item.UnitPrice, new LinkedList<OrderItem>());\n    }\n\n    UnitPriceIndex[item.UnitPrice].AddLast(item);\n}
1261	public string WrapFunc(Dictionary<string, string> parameter)\n{\n    var response = "SUCCESS";\n    var missingParams = new List<string>();\n\n    //Check for required params\n    if (parameter.ContainsKey("Param1") && !string.IsNullOrEmpty(parameter["Param1"]))\n    {\n        objWebAPiRequest.Param1 = parameter["Param1"];\n    }\n    else\n    {\n        // Add the name of the missing param to a list\n        missingParams.Add("Param1");\n    }\n\n    if (missingParams.Any())\n    {\n        // Log all the missing parameters and set response to "FAILURE"\n        foreach (var p in missingParams)\n            LogRequiredParameterError(p);\n\n        response = "FAILURE";\n    }\n\n    return response;\n}\n\nprivate void LogRequiredParameterError(string parameterName)\n{\n    //Logging the missing parameter name to db\n}
1262	Object.Equals()
1263	listA.Except(listB)
1264	string x ="hello <!-- this is not meant to be here --> world, please help me";\n string y = Regex.Replace(x, "<!--.*?-->", "");
1265	png.Save(@"C:\Temp\MyFile.bmp", ImageFormat.Bmp)
1266	string searchFor = //\nbool allContain = dict.Values.All(s => s.Contains(searchFor));
1267	string value = Regex.Matches( inputString, @"\$\('#hotel'\)\.val\((\d+)\)", RegexOptions.None )[0].Groups[1].Value;
1268	var data = [\n {  \n    data : 3, \n    Label : "Statement -2"\n }, \n { \n    data : 6, \n    Label : "this is a very long stat...s a very long statement"\n }]\n\nfor(var item in data){\n    data[item].data = [0,data[item].data]\n}
1269	startInfo.Arguments = @"C:\Users\un\Desktop\file with space"
1270	while (reader.Read())\n{                    \nCheckBox1.Checked = (reader.GetBoolean(reader.GetOrdinal("Mount")));\nCheckBox2.Checked = (reader.GetBoolean(reader.GetOrdinal("Braker")));\nCheckBox3.Checked = (reader.GetBoolean(reader.GetOrdinal("Access")));\nCheckBox4.Checked = (reader.GetBoolean(reader.GetOrdinal("Conn_Net")));\nCheckBox5.Checked = (reader.GetBoolean(reader.GetOrdinal("Log_Book")));\nCheckBox6.Checked = (reader.GetBoolean(reader.GetOrdinal("Pictures")));\nCheckBox8.Checked = (reader.GetBoolean(reader.GetOrdinal("Floor")));\nCheckBox9.Checked = (reader.GetBoolean(reader.GetOrdinal("Cb_lenght")));\nCheckBox10.Checked = (reader.GetBoolean(reader.GetOrdinal("Channel")));\n}
1271	string str =Enum.GetName(typeof(RoleType), obj);
1272	string date = "20140231";\nDateTime result;\nint year = Convert.ToInt32(date.Substring(0, 4));\nint month = Convert.ToInt32(date.Substring(4, 2));\nint day = Convert.ToInt32(date.Substring(6, 2));\n\nresult = new DateTime(year, month, Math.Min(DateTime.DaysInMonth(year, month), day));
1273	var pivot = Manufacturers.Select(m => new \n    { \n        Name = m.Name, \n        Products = Products\n            .Where(p => p.ManufacturerId == m.ManufacturerId)\n            .Select(p => p.Name)\n            .ToList()\n    });
1274	DateTime dt = Convert.ToDateTime(dateTimePicker1.Text); //taken the DateTime from form\nstring dt1 = dt.ToString("MMMM yyyy")
1275	protected override void LoadViewState(object state)\n{\n    base.LoadViewState(state);\n    var id = this.ViewState["DynamicControlGeneration"] as string;\n    if (id != null)\n        GenerateDynamicControls(id);\n}\n\nprotected void Button1_Click(object sender, EventArgs e)\n{\n    string id = TextBox1.Text;\n    this.ViewState["DynamicControlGeneration"] = id;\n    GenerateDynamicControls(id);\n}
1276	DateTime inSevenDays = DateTime.Today.AddDays(7);
1277	public ActionResult DoSomething()\n{\n    using (GYOSContext context = new GYOSContext())\n    {\n        // Do stuff with context\n\n    }  // Automatically disposed when exiting scope of using block\n}
1278	using Mono.Cecil;\nusing Mono.Cecil.Cil;\n\nvar assembly = AssemblyDefinition.ReadAssembly("ClassLibrary.dll");\n// skip the first type '<Module>' whatever that is.\nvar types = assembly.MainModule.Types.Skip(1);\n\nforeach (var type in types)\n{\n    var interfaces = type.Interfaces.Select(i => i.FullName);\n    if (interfaces.Any())\n    {\n         Console.WriteLine("{0} : {1}, {2}", type.FullName, type.BaseType.FullName, string.Join(", ", interfaces));\n    }\n    else\n    {\n         Console.WriteLine("{0} : {1}", type.FullName, type.BaseType.FullName);\n    }\n}
1279	ValueStringFormat="{}{0:mm:ss}"
1280	sting yourtextfile;\n//make all the different sections the same\nyourtextfile.replace("#main", "#");\nyourtextfile.replace("#extra", "#");\nyourtextfile.replace("!side", "#");\n//make all the arrays\nstring[] all = yourtextfile.Split('#');\nstring[] main = all[0].Split('\n');\nstring[] extra = all[1].Split('\n');\nstring[] side = all[2].Split('\n');
1281	IUnitOfWork UnitOfWork;\n\n    public AccountController(IUnitOfWork unitOfWork)\n    {\n        this.UnitOfWork = unitOfWork;\n    }
1282	Solid3D.IsPointInside()
1283	XDocument xdoc = XDocument.Load("myXmlFile.xml");\n\nvar servers = xdoc.Descendants("server"); \nfor (var server in servers) \n{\n    var children = server.Elements(); \n    for (var child in children)\n    {\n        // Do what you want with the server and child here\n    }\n}
1284	public List<string>  GivenPermission\n    {\n        get { return lstGivenPermissions.Items.Cast<string>().ToList(); }\n        set { lstGivenPermissions.DataSource = value; }\n    }
1285	using(var file = File.Open(SerializedConfiguration, FileMode.Create))\n{\n    var bf = new BinaryFormatter();\n    bf.Serialize(file, configuration);\n}
1286	void OnCollisionEnter(Collision collision)\n{\nforeach (ContactPoint contact in collision.contacts) \n{\n    if(contact.thisCollider == collider1)\n    {\n        float cp = contact.point.x - transform.position.x;\n        contact.otherCollider.attachedRigidbody.AddForce(reflectionForce * cp, 0.0f, 0.0f);\n        float maxSpeed = 2.0f; //for example\n        Vector3 vel = contact.otherCollider.attachRigidbody.velocity;\n        contact.otherCollider.attachRigidbody.velocity = Vector3.ClampMagnitude(vel,maxSpeed);\n    }\n}
1287	private Point initialpoint;\n\n    private void Grid_ManipulationStarted_1(object sender, ManipulationStartedRoutedEventArgs e)\n    {\n        initialpoint = e.Position;\n    }\n\n    private void Grid_ManipulationDelta_1(object sender, ManipulationDeltaRoutedEventArgs e)\n    {\n        if (e.IsInertial)\n        {\n            Point currentpoint = e.Position;\n            if (currentpoint.X - initialpoint.X >= 500)//500 is the threshold value, where you want to trigger the swipe right event\n            {\n                System.Diagnostics.Debug.WriteLine("Swipe Right");\n                e.Complete();\n            }\n        }\n    }
1288	Process.StandardError
1289	var mockClientData = new Mock<IClientData>();\n\nmockClientData.SetupGet(data => data.MyProperty).Returns(3);\n// mockClientData.Object.MyProperty now returns 3\n\nmockClientData.Setup(data => data.MyMethod()).Returns(42);\n// mockClientData.Object.MyMethod() now returns 42\n// any other setup that you need done goes here\n\nvar controller = new HomeController(mockClientData.Object);\n\n// the rest of your test as normal
1290	listview.OwnerDraw = true\n\n\n    private void listView1_DrawColumnHeader(object sender, DrawListViewColumnHeaderEventArgs e)\n    {\n        // Draw your custom checkbox control here\n    }\n\n    private void listView1_DrawItem(object sender, DrawListViewItemEventArgs e)\n    {\n        e.DrawDefault = true;\n    }\n\n    private void listView1_DrawSubItem(object sender, DrawListViewSubItemEventArgs e)\n    {\n        e.DrawDefault = true;\n    }
1291	p.StartInfo.FileName = "sc.exe";\np.StartInfo.Arguments = "query eventlog";
1292	[DllImport("user32.dll")]\n[return: MarshalAs(UnmanagedType.Bool)]\nstatic extern bool GetCaretPos(out Point lpPoint);
1293	try\n    {\n        if (Properties.Settings.Default["Database"] != null)\n        {\n            MessageBox.Show("We landed on spot 1");\n        }\n        else\n        {\n            MessageBox.Show("We landed on spot 2");\n        }\n    }\n    catch (Exception ee)\n    {\n        MessageBox.Show(ee.Message);\n    }
1294	System.IO.DriveInfo.GetDrives()
1295	string[] items = new string[3] { "input1", "input2", "input3" };\nstring[] furtherItems = new string[10];\n\n// array to list\nList<string> itemsList = items.ToList<string>();\n\nitemsList.Add("newItem");\n// or merge an other array to the list\nitemsList.AddRange(furtherItems);\n\n// list to array\nstring[] newArray = itemsList.ToArray();
1296	var doc = new Document();\nMemoryStream memoryStream = new MemoryStream();\nPdfWriter writer = PdfWriter.GetInstance(doc, memoryStream);\n\ndoc.Open();\ndoc.Add(new Paragraph("First Paragraph"));\ndoc.Add(new Paragraph("Second Paragraph"));\n\nwriter.CloseStream = false;\ndoc.Close();\nmemoryStream.Position = 0;\n\nMailMessage mm = new MailMessage("username@gmail.com", "username@gmail.com")\n{\n    Subject = "subject",\n    IsBodyHtml = true,\n    Body = "body"\n};\n\nmm.Attachments.Add(new Attachment(memoryStream, "filename.pdf"));\nSmtpClient smtp = new SmtpClient\n{\n    Host = "smtp.gmail.com",\n    Port = 587,\n    EnableSsl = true,\n    Credentials = new NetworkCredential("username@gmail.com", "password")\n};\n\nsmtp.Send(mm);
1297	private void ilPanel1_Load(object sender, EventArgs e) {\n    ILArray<float> A = ILSpecialData.sincf(40, 50);\n    ilPanel1.Scene.Add(new ILPlotCube(twoDMode: false) {\n        new ILSurface(A) { new ILColorbar() }\n    });\n\n    // fetch surface\n    var surface = ilPanel1.Scene.First<ILSurface>();\n    // fetch current colormap data\n    ILArray<float> cmdata = surface.Colormap.Data;\n    // invert their positions\n    cmdata[":;0"] = cmdata["end:-1:0;:"];\n    // make new colormap and assign\n    surface.Colormap = new ILColormap(cmdata);\n    // configure after all modifications\n    surface.Configure();\n}
1298	namespace Simtho\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            foreach (string arg in Environment.GetCommandLineArgs())\n            {\n                switch (arg)\n                {\n\n                    case "-i":\n                        Console.WriteLine("Command Executed Successfully");\n                        Console.Read();\n                        break;\n                }\n            }\n        }\n    }\n}
1299	....\n    ....\n    if(membersName.Any(x => x == "Text"))\n    {\n        PropertyInfo propInfo = type.GetProperty("Text");\n        propInfo.SetValue(obj, ass.Text, null);\n    }\n    ....\n    ....
1300	var netTcpActivatorService = ServiceController.GetServices().FirstOrDefault(s => s.ServiceName == "NetTcpActivator");\n\nvar netPipeActivatorService = ServiceController.GetServices().FirstOrDefault(s => s.ServiceName == "NetPipeActivator");
1301	private void Form_Load(object sender, EventArgs e)\n{\n    DirectoryInfo dir = new DirectoryInfo(@"c:\pic");\n    foreach (FileInfo file in dir.GetFiles())\n    {\n        try\n        {\n            this.imageList1.Images.Add(Image.FromFile(file.FullName));\n        }\n        catch\n        {\n            Console.WriteLine("This is not an image file");\n        }\n    }\n    this.listView1.View = View.LargeIcon;\n    this.imageList1.ImageSize = new Size(32, 32);\n    this.listView1.LargeImageList = this.imageList1;\n    //or\n    //this.listView1.View = View.SmallIcon;\n    //this.listView1.SmallImageList = this.imageList1;\n\n    for (int j = 0; j < this.imageList1.Images.Count; j++)\n    {\n        ListViewItem item = new ListViewItem();\n        item.ImageIndex = j;\n        this.listView1.Items.Add(item);\n    }\n}
1302	sourcedata = ds.Tables["Uploads"];
1303	for {\nswitch(...) {\n        ....\n        goto MyLabel;\n    }\n}\nMyLabel:
1304	Region::Intersect
1305	public class Foo : IParameterlessConstructor\n{\n    public Foo() // As per the interface\n    {\n    }\n}\n\npublic class Bar : Foo\n{\n    // Yikes! We now don't have a parameterless constructor...\n    public Bar(int x)\n    {\n    }\n}
1306	public DataTable GetAllChechedBox()\n        {\n            var dt = new DataTable();\n                    dt.Columns.Add("Name");\n                    dt.Columns.Add("Value");\n            for (int i = 0; i < chkList.Items.Count; i++)\n            {\n                if (chkList.Items[i].Checked)\n                {\n                  dt.Rows.Add();\n                   dt.Rows[dt.Rows.Count-1]["Name"] = chkList.Items[i].Value;\n                    dt.Rows[dt.Rows.Count-1]["Value"] = chkList.Items[i].Text;\n\n                }\n            }\n        return dt;\n    }
1307	public interface IPet\n{\n\n}\n\npublic interface IDog : IPet\n{\n    void Bark();    \n}\n\npublic class Dog : IDog\n{\n    public void Bark()\n    {\n        Console.WriteLine("Wouff!");    \n    }\n}
1308	this.Label1.Background = (LinearGradientBrush)this.FindResource("headerBackground")
1309	var result = Path.Combine(Path.GetDirectoryName(@"C:\ol\il\ek"), @"ek\mek\gr");\n\n//  result == @"C:\ol\il\ek\mek\gr"
1310	keyup(function(e) {\n   if(e.keyCode == 27) {\n      // close your window\n   }\n});
1311	var rootNode = new Node(-1);
1312	public class LocalDateTimeConvention : IMemberMapConvention\n{\n    public string Name\n    {\n        get { return "LocalDateTime"; }\n    }\n\n    public void Apply(BsonMemberMap memberMap)\n    {\n        if (memberMap.MemberType == typeof(DateTime))\n        {\n            var dateTimeSerializer = new DateTimeSerializer(DateTimeKind.Local);\n            memberMap.SetSerializer(dateTimeSerializer);\n        }\n        else if (memberMap.MemberType == typeof(DateTime?))\n        {\n            var dateTimeSerializer = new DateTimeSerializer(DateTimeKind.Local);\n            var nullableDateTimeSerializer = new NullableSerializer<DateTime>(dateTimeSerializer);\n            memberMap.SetSerializer(nullableDateTimeSerializer);\n        }\n    }\n}
1313	String.Join(",", myDic.Keys.Select(o=>o.ToString()).ToArray());
1314	new Uri("http://example.com/name2id?names[]=john", true)
1315	using (FileStream fileStream = new FileStream(path, FileMode.Open))\n        {\n            byte[] chunk = new byte[4];\n            fileStream.Read(chunk, 0, 4);\n            string hexLetters = BitConverter.ToString(chunk); // 4 Hex Letters that i need!\n        }
1316	Assembly.GetEntryAssembly()
1317	using Sc = MyNamespace.SystemConstants;
1318	bool isError=false;\nforeach (GridViewRow row in grdCart.Rows)\n    {\n\n        Response.Write("1");\n        var Qty = row.FindControl("lblQty") as Label;\n        var RemainQty = row.FindControl("lblremainqty") as Label;\n        var errormsg = row.FindControl("lblError") as Label;\n\n        if (Convert.ToInt32(Qty.Text) > Convert.ToInt32(RemainQty.Text))\n        {\n            errormsg.Text = "Stock Remain " + RemainQty.Text;\n            isError = true;\n            btnCheckOut.Enabled = false;\n        }\n        else\n        {\n            errormsg.Text = "";\n\n\n        }\n\n    }\nif(!isError)\n{\n  btnCheckOut.Enabled = true;\n}
1319	private readonly CancellationTokenSource cts = new CancellationTokenSource();\n\n  public void Start()\n  {\n     blockingCollection= new BlockingCollection<int>();\n     var task = Task.Factory.StartNew(ProcessData, cts.Token);\n  }\n\n  private void ProcessData()\n  {\n    foreach(var item in blockingCollection.GetConsumingEnumerable(cts.Token))\n    {  \n        cts.Token.ThrowIfCancellationRequested();\n\n        // ...\n    }\n  }\n\n  public void Cancel()\n  {\n      cts.Cancel();\n  }
1320	^([aA]\s*\))(.*)([bB]\s*\))(.*)([cC]\s*\))(.*)
1321	initial  = Hash(password);\npossible = Hash("test");\n\nif( initial == possible ){\n    // we infer that password = "test"\n}
1322	00000000-deca-fade-deca-deafdecacaff
1323	Contour<Point>[] control_shapes = Enumerable.Range(0, 13).Select(i => new Contour<Point>(new MemStorage())).ToArray();
1324	ThreadPool.QueueUserWorkItem()
1325	var tasks = new[] {"Boss", "Secretary", "Tea Lady"};\n\nvar joined = string.Join(", ", tasks);\n\nvar splitAgain = joined.Split(new[]{", "}, StringSplitOptions.RemoveEmptyEntries);
1326	string Query="SELECT Teams.Name as TeamName,Locations.Name as LocationsName,Address ,Address FROM `Teams`,`Locations` WHERE Teams.LocationId=Locations.LocationId;";\nOpenConnection();\nMySqlCommand MysqlCommand=new MySqlCommand(Query,MysqlConnection);\nMysqlReader=MysqlCommand.ExecuteReader();\nwhile (MysqlReader.Read()) {\n  ...\n  Team.Size=MysqlReader["Size"].ToString();\n  Location.Address=MysqlReader["Address"].ToString();\n  Team.Name=MysqlReader["TeamName"].ToString();\n  Location.Name=MysqlReader["LocationsName "].ToString();\n  ...\n}
1327	Button[] c = new Button[255]; // Initialise an array of buttons, length 255.\nc[0] = new Button(this); // Add a new button to index 0 of the array.
1328	XmlDocument xmlDoc = new XmlDocument();\nxmlDoc.Load(@"E:\abcd\source.xml");\n\nstring data = xmlDoc.OuterXml;
1329	?convert=false
1330	{Binding DataContext.ContextDeleteIcon, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}
1331	dnu build
1332	attender = jUser["attendance"].ToObject<List<Attendance>>();
1333	Task.Factory.FromAsync
1334	FindsBy(How = How.XPath, Using = "//span[.='FASTPRIS']")
1335	__init__.py
1336	using (var transaction = new TransactionScope())\n {\n     // do stuff here...\n     transaction.Complete();\n }
1337	string result = data + prop;
1338	VerticalContentAlignment="Center"
1339	control1....\n\n control2....\n\n</div>
1340	byte[] pass1 = new HashPassword("abc").ToArray();\nbyte[] pass2 = new HashPassword("abc").ToArray();
1341	ReportDataSource Rds = new ReportDataSource("DataSetName", GridView.DataSourceObject);
1342	[HttpPost]
1343	DrawingSurface.FillRectangle(new SolidBrush(Colors.Black), new Rectangle(0, height - 100, width, height));
1344	System.Net.WebClient
1345	TextBox.ValidationGroup = 1\nSubmit.ValidationGroup = 1\nrequiredFieldValidator.ValidationGroup = 1\nLinkButton.ValidationGroup = 2
1346	var xmlDocument = new XmlDocument();\nusing (var xmlReader = xDocument.CreateReader())\n{\n    xmlDocument.Load(xmlReader);\n}\nlistdataxml.Document = xmlDocument;
1347	Dictionary<GUID, iTrackedClass>
1348	Task.Run
1349	grid.RowValidationRules.Add(new CourseValidationRule() { \n                ValidationStep = ValidationStep.UpdatedValue \n            });
1350	foreach (var row in dataGridView.SelectedRows)\n{\n    // code here...\n}
1351	Thread thread1 = new Thread(() =>\n{\n    Application.Run(new Form1());\n});\nthread1.SetApartmentState(ApartmentState.STA);\nthread1.Start();\nthread1.Join();\n\nThread thread2 = new Thread(() =>\n{\n    Application.Run(new Form2());\n});\nthread2.SetApartmentState(ApartmentState.STA);\nthread2.Start();\nthread2.Join();
1352	ScriptManager sm = ScriptManager.GetCurrent(Page);\n        if (sm != null)\n            sm.RegisterPostBackControl(btnDownload); \n        //btnDownload = the button ID, just copied from your code.
1353	byte[] theFile = myNamespace.Properties.Resources.theBinaryFile;
1354	using System.IO;\nusing System.Net;\n\nvar url ="http://thebnet.x10.mx/HWID/BaseHWID/AlloweHwids.txt";\nvar client = new WebClient();\nusing (var stream = client.OpenRead(url))\nusing (var reader = new StreamReader(stream))\n{\n    string line;\n    while ((line = reader.ReadLine()) != null)\n    {\n        // do stuff\n    }\n}
1355	[XmlRoot("CONTACT")]\n[XmlInclude(typeof(CR.Models.XactAnalysis.Phone))]\n[XmlInclude(typeof(CR.Models.XactAnalysis.Email))]\npublic class Contact\n{\n    [XmlArray("CONTACTMETHODS")]\n    public List<ContactMethod> ContactMethods { get; set; }\n}\n\npublic class ContactMethod\n{\n    [XmlElement("PHONE")]\n    public Phone Phone { get; set; }\n\n    [XmlElement("EMAIL")]\n    public Email Email { get; set; }\n}\n\n[XmlRoot("PHONE")]\npublic class Phone\n{\n    [XmlAttribute("number")]\n    public string Number { get; set; }\n}\n\n[XmlRoot("EMAIL")]\npublic class Email\n{\n    [XmlAttribute("address")]\n    public string Address { get; set; }\n}
1356	using System;\nusing System.Windows.Forms;\nusing System.Runtime.InteropServices;\n\nclass ExtendedTreeView : TreeView {\n    protected override void WndProc(ref Message m) {\n        if (m.Msg == WM_REFLECT + WM_NOFITY) {\n            var notify = (NMHDR)Marshal.PtrToStructure(m.LParam, typeof(NMHDR));\n            if (notify.code == NM_CLICK) {\n                MessageBox.Show("yada");\n                m.Result = (IntPtr)1;\n                return;\n            }\n\n        }\n        base.WndProc(ref m);\n    }\n    private const int NM_FIRST = 0;\n    private const int NM_CLICK = NM_FIRST - 2;\n    private const int WM_REFLECT = 0x2000;\n    private const int WM_NOFITY = 0x004e;\n\n    [StructLayout(LayoutKind.Sequential)]\n    private struct NMHDR {\n        public IntPtr hwndFrom;\n        public IntPtr idFrom;\n        public int code;\n    }\n}
1357	static void Main(string[] args)\n    {\n        Complex RA = new Complex(25, 20);\n        Console.WriteLine("{0} + i{1}", RA.Real, RA.Imaginary);\n\n        double r, q, z;\n        r = Math.Sqrt((RA.Real * RA.Real) + (RA.Imaginary * RA.Imaginary));\n        q = Math.Atan(RA.Imaginary/RA.Real);\n        z = (q * (180/Math.PI));\n        Console.WriteLine("{0} < {1}", r, z);\n        Console.ReadLine();\n    }
1358	public static DirectoryInfo GetCreateMyFolder(string baseFolder)\n    {\n        var now = DateTime.Now;\n        var yearName = now.ToString("yyyy");\n        var monthName = now.ToString("MMMM");\n        var dayName = now.ToString("dd-MM-yyyy");\n\n        var folder = Path.Combine(baseFolder,\n                       Path.Combine(yearName,\n                         Path.Combine(monthName,\n                           dayName)));\n\n        return Directory.CreateDirectory(folder);\n    }
1359	public void ExtractLibraryZipFolder(SPWeb web, SPList myList, string FolderPath, SPFile myFile, bool overWrite)\n    {\n        ZipArchive myZip = new ZipArchive(myFile.OpenBinaryStream());\n\n        foreach (ZipArchiveEntry subZip in myZip.Entries)\n        {\n            MemoryStream myMemoryStream = new MemoryStream();\n            subZip.Open().CopyTo(myMemoryStream);\n            if (FolderPath != string.Empty)\n            {\n                SPFolder theFolder = web.GetFolder("/ImportToolLibrary/");\n                theFolder.SubFolders[FolderPath].Files.Add(subZip.Name, myMemoryStream);\n            }\n            else\n            {\n                SPFile myUpload = myList.RootFolder.Files.Add(subZip.Name, myMemoryStream);\n            }                \n        }\n    }
1360	Random r = new Random();\n        int[] num = Enumerable.Range(0, 100).Select(x => r.Next(-100, 101)).ToArray();\n        double avg = num.Where(n => n < 0).Average();
1361	DialogResult dr = MyInput.ShowDialog(this);\n//test for result here\n\nMyInput.Close();
1362	// change the latlng to your specified latlng\n CameraUpdate camera = CameraUpdateFactory.NewLatLngZoom(latlng,10 );\n mMap.MoveCamera (camera);
1363	private void LoadPage(string APageName)\n{\n    FAddress = null;\n    PlaceholderAddressTemplate.Controls.Clear();\n\n    if (!string.IsNullOrEmpty(APageName))\n    {\n        FAddress = (UserControl)LoadControl(string.Format("~/UserControls/{0}.ascx",\n                    APageName));\n\n        if (FAddress != null)\n        {\n            FAddress.ID = "UserControl1";\n\n            PlaceholderAddressTemplate.Controls.Add(FAddress);\n            ShowOrHideComponents();\n            FAddress.Focus();\n        }\n        else\n            ShowOrHideComponents();\n    }\n    else\n    ShowOrHideComponents();\n}
1364	foreach (var item in from l in list1\n                     where l == eCode\n                     select l)\n{\n    // Do something with each item\n}
1365	var result = "Hello??".Unidecode();\nConsole.WriteLine(result) // Prints Helloae
1366	void OnCompleted(BackgroundTaskRegistration sender, BackgroundTaskCompletedEventArgs args)\n    { \n      var tile = CreateNotification(String.Format(@"<tile>\n      <visual>\n        <binding template=""TileSquareText04"">\n          <text id=""1"">{0}</text>\n          <text id=""2""></text>\n        </binding> \n        <binding template=""TileSquareText02"">\n          <text id=""1"">{0}</text>\n          <text id=""2""></text>\n        </binding>  \n      </visual>\n    </tile>", DateTime.Now.ToString("hh:mm:ss")));\n     TileUpdateManager.CreateTileUpdaterForApplication().Update(tile);\n     }\n    private TileNotification CreateNotification(string xml)\n    {\n        var xmlDocument = new XmlDocument();\n        xmlDocument.LoadXml(xml);\n        return new TileNotification(xmlDocument);\n    }
1367	keyRight = keyRight.Replace("\r\n", "");
1368	AutoSize = True\n    AutoSizeMode = GrowAndStrink
1369	foreach(AutomationElement child in epoWindow.FindAll(TreeScope.Subtree, Condition.TrueCondition))\n  {\n      if (child.Current.Name.Contains("whatever"))\n      {\n          // do something\n      }\n  }
1370	using System.Windows.Forms.VisualStyles;\n...\n\n    public Form1()\n    {\n      InitializeComponent();\n      if (Application.RenderWithVisualStyles)\n      {\n        VisualStyleRenderer rndr = new VisualStyleRenderer(VisualStyleElement.Button.GroupBox.Normal);\n        Color c = rndr.GetColor(ColorProperty.TextColor);\n        label1.ForeColor = c;\n      }\n    }
1371	var listOfStrings = new List<string>\n{\n    "Orange",\n    "Orange",\n    "Orange",\n    "Orange",\n    "Mango",\n    "Mango",\n    "Mango",\n    "Mango",\n    "Mango",\n    "Mango",\n    "Apple",\n    "Apple",\n    "Apple"\n};\n\nvar groupedStrings = listOfStrings.GroupBy(i => i)\n    .Select(i => new {i.Key, Items = i.ToList()}).ToList();\n\nvar maxGroupSize = groupedStrings.OrderByDescending(i => i.Items.Count).First()\n    .Items.Count;\n\nvar finalList = new List<string>();\n\nfor (var i = 0; i < maxGroupSize; i++)\n{\n    finalList.AddRange(from wordGroup in groupedStrings \n                        where i < wordGroup.Items.Count \n                        select wordGroup.Items[i]);\n}
1372	char[] delimiter = {'-'};\n   String[] arr = data.Split(delimiter,StringSplitOptions.None);\n   Console.WriteLine(arr[6]);\n   //this will return the following string\n   /*\n   N0292F060 UPTON1C UPTON/N0447F430 UL975 BARTN UP17 NOKIN UN862\n   RILES UL180 MERLY DCT GAPLI/M080F430 DCT 46N015W 45N020W/M080F470\n   37N030W 33N040W 26N050W 18N058W/N0448F470 DCT BNE DCT*/
1373	private void onUserUpdated(DataRow row)\n    {\n        int idColumn = int.Parse(row["IdColumn"].ToString());\n        foreach (DataGridViewRow DGVrow in dataGridView1.Rows)\n        {\n            if (idColumn == int.Parse(DGVrow.Cells["IdColumn"].Value.ToString()))\n            {\n                for (int i = 0; i < row.ItemArray.Length; i++)\n                {\n                    dataGridView1[i, DGVrow.Index].Value = row.ItemArray[i].ToString();\n                }\n            }\n        }\n    }
1374	byte[] file = File.ReadAllBytes(reader["imgpath"].ToString());
1375	using(var context = new NorthwindContext())\n{\n   var query = from p in context.ProductsSet select p;\n   // then loop through your query instance.\n}
1376	using System.Runtime.CompilerServices;\n...\n    [STAThread]\n    static void Main()\n    {\n        AppDomain.CurrentDomain.AssemblyResolve += (sender, args) =>\n        {\n            // etc..\n        }\n        AvoidJitterBombing();\n    }\n\n    [MethodImpl(MethodImplOptions.NoInlining)]\n    private static void AvoidJitterBombing() {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n        Application.Run(new frmrPrincipal());\n    }
1377	string t = "test";\n drpFunction.Items.FindByText(t).Selected = true;
1378	private static void CreateCommand(string queryString,\n    string connectionString)\n{\n    using (SqlConnection connection = new SqlConnection(\n               connectionString))\n    {\n        connection.Open();\n\n        SqlCommand command = new SqlCommand(queryString, connection);\n        SqlDataReader reader = command.ExecuteReader();\n        while (reader.Read())\n        {\n            Console.WriteLine(String.Format("{0}", reader[0]));\n        }\n    }\n}
1379	int temp= tmp.ArchiveFileData.Count;\nif (this.progressBar1.InvokeRequired)\n        {\n            progressBar1.Invoke(new Action(delegate()\n            {\n                progressBar1.Maximum = temp;\n                progressBar1.Value = 0;\n            }));\n        }
1380	string text = "this is text with url http://test.com";\nMatch match = Regex.Match(text, @"http\://[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,3}(/\S*)?$");\n\n// gets you http://test.com\nstring url = match.Value;
1381	var splitOn = "App";\nvar path = "//Hello//Products//App//Images//Room//40//Tulips.jpg";\n\nvar parts = path.Split(new string[] { splitOn }, StringSplitOptions.None);\nConsole.WriteLine(parts[0] + splitOn);\nConsole.WriteLine(parts[1]);
1382	string StrCmd = "SELECT time, strike, vol FROM Table1 WHERE ((strike = @strike_value0 AND strike = @strike_value1 AND strike = @strike_value2) AND (time >= @time_value0 AND time <= @time_value1)) ";
1383	public static bool IsFileOpen(string path)\n    {\n        FileStream stream = null;\n        try\n        {\n            stream = File.Open(path, System.IO.FileMode.Open, System.IO.FileAccess.Read);\n        }\n        catch (IOException ex)\n        {\n            if (ex.Message.Contains("being used by another process"))\n                return true;\n        }\n        finally\n        {\n            if (stream != null)\n                stream.Close();\n        }\n\n        return false;\n    }
1384	//the DataGridView\nDataGridView myDataGriView = new DataGridView();\n\n//Declare BindingSource to sync DataGridView and data table\nBindingSource myBindingSource = new BindingSource();\n\n//set the DataSource property of your BindingSource \nmyBindingSource.DataSource = myDataTable;\n\n//set the DataSource property of your DataGridView \nmyDataGridView.DataSource = myBindingSource;
1385	protected override void Dispose(bool disposing)\n{\n   base.Dispose(disposing);\n   db.Dispose();\n}
1386	TimeZoneInfo timeZone1 = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");\nTimeZoneInfo timeZone2 = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");\nDateTime to_display= TimeZoneInfo.ConvertTime(from_db, timeZone1, timeZone2);
1387	private void dataGridView_CellFormatting(object sender, DataGridViewCellFormattingEventArgs e)\n{\n    if (e.ColumnIndex == 1)\n        {\n            if ((int)e.Value == 3)\n                e.CellStyle.BackColor = Color.Blue;\n            if ((int)e.Value == 2)\n                e.CellStyle.BackColor = Color.Red;\n        }\n}
1388	public bool CreateCustomer(string[] data, out Customer customer)\n{\n    customer = new Customer();\n    // put the data in the customer var\n\n    var context = new ValidationContext(customer, serviceProvider: null, items: null);\n    var results = new List<ValidationResult>();\n\n    return Validator.TryValidateObject(customer, context, results, true);\n}
1389	var list = my_query.ToList();\nforeach (Zoo z in list)\n...
1390	string[] filesPath = Directory.GetFiles(Server.MapPath("~/download_results/"));\n\nforeach (string fileName in filesPath)\n        {\n            string file = Path.GetFileName(fileName);\n            Panel1.Controls.Add(new LiteralControl("<div>"));\n            HyperLink hl = new HyperLink();\n            hl.Text = file;\n            hl.ID = file;\n            hl.Target = "_blank";\n            hl.NavigateUrl = "http://www.bbb.co/download_results/" + file;\n            Panel1.Controls.Add(hl);\n            Panel1.Controls.Add(new LiteralControl("</div>"));\n        }
1391	using System.Reflection;\nusing System.Windows.Forms;\n\nbool addScrollListener(DataGridView dgv)\n{\n    bool ret = false;\n\n    Type t = dgv.GetType();\n    PropertyInfo pi = t.GetProperty("VerticalScrollBar", BindingFlags.Instance | BindingFlags.NonPublic);\n    ScrollBar s = null;\n\n    if (pi != null)\n        s = pi.GetValue(dgv, null) as ScrollBar;\n\n    if (s != null)\n    {\n        s.Scroll += new ScrollEventHandler(s_Scroll);\n        ret = true;\n    }\n\n    return ret;\n}\n\nvoid s_Scroll(object sender, ScrollEventArgs e)\n{\n    // Hander goes here..\n}
1392	dgProperties tempItems = ((DataGrid)sender).SelectedItem as dgProperties;
1393	Enum.GetNames(typeof(SomeEnum)).Length;
1394	this.ListView1.DataBind();\n    StringWriter sw = new StringWriter();\n    HtmlTextWriter hw = new HtmlTextWriter(sw);\n    ListView1.RenderControl(hw);\n    string ListViewHTML = sw.ToString().Replace("\"", "'").Replace(System.Environment.NewLine, "");\n    StringBuilder sb = new StringBuilder();\n    sb.Append("<script type = 'text/javascript'>");\n    sb.Append("window.onload = new function(){");\n    sb.Append("var printList = window.open('', '', 'left=0");\n    sb.Append(",top=0,width=800,height=700,status=0');");\n    sb.Append("printList.document.write(\"");\n    sb.Append(ListViewHTML);\n    sb.Append("\");");\n    sb.Append("printList.document.close();");\n    sb.Append("printList.focus();");\n    sb.Append("printList.print();");\n    sb.Append("printList.close();};");\n    sb.Append("</script>");\n    ClientScript.RegisterStartupScript(this.GetType(), "ListViewPrint", sb.ToString());\n    this.ListView1.DataBind();
1395	public async static Task<List<String>> TagMonatJahr()\n{\n    string var1= String.Empty;\n    string var2 = String.Empty;        \n    return new List<String>{var1, var2};\n}
1396	public partial class MainWindow : Window\n{\n    NewWindow optionsWindow = new NewWindow();\n\n    public MainWindow()\n    {\n        InitializeComponent();\n\n        optionsWindow.button1.Click += new RoutedEventHandler(button1_Click);\n        optionsWindow.Show();\n\n    }\n\n    void button1_Click(object sender, RoutedEventArgs e)\n    {\n        double d = Convert.ToDouble(optionsWindow.textBox1.GetLineText(0));\n    }\n\n\n}
1397	var stringToMatch = Regex.Escape("mystring");\nvar lines = sb.ToString();\nvar regex = new Regex(string.Format(@"^.*\W{0}\W.*$", stringToMatch), RegexOptions.Multiline);\nstring result = regex.Replace(lines, "mynewstring");
1398	Player selected_player = from pl in players\n                         where pl.Name == label6.Text\n                         select pl;
1399	public sealed class YourSingleton\n{\n    private static readonly YourSingleton instance = new YourSingleton();\n\n    static YourSingleton() {}\n\n    private YourSingleton() { }\n\n    public static YourSingleton Instance\n    {\n        get { return instance ; }\n    }\n}
1400	mail.BodyEncoding = System.Text.Encoding.UTF8;
1401	if ((Text1.Text == xn["Name"].InnerText) && (Text2.Text == xn["Pwd"].InnerText))\n{\n  status.Text = "Correct";\n}
1402	static {\n    // code in here\n}
1403	Debugger.IsAttached
1404	File.Replace()
1405	string data = "Car|cBlue,Mazda~Model|m3";\n            List<string> delimiters = new List<string>();\n            delimiters.Add("|c");//Change this to user input\n            delimiters.Add("|m");//change this to user input\n\n            string[] parts = data.Split(delimiters.ToArray(), StringSplitOptions.RemoveEmptyEntries);\n            foreach (string item in parts)\n            {\n                Console.WriteLine(item);   \n            }
1406	col.NextSibling.InnerText
1407	IEnumerable<XElement> mping = (from mpings in mpingXML.Elements("mping")\n                                           where mpings.Element("sptrn").Value.Equals(sourceURL, StringComparison.InvariantCultureIgnoreCase)\n                                           && (mpings.Attribute("lcl").Value.Equals(locale, StringComparison.InvariantCultureIgnoreCase) || mpings.Attribute("lcl").Value.Equals("ALL", StringComparison.InvariantCultureIgnoreCase))\n                                           select mpings);
1408	if (comboBox1.SelectedItem != null)\n    {\n        int x = int.Parse(comboBox1.SelectedItem.ToString());\n    }\n    else { //Value is null }
1409	Assert.AreEqual(0, (int)Command.None);
1410	[DllImport("user32.dll")]\n[return: MarshalAs(UnmanagedType.Bool)]\nstatic extern bool SetForegroundWindow(IntPtr hWnd);
1411	var p = new Popup();\np.Child = new MyUserControl();\np.IsOpen = true;
1412	public ActionResult GetPartial()\n    {\n      var viewStr=RenderPartialToString("~/Views/Home/Partial1.cshtml",new object())\n      return content(viewStr);\n    }\n\n    // by this method you can  get string of view -- Update\n    public string RenderRazorViewToString(string viewName, object model)\n        {\n            ViewData.Model = model;\n            using (var sw = new StringWriter())\n            {\n                var viewResult = ViewEngines.Engines.FindPartialView(ControllerContext,\n                                                                         viewName);\n                var viewContext = new ViewContext(ControllerContext, viewResult.View,\n                                             ViewData, TempData, sw);\n                viewResult.View.Render(viewContext, sw);\n                viewResult.ViewEngine.ReleaseView(ControllerContext, viewResult.View);\n                return sw.GetStringBuilder().ToString();\n            }
1413	public Dictionary<string, string> GetEmployeesAllLevels(int managerId)\n{\n  return GetEmployeesAllLevels(managerId, null);\n}\n\nprivate Dictionary<string, string> GetEmployeesAllLevels(int managerId, Dictionary<string, string> existingList)\n{\n  if (existingList == null) existingList = new Dictionary<string, string>();\n  var lstSelectedEmployees1 = lstAllUser.Where(emp => emp.ManagerId == managerId)\n                                      .Select(emp => new { \n                                          EmployeeName = emp.UserDetail.Name, \n                                          ManagerName = emp.Manager.UserDetail.Name,\n                                          UserId = emp.UserId \n                                    }).ToList();\n  foreach(var emp in lstSelectedEmployees1)\n  {\n    existingList.Add(emp.EmployeeName, emp.ManagerName);\n    existingList = GetEmployeesAllLevels(emp.UserId, existingList);\n  }\n  return existingList;\n}
1414	[a-zA-Z]{2,2}\d+
1415	string myConnectionString = ConfigurationManager\n          .ConnectionStrings["CLessConStringLocal"].ConnectionString;
1416	textBox1.Text = (dataGridView1.Rows.Cast<DataGridViewRow>()\n      .Where( r => Convert.ToBoolean(r.Cells[0].Value).Equals(true))\n      .Sum(t => Convert.ToInt32(t.Cells[1].Value))).ToString();
1417	Action<object, MouseButtonEventArgs> myEventMethod = (sender, e) => _map_MouseLeftButtonUp2(sender, e, showResultsWindow);\n_map.MouseLeftButtonUp += myEventMethod;\n// ...\n_map.MouseLeftButtonUp -= myEventMethod;
1418	DropDownList ddl = (DropDownList)ContentPlaceHolderID.FindControl("DropDownList1");\n        ddl.Visible = false;
1419	String SchooID = getNewID();\n                Schools schl = new Schools();\n                schl.school_reference = SchooID;\n                schl.school_name = "Ananda Collage";\n\n                schl.StudentReference.Value = cecbContext.Students.First(i => i.stud_name == "Josh");\n\n\n                cecbContext.AddToSchools(schl);\n                cecbContext.SaveChanges();
1420	using System.IO;\nusing System.Reflection;\nusing OfficeOpenXml;\n\n//Create a stream of .xlsx file contained within my project using reflection\nStream stream = Assembly.GetExecutingAssembly().GetManifestResourceStream("EPPlusTest.templates.VendorTemplate.xlsx");            \n\n//EPPlusTest = Namespace/Project\n//templates = folder\n//VendorTemplate.xlsx = file\n\n//ExcelPackage has a constructor that only requires a stream.\nExcelPackage pck = new OfficeOpenXml.ExcelPackage(stream);
1421	MyControl control = (MyControl)Page.LoadControl("mycontrolname.ascx")
1422	00000000 00000000 00000001 11110100 and after this the 500 bytes of your actualy message comes
1423	const char s = ((char)127);
1424	string[] a = e.KeyData.ToString().Split(',');
1425	var ctx = new TestContext();\nvar cmd = ctx.Database.Connection.CreateCommand() as OracleCommand;\ncmd.CommandType = CommandType.StoredProcedure;\ncmd.CommandText = "SOMESTOREDPROC";\nvar p_rc1 = new OracleParameter("p_rc1", OracleDbType.RefCursor, ParameterDirection.Output);\nvar p_rc2 = new OracleParameter("p_rc2", OracleDbType.RefCursor, ParameterDirection.Output);\ncmd.Parameters.Add(p_rc1);\ncmd.Parameters.Add(p_rc2);\n\nif (ctx.Database.Connection.State != ConnectionState.Open)\n    ctx.Database.Connection.Open();\n\nvar reader = cmd.ExecuteReader();
1426	var sb = new StringBuilder();\nsb.Append(r);\nsb.Append(g);\nsb.Append(b);\n\nstring result = sb.ToString();
1427	return AuditItems.OrderBy(ai => ai.DateOfAction).Last()
1428	ApplicationData.Current.LocalSettings
1429	AddTextFrame()
1430	var closed = new HashSet<Node>();\nvar queue = new PriorityQueue<double, Path<Node>>();\nqueue.Enqueue(0, new Path<Node>(start));\nwhile (!queue.IsEmpty)\n{\n    var path = queue.Dequeue();\n    if (closed.Contains(path.LastStep)) continue;\n    if (path.LastStep.Equals(destination)) return path;\n    closed.Add(path.LastStep);\n    foreach(Node n in path.LastStep.Neighbours)\n    {\n        double d = distance(path.LastStep, n);\n        var newPath = path.AddStep(n, d);\n        queue.Enqueue(newPath.TotalCost + estimate(n), newPath);\n    }\n}
1431	if (e.Row.RowType == DataControlRowType.Header)\n{\n  e.Row.Cells[0].Text = "column 1";\n  e.Row.Cells[1].Text = "column 2";\n  .....\n}
1432	List<ReportPermissions> finalizedItems = new List<ReportPermissions>();\n\n            foreach (ReportPermissions rp in l)\n            {\n                //Check to see if record for this user exists\n                if (!finalizedItems.Any(x => x.CwsId == rp.CwsId))\n                {\n                    // if it doesn't exist, get it\n                    ReportPermissions perm = new ReportPermissions();\n                    perm.CwsId = rp.CwsId;\n\n                    perm.Reports = string.Join(",", l.Where(x => x.CwsId == rp.CwsId).Select(x => x.Reports).Distinct());\n                    perm.Regions = string.Join(",", l.Where(x => x.CwsId == rp.CwsId).Select(x => x.Regions).Distinct());\n                    finalizedItems.Add(perm);\n                }\n            }\n\n            l= finalizedItems;
1433	var aa = ("a" & Environment.NewLine & "b" & Environment.NewLine & "c").Split(New String[] {Environment.NewLine}, StringSplitOptions.RemoveEmptyEntries);
1434	documentButtons = new RadioButton[3];\nint i = 0;\nwhile (i <= 3 && reader.Read()) { // make sure we don't get an IndexOutOfRangeException\n  documentButtons[i] = new RadioButton();\n  documentButtons[i].Text = reader["name"].ToString() + " " + (i + 1);\n\n  Console.WriteLine(reader["name"].ToString());\n\n  documentButtons[i].Location = new System.Drawing.Point(10, 10 + i * 20);\n  this.Controls.Add(documentButtons[i]);\n\n  ++i;\n}
1435	BrowserControl.LoadCompleted += Browser_LoadCompleted;\nprivate void Browser_LoadCompleted(object sender, NavigationEventArgs e)\n{\n  string myhtml = BrowserControl.SaveToString();\n  string mataTag = "<meta name=\"viewport\" content=\"width=320,user-scalable=yes\" />";\n  myhtml = html.Insert(html.IndexOf("<head>", 0) + 6, mataTag);\n  BrowserControl.NavigateToString(html);\n  BrowserControl.LoadCompleted -=  Browser_LoadCompleted;\n}
1436	[System.Xml.Serialization.XmlRoot(ElementName = "table")]        \npublic class Table\n{\n    [System.Xml.Serialization.XmlElement("row")]\n    public Row[] Rows;\n}\n\npublic class Row\n{\n    public string V;\n}
1437	{\n    // connection string!\n    SqlConnection myConn = new SqlConnection("Server=localhost\\SQLEXPRESS;Integrated security=SSPI;database=Mynewdatabase;");\n\n    try\n    {\n        myConn.Open();\n        Console.WriteLine(myConn );\n    }\n    catch (System.Exception)\n    {\n       // some exception\n    }\n    finally\n    {\n        if (myConn.State == ConnectionState.Open)\n        {\n            myConn.Close();\n        }\n        myConn.Dispose();\n    }\n}
1438	// sign in\nFormsAuthentication.SetAuthCookie(username, false);\n// sign out\nFormsAuthentication.SignOut();
1439	Clipboard.SetImage(Image.FromFile("full_path_of_image_here");\nrichTextBox1.Paste();
1440	DataSet reportData = new DataSet();\nreportData.ReadXml(Server.MapPath("yourfile.xml"));\nSqlConnection connection = new SqlConnection("DB ConnectionSTring");\nSqlBulkCopy sbc = new SqlBulkCopy(connection);\nsbc.DestinationTableName = "yourXMLTable";
1441	string _time = RadDateInput1.SelectedDate.Value.ToShortTimeString();
1442	DateTime dateFrom = new Date(2014,8,2);\nvar GroupedPrices = Prices\n    .Where(p => p.ArrivalDateFrom <= dateFrom && p.ArrivalDateTo > dateFrom)\n    .GroupBy(p => p.ItemID)\n    .Select(g => new{ ItemId = g.Key, NewestPrice = g.OrderByDescending(p => p.ValidFrom).First() });
1443	Microsoft.Office.Interop.Word.Application oWord = new Microsoft.Office.Interop.Word.Application();\nMicrosoft.Office.Interop.Word.Document oWordDoc = new Microsoft.Office.Interop.Word.Document();\nObject oMissing = System.Reflection.Missing.Value;\n\noWord.Visible = true;\n\noWord.Activate(); \n\noWord.Dialogs[WdWordDialog.wdDialogFileNew].Show(oMissing);
1444	public LoginResult Login (\n    [XmlElement(Namespace = "")] string user,\n    [XmlElement(Namespace = "")] string password,\n    [XmlElement(Namespace = "")] string client,\n    [XmlElement(Namespace = "")] string language)\n{\n    return new LoginResult() {\n        ResultCode = 0,\n        SessionId = user + "-" + password + "-" + client + "-" + language\n    };\n}
1445	tableLayoutPanel1.SuspendLayout();\n\ntableLayoutPanel1.RowCount++;\ntableLayoutPanel1.RowStyles.Insert(tableLayoutPanel1.RowCount - 1, new RowStyle(SizeType.AutoSize));\n\ntableLayoutPanel1.SetRow(btnAdd, tableLayoutPanel1.RowCount - 1);\n\nvar control = CreateControl();\ntableLayoutPanel1.Controls.Add(control, 0, tableLayoutPanel1.RowCount - 2);\ntableLayoutPanel1.ResumeLayout();
1446	{\n   if(dg.selectedItem != null)\n   {\n      if (txt.text.length !=0)\n      {\n        txt.text = txt.text + ", ";\n      }\n      txt.text = txt.text + dg.selectedItem.text;\n   }\n}
1447	// http://msdn.microsoft.com/en-us/library/ms686033(VS.85).aspx\n    [DllImport("kernel32.dll")]\n    public static extern bool SetConsoleMode(IntPtr hConsoleHandle, uint dwMode);\n\n    private const uint ENABLE_EXTENDED_FLAGS = 0x0080;\n\n    static void Main(string[] args)\n    {\n         IntPtr handle = Process.GetCurrentProcess().MainWindowHandle;\n         SetConsoleMode(handle, ENABLE_EXTENDED_FLAGS);
1448	class UniqueQueue<T>\n{\n    private readonly Queue<T> queue = new Queue<T>();\n    private HashSet<T> alreadyAdded = new HashSet<T>();\n\n    public virtual void Enqueue(T item)\n    {\n        if (alreadyAdded.Add(item)) { queue.Enqueue(item); }\n    }\n    public int Count { get { return queue.Count; } }\n\n    public virtual T Dequeue()\n    {\n        T item = queue.Dequeue();\n        return item;\n    }\n}
1449	appGUID:\s*(?<value>wx|null)\s
1450	using (MemoryStream ms = new MemoryStream())\n{\n    bitmap.Save(ms);\n\n    writer.Write(ms.Length);\n    ms.Position = 0;\n    ms.CopyTo(writer.BaseStream);\n}
1451	If Not Request.IsSecureConnection\n    'Whatever\nEnd If
1452	const string OfficeCommonKey = @"Software\Microsoft\Office\14.0\Common";\n            const string OfficeThemeValueName = "Theme";\n            const int ThemeBlue = 1;\n            const int ThemeSilver = 2;\n            const int ThemeBlack = 3;\n\n            using (RegistryKey key = Registry.CurrentUser.OpenSubKey(OfficeCommonKey, true))\n            {\n\n                int theme = (int)key.GetValue(OfficeThemeValueName,1);\n\n                switch (theme)\n                {\n                    case ThemeBlue:\n                        //...\n\n                        break;\n                    case ThemeSilver:\n                       // ...\n\n                        break;\n                    case ThemeBlack:\n                       // ...\n\n                        break;\n                    default:\n                       // ...\n                        break;\n                }\n            }
1453	string[] output=Regex.Split(input,@"(?<!\?)'")\n                     .Select(x=>x.Replace("?'","'"))\n                     .ToArray();
1454	DataRow dr = (DataGridView1.SelectedRows[0].DataBoundItem as DataRowView).Row;
1455	double? name { get; set;}
1456	private void Form_Load(object sender, EventArgs e)\n    {\n        if (Properties.Settings.Default.SettingName != "")\n        {\n            TextBox1.text = Properties.Settings.Default.SettingName;\n            //And so on\n        }\n    }\n\n\n\n    private void Form_FormClosing(object sender, FormClosingEventArgs e)\n    {\n        Properties.Settings.Default.SettingName = //things you want to save;\n        //Do it for the rest aswell\n    }
1457	string[] mystrings = test.Split(new[]{ "split" }, \n    StringSplitOptions.RemoveEmptyEntries);
1458	class User\n - name\n - picture\n - other properties\n\nclass Profile\n - User myAccountInfo\n - List<User> friends
1459	var request = new RestSharp.RestRequest();\n\nvar locations = new Dictionary<string, object>();\nlocations.Add("A", 1);\nlocations.Add("B", 2);\nlocations.Add("C", 3);\n\nJsonObject o = new JsonObject();\n\nforeach (var kvp in locations)\n{\n    o.Add(kvp);\n}\n\nJsonArray arr = new JsonArray();\narr.Add(o);\n\nrequest.AddParameter("locations", arr.ToString());\nrequest.AddParameter("date", 1434986731000);
1460	public UserHub()\n   {\n      Connections.Instance.OnPurge += ConnectionsUpdate\n   }
1461	delegate void myDelegate(ref Label lb, string toAdd);\nprivate void UpdateLabel(ref Label lb, string toAdd)\n{\n    if (this.InvokeRequired)\n    {\n        this.Invoke(new myDelegate(UpdateLabel), new object[] { lb, toAdd });\n    }\n    else\n    {\n        lb.Text = toAdd;\n    }\n}
1462	private void ContextMenuSendBackward_Click(object sender, RoutedEventArgs e)\n        {\n            Canvas parent = (Canvas)LogicalTreeHelper.GetParent(this);\n            foreach (var child in parent.Children)\n            {\n                Canvas.SetZIndex((UIElement)child, 0);\n            }\n            Canvas.SetZIndex(selected, 1);\n        }
1463	string test = "<CrossReferenceSource Self=\"CRef\"><CrossReferenceSource Self=\"CRef\">";\n        Regex match = new Regex("CRef");\n        int count = 0;\n        string result = match.Replace(test, delegate(Match t)\n        {\n            return "CRef" + count++.ToString();\n        });
1464	\(([^)]+)\)
1465	List<event> listOfEvents = \n    (from eachEvent in eventsFromArgus\n     select new Event(\n         ReaderName = eachEvent.DeviceName, \n         EventCode = eachEvent.EventCode, \n         EventReceivedTime = eachEvent.ReceiveTime.ToString(), \n         EventOriginTime = eachEvent.OriginTime.ToString(), \n         CardNumber = eachEvent.CredentialIdentifier)).ToList();
1466	mutool extract C:\mypdf.pdf
1467	try{\n            HttpContext context = HttpContext.Current;\n            context.Response.Clear();\n\n            //dts.WriteXml(Filename, System.Data.XmlWriteMode.IgnoreSchema);\n            context.Response.Write("<?xml version=\"1.0\" standalone=\"yes\"?>");\n            dts.WriteXml(context.Response.OutputStream, System.Data.XmlWriteMode.IgnoreSchema);\n            context.Response.ContentType = "text/xml";\n            context.Response.AppendHeader("Content-Disposition", "attachment; filename=" + Filename + ".xml");\n\n            context.Response.End();\n\n    }
1468	string str = comboBox_stockDates.SelectedItem.ToString();\nDateTime date = DateTime.ParseExact(str, "dd/MM/yyyy", CultureInfo.GetCultureInfo("en-GB"));\nstring dtFilter = string.Format(\n    "[Comments_Date] >= '{0} 12:00:00 AM' AND [Comments_Date] <= '{0} 11:59:59 PM'", date.ToString("dd/MM/yyyy"));\n(dataGridView_flaggedComments.DataSource as DataTable).DefaultView.RowFilter = dtFilter;
1469	private void addImages_Click(object sender, RoutedEventArgs e)\n{ \n    ImageList.Items.Clear();\n    RefreshList();\n\n    FileInfo Images;\n    string[] filenames = null;\n    System.Windows.Forms.FolderBrowserDialog folderDlg = new System.Windows.Forms.FolderBrowserDialog();\n    folderDlg.ShowNewFolderButton = true;\n    System.Windows.Forms.DialogResult result = folderDlg.ShowDialog();\n\n    if (result == System.Windows.Forms.DialogResult.OK)\n    {\n        filenames = System.IO.Directory.GetFiles(folderDlg.SelectedPath);\n\n        foreach (string image in filenames)\n        {\n            Images = new FileInfo(image);\n\n            if(new string[]{".png", ".jpg", ".gif", ".jpeg", ".bmp", ".tif"}.Contains(Images.Extension.ToLower()))\n            {\n                ImageList.Items.Add(new LoadImages(new BitmapImage(new Uri(image))));\n            }\n        }\n    }\n\n    RefreshList();\n}\n\nprivate void RefreshList()\n{\n    // Force visual refresh of control\n    ImageList.Refresh();\n}
1470	strConnectionString = "Provider=Microsoft.ACE.OLEDB.12.0;" +\n                                        "Data Source=" + strFilePath + ";Jet OLEDB:Engine Type=5;Extended Properties='Excel 12.0;HDR=NO;IMEX=1'";
1471	int i = 111;\nstring s = "Added";\nvar s = s + i.ToString("D5");\n\n//s = "Added00111"
1472	var response = await client.GetAsync("URL?username=user&password=password");
1473	List<string>[] array_of_lists = new List<string>[10];\nfor (int i = 0; i < array_of_lists.Length; i++) {\n    array_of_lists[i] = new List<string>();\n    array_of_lists[i].Add("some text here");\n    array_of_lists[i].Add("some other text here");\n    array_of_lists[i].Add("and so on");\n}
1474	Class A\n{\n  B b;\n}\n\nClass B\n{\n\n}
1475	public Window4()\n    {\n        InitializeComponent();\n        this.Closing += new System.ComponentModel.CancelEventHandler(Window4_Closing);\n    }\n\n    void Window4_Closing(object sender, System.ComponentModel.CancelEventArgs e)\n    {\n        e.Cancel = true;\n    }
1476	private void CheckBox1_Checked(object sender, RoutedEventArgs e)\n{\n    var checkBox = (CheckBox)sender;\\n    var data = (Your class)checkBox.DataContext;\n    var id = data.id;\n}
1477	static void Main(string[] args)\n    {\n        try\n        {\n            Utils.SetConfigFile();\n            ServiceBase[] ServicesToRun;\n            ServicesToRun = new ServiceBase[] \n            { \n                new TaoTimer() \n            };\n            ServiceBase.Run(ServicesToRun);\n        }\n        catch (Exception ex)\n        {\n            EventLog.WriteEntry("Application", ex.ToString(), EventLogEntryType.Error);\n        }\n     }\n\npublic partial class TaoTimer : ServiceBase\n{\n    ...\n    protected override void OnStart(string[] args)\n    {\n        SetTimerList();\n        EventLog.WriteEntry("Started");\n    }\n    ....\n}
1478	[Test]\npublic void DirctoryResult_Returns_Groups()\n{\n    var service = autoMocker.Get<IGroupService>();\n    service.Expect(srv => srv.GetGroupsByQuery(Arg<string>.Is.Anything))\n        .Return(new List<CompanyGroupInfo>\n                    {\n                        new CompanyGroupInfo(),\n                        new CompanyGroupInfo(),\n                        new CompanyGroupInfo()\n                    });\n\n    service.Replay();\n\n    var directoryResult = _controller.DirectoryResult("b");\n\n    var fundDirectoryViewModel = (FundDirectoryViewModel)directoryResult.ViewData.Model;\n\n    Assert.That(fundDirectoryViewModel.Groups.Count, Is.EqualTo(3));\n\n    service.AssertWasCalled(srv => srv.GetGroupsByQuery(Arg<string>.Is.Equal("b")));\n}
1479	SqlDataSource source = new SqlDataSource(connectionString:);\nsource.SelectCommand = String.Format("SELECT id, type FROM {0}" selectedTable)\nsource.DataBind();
1480	string s = int.Parse("4322566").ToString("X");
1481	lbl.Text = Server.HtmlEncode("Today is the Greatest!  <b>Hi!</b>");
1482	if(Gls.TType.Name == t.Name) \n  selectIndex++;\nelse selectIndex = 0;
1483	protected override bool ProcessCmdKey(ref Message msg, Keys keyData) {\n        if (this.ActiveControl == toolStripTextBox1.Control && keyData == (Keys.Alt | Keys.Left)) {\n            MessageBox.Show("it's special");\n            return true;\n        }\n        return base.ProcessCmdKey(ref msg, keyData);\n    }
1484	WqlEventQuery wQuery = \n new WqlEventQuery("Select * From __InstanceDeletionEvent Within 1 Where TargetInstance ISA 'Win32_Process'");\n\nusing (ManagementEventWatcher wWatcher = new ManagementEventWatcher(scope, wQuery))\n{    \n  bool stopped = false;\n\n  while (stopped == false)\n  {\n    using (ManagementBaseObject MBOobj = wWatcher.WaitForNextEvent())\n    {\n      if (((ManagementBaseObject)MBOobj["TargetInstance"])["ProcessID"].ToString() == ProcID)\n      {\n        // the process has stopped\n        stopped = true;\n      }\n    }\n  }\n\n  wWatcher.Stop();\n}
1485	private void ListView1_Validating(object sender, System.ComponentModel.CancelEventArgs e)\n{\n   // Show messagebox and get response\n   if(UserDoesntWantToSave)       \n   {\n      // Cancel the event\n      e.Cancel = true;\n   }\n}
1486	using System;\nusing System.Collections.Generic;\nusing System.Linq;\nstatic class Program\n{\n    static void Main()\n    {\n        Func<long, long, long, IEnumerable<long>> fib = null;\n        fib = (n, m, cap) => n + m > cap ? Enumerable.Empty<long>()\n            : Enumerable.Repeat(n + m, 1).Concat(fib(m, n + m, cap));\n\n        var list = fib(0, 1, 1000).ToList();\n    }\n}
1487	[STAThread]\n    static void Main() {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n        var main = new Form1();\n        main.FormClosed += new FormClosedEventHandler(FormClosed);\n        main.Show();\n        Application.Run();\n    }\n\n    static void FormClosed(object sender, FormClosedEventArgs e) {\n        ((Form)sender).FormClosed -= FormClosed;\n        if (Application.OpenForms.Count == 0) Application.ExitThread();\n        else Application.OpenForms[0].FormClosed += FormClosed;\n    }
1488	public MainWindow()\n    {\n        InitializeComponent();\n        myEllipse.AddHandler(UIElement.MouseDownEvent, new RoutedEventHandler(OnMouseDown));\n        myPanel.AddHandler(UIElement.MouseDownEvent, new RoutedEventHandler(OnMouseDown));\n        myBorder.AddHandler(UIElement.MouseDownEvent, new RoutedEventHandler(OnMouseDown));\n    }\n\n    void OnMouseDown(object sender, RoutedEventArgs e)\n    {\n        UIElement uiElement = sender as UIElement;\n        Debug.WriteLine(uiElement.GetType().ToString());\n        e.Handled = true;\n    }
1489	NotesDatabase.getProfileDocument()
1490	/// <summary>\n  /// This is a dummy constructor - it is just here to prevent classes in other assemblies\n  /// from being derived from this class. \n  /// See http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=2971840&SiteID=1\n  /// </summary>\n  internal MhlAdminLayer() { }
1491	c = Xn.ChildNodes[2].InnerText;
1492	var query = \n    (from pd in context.Report\n     where pd.ReportDate.Month == 11\n     && pd.ReportDate.Year == 2012 \n     && pd.UserID == 11014\n     select pd).ToList() //use .ToList() to avoid doubled execution\nvar result = \n    new \n    {\n        Cost = query.Sum(pd => pd.Cost), \n        RevenueUSD = query.Sum(pd => pd.Revenue) \n    };
1493	pea.Graphics.InterpolationMode = InterpolationMode.NearestNeighbor;\npea.Graphics.PixelOffsetMode = PixelOffsetMode.None; // or PixelOffsetMode.Half
1494	public IList SomeMethod(Type t)\n{ \n    Type listType = typeof(List<>);\n    listType = listType.MakeGenericType(new Type[] { t});\n    return (IList)Activator.CreateInstance(listType);\n}
1495	UpdateLastActivity()
1496	private List<ListINeed> GetListINeed(Guid clientId)\n{\n    return someobject.SelectMany(p=> p.subcollection)\n                             .Select(p=>p.subObject).ToList();\n}
1497	using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\npublic class Program\n{\n    public static void Main()\n    {\n        IList<int> l = new List<int>();\n        for(int i = 0; i < 5000; i++){\n            l.Add(i);   \n        }\n\n        var a = l.Take(1000); //First 1000 items\n        var b = l.Skip(1000).Take(1000); //Second 1000 items\n        var c = l.Skip(2000); //Final 3000 items\n\n        System.Console.WriteLine("a: " + a.Count());\n        System.Console.WriteLine("b: " + b.Count());\n        System.Console.WriteLine("c: " + c.Count());\n    }\n}
1498	public virtual AccessRequestQuestion AccessRequestQuestion {get;set;}
1499	DataRowView itemAtFourthIndex = combobox.Items[4] as DataRowView;\n\nint id = -1;\nif(itemAtFourthIndex != null)\n   id = Convert.ToInt32(itemAtFourthIndex.Row["ID"]);
1500	TextBox1.Text = ListBox1.Items.Count.ToString();
1501	using (IsolatedStorageFileStream fsIdea = new IsolatedStorageFileStream("Idea.xml", FileMode.Create, storage))
1502	var comm = from u in my_bd.Comment.Include("Article").Include("Author")\n           where ......\n           select u;
1503	public Instrument() : this(DefaultName, DefaultCategory)\n{\n\n}
1504	buttonHelp.ContextMenu.Placement = System.Windows.Controls.Primitives.PlacementMode.Bottom;\nContextMenuService.SetPlacement(buttonHelp, System.Windows.Controls.Primitives.PlacementMode.Bottom);
1505	public static bool IsWindowTopMost(IntPtr Handle)\n{\n  return (GetWindowLong(Handle, GWL_EXSTYLE) & WS_EX_TOPMOST) != 0;\n}
1506	DirectoryInfo d = new DirectoryInfo(@"e:\test1");\nDirectorySecurity acl = d.GetAccessControl();\nif (acl.GetAccessRules(false, true, typeof(System.Security.Principal.SecurityIdentifier)).Count >0)\n    // -- has inherited permissions\nelse\n    // -- has no inherited permissions
1507	public bool UpdateUser(User userToUpdate)\n{\n    using (DBContext _context = new DBContext())\n    {\n        try\n        {\n            User outUser = usersModel.Users.Single(x => x.UserId == userToUpdate.UserId);\n            outUser = userToUpdate;\n            _context.ApplyCurrentValues("Users", outUser);\n            _context.SaveChanges();\n            return true;\n        }\n        catch (Exception ex)\n        {\n            // LOGS etc.\n            return false;\n        }\n    }\n}
1508	menuItemFolder.Click += (sender, e) => YourMethod(owner, dataType);
1509	public string GetFindBooks(string author="", string title="", string isbn="", string  somethingelse="", DateTime? date= null) \n{\n    // ...\n}
1510	public class RecordsController : ApiController\n{\n    public HttpResponseMessage Post(Record record)\n    {\n        var newId = _Records.Count + 1;\n        record.ID = newId;\n        _Records.Add(record);\n        var newMessage = new HttpResponseMessage<Record>(record);\n        return newMessage;\n    }\n }
1511	output:"HTML"
1512	//webDriver.FindElement(By.XPath("//*[contains(@id,"ChassisId')]/a/ins[contains(text(),'POWER CONNECT')]")
1513	IEnumerable<SearchResult> Search(string domain, string filter)\n{\n    DirectoryContext context = new DirectoryContext(DirectoryContextType.Forest, domain);\n    Forest forest = Forest.GetForest(context);\n    GlobalCatalog gc = null;\n    try\n    {\n        gc = forest.FindGlobalCatalog();\n    }\n    catch (ActiveDirectoryObjectNotFoundException)\n    {\n        // No GC found in this forest\n    }\n\n    if (gc != null)\n    {\n        DirectorySearcher searcher = gc.GetDirectorySearcher();\n        searcher.Filter = filter;\n        foreach (SearchResult result in searcher.FindAll())\n        {\n            yield return result;\n        }\n    }\n    else\n    {\n        foreach (Domain d in forest.Domains)\n        {\n            DirectorySearcher searcher = new DirectorySearcher(d.GetDirectoryEntry(), filter);\n            foreach (SearchResult result in searcher.FindAll())\n                yield return result;\n        }\n    }\n}
1514	var list = new List<dynamic>\n          {\n               new Func<int, int, int> (X),\n               new Func<int, int, string, string> (Y)\n          };\n\ndynamic result = list[0](1, 2); // like X(1, 2)\ndynamic result2 = list[1](5, 10, "hello") // like Y(5, 10, "hello")
1515	...\nbool candidatExists = false;\nint idCandidat = int.Parse(Session["Id_candidat"].ToString());\nwhile (dr.Read())\n    {\n        cv p3 = new cv();\n        p3.Id_candidat = int.Parse(dr[0].ToString());\n        c.Add(p3);\n        if(p3.Id_candidat == idCandidat)\n        {\n             candidatExists = true;\n        }\n    }\n    dr.Close();\n    con.Close();\n\n    Button1.Enabled = !candidatExists;
1516	using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing Newtonsoft.Json;\n\nclass Test\n{ \n    static void Main(string[] args) \n    {\n        var json = File.ReadAllText("weather.json");\n        var root = JsonConvert.DeserializeObject<Root>(json);\n        Console.WriteLine(root.Weather[0].Description);\n    }\n}\n\npublic class Root\n{\n    // Just a few of the properties\n    public Coord Coord { get; set; }\n    public List<Weather> Weather { get; set; }\n    public int Visibility { get; set; }\n    public string Name { get; set; }\n}\n\npublic class Weather\n{\n    public int Id { get; set; }\n    public string Description { get; set; }\n}\n\npublic class Coord\n{\n    public double Lon { get; set; }\n    public double Lat { get; set; }\n}
1517	using System.Net;\n...\n\npublic string GetHostName(string ipAddress)\n{\n    try\n    {\n        IPHostEntry entry = Dns.GetHostEntry(ipAddress);\n        if (entry != null)\n        {\n           return entry.HostName;\n        }\n    }\n    catch (SocketException ex)\n    {\n       //unknown host or\n       //not every IP has a name\n       //log exception (manage it)\n    }\n\n    return null;\n}
1518	Task.Factory.StartNew(path => Directory.Delete((string)path, true), fullPath);
1519	protected void Page_Load(object sender, EventArgs e)\n{\n    ViewState["autogen"] = 0;\n}\n\nprotected void Button1_Click(object sender, EventArgs e)\n{\n    var autogen = Convert.ToInt32(ViewState["autogen"]);\n    Label1.Text = autogen.ToString();\n    ViewState["autogen"] = autogen + 1;\n}
1520	System.Web.HttpUtility.HtmlEncode("&")
1521	ListBoxItem selected = listBox1.SelectedItem as ListBoxItem;\n\nMessageBox.Show(selected.Content.ToString());
1522	destinationProvider.Configuration.ConflictResolutionPolicy =   ConflictResolutionPolicy.DestinationWins;
1523	public override void OnAuthorization(AuthorizationContext filterContext)\n{\n    if (...subscriptionExpired...)\n    {\n        filterContext.Cancel = true;\n        filterContext.Result = new RedirectResult("/user/login");\n    }\n}
1524	Application.Idle += Initialize;\nApplication.Run();\n...\n\nprivate void Initialize (object sender, EventArgs e) \n{ \n  Application.Idle -= Initialize; \n  _hook = new KeyboardHook();\n\n  // this must be performed from the thread running Application.Run!\n  // do not move it out of this event handler\n  _hook.RegisterHotKey (...);      \n}
1525	TestDataSetTableAdapters.CategoryTableAdapter ca = new TestDataSetTableAdapters.CategoryTableAdapter();\n        this.ds1 = new TestDataSet();\n        ca.Fill(this.ds1.Category);
1526	[WebMethod]\npublic static Student[] GetStudents()\n{        \n    String connectionString = ConfigurationManager.ConnectionStrings["str"].ConnectionString;\n    using(SqlConnection con = new SqlConnection(connectionString))\n    using(SqlCommand cmd = con.CreateCommand())\n    {\n        cmd.CommandText = "SELECT * FROM [student]";\n        con.Open();\n\n        List<Student> ret = new List<Student>();\n\n        using(SqlDataReader rdr = cmd.ExecuteReader())\n        {\n            while(rdr.Read())\n            {\n                ret.Add( new Student() {\n                    Name = rdr.GetString("Name"),\n                    Address = rdr.GetString("Address"),\n                    Sex = rdr.GetString("Sex"),\n                    Email = rdr.GetString("Email")\n                } );\n            }//while\n        }//using\n\n        return ret.ToArray();\n    }//using \n}//GetStudents
1527	foreach(DataRow row in thisTable.Rows)\n    {\n        string name = row.Item[0].ToString();\n\n        if(name[name.Length - 3] == '(' && name[name.Length - 1] == ')')\n            continue;\n\n        string item = row.Item[1].ToString();\n        int quantity = Convert.ToInt32(row.Item[2]);\n        string expression = "Name = " + name + " and Item = " + item + " and Quantity = " + quantity;\n\n        DataRow[] matchingRows = table.Select(expression);\n        for(int i = 1; i < matchingRows.Length; i++)\n            matchingRows[i]["Name"] += " (" + i + ")";  \n    }
1528	public MemoryStream MergePdfForms(List<byte[]> files)\n{\n    if (files.Count > 1)\n    {\n        PdfReader pdfFile;\n        Document doc;\n        PdfWriter pCopy;\n        MemoryStream msOutput = new MemoryStream();\n\n        pdfFile = new PdfReader(files[0]);\n\n        doc = new Document();\n        pCopy = new PdfSmartCopy(doc, msOutput);\n\n        doc.Open();\n\n        for (int k = 0; k < files.Count; k++)\n        {\n            pdfFile = new PdfReader(files[k]);\n            for (int i = 1; i < pdfFile.NumberOfPages + 1; i++)\n            {\n                ((PdfSmartCopy)pCopy).AddPage(pCopy.GetImportedPage(pdfFile, i));\n            }\n            pCopy.FreeReader(pdfFile);\n        }\n\n        pdfFile.Close();\n        pCopy.Close();\n        doc.Close();\n\n        return msOutput;\n    }\n    else if (files.Count == 1)\n    {\n        return new MemoryStream(files[0]);\n    }\n\n    return null;\n}
1529	string sql="";\nforeach(DataRow dr in yourdatatable.Rows){\n   sql += "INSERT INTO table2 (column1) VALUES ('"+dr["something"]+"'); ";\n}\n//and here execute this sql
1530	DispatcherTimer timer = new DispatcherTimer();\n\n// Call this method after the 60 seconds countdown.\npublic void Start_timer()\n{        \n    timer.Tick += timer_Tick;\n    timer.Interval = new TimeSpan(0, 0, 5);\n    bool enabled = timer.IsEnabled;\n\n    // Check and show answer is correct or wrong\n\n    timer.Start();       \n}\n\nvoid timer_Tick(object sender, object e)\n{\n    this.Visibility = System.Windows.Visibility.Visible;\n    (sender as DispatcherTimer).Stop(); // Or you can just call timer.Stop() if the timer is a global variable.\n\n    // Clear screen, go to the next question\n}
1531	Vector3 vectorB;\nvectorB.x = 1;\nDebug.Log("vectorB: " + vectorB);  // <--CS0165: Use of unassigned local variable
1532	var methods = Assembly.GetExecutingAssembly()\n        .GetTypes()\n        .SelectMany( t => t.GetMethods() )\n        .Where( m => m.GetCustomAttributes( typeof ( MyAttribute ), true ).Any() && m.IsPublic && m.GetParameters().Length == 0 )\n        .ToList();\n\n     methods.ForEach( m => Debug.WriteLine( m.Name ) );
1533	Regex r = new Regex(@"CREATE TABLE [^(]+((.*)) ON", RegexOptions.SingleLine);
1534	JsonReader jsonReader = new JsonTextReader(new StringReader(json)) { DateParseHandling = DateParseHandling.None };\ndynamic jsonObj = JObject.Load(jsonReader);
1535	private void listBox_DrawItem(object sender, DrawItemEventArgs e)\n{\n    e.DrawBackground();\n    Graphics yourObj = e.Graphics;\n\n    yourObj .FillRectangle(new SolidBrush(Color.Red), e.Bounds);\n\n    e.DrawFocusRectangle();\n}
1536	s = filePath + "s";\nnewS = targetFullPath2 + "s";\nFile.Copy(s, newS + "_", true);    // add the _ so the other process\n                                   // doesn?t ?see? the file yet\n\ndtFileCreation = File.GetCreationTime(s);\nFile.SetCreationTime(newS + "_", dtFileCreation);\n\n// We?re done with the file, now rename it to its intended final name\nFile.Move(newS + "_", newS);
1537	contiguousLines.Add(new List<line>());\ncontiguousLines[columnNum].Add(freeLines[0]);
1538	public interface IWpManagerFactory\n{\n    WpManager BuildWpManager();\n}\n\npublic sealed class Tests\n{\n    public void Test()\n    {\n        var manager = new Mock<WpManager>();\n        //Set up mock manager here...\n\n        var factory = new Mock<IWpManagerFactory>();\n        factory.Setup(f => f.BuildWpManager()).Returns(manager.Object);\n\n        //Inject factory to class under test and execute the method under test...\n    }\n}
1539	var textBox = new TextBox();\n      var transformGroup = new TransformGroup()\n          {\n              Children = new TransformCollection()\n                  {\n                      new MatrixTransform(), \n                      new TransformGroup\n                      { \n                          Children = new TransformCollection()\n                          {\n                              new ScaleTransform(), \n                              new RotateTransform(), \n                              new TranslateTransform()\n                          }\n                      }\n                  }\n          };\n\n      textBox.RenderTransform = transformGroup;
1540	ilmerge /target:library /out:YourLib.dll ClassLibrary1.dll ClassLibrary2.dll
1541	var vowels = new char[]{ 'a', 'e', 'i', 'o', 'u' };\nvar vowelCount = rtbText.Text.Count(c => vowels.Contains(c));\nvar characterCount = rtbText.Text.Length;\ntoolStripStatusLabel1.Text = characterCount + " characters, of which " \n    + vowelCount + " are vowels.";
1542	if (!Page.IsPostBack)\n{\n      // Your code here\n}
1543	"ABC DEF EFG".Split(new char[] { ' ' }, 2)
1544	Uri uri = new Uri(AppDomain.CurrentDomain.BaseDirectory + @"\Rule1.html");
1545	var q = _ctx.DBList \n     .Where(x => x.AGuidID == paramID)  \n     .Where(x => x.BBoolVal == false) \n// view q in the debugger to see the SQL it will generate\nvar myList = q.ToList();
1546	foreach (var str in usedCSS)\n{\n    if (CSS.Any( x=> x.StartsWith(str))\n        Response.Write(str);\n    else\n        Response.Write("Could not find: " + x + "<br />");\n}
1547	int main(void) { return 0; }
1548	internal void UpdateMedia(int mediaID, int[] catagoryIDs)\n{\n    using (Data.EFEntities context = new Data.EFEntities())\n    {\n        Data.Media media = context.Media.Single(m => m.MediaID == mediaID);\n\n        foreach(var category in context.Category.Where(cat => catagoryIDs.Contains(cat.CategoryID))\n        {\n            media.Categories.Add(category);                \n        }\n\n        context.SaveChanges();\n    }\n}
1549	ProcessStartInfo startInfo = new ProcessStartInfo();\nstartInfo.CreateNoWindow = false;\nstartInfo.UseShellExecute = false;\nstartInfo.FileName = "YourFile.exe";\nstartInfo.WindowStyle = ProcessWindowStyle.Hidden;\nstartInfo.Arguments = "";//Arguments should be here\nusing (Process exeProcess = Process.Start(startInfo))\n{\n    exeProcess.WaitForExit();\n}
1550	processInstaller.Account = ServiceAccount.User;\nprocessInstaller.User = "domain\username";\nprocessInstaller.Password = "Password";
1551	encodedIcon = encodedIcon.Replace(@"\n", "");\nif(encodedIcon.Length % 4 != 0)\n    // we may have 0, 1 or 2 padding '='\n    encodedIcon += new string('=', 4 - encodedIcon.Length % 4);\nbyte[] arr = System.Convert.FromBase64String(encodedIcon);
1552	string spaces = "& nbsp;& nbsp;& nbsp;& nbsp;"; // without spaces after &\n        spaces = Server.HtmlDecode(spaces);\n\n        lt.Text = ItemName + "spaces" + barcode + "spaces" + price; // works
1553	SqlQueryBuilder builder = new SqlQueryBuilder((DbQuery)query);\n  builder.BuildSQLEx("", "users.user_id=" + loggedUser.id);\n  string sql = builder.Result.SQL;
1554	var endResult = reviewList.OrderByDescending(e => e.Amount)\n             .GroupBy(e => e.Name)\n             .Select(g => g.First());
1555	filterContext.Result = View(someParameter);
1556	if (pinfo.CanWrite) {\n        try {\n            pinfo.SetValue(comp, pinfo.GetValue(other, null), null);\n        }\n        catch { }\n    }
1557	string inputString = "Another One Bites The Dust And Another One Down";\nstring[] split = inputString.Split();\nforeach (string s in split)\n{\n    Console.Write(s.Substring(0,1));\n}
1558	Assembly.GetExecutingAssembly().GetName().Version
1559	DateTime.TryParse(12/24/2009 12:48:00 PM,out registereddate);\n  strregdate = registereddate.ToString("dd-MM-yy");
1560	var array = new BsonArray(new []\n                {\n                    "BO0001",\n                    "CO0001",\n                    "BD0002",\n                    "BD0001"\n                });\n\nvar sortedArray = new BsonArray(array.OrderBy(v => v.AsString));\n\nforeach (var v in sortedArray)\n    Console.WriteLine(v);
1561	for(int i = 0; i < studentsWithNoGroupId.Count; i++)\n{\n  if((i % 3) == 0)\n   groupid += 1;\n  studentsWithNoGroupId.ElementAt(i).groupId = groupid;\n}
1562	if(dt.HasValue)\n{\n    newDt = dt.Value.ToString("yyyy-MM-dd");\n}
1563	private void Button1_Click(object sender, EventArgs e)\n{\n    DoSomething();\n}\n\nprivate void Sensex_Prediction_Form_Load(object sender, EventArgs e)\n{\n    if(Inovker == "X")\n    {\n        DoSomething();\n    }\n}\n\nprivate void DoSomething()\n{\n    ...\n}
1564	var awGroups = from aw in _repository.GetAws()\ngroup aw by aw.AwType.ID into newGroup  //changed to group on ID\nselect newGroup;\n\nList<KeyValuePair<AwType, int>> RetGroups = new List<KeyValuePair<AwType, int>>();\nforeach (var group in awGroups)\n{\n    //changed to get the first element of the group and examine its AwType\n    RetGroups.Add(new KeyValuePair<AwType, int>(group.First().AwType, group.Count()));\n}\nreturn RetGroups;
1565	int rowIndex = dt.Rows.IndexOf(dt.Select("ITEM_CODE = 'i001' AND WAREHOUSE_CODE='001' AND LOTNO='111'")[0]);
1566	(\n|\r|\a|\f)(\s|\d|\.|\))*?(?<id>(Client|Customer|Role|Organi(s|z)ation|Vendor|Company|Employer))(\s|\S)*?(?=(\n|\r|\a|\f)(\s|\d|\.)*?(\k'id'))*?
1567	class TaskItem, INotifyPropertyChanged\n{\n    public event PropertyChangedEventHandler PropertyChanged;\n    internal void NotifyPropertyChanged(String info)\n    {\n        if (PropertyChanged != null)\n        {\n            PropertyChanged(this, new PropertyChangedEventArgs(info));\n        }\n    }\n\n    private string title;\n    public string Title \n    { \n       get { return title; } \n       set \n       { \n           if (title == value) return;\n           title = value;\n           NotifyPropertyChanged("Title");\n       }\n    }\n    public TaskItem (string -title) \n    { title = _title; }  \n    // does not fire setter title lower case \n    // but the UI will have this value as ctor fires before render \n    // so get will reference the assigned value of title \n}
1568	"UPDATE PricePlan \n       SET price =\n                 IIf(PricePlanName = 'Guest',"+ GuestInput.Text + ",\n                   IIf(PricePlanName = 'Member',"+ MemberInput +"))"
1569	e.Handled = true;
1570	DateTime CusDate = dateTimePicker1.Value;\n    string Date = CusDate.ToString("ddMMMyyyy").ToUpper();
1571	public void addCurriculumData(String StoredProcName,Table table)
1572	var doc = XDocument.Parse(@"Your giant xml string here");\nvar books =\n    doc\n        .Descendants("book")\n        .Select(bookElement => \n        new\n        {\n            Title = bookElement.Descendants("title").Single().Value, \n            Authors = bookElement.Descendants("author")\n                .Where(authorElement => authorElement.Descendants("country").Single().Value == "USA")\n                .Select(authorElement => authorElement.Descendants("name").Single().Value)\n        });\n\nforeach(var book in books)\n{\n    Console.WriteLine("Book: " + book.Title);\n    Console.WriteLine("Authors: " + string.Join(",", book.Authors));\n}
1573	.Scrollable(scr=>scr.Height(230))
1574	public void ConnectButtonPressed()\n            {\n                var threadedTask = () => m_Model.Connect(m_View.Hostname, m_View.Port);\n                threadedTask.BeginInvoke(null,null);\n            }
1575	sb1 = new StringBuilder(4200000);
1576	IMyRecords** pIMyRecords; \nHRESULT hr = SafeArrayAccessData(pMyRecordsSA, (void**)&pIMyRecords);
1577	tasklist /apps /fi "STATUS eq SUSPENDED"
1578	browser.InvokeScript("eval", "document.getElementById('Login1_UserName').value = '" + username + "';");\n browser.InvokeScript("eval", ("document.getElementById('Login1_Password').value = '" + password + "';"));\n browser.InvokeScript("eval", string.Format("document.getElementById('Login1_LoginButton').click();"));
1579	int secondsWhileLowUsage = 0;     \ndo {\n    cpuUsage = new PerformanceCounter("Processor", "% Processor Time", "_Total");\n    var usage = cpuUsage.NextValue();\n    do\n    {\n        Thread.Sleep(TimeSpan.FromSeconds(1));\n        usage = cpuUsage.NextValue();\n        if (usage > 10.00)\n            secondsWhileLowUsage = 0;\n\n        Console.WriteLine(usage + "%");\n    } while (usage > 10.00);\n    secondsWhileLowUsage ++; \n} while (secondsWhileLowUsage < 5)\n\nProcess proc = new Process();\nproc.StartInfo = new ProcessStartInfo(@"C:\Documents and Settings\rcgames\Desktop\Game1.exe");\nproc.Start();
1580	using System.IO;\nusing System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main()\n    {\n\n        List<string> lstrSample = new List<string>();\n        lstrSample.Add("1 - 12/2015 - 12/2016");\n        lstrSample.Add("2 - 12/2015 - 12/2016");\n        List<string> lstrResult = new List<string>();\n        foreach(string curStr in lstrSample)\n        {\n            lstrResult.Add(curStr.Replace(" ","").Split('-')[0]);\n        }\n        foreach(string s in lstrResult)\n        {\n            Console.WriteLine(s);\n        }\n    }\n}
1581	alert('Citt??')
1582	public static IWebDriver GetDriver(this IWebElement element)\n    {\n        IWrapsDriver wrappedElement = element as IWrapsDriver;\n        if (wrappedElement == null)\n        {\n            FieldInfo fieldInfo = element.GetType().GetField("underlyingElement", BindingFlags.NonPublic | BindingFlags.Instance);\n            if (fieldInfo != null)\n            {\n                wrappedElement = fieldInfo.GetValue(element) as IWrapsDriver;\n                if (wrappedElement == null)\n                    throw new ArgumentException("Element must wrap a web driver", "element");\n            }\n        }\n\n        return wrappedElement.WrappedDriver;\n    }
1583	var query = items.GroupBy(item => item.Name)\n    .OrderByDescending(group => group.Count())\n    .SelectMany(group => group);
1584	[StructLayout(LayoutKind.Sequential, Pack = 1, Size=255, CharSet = CharSet.Ansi)]\npublic struct Menu\n{\n    [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 255)]\n    public string str1;\n    [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 255)]\n    public string str2;\n}\n\npublic static unsafe int fnSys(Menu value)\n{\n    if (value!=null)\n    {\n        System.Windows.Forms.MessageBox.Show("msg");\n    }\n\n    return 1;\n}
1585	(\d?\\n*)?
1586	var doc = new HtmlDocument();\n\nusing (var wc = new WebClient())\nusing (var stream = wc.OpenRead(url))\n{\n    doc.Load(stream);\n}\n\nvar table = doc.DocumentElement.Element("html").Element("body").Element("table");\nstring tableHtml = table.OuterHtml;
1587	\\tkahd-nti-1\TrackIt\Audit32.exe
1588	foreach(var p in listProf)\n{\n    var item = new ListViewItem{Text = p.Name, Tag = p};\n    ListView1.Items.Add(item);\n    ListView2.Items.Add((ListViewItem)item.Clone());\n}
1589	var entity1 = Expression.Parameter(typeof(Entity));\nvar nameFilterExp = Expression.Call(\n    Expression.Property(entity1, firstOrDefault.PropertyInfo.Name),\n    typeof(string).GetMethod("Contains", new[] { typeof(string) }),\n    Expression.Constant(nameFilter)\n);\nvar predicate = Expression.Lambda<Func<Entity, bool>>(\n    type == HandledType.Doubtful\n        ? (Expression)Expression.AndAlso(Expression.Equal(Expression.Property(entity1, "IsDoubtful"), Expression.Constant(true)), nameFilterExp)\n        : (Expression)nameFilterExp,\n    entity1);\nentities = entities.Where(predicate);
1590	if (typology.Name == nameOriginalValue || IsUniqueName(typology.Name))\n{\n    _typologyRepository.Update(typology);\n    _typologyRepository.Save();\n}\nelse\n{\n    _validatonDictionary.AddError("Name", errorMessageNameUnique);\n}
1591	using Num = System.Numerics.BigInteger;
1592	decimal d =7526.50m;\ndecimal truncated = d - (d % 100);
1593	//Step 3: Create the content body to send\nstring sContent = string.Format("{\"fname\":\"{0}\",\"lname\":\"{1}\",\"age\":\"{2}\",\"gender\":\"{3}\"}", sFirstName, sLastName, sAge, sGender);
1594	mail.AlternateViews[0]
1595	public override string ToString()\n   {\n      return string.Format(CultureInfo.CurrentCulture, "[{0}: Name={1}]", new object[] {  base.GetType().Name, this.Name });\n    }
1596	"{{ cmd: \"save magellan deal\", data: {{ id: {0} , AId: {1}, " +\n"CId: {2}, CCId:{3}, LA: \"{4}\", BA: \"{5}\" , " +\n"LSA: \"{6}\" , BSA: \"{7}\" , \"path: \"{8}\"," +\n"dscp: \"{9}\", SI: \"{10}\", CD: \"{11}\", " +\n"period: \"{12}\", IsStatic: {13}, LSD: {14}, LC: {15}, RB: {16},}} " +\n"Notes: \"{17}\", IsEE: {18}, RBy: {19}, DPDD: \"{20}\", LId: {21} }} }}"
1597	java -jar compiler.jar --js hello.js --js_output_file hello-compiled.js
1598	static void Main(string[] args)\n    {     \n        List<Group> groups = new List<Group>();               \n        ...\n        PrintTree(groups, "", null);\n    }\n\n    static void PrintTree(List<Group> allGroups, string lead, int? id)\n    {\n        var children = allGroups.Where(g => g.ParentID == id).ToList();\n\n        if (children.Count > 0)\n        {\n            int n = children.Count-1;\n\n            for (int i = 0; i < n; i++)\n            {\n                Console.WriteLine(lead + "???" + children[i].Name);\n                PrintTree(allGroups, lead + "?  ", children[i].ID);                    \n            }\n\n            Console.WriteLine(lead + "???" + children[n].Name);\n            PrintTree(allGroups, lead + "   ", children[n].ID);                    \n        }\n    }
1599	class B : A\n{\n  public class B(string id, int size) : base(id, size) \n  { \n     this.Name = "Name2";\n  }\n}
1600	switch (line[0])\n{\n    case '+':\n        num += Convert.ToInt32(line.Substring(1));\n        break;\n    case '-':\n        num -= Convert.ToInt32(line.Substring(1));\n        break;\n}
1601	typeHandler.InvokeMember("Handle", BindingFlags.InvokeMethod, null, handler, new[] { requestItem });
1602	string fileName = System.IO.Path.GetTempPath() + Guid.NewGuid().ToString() + ".csv";
1603	netsh wlan set hostednetwork mode=allow ssid=<NetworkName> key=<AccessKey> keyUsage=persistent\nnetsh wlan start hostednetwork
1604	Binding="{Binding Row.Matched}"
1605	int count = 7;\ndouble value = 0.0073812398871474;\ndouble r = (double) (1.0f / count); // approximate reciprocal\nr = r * (2.0 - count*r); // much better approximation\nr = r * (2.0 - count*r); // should be full double precision by now.\ndouble result = value * r;
1606	System.IO.IOException: The process cannot access the file 'C:\test.jpg' because it is being used by another process.
1607	private void UpClick()\n{\n    // only if the first item isn't the current one\n    if(listBox1.ListIndex > 0)\n    {\n        // add a duplicate item up in the listbox\n        listBox1.AddItem(listBox1.Text, listBox1.ListIndex - 1);\n        // make it the current item\n        listBox1.ListIndex = (listBox1.ListIndex - 2);\n        // delete the old occurrence of this item\n        listBox1.RemoveItem(listBox1.ListIndex + 2);\n    }\n}\n\nprivate void DownClick()\n{\n   // only if the last item isn't the current one\n   if((listBox1.ListIndex != -1) && (listBox1.ListIndex < listBox1.ListCount - 1))\n   {\n      // add a duplicate item down in the listbox\n      listBox1.AddItem(listBox1.Text, listBox1.ListIndex + 2);\n      // make it the current item\n      listBox1.ListIndex = listBox1.ListIndex + 2;\n      // delete the old occurrence of this item\n      listBox1.RemoveItem(listBox1.ListIndex - 2);\n   }\n}
1608	// output: [[1,1,1,1],[2,2,2,2]]\nvar a = new int[][] { new[]{ 1, 1, 1, 1 }, new[]{ 2, 2, 2, 2 } };
1609	t[i] = new TextBox();\nt[i].Text = "new textbox";\nt[i].textBox2.Name = "textBox1";\n\nGrid1.Children.Add(t[i]);\n//or SomeStackPanel.Children.Add(t[i]);
1610	var dict = new System.Collections.Specialized.HybridDictionary();\n\ndict.Add(1, "thing");\ndict.Add("thing", 3);
1611	using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic class MyButton : Button {\n  protected override void OnSizeChanged(EventArgs e) {\n    base.OnSizeChanged(e);\n    Bitmap bmp = new Bitmap(this.Width, this.Height);\n    using (Graphics gr = Graphics.FromImage(bmp)) {\n      ButtonRenderer.DrawButton(gr,\n        new Rectangle(0, 0, bmp.Width, bmp.Height),\n        System.Windows.Forms.VisualStyles.PushButtonState.Normal);\n    }\n    if (this.BackgroundImage != null) this.BackgroundImage.Dispose();\n    this.BackgroundImage = bmp;\n  }\n}
1612	for (int i = 0; i < totalRows; i++)\n{\n    for (int j = 0; j < totalColumns; j++)\n    {\n        rowTotal[i] += numbers[i * totalColumns + j];\n        blockTotal[j] += numbers[i * totalColumns + j];\n    }            \n}
1613	// Bring up a dialog to chose a folder path in which to open or save a file.\nprivate void folderMenuItem_Click(object sender, System.EventArgs e)\n{\n    // Show the FolderBrowserDialog.\n    DialogResult result = folderBrowserDialog1.ShowDialog();\n    if( result == DialogResult.OK )\n    {\n        folderName = folderBrowserDialog1.SelectedPath;\n        ... //Do your work here!\n    }\n}
1614	{0:0.00%}
1615	void Main()\n{\n    string json = "{\"People\":[{\"FirstName\":\"Hans\",\"LastName\":\"Olo\"},{\"FirstName\":\"Jimmy\",\"LastName\":\"Crackedcorn\"}]}";\n\n    var result = JsonConvert.DeserializeObject<RootObject>(json);\n\n    var firstNames = result.People.Select (p => p.FirstName).ToList();\n    var lastNames = result.People.Select (p => p.LastName).ToList();\n}\n\npublic class Person\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n}\n\npublic class RootObject\n{\n    public List<Person> People { get; set; }\n}
1616	backgroundThread.TrySetApartmentState(ApartmentState.STA); // Add this to fix createWMV() in multithreading\nbackgroundThread.Name = "CreateVideoThead";\nbackgroundThread.Start();
1617	dtp_btime.Value.ToString("hh:mm tt")
1618	protected void button1_Click(object sender, EventArgs e)\n{\n   WebControlDemo wcd = this.LoadControl("~/SomePath/WebControlDemo.ascx") as WebControlDemo;\n   this.placeHolder1.Controls.Add(wcd);\n}
1619	//In Default2.aspx\nprotected void LinkButton1_Click(object sender, EventArgs e)\n    {\n       Response.Write(string.Format("<script>window.open('{0}','_blank');</script>", "Default3.aspx"));\n    }\n\n//------------\n//In Default3.aspx\n\nprotected void Page_Load(object sender, EventArgs e)\n    {\n        string path = Server.MapPath("~\\E:\\karthikeyan\\venky\\pdf\\aaaa.PDF");\n        WebClient client = new WebClient();\n        Byte[] buffer = client.DownloadData(path);\n        if (buffer != null)\n        {\n            Response.ContentType = "application/pdf";\n            Response.AddHeader("content-length", buffer.Length.ToString());\n            Response.BinaryWrite(buffer);\n        }\n    }
1620	private async void EditButton_Click(object sender, RoutedEventArgs e)\n    {\n        WritePadFileContent listitem = (e.OriginalSource as MenuFlyoutItem).DataContext as WritePadFileContent;\n        MessageDialog messageDialog = new MessageDialog(listitem.Name.ToString());\n        await messageDialog.ShowAsync();\n\n\n\n        //code for export to pdf, it works\n    }
1621	HashSet<string> hs = new HashSet<string>();\nbool b1 = hs.Add("xxx"); //returns true\nbool b2 = hs.Add("xxx"); //returns false
1622	static string Encr(string plainText, string key)\n{\n    char[] chars = new char[plainText.Length];\n    int h = 0;\n    for (int i = 0; i < plainText.Length; i++)\n    {\n        if (h == key.Length)\n            h = 0;\n        int j = plainText[i] + key[h];\n        chars[i] = (char)j;\n        h++;\n    }\n\n    File.WriteAllBytes(FILE_NAME, System.Text.Encoding.UTF8.GetBytes(chars));\n\n    return new String(chars, System.Text.Encoding.UTF8);\n}
1623	/// <summary>\n/// \n/// </summary>\n/// <param name="nameEntities"></param>\n/// <param name="childID"></param>\n/// <returns></returns> <!--etc-->\nprivate delegate Nullable<int> ExtractParentIdDelegate(IEnumerable<int> nameEntities, int childID);\n\n/// <summary>\n/// \n/// </summary>\nprivate ExtractParentIdDelegate FuncExtractParentId\n{\n    get\n    {\n        return this._extractParentId = this._extractParentId ?? new ExtractParentIdDelegate(delegate(IEnumerable<int> nameEntites, int childID)\n                                                                    {\n                                                                            //\n                                                                    });\n    }\n}
1624	private void Go()\n{\n    while ((button1.Location.X + button1.Size.Width) < this.Size.Width)\n    {\n        Invoke(new moveBd(moveButton), button1);\n        Thread.Sleep(50);\n    }\n}
1625	public class MetaPerson\n{\n    public Person Person { get; set; }\n    public String SomeMeta { get; set; }\n}
1626	var stopWatch = new Stopwatch();\n        stopWatch.Start();\n        var result = CallFunction();\n        stopWatch.Stop();\n        var executionTime = stopWatch.Elapsed;
1627	Process.Start(@"C:\Temp\");
1628	public String Serialize(Dictionary<int, Dictionary<String, String>> all)\n        {\n\n            String abc = JsonConvert.SerializeObject(all, Formatting.None, new JsonSerializerSettings\n                        {\n                            TypeNameHandling = TypeNameHandling.Objects,\n                            TypeNameAssemblyFormat = System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple\n                        });\n            return abc;\n        }\n\n         public Dictionary<int, Dictionary<String, String>> DeSerialize(String text)\n         {\n\n             Dictionary<int, Dictionary<String, String>> abc;\n             abc = JsonConvert.DeserializeObject<Dictionary<int, Dictionary<String, String>>>(text, new JsonSerializerSettings\n             {\n                 TypeNameHandling = TypeNameHandling.Objects,\n                 TypeNameAssemblyFormat = System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple,\n             });\n             return abc;\n         }
1629	public interface IAggregateRoot { }\n\nclass Test : IAggregateRoot { }\n\npublic interface IRepository<T> where T : IAggregateRoot\n{\n    // ...\n    IList<T> FindAll();\n    void Add(T item);\n    // ...\n }\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        // create Mock\n        var m = new Moq.Mock<IRepository<Test>>();\n\n        // some examples\n        m.Setup(r => r.Add(Moq.It.IsAny<Test>()));\n        m.Setup(r => r.FindAll()).Returns(new List<Test>());\n        m.VerifyAll();\n    }\n}
1630	MyEnumerable.Take(2).Count() == 1 //to check if it has one element
1631	treeView1.BeginUpdate();\ntreeView1.ShowRootLines = false;\ntreeView1.ShowLines = false;\ntreeView1.Nodes.Add("Parent");\ntreeView1.Nodes[0].Nodes.Add("Child 1");\ntreeView1.Nodes[0].Nodes.Add("Child 2");\ntreeView1.Nodes[0].Nodes[1].Nodes.Add("Grandchild");\ntreeView1.Nodes[0].Nodes[1].Nodes[0].Nodes.Add("Great Grandchild");\ntreeView1.EndUpdate();
1632	datagrid.RowHeadersWidth
1633	var call = Expression.Call(methodInfo, iParam);\nvar cast = Expression.Convert(call, typeof (Object));\nvar lambda = Expression.Lambda<Func<int, Object>>(cast, iParam);
1634	var grid = sender as GridView;\nif (grid.FocusedColumn.FieldName == "Value") {\n    var row = grid.GetRow(grid.FocusedRowHandle) as // your model;\n    // note that previous line should be different in case of for example a DataTable datasource\n    grid.ActiveEditor.Properties.ReadOnly = // your condition based on the current row object\n}
1635	var issues = \n    from i in ReadOnlyContext.Issues\n    let startInside = (startDate < i.OutOfOrderStart && i.OutOfOrderStart < endDate)\n    let endInside = (startDate < i.OutOfOrderEnd && i.OutOfOrderStart < endDate)\n    let allOutside = (startDate > i.OutOfOrderEnd && endDate < i.OutOfOrderEnd)\n    where i.TruckID == truckID && (startInside || endInside || allOutside)\nselect i;
1636	Environment.Exit(0)
1637	Dispatcher.BeginInvoke(\n    new Action(() => MessageBox.Show(this, e.Message)),\n    DispatcherPriority.ApplicationIdle\n);
1638	[DllImport("User32",\n           CallingConvention = CallingConvention.Winapi,\n           ExactSpelling = true,\n           EntryPoint = "HideCaret",\n           SetLastError = true)]\n[return: MarshalAs(UnmanagedType.Bool)]\nprivate static extern Boolean HideCaret(IntPtr hWnd);\n\n[DllImport("User32",\n           CallingConvention = CallingConvention.Winapi,\n           ExactSpelling = true,\n           EntryPoint = "ShowCaret",\n           SetLastError = true)]\n[return: MarshalAs(UnmanagedType.Bool)]\nprivate static extern Boolean ShowCaret(IntPtr hWnd);\n\n\n// If the window you have to copy is in your process then \n// handle = IntPtr.Zero\n// Otherwise your have to find it out via GetWindowThreadProcessId and GetGUIThreadInfo \n\nHideCaret(handle);\n\ntry {\n  // Your code to capture the image \n}\nfinally {\n  ShowCaret(handle);\n}
1639	IEnumerable<string> commonValues = projects.Intersect(sheetNames);
1640	Parallel.Invoke(\n    new ParallelOptions() { MaxDegreeOfParallelism = 3 }, \n    () => DoSomething(), \n    () => DoSomething(),\n    () => DoSomething(),\n    () => DoSomething(),\n    () => DoSomething());
1641	result.Replace("\"\"", "\"null\"");
1642	public class CountryModel : BaseNopEntityModel,\n{\n    public string Name { get; set; }\n    public Regionmodel Region{get; set; }\n}
1643	(0[1-9]|[12][0-9]|3[01])[\.](0[1-9]|1[012])[\.](19|20)[0-9]{2}
1644	class Program\n    {\n        static void Main(string[] args)\n        {\n\n            while (true)\n            {\n                ChangeFiles();\n\n                bool changes = ScanChanges();\n\n                if (!changes) \n                {\n                    TrimFolder();\n\n                    TrimFile();\n                }\n                Thread.Sleep(10000);\n            }\n        }\n\n\nprivate static void ChangeFiles()\n{\n  // code here\n}\n\nprivate static bool ScanChanges()\n{\n     FileInfo fi = new FileInfo("input.txt");\n     if (fi.Length > 0)\n     {\n         return true;\n     }\n     else\n     {\n         Process.Start("cmd.exe", @"/c test.exe -f input.txt > output.txt").WaitForExit();\n\n         return false;\n      }      \n}
1645	while (ctecka.Read())\n{\n    exJmeno = ctecka[0].ToString();\n    exPrijmeni = ctecka[1].ToString();\n    Response.Write(exJmeno + " " + exPrijmeni + " ");\n    vlozSQL.Parameters.Clear();\n    vlozSQL.Parameters.AddWithValue("@name", exJmeno);\n    vlozSQL.Parameters.AddWithValue("@surname", exPrijmeni);\n    pridano = vlozSQL.ExecuteNonQuery();\n}
1646	ReportDataSource datasource = new ReportDataSource("TableName", ds.Tables[0]);\nReportViewer1.LocalReport.DataSources.Clear();\nReportViewer1.LocalReport.DataSources.Add(datasource);
1647	private void Form1_Resize(object sender, EventArgs e)\n    {\n\n        Font f;\n        Graphics g;\n        SizeF s;\n        Single Faktor, FaktorX, FaktorY;\n\n        g = label2.CreateGraphics();\n        s = g.MeasureString(label2.Text, label2.Font, label2.Size);\n        g.Dispose();\n\n        FaktorX = label2.Width / s.Width;\n        FaktorY = label2.Height / s.Height;\n\n        if (FaktorX > FaktorY)\n        {\n            Faktor = FaktorY;\n        }\n        else\n        {\n            Faktor = FaktorX;\n        }\n\n        f = label2.Font;\n        label2.Font = new Font(f.Name, f.SizeInPoints * Faktor);\n    }
1648	(?<=;20)\d+
1649	public override DateTime StartTime\n{\n    get { return start_time_; }\n}\n\ninternal void SetStartTime\n{\n    start_time_ = value;\n}
1650	public class ImageFileConverter : IValueConverter\n{\n    public object Convert(object value, Type targetType, object parameter, string language)\n    {\n        string fileName = value as string;\n\n        if (fileName != null)\n        {\n            BitmapImage bitmap = new BitmapImage();\n            bitmap.UriSource = new Uri("ms-appdata:///local/" + fileName);\n            return bitmap;\n        }\n        return null;\n    }\n    public object ConvertBack(object value, Type targetType, object parameter, string language)\n    {\n        throw new NotImplementedException();\n    }\n}
1651	var status =\n            (from tweet in twitterCtx.Status\n             where tweet.Type == StatusType.Retweeters &&\n                   tweet.ID == "210591841312190464"\n             select tweet)\n            .SingleOrDefault();\n\n        status.Users.ForEach(\n            userID => Console.WriteLine("User ID: " + userID));
1652	copy "C:\Documents and Settings\user123\Desktop\eFormsSystem\eFormsApp\bin\Debug\*.*" s:\debug\ /Z /Y
1653	String.Trim
1654	var tempFunc = func;\nfunc = a => tempFunc(a) && ...
1655	int[] id1 = { 44, 26, 92, 30, 71, 38 };\n int[] id2 = { 39, 59, 83, 47, 26, 4, 30 };\n\n IEnumerable<int> both = id1.Intersect(id2);\n\n foreach (int id in both)\n     Console.WriteLine(id);\n\n //Console.WriteLine((both.Count() > 0).ToString());\n Console.WriteLine(both.Any().ToString());
1656	var LNQ = new LNQDataContext();\n\n    var quo = LNQ.tbl_job_quotas.Where(c => c.job_quota_job_number == _fJ).Select(c => new { ID = c.job_quota_ID, DESC = c.job_quota_ID + " | " + c.job_quota_desc });\n    var DtQu = new DataTable();\n    DtQu.Columns.Add("ID");\n    DtQu.Columns.Add("DESC");\n\n    DataRow drs;\n    drs = DtQu.NewRow();\n    drs[0] = "%%";\n    drs[1] = "ALL";\n    DtQu.Rows.Add(drs);\n\n    foreach (var a in quo)\n    {\n        drs = DtQu.NewRow();\n        drs[0] = a.ID;\n        drs[1] = a.DESC;\n        DtQu.Rows.Add(drs);\n    }\n\n    _ddActQuota.DataTextField = "DESC";\n    _ddActQuota.DataValueField = "ID";\n\n    _ddActQuota.DataSource = DtQu;\n    _ddActQuota.DataBind();
1657	protected void Repeater1_ItemDataBound(object sender, RepeaterItemEventArgs e)\n{\n    // Execute the following logic for Items and Alternating Items.\n    if (e.Item.ItemType == ListItemType.Item ||\n        e.Item.ItemType == ListItemType.AlternatingItem)\n    {\n        if (((DataRowView)e.Item.DataItem).Row["Type"].ToString() == "D")\n        {\n            ((Label)e.Item.FindControl("imagelabel")).Text = "<img src='/folder.png'>";\n        }\n        else\n        {\n            ((Label)e.Item.FindControl("imagelabel")).Text = "<img src='/file.png'>";\n        }\n    }\n}
1658	const float threshold = 0.05;\nconst string axis = "LeftJoystickX";\nif (Input.GetAxis(axis) < -threshold)\n{\n  //go left\n} \nelse if (Input.GetAxis(axis) > threshold) \n{\n   //go right\n} \nelse \n{\n   // don't move\n}
1659	groupBox1.Refresh();
1660	string deleteStuff = @"\n  DELETE FROM [ProductsImages] WHERE ProductId = @ProductId;\n  DELETE FROM [Products] WHERE ProductId = @ProductId;"\ndb.ExecuteNonQuery(deleteStuff);
1661	ParameterDefinition parameter = ...;\nByReferenceType byref = (ByReferenceType) parameter.ParameterType;\nGenericInstanceType action_string = (GenericInstanceType) byref.ElementType;\nTypeReference action = action_string.ElementType;\nTypeReference str = action_string.GenericArguments [0];
1662	for (int i = 0; i < 15; i++)\n  {\n     long x = Int64.Parse(form[String.Format("Questions[{0}].ObjectId", i)]);\n     long y = Int64.Parse(form[String.Format("Questions[{0}].SelectedAnswer", i)]);\n  if (x > 0 && y > 0)\n   {\n     selectedAnswers.Add(new SelectedAnswer() { questionId = x, answerId = y });\n   }\n }
1663	//MyControl = Custom User Control\nvar myControl =  (MyControl) Page.LoadControl("MyControl.ascx"); \nthis.ControlContainer.Controls.Add(myControl);
1664	rules = SELECT * FROM item_rules\nforeach(rules as _rule)\n{\n   count = SELECT COUNT(*) FROM (_rule[select_statement]) as T1\n   if(count > 1) itemlist.add(_rule[item_that_satisfy_rule])\n}
1665	private static string RemoveHeightsAndWidths(string original)\n{\n    XElement element = XElement.Parse(original);\n    var tableRelatedElements =\n        element.Descendants("table")\n        .Union(element.Descendants("tr"))\n        .Union(element.Descendants("td"))\n        .Union(element.Descendants("th")); //add more items you want to strip the height and width from in the same manner\n\n    Regex reg = new Regex("(?:width:.*?;)|(?:height:.*?;)");\n\n    foreach (var item in tableRelatedElements)\n    {\n        if (item.Attributes("style").Any())\n        {\n            item.Attribute("style").Value = reg.Replace(item.Attribute("style").Value, string.Empty);\n        }\n        if (item.Attributes("height").Any())\n        {\n            item.Attribute("height").Remove();\n        }\n        if (item.Attributes("width").Any())\n        {\n            item.Attribute("width").Remove();\n        }\n    }\n\n    return element.ToString();\n}
1666	string ponySetting = myRegistryObject["DefaultPonySetting"]
1667	Debug.Print CurrentDb.TableDefs("YourTableLink").Connect
1668	// linq expression\nvar dist = from d in dictionaries\n           group d by new { WAP = d["WAP"], System = d["System"] } into g\n           select g.FirstOrDefault();\n\n//lambdas\nvar dist = dictionaries\n              .GroupBy(d => new { WAP = d["WAP"], System = d["System"] })\n              .Select(g => g.FirstOrDefault())
1669	foreach(var customer in _response.Customers)\n{\n    Console.WriteLine(customer.CustID);\n}
1670	func doSha256(#dataIn:NSData) -> NSData {\n    var shaOut: NSMutableData! = NSMutableData(length: Int(CC_SHA256_DIGEST_LENGTH));\n    CC_SHA256(dataIn.bytes, CC_LONG(dataIn.length), UnsafeMutablePointer<UInt8>(shaOut.mutableBytes));\n\n    return shaOut;\n}
1671	public IList<MyCustomerObjects> GetCustomers()\n{\n    //Call out to the third party API with the appropriate filters\n\n    //foreach object in 3rd party collection, wrap in adapter class and add to list\n\n    //return list of your objects\n}
1672	from t1 in TABLE1\njoin t2 in TABLE2 on t1.COL_B equals t2.COL_A\norderby t2.COL_B\nselect t1
1673	StudentInfo sInfo = new StudentInfo ();
1674	var text = @"Release to user USER the roles: ZBR_POA_FIL_APOIO_GESTAO, ZBR_REC_FIL_SUPPORT, ZBR_RJO_CD_FIL_SUPPORT, ZBR_SVD_CD_FIL_SUPPORT, Z_GENERAL_OBJECTS, Z_DEBUG, Z_CHECK";\nvar words = text.Split(new[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries);\nvar wordsWithUnderscores = words.Where(o => o.Contains("_")).ToArray();\n\nforeach(var word in wordsWithUnderscores) {\n    Console.WriteLine(word);\n}
1675	app.config
1676	private void dataGridView1_CellFormatting(object sender, DataGridViewCellFormattingEventArgs e)\n        {\n            DataGridViewCellStyle MakeItRed = new DataGridViewCellStyle();\nMakeItRed.BackColor = Color.Red;\n\n//make a whole column red\ndataGridView1.Columns[1].DefaultCellStyle = MakeItRed;\n\n//make a specific cell red\nDataGridViewRow row2 = dataGridView1.Rows[2];\nrow2.Cells[2].Style = MakeItRed;\n\n        }
1677	String src = dataDir + "Page numbers.docx";\nString dst = dataDir + "Page numbers_out.docx";\n\n// Create a new document or load from disk\nAspose.Words.Document doc = new Aspose.Words.Document(src);\n// Create a document builder\nAspose.Words.DocumentBuilder builder = new DocumentBuilder(doc);\n// Go to the primary footer\nbuilder.MoveToHeaderFooter(HeaderFooterType.FooterPrimary);\n// Add fields for current page number\nbuilder.InsertField("PAGE", "");\n// Add any custom text\nbuilder.Write(" / ");\n// Add field for total page numbers in document\nbuilder.InsertField("NUMPAGES", "");\n\n// Import new document\nAspose.Words.Document newDoc = new Aspose.Words.Document(dataDir + "new.docx");\n// Link the header/footer of first section to previous document\nnewDoc.FirstSection.HeadersFooters.LinkToPrevious(true);\ndoc.AppendDocument(newDoc, ImportFormatMode.UseDestinationStyles);\n// Save the document\ndoc.Save(dst);
1678	/// <summary>This Method Does Something</summary>\n/// <BugFix BugId="1234" Programmer="Bob" Date="2/1/2010">Fix Comments</BugFix>\npublic void MyMethod()\n{\n    // Do Something\n}
1679	ReportParameter[] Params = new ReportParameter[1];\nParams[0] = "Parameter Value";\nReportViewerControl.ServerReport.SetParameters(Params);
1680	BsonClassMap.RegisterClassMap<Competitor>(cm =>\n{\n    cm.AutoMap();\n    cm.MapField("_competitorBests").SetElementName("CompetitorBests");\n});
1681	userControl.Visible = false
1682	static DateTime? TestDate(string date)\n    {\n        DateTime result;\n        if (DateTime.TryParse("", out result))\n        {\n            return result;\n        }\n        return null;\n    }
1683	using (Stream stream = Assembly.GetExecutingAssembly().GetManifestResourceStream("ConsoleApplication1.MyFile.MyExt"))\n{\n   // load data from stream\n}
1684	TestSerializer copy = x.Deserialize(stream) as TestSerializer;
1685	internal class DefaultMigrationSqlGenerator : SqlServerMigrationSqlGenerator\n    {\n        protected override void Generate(AlterTableOperation alterTableOperation)\n        {\n            base.Generate(alterTableOperation);\n            // If the tables you want to reseed have an Id primary key...\n            if (alterTableOperation.Columns.Any(c => c.Name == "Id"))\n            {\n                string sqlSeedReset = string.Format("DBCC CHECKIDENT ({0}, RESEED, 1000) ", alterTableOperation.Name.Replace("dbo.", ""));\n\n                base.Generate(new SqlOperation(sqlSeedReset));\n            }\n        }\n    }
1686	WebRequestMethods.Ftp.ListDirectory
1687	var query = "SELECT * FROM People WHERE City = @City AND County = @County AND";\nvar scrubbed = query.Substring(0, query.Length - 4);
1688	public static Assembly GetAssemblyFromAppDomain(string assemblyName)\n{\n    foreach (var assembly in AppDomain.CurrentDomain.GetAssemblies())\n    {\n        if (assembly.FullName.StartsWith(assemblyName + ",")) \n        {\n            return assembly;\n        }\n    }\n    return null;   \n}
1689	tabCom com = db.tabCom.Single(tab => tab.PrimaryKeyColumn == 3);
1690	DateTime dt = DateTime.ParseExact(time.Replace(": ", ":").Replace(" :", ":"), "HH:mm:ss:fff", CultureInfo.InvariantCulture);
1691	//Check to see if the Unique_ID is 10 or 11 and process accordingly\n//10 = Both boxes, 11 = Rework only\nif (reader.IsDBNull(16))\n{\n   //Add here your code to handle null value\n}\nelse\n{\n   //Use a switch to read the value only one time\n   switch (reader.GetByte(16))\n   {\n     case 10:\n       int ES = Convert.ToInt32(reader["ESCALATED"]);\n       if (ES == 0)\n       {\n          chkEscalated.Checked = false;\n       }\n       else\n       {\n          chkEscalated.Checked = true;\n          chkEscalated.Visible = true;\n          lblEscalated.Visible = true;\n          chkRework.Visible = true;\n          lblRework.Visible = true;\n        }\n        break;\n\n      case 11:\n        break;\n\n      default:\n        break;\n   }\n}
1692	session.Evict(employeeMonth.BonusMonth)
1693	public class SelectableTextBlock : TextBox\n{\n    public SelectableTextBlock() : base()\n    {\n        this.AddHandler(SelectableTextBlock.KeyDownEvent, new RoutedEventHandler(HandleHandledKeyDown), true);\n    }\n\n    public void HandleHandledKeyDown(object sender, RoutedEventArgs e)\n    {\n        KeyEventArgs ke = e as KeyEventArgs;\n        if (ke.Key == Key.Space)\n        {\n            ke.Handled = false;\n        }\n    }\n    ...\n}
1694	Binding bind = (sender as Control).DataBindings[0];\nDataTable table = (bind.DataSource as DataSet).Tables[0];\nstring table_column_name = bind.BindingMemberInfo.BindingMember;\nstring column_name = table_column_name.Split(new char[] { '.' })[1];\nDataColumn column = table.Columns[table.Columns.IndexOf(column_name)];\nobject data = table.Rows[0][column];
1695	\d{9}[a-zA-Z]?[a-zA-Z0-9]?\d{0,3}
1696	MyCompany.Common
1697	myCollection.Where(person =>....); //non descriptive collection name\n\nmyPeopleCollection.Where(p=>...); // descriptive collection name
1698	private void RadGridView1_SizeChanged(object sender, EventArgs e)\n  {\n      radGridView1.TableElement.ViewElement.UpdateRows(true);\n  }
1699	Convert.ToString(number, 2).PadLeft(8, '0');
1700	var count = Model.Project.ProjectDoc\n   .Where(a => a.Current == true \n            && a.DocType == "Cover"\n            && a.ProjectDocVote.Any(v => v.UserID == ViewBag.CurrentUserID))\n   .Count():
1701	private void ValidateSubnode(XmlNode node, XmlSchema schema)\n{\n    XmlTextReader reader = new XmlTextReader(node.OuterXml, XmlNodeType.Element, null);\n\n    XmlReaderSettings settings = new XmlReaderSettings();\n    settings.ConformanceLevel = ConformanceLevel.Fragment;\n    settings.Schemas.Add(schema);\n    settings.ValidationType = ValidationType.Schema;\n    settings.ValidationEventHandler += new ValidationEventHandler(XSDValidationEventHandler);\n\n    using (XmlReader validationReader = XmlReader.Create(reader, settings))\n    {     \n        while (validationReader.Read())\n        {\n        }\n    }\n}\n\nprivate void XSDValidationEventHandler(object sender, ValidationEventArgs args)\n{\n    errors.AppendFormat("XSD - Severity {0} - {1}", \n                        args.Severity.ToString(), args.Message);\n}
1702	class BatchObservableColleciton<T> : INotifyCollectionChanged, IEnumerable\n{\n    public event NotifyCollectionChangedEventHandler CollectionChanged;\n\n    private List<T> _list;\n    private List<T> _addedItems;\n\n    public BatchObservableColleciton( ) {\n        _list = new List<T>( );\n        _addedItems = new List<T>( );\n    }\n\n    public IEnumerator GetEnumerator( )\n    {\n        return _list.GetEnumerator( );\n    }\n\n    public void Add( T item )\n    {\n        _list.Add( item );\n        _addedItems.Add( item );\n    }\n\n    public void commit( ) {\n        if( CollectionChanged != null ) {\n            CollectionChanged( this, new NotifyCollectionChangedEventArgs(\n                NotifyCollectionChangedAction.Add, _addedItems ) );\n        }\n        _addedItems.Clear( );\n    }\n\n}
1703	NavigationService.Navigate(new Uri("/Organization_Details.xaml?selectedItem=" +Organization.Name , UriKind.Relative));
1704	"pack://application:,,,/<PutHereAssemblyName>;component/" + path.TrimStart('/')
1705	void SendString(String message)\n{\n    byte[] buffer = Encoding.UTF8.GetBytes(message);\n    AsyncCallback ac = new AsyncCallback(SendStreamMsg);\n    tcpClient.GetStream().BeginWrite(buffer, 0, buffer.Length, ac, null);\n}
1706	public class Foo {\n    public bool HistoricalMode { get; set; }\n\n    private string _property1;\n    public string Property1 { \n        get { \n            if (HistoricalMode) {\n                return GetHistoricalValue("Property1");\n            } else {\n                return _property1;\n            }\n        set {\n            if (HistoricalMode){\n                throw new NotSupportedException("Updates not possible in historical mode.");\n            } else {\n                _property1 = value;\n            }\n        }\n    }\n    public DateTime CreatedDate { \n        get {\n            // Similar pattern as above\n        }\n        set {\n            // Similar pattern as above\n        }\n    }\n\n    public string GetHistoricalValue(string propertyName) {\n        HistoryHelper historyHelper = CreateHistoryHelper(this);\n        return historyHelper.GetHistoricalValue(propertyName, CreatedDate);\n    }\n}
1707	Outlook.Application msOutlook = new Outlook.Application();\nOutlook.NameSpace session = msOutlook.Session;\nOutlook.Stores stores = session.Stores;\nforeach (Outlook.Store store in stores)\n{\n    Outlook.MAPIFolder folder = store.GetDefaultFolder(Outlook.OlDefaultFolders.olFolderCalendar);\n\n    MessageBox.Show(folder.Name);\n}
1708	TestPlugin plugIn = new TestPlugin();\nobject[] params = null //... set parameters here\nMethodInfo mi = typeof(TestPlugin).GetMethod("Test");\nmi.invoke(plugIn,params);
1709	[ThreadStatic]\nstatic RichTextBox m_RtfConverter;\npublic static RichTextBox ThreadSafeRTFConverter {\n    get {\n        if(m_RtfConverter == null) {\n            m_RtfConverter = new RichTextBox();\n            m_RtfConverter.Width = 760;\n        }\n        return m_RtfConverter;\n    }\n}
1710	public DateTime ExportResultsToCsv<T>(string filePath, string HeaderLine, List<T> data)   \n{\n    engine = new FileHelperEngine(typeof(T)) { HeaderText = HeaderLine };\n    engine.WriteFile(filePath, data);\n    return DateTime.Now;   \n}
1711	public class HttpTest\n{\n    public bool ignoreCertificateErrors { get; set; }\n    public List<HttpStatusCode> successHTTPStatusCodes { get; set; }\n    public string httpVerb { get; set; }\n    public HttpMethod HttpMethodInstance { \n        get { return new HttpMethod(httpVerb); }\n    }\n}
1712	.Select(...whatever...).OrderByDescending(item => item.count);
1713	WshShell shell = new WshShell();\n        string app = Path.Combine(Environment.SystemDirectory, "powercfg.cpl");\n        string linkPath = @"C:\PowerLink.lnk";\n        IWshShortcut link = (IWshRuntimeLibrary.IWshShortcut)shell.CreateShortcut(linkPath);\n        link.TargetPath = app;\n        link.IconLocation = string.Format("{0},2", app);\n        link.Save();
1714	accessdeny.SetAccessRule(\n   new System.Security.AccessControl.FileSystemAccessRule(\n   new SecurityIdentifier(WellKnownSidType.WorldSid, null),\n   System.Security.AccessControl.FileSystemRights.FullControl,\n   System.Security.AccessControl.AccessControlType.Deny));
1715	var avg = pageHitList.GroupBy(x => x.RequestTime.RoundUp(TimeSpan.FromMinutes(30)));\n                     .Select(hit => new { \n                                 hit.Key, \n                                 Average = hit.Average(x => x.PageResponseTime) \n                             });
1716	private void createMenuItem_Click(object sender, EventArgs e)\n{\n  DoCanvasWork(); // pick a good name :)        \n}\n\nprivate void transfer_timer() {\n  System.Timers.Timer Clock = new System.Timers.Timer();\n  Clock.Elapsed += new ElapsedEventHandler(Clock_Tick);\n  Clock.Interval = timer_interval;  Clock.Start(); \n}\n\nprivate void Clock_Tick( object sender, EventArgs e )\n{\n  BeginInvoke( new MethodInvoker(DoCanvasWork) );\n}\n\nprivate void DoCanvasWork()\n{\n  canvas.Layer.RemoveAllChildren();\n  canvas.Controls.Clear();\n  createDock();\n}
1717	Response.AddHeader("Content-Disposition", "attachment; filename=" + compressedFileName + ".zip");\nResponse.ContentType = "application/zip";\n\nusing (var zipStream = new ZipOutputStream(Response.OutputStream))\n{\n    foreach (string filePath in filePaths)\n    {\n        byte[] fileBytes = System.IO.File.ReadAllBytes(filePath);\n\n        var fileEntry = new ZipEntry(Path.GetFileName(filePath))\n        {\n            Size = fileBytes.Length\n        };\n\n        zipStream.PutNextEntry(fileEntry);\n        zipStream.Write(fileBytes, 0, fileBytes.Length);\n    }\n\n    zipStream.Flush();\n    zipStream.Close();\n}
1718	public class MyAttribute: Attribute \n    {\n        private Type _ClassType;\n        public MyAttribute(Type classType)\n        {\n            _ClassType = classType;\n        }\n        public void SomeMethod<T>() where T: IMyInterface\n        {\n            var expectedType = Activator.CreateInstance(typeof(T)) as IMyInterface;\n        // Do something with expectedType\n        }\n    }
1719	ZipFile.AddDirectory
1720	var lines = File.ReadAllLines(pathToFile);\nFile.WriteAllLines(pathToFile, lines.Take(lines.Length - 1));
1721	(from r in dt.AsEnumerable()\ngroup r by r.TxnNumber into grp\nwhere grp.Count() > 1\nselect grp).SelectMany(x=>x).ToList();
1722	private void EnumerateCommads()\n{\n    foreach (Command command in _applicationObject.Commands)\n    {\n        //print command\n    }\n}
1723	CREATE PROC Createciudad(@nombre        VARCHAR(50), \n                     @codigo_postal VARCHAR(50))
1724	private void YourControl_KeyDown(object sender, System.Windows.Forms.KeyEventArgs e)\n{\n    if (e.KeyCode == Keys.NumPad0) \n    {\n       //Grab mouse coordinates\n    }\n    if (e.KeyCode == Keys.NumPad1) \n    {\n       //Code to move the mouse\n    }\n}
1725	public class Skill {\n    //....variables\n}    \n\npublic List<Skill> allSkills    = new List<Skill>();\npublic Skill[] skillArray;\n\nvoid GetArray ()\n{\n   string blah = PlayerPrefs.GetString("CatSkills");\n   JsonConvert.DeserializeObject<List<Skill>>(blah).CopyTo(skillArray, 0);\n}
1726	System.Diagnostics.ProcessStartInfo psi = new System.Diagnostics.ProcessStartInfo(@"C:\temp\output.txt");\npsi.Verb = "PRINT";\n\nProcess.Start(psi);
1727	// Fungsi untuk merubah bentuk donnut menjadi lembaran\n        public Image<Gray, Byte> dougman(Image<Gray,Byte> cit, Double radiris) \n        {\n            double xP, yP, r, theta;\n            Image<Gray, Byte> grayT = new Image<Gray, Byte>(360, 116);\n\n            for (int i = 0; i < 116; i++)\n            {\n                for (int j = 0; j < 360; j++)\n                {\n                    r = i;\n                    theta = 2.0 * Math.PI * j / 360;\n                    xP = r * Math.Cos(theta);\n                    yP = r * Math.Sin(theta);\n                    xP = xP + radiris + 10; //sekitar 115\n                    yP = yP + radiris + 10;\n                    grayT[116 - 1- i, j] = cit[(int)xP, (int)yP];\n                }\n            }\n            return grayT;\n        }
1728	string FilePath = MapPath("your.pdf");\nResponse.ContentType = "Application/pdf";\nResponse.AppendHeader( "content-disposition", "attachment; filename=" + FilePath);\nResponse.WriteFile(FilePath);\nResponse.End();
1729	var inputString = "Word1 Word2 Word3 Word4 Word5 Word6 Word7 Word8" ;\nvar separators = new []{"word2", "word7, "word4"};\nvar output = inputString.Split(seperators,StringSplitOptions.None);
1730	_sessionFactory = Fluently.Configure()\n   .Database(MsSqlConfiguration.MsSql2005.ConnectionString(connectionString).ShowSql())\n   .Mappings(m => m.FluentMappings.AddFromAssemblyOf<Entity>())\n   .ExposeConfiguration(c => c.EventListeners.PreUpdateEventListeners = new IPreUpdateEventListener[] {new AuditEventListener()});
1731	public Response(int id, int qID)\n            {\n                this.ResponseBool = new ResponseRepository().GetResponse(id).Where(m => m.QuestionID == qID).Select(m => m.ResponseBool).FirstOrDefault();\n    }\n\n      Answers = Questions\n                     .Select(k => new Response(stepOneSaved.ApplicationID, k.QuestionID)\n                    {\n                        ApplicationID = stepOneSaved.ApplicationID,\n                        QuestionID = k.QuestionID,\n                        QuestionCategoryID = k.QuestionCategoryID,\n                        QuestionText = k.QuestionText,\n                    })\n                    .ToList();
1732	var guidComPorts = Guid.Empty;\n        UInt32 dwSize;\n        IntPtr hDeviceInfo;\n        var buffer = new byte[512];\n        var providerName = new[] { };\n        var spddDeviceInfo = new SpDevinfoData();\n        var bStatus = SetupDiClassGuidsFromName("Ports", ref guidComPorts, 1, out dwSize);\n        if (bStatus)\n        {\n            hDeviceInfo = SetupDiGetClassDevs(\n                ref guidComPorts,\n                (IntPtr)null,\n                (IntPtr)null,\n                DigcfPresent | DigcfProfile);\n            if (hDeviceInfo.ToInt32() != 0)\n            {\n\n                while (true)\n                {\n                    spddDeviceInfo.CbSize = Marshal.SizeOf(spddDeviceInfo);// IS IT THIS LINE WORK FOR 64 BIT                        \n                    bStatus = SetupDiEnumDeviceInfo(hDeviceInfo, nDevice++, ref spddDeviceInfo);\n                    break;\n                }\n\n            }\n\n\n            return;\n        }\n\n    }
1733	pictureBox1.Image = Bitmap.FromHicon(new Icon(openFileDialog.FileName, new Size(48, 48)).Handle);
1734	static class DataPointExtensions\n{\n public static DataPoint Average (this IEnumerable<DataPoint> points)\n {\n   int sumX=0, sumY=0, sumZ=0, count=0;\n   foreach (var pt in points)\n   {\n      sumX += pt.X;\n      sumY += pt.Y;\n      sumZ += pt.Z;\n      count++;\n   }\n   // also calc average time?\n   if (count == 0)\n     return new DataPoint ();\n   return new DataPoint {X=sumX/count,Y=sumY/count,Z=sumZ/count};\n }\n}
1735	Dictionary<string, string[]> firstDic = new Dictionary<string, string[]>  \n{  \n    {"apple", new [] {"red"}},  \n    {"orange", new [] {"orange"}}  \n};\n\nDictionary<string, string[]> secondDic = new Dictionary<string, string[]>\n{\n    {"apple", new [] {"green"}},\n    {"banana", new [] {"yellow"}}\n};\n\nDictionary<string, string[]> resultDic = firstDic.Union(secondDic).GroupBy(o => o.Key).ToDictionary(o => o.Key, o => o.SelectMany(kvp => kvp.Value).ToArray());
1736	var model = this.Resources["Model] as PeopleViewModel;
1737	public class FooValidator : AbstractValidator<Foo>, IValidatorInterceptor   \n{\n\n    public FooValidator() { }\n\n    public ValidationContext BeforeMvcValidation(ControllerContext controllerContext, ValidationContext validationContext)\n    {\n        RuleFor(f => f.Bar).SetCollectionValidator(new BarValidator(validationContext.InstanceToValidate as Foo));\n\n        return validationContext;\n    }\n\n    public ValidationResult AfterMvcValidation(ControllerContext controllerContext, ValidationContext validationContext, ValidationResult result)\n    {\n        return result;\n    }\n}
1738	string AddSuffix(string filename, string suffix)\n{\n    string fDir = Path.GetDirectoryName(filename);\n    string fName = Path.GetFileNameWithoutExtension(filename);\n    string fExt = Path.GetExtension(filename);\n    return Path.Combine(fDir, String.Concat(fName, suffix, fExt));\n}\n\nstring newFilename = AddSuffix(filename, String.Format("({0})", crcValue));
1739	private async void ChangeLabel()\n{\n   while(true)\n   {\n      await Task.Delay(100)\n      label1.Text = "lorem impus";\n   }\n}
1740	this.btnSaveSignal = new System.Windows.Forms.Button();\n    this.btnSaveSignal.Click += new System.EventHandler(this.btnSaveSignal_Click);\n    .\n    .\n    .\n    private void btnSaveSignal_Click(object sender, EventArgs e)\n    {\n        ...\n    }
1741	label4.Text = (ycrcb.Y *255).ToString();\n    label5.Text = ((ycrcb.Cr + 0.5)*255).ToString();\n    label6.Text = ((ycrcb.Cb + 0.5)*255).ToString();
1742	//Somewhere in my code:\n    foreach (CrystalDecisions.CrystalReports.Engine.Table tbCurrent in rdCurrent.Database.Tables)\n        SetTableLogin(tbCurrent);\n\n\n    //My set login method \n    private void SetTableLogin(CrystalDecisions.CrystalReports.Engine.Table table)\n    {\n        CrystalDecisions.Shared.TableLogOnInfo tliCurrent = table.LogOnInfo;\n\n        tliCurrent.ConnectionInfo.UserID = dbLogin.Username;\n        tliCurrent.ConnectionInfo.Password = dbLogin.Password;\n        if(dbLogin.Database != null)\n            tliCurrent.ConnectionInfo.DatabaseName = dbLogin.Database; //Database is not needed for Oracle & MS Access\n        if(dbLogin.Server != null)\n            tliCurrent.ConnectionInfo.ServerName = dbLogin.Server;\n        table.ApplyLogOnInfo(tliCurrent);\n    }
1743	var streams = new Subject<IObservable<int>>();\nvar mergedStreams = streams.Merge();\nvar mergedObserver = mergedStreams.Subscribe(...);\n\n// now create your streams\n...\n\n// add them to the streams subject\nstreams.OnNext(seq1);\nstreams.OnNext(seq2);\n...\n\nstreams.OnNext(seq3);\nstreams.OnNext(seq4);\n\n...\n// If we know there will be no more streams, tell the Subject...\nstreams.OnCompleted();
1744	x.ToString("00");\n String.Format("{0:00}",x);
1745	dbContext.ExecuteStoreCommand("TRUNCATE TABLE myTable");
1746	var miniCompanies =\n(from companies in db.Companies \n join phones in db.Phones on companies.Id equals phones.CompanyId\n select new\n {\n     companies.Name,\n     phones.Phone,\n }).GroupBy(c=>c.Name).Select(c=>c.FirstOrDefault()).ToArray();
1747	dataGrid.Columns[10].Width = new DataGridLength(double value here for initial size, DataGridLengthUnitType.Star);
1748	class Program\n{\n    static Timer timer;\n\n    static void Main(string[] args)\n    {\n        //set timer interval of 3 seconds\n        timer = new Timer(interval: 3000);\n        timer.Elapsed += Timer_Elapsed;\n\n        InterruptPort sensor = new InterruptPort(/* sensor port information */);\n        sensor.OnInterrupt += new NativeEventHandler(sensor_OnInterrupt);\n    }\n\n    private static void sensor_OnInterrupt(uint data1,uint data2,DateTime time)\n    {\n        Console.WriteLine(DateTime.Now);\n        timer.Enabled = true;\n    }\n\n    private static void Timer_Elapsed(object sender, ElapsedEventArgs e)\n    {\n        Console.WriteLine(DateTime.Now); \n        timer.Enabled = false;\n        //do work\n    }\n}
1749	[System::Runtime::InteropServices::UnmanagedFunctionPointerAttribute ( CallingConvention::Cdecl )]\npublic delegate long SRCCallback ( void *cb_data, float **data ) ;\n\nstatic  IntPtr CallbackNew ( SRCCallback ^ % func, RabbitConverter converter_type, int channels, int *error, void* cb_data ) { ... }
1750	Dictionary<Guid, string> idsAndStrings = new Dictionary<Guid, string>\n{\n    { Guid.NewGuid(), "" },\n    { Guid.NewGuid(), "" },\n};
1751	name = name.Replace("'", "''");
1752	RestRequest request;\nrequest = new RestRequest("api/orders/" + orderID, Method.GET);\nIRestResponse response = client.Execute(request);\n\nXElement orderXML = XElement.Parse(response.Content);\nXElement orderEl = orderXML.Descendants().FirstOrDefault();\norderEl.Element("current_state").Value = "10";    \n\nrequest = new RestRequest("api/orders", Method.PUT);\nrequest.AddParameter("xml", orderXML.ToString(), ParameterType.RequestBody);\nIRestResponse response2 = client.Execute(request);
1753	modalForm.ShowDialog(yourForm)
1754	public string Text\n{\n  get\n  {\n    return richTextBox1.Text;\n  }\n}
1755	filterContext.HttpContext.Request.IsAjaxRequest()
1756	protected override void OnBackPressed()
1757	double Latitude = 47.64325;\ndouble Longitude = -122.14196;\nstring json = "{" + "\"" + "device_id" + "\"" + ":" + "\"" + "nishant" + "\"" + "," + "\"" + "position" + "\"" + ":" + " \"" + Latitude\n                + "," + Longitude + "\"" + " }";
1758	MailAddress addr = new MailAddress("Name@yahoo.com");\nstring name= addr.User;\nstring domain = addr.Host;
1759	int i = 0;\nlong sum = 0;\nwhile (sum < int.MaxValue)\n{\n    var s = sizeof(char) * ("{" + i + "}").Length;\n    sum += s; // pseudo append\n    ++i;\n}\nConsole.WriteLine(i);\nConsole.ReadLine();
1760	public static void GetFileWithCredentials(string userName, string password, string url)\n{\n\n    using (WebClient wc = new WebClient())\n    {\n        wc.Credentials = new NetworkCredential(userName, password);\n        string xml = wc.DownloadString(url);\n\n        XmlDocument tournamentsXML = new XmlDocument();\n        tournamentsXML.LoadXml(xml);\n    }\n\n}
1761	"(Select [SubCategory].ID from SubCategory where Kategorie = @SubCategory)," +\n"(SELECT [BusinessSector5].ID FROM BusinessSector5 where Description_DE = @BusinessSector5));",con))
1762	context.Configuration.ValidateOnSaveEnabled = false;
1763	Source="{Binding Path=DataContext.ImageTypes, \n         RelativeSource={RelativeSource FindAncestor, \n         AncestorType={x:Type UserControl}}}"
1764	static void Main(string[] args)\n{\n\n    GetCombination(new List<int> { 1, 2, 3 });\n}\n\nstatic void GetCombination(List<int> list)\n{\n    double count = Math.Pow(2, list.Count);\n    for (int i = 1; i <= count - 1; i++)\n    {\n        string str = Convert.ToString(i, 2).PadLeft(list.Count, '0');\n        for (int j = 0; j < str.Length; j++)\n        {\n            if (str[j] == '1')\n            {\n                Console.Write(list[j]);\n            }\n        }\n        Console.WriteLine();\n    }\n}
1765	this.DoubleBuffered = true;
1766	button.MouseEnter += (s, e) => { /*begin Storyboard*/};\nbutton.MouseLeave += (s, e) => \n    {\n        if (EquipmentFilters.Contains(button))\n        {\n            //begin storyboard\n        }                           \n    };\nbutton.Click += (o, i) =>\n    {\n        EquipmentFilters.Remove(button);\n    };
1767	string s = "<item><name> Foo > Bar </name></item>";\n    s = Regex.Replace(s, @"<[^>]+?>", m => HttpUtility.HtmlEncode(m.Value)).Replace("<","ojlovecd").Replace(">","cdloveoj");\n    s = HttpUtility.HtmlDecode(s).Replace("ojlovecd", "&gt;").Replace("cdloveoj", "&lt;");\n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(s);
1768	btn.TouchUpInside += delegate {\n    UIView.Animate (0.5f, delegate {\n        lbl.Alpha = 0.0f;\n    }, delegate {\n        UIView.Animate (0.5f, delegate {\n            lbl.Alpha = 1.0f;\n        });\n    });\n};
1769	if(reader.ReadToDescendant("response"))\n            {\n                reader.Read();//this moves reader to next node which is text \n                result = reader.Value; //this might give value than \n                break;\n            }
1770	Button.Content = "Your Label";\n\n<Button Content="Your Label"/>
1771	int i = 0;\n    string filename = fu_new_doc_vsn.FileName;\n    if (fu_new_doc_vsn.HasFile)\n    {\n        while (System.IO.File.Exists(Server.MapPath("~/Data/") + filename))\n        {\n            i++;\n            filename = fu_new_doc_vsn.Name + " (" + i.ToString() + ")" + Path.GetFileNameWithoutExtension(fu_new_doc_vsn.FileName);\n        }\n        fu_new_doc_vsn.PostedFile.SaveAs(Server.MapPath("~/Data/") + filename);\n    }
1772	public static byte SetBits(byte oldValue, byte newValue, int startBit, int bitCount)\n{\n    if (startBit < 0 || startBit > 7 || bitCount < 0 || bitCount > 7 \n                     || startBit + bitCount > 8)\n        throw new OverflowException();\n\n    int mask = (255 >> 8 - bitCount) << startBit;\n    return Convert.ToByte((oldValue & (~mask)) | ((newValue << startBit) & mask));\n}
1773	HtmlWeb web = new HtmlWeb();\nHtmlDocument doc = web.Load("http://stackoverflow.com");\nstring html = doc.DocumentNode.Descendants("body").Single().InnerHtml;
1774	var rawEmailBytes = pseudo_GetRawEmail();  // function that gets the raw email\nvar signedCmsBytes = psuedo_GetSignedCmsData(rawEmailBytes)   // would pull out the signed package bytes from the email\nvar signedCms = new SignedCms();\nsignedCms.Decode(signedCmsBytes)\n\nforeach (var certificate in signedCms.Certificates) {\n   psuedo_StoreCertificate(certificate)   // store certificate using the cert manager.\n}
1775	public class CachingRepository : ICustomerRepository\n{\n    private readonly ICustomerRepository remoteRep;\n    private readonly ICustomerRepository localRep;\n\n    public CachingRepository(ICustomerRepository remoteRep, ICustomerRepository localRep)\n    {\n        this.remoteRep = remoteRep;\n        this.localRep = localRep;\n    }\n\n    // implement ICustomerRepository...\n}
1776	Result me = new Result()\n        {\n           address1 = (string)jResult["results"][0]["address1"], \n           city = (string)jResult["results"][0]["city"] ,\n           state  = (string)jResult["results"][0]["state"] ,\n           zip = (string)jResult["results"][0]["zip"]\n        };
1777	private static List<Tuple<TimeSpan,TimeSpan>> ComputeMissingTimeSpans(List<Tuple<TimeSpan,TimeSpan>> availableIntervals, TimeSpan minSpan, TimeSpan maxSpan)\n    {\n        List<Tuple<TimeSpan,TimeSpan>> missingTime = new List<Tuple<TimeSpan,TimeSpan>>();\n        if(availableIntervals.Count == 0)\n        {\n            missingTime.Add(new Tuple<TimeSpan, TimeSpan>(minSpan, maxSpan));\n            return missingTime;\n        }\n\n        foreach(var interval in availableIntervals){\n            if((interval.Item1 - minSpan).TotalSeconds > 1 ) \n            {\n                missingTime.Add(new Tuple<TimeSpan, TimeSpan>(minSpan, interval.Item1.Add(TimeSpan.FromSeconds(-1))));\n            }\n\n            minSpan = interval.Item2.Add(TimeSpan.FromSeconds(1));\n        }\n\n        if((maxSpan - minSpan).TotalSeconds > 1)\n            missingTime.Add(new Tuple<TimeSpan, TimeSpan>(minSpan, maxSpan));\n\n        return missingTime;\n    }
1778	public void Method1()\n{\n  // Reset the wait handle I'll be using...\n  MyWaitHandle.Reset();\n\n  //do something\n  //wait for the signal or timeout\n  MyWaitHandle.WaitOne(10000);\n  //do something else on receiving signal or after timeout\n}
1779	private void MenuItem_Click(object sender, RoutedEventArgs e)\n{\n   ((MenuItem)sender).IsEnabled = false;\n}
1780	private void Button_Click(object sender, RoutedEventArgs e)\n{\n    Window1 w1 = new Window1();\n    w1.Show();\n}
1781	using System;\nusing System.ComponentModel;\nusing System.Windows.Forms;\n\nclass PathLabel : Label {\n  [Browsable(false)]\n  public override bool AutoSize {\n    get { return base.AutoSize; }\n    set { base.AutoSize = false; }\n  }\n  protected override void OnPaint(PaintEventArgs e) {\n    TextFormatFlags flags = TextFormatFlags.Left | TextFormatFlags.PathEllipsis;\n    TextRenderer.DrawText(e.Graphics, this.Text, this.Font, this.ClientRectangle, this.ForeColor, flags);\n  }\n}
1782	int[] diff = Enumerable.Range(0, arr1.Length).Where(i => arr1[i] != arr2[i]).ToArray();
1783	rightMargin - measuredStringWidth
1784	public class Key { public Key(object adaptee) { ... } }
1785	// copying to the clipboard\nvar fileContent = File.ReadAllBytes("Path\\to\\exefile.exe");\nClipboard.SetData(DataFormats.Text, Convert.ToBase64String(fileContent));\n\n// reading from the clipboard\nvar readBackFileContent = (string)Clipboard.GetData(DataFormats.Text);\nFile.WriteAllBytes("destination.exe", Convert.FromBase64String(readBackFileContent));
1786	foreach(string email in emailArray)\n{\n     SmtpClient smtp = new SmtpClient("smtp.gmail.com", 587);\n     smtp.UseDefaultCredentials = false;\n     smtp.Credentials = new NetworkCredential("tayyib@gmail.com", "xxxxxxxxx");\n     smtp.EnableSsl = true;\n\n     MailMessage msg = new MailMessage("tayyib@gmail.com", email); \n     msg.Subject = "Test1";\n     msg.Body = "Test2";\n\n     smtp.Send(msg);\n }
1787	var current = startDate;\ndo {\n  list.Add(new MyEvent("My Event", current));\n  current = current.AddDays(7);\n} while (current < endDate);
1788	Readonly Property PropNeeded() As Integer
1789	private void sldRotate_ValueChanged(object sender, RoutedPropertyChangedEventArgs<double> e)\n{\n    if (_shape != null)\n    {\n        var rt = new RotateTransform();\n        rt.Angle = sldRotate.Value;\n        _shape.RenderTransform = rt;\n        _shape.RenderTransformOrigin = new Point(0.5, 0.5);\n    }\n}
1790	// Assuming the merged table is the first and only table in the DataSet.\nDataView dv = new DataView(dataSet1.Tables[0]);\n\ndv.Sort = "date, reason DESC";
1791	string filename = textBox1.Text;\nstring path = System.IO.Path.Combine(@"E:\Majel\Tic Tac Toe\TextFiles\", filename + ".txt");\nSystem.IO.FileInfo file = new System.IO.FileInfo(path);\nfile.Create();
1792	var lrowCount = ltableData.Values.First().Length;\n// or\nvar lrowCount = ltableData.First().Value.Length;
1793	INTEGER PRIMARY KEY
1794	public IInputElement DrawingTarget { get { return _canvas; } }
1795	var dt = new DataTable();\ndt.Columns.Add("Amount", typeof(int));\ndt.Columns.Add("Count", typeof(int));\ndt.Rows.Add(20, 2);\ndt.Rows.Add(42, 1);\ndt.Rows.Add(78, 5);\ndt.Rows.Add(91, 2);\nvar result = from DataRow x in dt.Rows\n                group x by ((int)x["Amount"]) / 50 into grp \n                select new {LowerBoundIncl = grp.Key * 50, \n                        UpperBoundExcl = (grp.Key + 1) * 50, \n                        TotalCount = grp.Sum(y => (int) y["Count"])};
1796	class Program\n{\n    static void Main()\n    {\n        var controlType = typeof(Control);\n        var controls = controlType\n            .Assembly\n            .GetTypes()\n            .Where(t => controlType.IsAssignableFrom(t) && \n                        t.Namespace == "System.Windows.Forms"\n            );\n        foreach (var control in controls)\n        {\n            Console.WriteLine(control);\n        }\n    }\n}
1797	var firstDayOfMonth = new DateTime(year, month, 1);\nDateTime startOfCalendar = \n    FirstDayOfWeekOnOrBefore(\n        firstDayOfMonth,\n        DayOfWeek.Monday\n    );\n\npublic static DateTime FirstDayOfWeekOnOrBefore(\n    DateTime date,\n    DayOfWeek dayOfWeek\n) {\n    while(date.DayOfWeek != dayOfWeek) {\n        date = date.AddDays(-1);\n    }\n    return date;\n}
1798	{\pict\pngblip\picw10449\pich3280\picwgoal5924\pichgoal1860 hex data}\n{\pict\pngblip\picw10449\pich3280\picwgoal5924\pichgoal1860\bin binary data}
1799	dgvEvents.Rows[n].Cells[1].Value = dr[1].TrimEnd(' ').ToString();
1800	startInfo.Arguments = "/C schtasks /create /tn Inc-Andro-BU /tr" +         \n                       inbackpath + "/sc minute /mo 10 /ru SYSTEM";
1801	class LineNumberTextReader : TextReader\n{\n    private readonly TextReader reader;\n    private int b;\n    private int line;\n\n    public LineNumberTextReader(TextReader reader)\n    {\n        if (reader == null) throw new ArgumentNullException("reader");\n        this.reader = reader;\n    }\n\n    public int Line\n    {\n        get { return this.line; }\n    }\n\n    public override int Peek()\n    {\n        return this.reader.Peek();\n    }\n\n    public override int Read()\n    {\n        int b = this.reader.Read();\n        if ((this.b == '\n') || (this.b == '\r' && b != '\n')) this.line++;\n        return this.b = b;\n    }\n\n    protected override void Dispose(bool disposing)\n    {\n        if (disposing) this.reader.Dispose();\n    }\n}
1802	public static IQueryable<T> GetSCOs<T>(SCODataContext dc) where T : SCO\n{\n    return dc.SCOs.OfType<T>();\n}
1803	namespace BarStuff {\n  //the serializer is perfectly happy with me\n  public class DummyBar{}\n\n  //the serializer doesn't like me\n  public class Bar{\n  ...\n  }\n\n  ...\n}\n\nusing BarStuff;\nnamespace FooStuff {\n  [XmlInclude(typeof(DummyBar))]\n  public class Foo {\n    public T GetBar<TBar, T>( string key ) where TBar : Bar<T> {\n      ...\n    }\n  }
1804	public int countRootFolders(Microsoft.Office.Interop.Outlook.MAPIFolder aFolder)\n{\n    int rootCount = aFolder.Folders.Count;\n\n    foreach (Microsoft.Office.Interop.Outlook.MAPIFolder subfolder in aFolder.Folders)\n    {\n        rootCount += countRootFolders( subFolder );\n    }\n\n    return rootCount;\n}
1805	void Application_Idle(object sender, EventArgs e)\n {\n      Invalidate();\n      LevelView.Update();\n }
1806	name_list2 = new List<string>(name_list1);
1807	var sortedList = ordersList.OrderBy(p => p.ProductName).ToList();
1808	public static T GetEnumValueFromDescription<T>(string description)\n{\n    MemberInfo[] fis = typeof(T).GetFields();\n\n    foreach (var fi in fis)\n    {\n        DescriptionAttribute[] attributes = (DescriptionAttribute[])fi.GetCustomAttributes(typeof(DescriptionAttribute), false);\n\n        if (attributes != null && attributes.Length > 0 && attributes[0].Description == description)\n            return (T)Enum.Parse(typeof(T), fi.Name);\n    }\n\n    throw new Exception("Not found");\n}
1809	public class MyMapMode : Microsoft.Maps.MapControl.Core.MercatorMode\n{\n    public Range<double> MapZoomRange = new Range<double>(1.0, 10.0);\n    protected override Range<double> GetZoomRange(Location center)\n    {\n        return this.MapZoomRange;\n    }\n}
1810	IWebElement element = webDriver.FindElement(By.XPath("//a[contains(text(), 'Enter')]"));
1811	var mismatches = Enumerable.Range(0, Math.Min(list1.Length, list2.Length))\n                           .Where(i => list1[i] != list2[i])\n                           .ToList();
1812	private void clbAllRooms_ItemCheck(object sender, ItemCheckEventArgs e) {\n        this.BeginInvoke(new MethodInvoker(() => Update_rtbPrice()));\n    }
1813	Thread.CurrentThread.CurrentCulture = new CultureInfo("en-US");
1814	string GetLessVariableByName(string name, string lessContent) {\n    int optimisation = 1;\n    Func<IStylizer> defaultStylizer = () => new PlainStylizer();\n    Func<IImporter> defaultImporter = () => new Importer();\n    Func<Parser> defaultParser = () => new Parser(optimisation, defaultStylizer(), defaultImporter());\n    Func<Env> defaultEnv = () => { return new Env(); };\n    Env env = defaultEnv();\n    Parser parser = defaultParser();\n    var tree = parser.Parse(lessContent.Trim(), "tmp.less");\n    var rule = tree.Rules.ToArray()[0];\n    Node node = rule.Evaluate(env);\n    var variableValue = tree.Variable(name, node);\n\n    return variableValue == null ? null : variableValue.Value.ToString();\n}
1815	public class ItemDataSource : BindingSource\n{\n    private ICollection<ItemData> list;\n    public ItemDataSource()\n    {\n        try\n        {\n            list = QBCom.GetItemList();\n        }\n        catch (Exception e)\n        {\n            list = new List<ItemData>();\n        }\n        this.DataSource = list;\n    }\n    public ItemDataSource(IEnumerable<ItemData> data)\n    {\n        list = data.ToList();\n        this.DataSource = list;\n    }\n}
1816	SELECT\n    sprocs.ROUTINE_NAME,\n    parms.PARAMETER_NAME,\n    parms.DATA_TYPE\nFROM\n    INFORMATION_SCHEMA.ROUTINES sprocs\n    LEFT OUTER JOIN INFORMATION_SCHEMA.PARAMETERS parms ON parms.SPECIFIC_NAME = sprocs.ROUTINE_NAME\nWHERE\n    sprocs.ROUTINE_TYPE = 'PROCEDURE'\n    --AND PATINDEX('/*<SomeKeyToSearch>*/', sprocs.ROUTINE_DEFINITION) > 0
1817	// Your sample control\npublic class MyUserControl : Control\n{\n    public event EventHandler<EventArgs> INeedData;\n    public Data Data {get; set;}\n\n    private class DoSomething()\n    {\n        if(INeedData!=null) INeedData(this,null);\n    }\n}\n\n...\n\n// Your Form, in the case that the control isn't already added.\nvar _myUserControl = new MyUserControl();\nprivate void Form1_Load(object sender, EventArgs e)\n{\n    _myUserControl.INeedData += new EventHandler<EventArgs>(MyUserControl_INeedData);\n    this.Controls.Add(myUserControl);\n}\n\nvoid MyUserControl_INeedData(object sender, EventArgs e)\n{\n    _myUserControl.Data = SomeData;\n}
1818	private void bgw1_DoWork(object sender, DoWorkEventArgs e)\n{\n  // looping through stuff\n  {\n    this.Invoke(new MethodInvoker(delegate { Text = textBox1.Text; }));\n  }\n}
1819	PowerPoint.Application ppApp = Globals.ThisAddIn.Application;\nleft = ppApp.ActivePresentation.PageSetup.SlideWidth - //my image size - //my margin;
1820	create table A (\n    id_a int not null identity(1,1) primary key,\n    name varchar(100))\ncreate table B (\n    id_b int not null identity(1,1) primary key,\n    id_a int null,\n    name_hash varbinary(16));\n\ninsert into A (name)\noutput inserted.id_a, hashbytes('MD5', inserted.name)\ninto B (id_a, name_hash)\nvalues ('Jonathan Doe')\n\nselect * from A\nselect * from B
1821	public bool TryDetectNewLine(string path, out string newLine)\n    {\n        using (var fileStream = File.OpenRead(path))\n        {\n            char prevChar = '\0';\n\n            // Read the first 4000 characters to try and find a newline\n            for (int i = 0; i < 4000; i++)\n            {\n                int b;\n                if ((b = fileStream.ReadByte()) == -1) break;\n\n                char curChar = (char)b;\n\n                if (curChar == '\n')\n                {\n                    newLine = prevChar == '\r' ? "\r\n" : "\n";\n                    return true;\n                }\n\n                prevChar = curChar;\n            }\n\n            // Returning false means could not determine linefeed convention\n            newLine = Environment.NewLine;\n            return false;\n        }\n    }
1822	string UserName = System.Threading.Thread.CurrentPrincipal.Identity.Name;
1823	var dict = arr\n        .GroupBy(x => x)\n        .Where(x => selectedTeams.Contains(x))\n        .ToDictionary(x => x.Key, x => x.Count());
1824	// doesn't have to be static - just simpler for my test\nstatic string getValidDescription(string description)\n{\n    // handle nulls safely (could return a default here)\n    if (description == null) return null;\n    // for example only...\n    return CultureInfo.CurrentCulture.TextInfo\n        .ToTitleCase(description);\n}\n\nvar qry =\n    from details in doc.Root.Elements("detail")\n    select new FeedResource\n    {\n        Title = (string)details.Element("title"),\n        Host = (string)details.Element("link"),\n        Description = getValidDescription((string) details.Element("description")),\n        PublishedOn = (DateTime?)details.Element("pubDate"),\n        Generator = (string)details.Element("generator"),\n        Language = (string)details.Element("language")\n    };
1825	public List<string> GetClientAndPermittedActivities(int clientId)\n{\n    return ReadAllRaw()\n            .Where(c => c.Id == clientId)\n            .SelectMany(\n                           ct => ct.ClientType\n                                   .Role\n                                   .PermittedActivities,\n                           (s, c) => c.Uid\n                       )\n            .ToList();\n}
1826	string input = "a:b,c";\n\nint colon = input.IndexOf(':');\nstring left = input.Substring(0, colon);\nstring right = input.Substring(colon + 1);\n\nList<MyClass> result = right.Split(',')\n                            .Select(x => new MyClass\n                            {\n                                Column1 = left,\n                                Column2 = x,\n                            })\n                            .ToList();
1827	string s = "good overview of ESP's in more detail than you probably need.";\nstring escaped = s.Replace("'","''");
1828	// Users u - will serve as an alias source below\nUsers u = null;\nIList<Users> users = this.Session.QueryOver<Users>()\n        .Where(f => f.role == role)\n        .SelectList(list => list        // here we set the alias \n                .Select(p => p.username) .WithAlias(() => u.username)\n                .Select(p => p.email)    .WithAlias(() => u.email)\n                .Select(p => p.firstname).WithAlias(() => u.firstname)\n        )\n        // here we Transform result with the aliases into Users\n        .TransformUsing(Transformers.AliasToBean<Users>())\n        .List<Users>();
1829	if(dr["Mob2"] == "")\n  dr["Mob2"] =null;
1830	public static IEnumerable<Cookie> GetAllCookies(CookieContainer cookieContainer)\n{\n    var domainTable = (Hashtable)cookieContainer\n                            .GetType()\n                            .InvokeMember(\n                                name: "m_domainTable",\n                                invokeAttr: BindingFlags.NonPublic | BindingFlags.GetField | BindingFlags.Instance,\n                                binder: null,\n                                target: cookieContainer,\n                                args: new object[] { });\n\n    return domainTable.Keys.Cast<string>()\n                .Select(d => cookieContainer.GetCookies(new Uri("http://" + d.TrimStart('.'))))\n                .SelectMany(c => c.Cast<Cookie>());\n\n}
1831	var r = new Regex(@"(\d+)(\. )");\nvar input = "This is a test No. 42. Hello Nice People";\nvar output = r.Replace(input, "$1, ");
1832	Var CDNumbers =\n    From CDNumber in CollectionsDataSet.CD.AsEnumerable()\n    Where CDNumber.Field<int?>("CDNumber") != null\n    Select CDNumber.Field<int?>("CDNumber");
1833	InstanceContextMode.Single
1834	ruleScreenActive = !ruleScreenActive;
1835	public event  EventHandler TextChanged\n{\n    add\n    {\n        textbox.TextChanged += value;\n    }\n    remove\n    {\n        textbox.TextChanged -= value;\n    }\n}
1836	//Windows API for resizing the window.\n[DllImport("user32.dll", CallingConvention = CallingConvention.StdCall)]\npublic static extern int SendMessage(IntPtr hWnd, uint Msg, long lParam, long wParam);\n\n[DllImport("user32.dll", CallingConvention = CallingConvention.StdCall)]\npublic static extern bool ReleaseCapture();\n\n[DllImport("user32.dll", CallingConvention = CallingConvention.StdCall)]\npublic static extern bool ShowWindow(IntPtr hWnd, int cmdShow);
1837	TwitterService service = new TwitterService("<my app key>", "<my app secret>");\nservice.GetTweet(294183806548733952, \n    (tweet, response) => Dispatcher.BeginInvoke(() => \n            MessageBox.Show(tweet.Text, tweet.Author.ScreenName, MessageBoxButton.OK)));
1838	private PdfContentByte _pcb; \nDocument document = new Document();\n\nFileStream fileStream = new FileStream(filePath, FileMode.Open, FileAccess.Read);\nPdfReader Mypdfreader= new PdfReader(fileStream);\n PdfTemplate background = writer.GetImportedPage(Mypdfreader, 1);\n document.NewPage();\n_pcb = writer.DirectContentUnder;\n_pcb.AddTemplate(background, 0, 0);\n _pcb = writer.DirectContent;\n_pcb.BeginText();\n         _pcb.SetFontAndSize(BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false), 10);\n _pcb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, text, 10, 5, 0);//10,5 are x and y coordinates resp.\n _pcb.EndText();\n\n writer.Flush();\nfileStream.Close();
1839	//data to send via tcp or any stream/file\nbyte[] message_to_send = UTF8Encoding.UTF8.GetBytes("am??");\n\n//when receiving, pass the array in this to get the string back\nstring message received = UTF8Encoding.UTF8.GetString(message_to_send);
1840	obj.OpenURL("http://108.166.161.205:8795");
1841	var xelement = XElement.Parse(outputtext);\n            rate = (double)xelement;
1842	var epoch = new DateTime(...);  // Your epoch (01/01/0001 or whatever)\nvar yourDate = epoch.AddDays(days_since_epoch);
1843	namespace ExtensionMethods\n{\n    public static class MyExtensions\n    {\n        public static void SetEncryptColumn(this DataSetType.DataTableRow row, string value)\n        {\n            row.Encrypt = EncryptValue(value);\n        }\n\n        public static string GetEncryptColumn(this DataSetType.DataTableRow row)\n        {\n            return DecryptValue(row.Encrypt);\n        }\n    }   \n}
1844	public IEnumerable<Ability> GetAbilitiesForClasses(string[] asClassNames, int iLevel)\n{\n    return Classes\n           .Where(X => asClassNames.Contains(X.Name))\n           .SelectMany(X => X.Abilities)\n           .Where(X => X.Level <= iLevel)\n           .ToList();\n}
1845	Encrypted is specified for options and file encryption is not supported on the current platform.
1846	new Thread(delegate() { \n\nwhile(true)\n{\n //...\n}\n\n}).Start();
1847	var dividend = yearItem.GetType().GetProperties().\nWhere(x => x.Name.Contains("Record") || x.Name.Contains("Payable") || x.Name.Contains("Cash"));
1848	doc.Root.ReplaceWith(new XElement("MyTempRoot", doc.Root));
1849	var rand = new Random();\nvar value = rand.NextDouble() * 2 - 1;
1850	KnownFolders.SavedPictures
1851	// Set title.\nthis.chart1.Titles.Add("Sales");
1852	[XmlText]\npublic string Text;
1853	DisableControls(Control c)\n{\n    c.Enable  = false;\n    foreach(Control child in c.Controls)\n       DisableControls(child)\n}
1854	factorial(0) := 1\nfactorial(1) := 1\nfactorial(n) := n * factorial(n - 1)
1855	char recdata[10];\nint bytes = 0;\nif(Serial.available())\n{     \n  bytes = Serial.readBytes(recdata, MAX_LENGTH);\n  checkdata(); //function which checks the received data\n}
1856	int intClient = 0;\n        try\n        {\n            intClient = (int)lbxClient.SelectedValue;\n        }\n        catch (Exception)\n        {\n            intClient = 0;\n        }
1857	private readonly string _path =\n            ConfigurationManager.AppSettings["vp"].ToString(CultureInfo.InvariantCulture);
1858	public class Table\n{\n   public Table(IMapInfo map)\n   {\n      _map = map;\n   }\n\n   public string Name\n   {\n      get \n      {\n        string value = _map.Eval("myexpression");\n        if (String.IsNullOrEmpty(value))\n        {\n            value = "none";\n        }\n        return value;\n      }\n   }\n\n   private IMapInfo _map;\n}\n\n[TestFixture]\npublic class TableFixture // is this a pun?\n{\n   [Test]\n   public void CanHandleNullsFromCOM()\n   {\n       MockRepository mocks = new MockRepository(); // rhino mocks, btw\n       IMapInfo map = mocks.CreateMock<IMapInfo>();\n\n       using (mocks.Record())\n       {\n          Expect.Call(map.Eval("myexpression").Return(null);\n       }\n\n       using (mocks.PlayBack())\n       {\n          Table table = new Table(map);\n          Assert.AreEqual("none", table.Name, "We didn't handle nulls correctly.");\n       }\n\n       mocks.verify();\n   }\n}
1859	public int Import(string path)\n{\n   try\n   {\n      string cmd = "LOAD DATA INFILE '" + path + "' INTO TABLE zen_hardware.products FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'";\n      int a = MySqlHelper.ExecuteNonQuery(conn.Connect(),cmd);\n      return a;\n   }\n   catch\n   {\n      return -1;\n   }\n}
1860	var watch = Stopwatch.StartNew();\n\n//Do work\n\nConsole.WriteLine("Time elapsed: {0}", watch.ElapsedMilliseconds);
1861	Microsoft.Win32.OpenFileDialog dlg = new Microsoft.Win32.OpenFileDialog();\ndlg.DefaultExt = ".sdf";\ndlg.Filter = "Database file (.sdf)|*.sdf";\n\nNullable<bool> result = dlg.ShowDialog();\n\nif (result == true)\n{\n    string Myfile = dlg.FileName;\n}
1862	public MainPage()\n        {\n            InitializeComponent();\n\n            this.Loaded += new RoutedEventHandler(DisplayMessage);\n        }\n\nvoid DisplayMessage(object sender, RoutedEventArgs e)\n        {\n            MessageBox.Show(ContentPanel.ActualHeight.ToString());\n        }
1863	protected override void OnStart(string[] args)\n{\n    if (_serviceHost != null)\n    {\n        _serviceHost.Close();\n    }\n\n    _counterObject = new CounterClass();\n    _counterObject.StartCounting();\n\n    _wcfService = new CounterWCFService(_counterObject);\n\n    _serviceHost = new ServiceHost(_wcfService);\n    _serviceHost.Open();\n}
1864	public static Expression<Func<MyEntity, int?>> EqualsValue(MyType myType, int value) {\n  return (e) => GetItem(myType)(e) == value;\n}
1865	var Results = DataAdapter.FillSchema(NewData, SchemaType.Source, tableName);
1866	List<IPAddress> addresses = new List<IPAddress>();\nforeach (string input in this.textBox1.Lines)\n{\n    IPAddress ip;\n    if (IPAddress.TryParse(input, out ip))\n    {\n        addresses.Add(ip);\n    }\n    else\n    {\n        Console.WriteLine("Input malformed: {0}", input);\n    }\n}
1867	private class MyObject\n{\n    public bool Method1() { return true; } // Your own logic here\n    public bool Method2() { return false; } // Your own logic here\n}\n\nprivate static bool MyFunction(Func<bool> methodOnObject)\n{\n    bool returnValue = methodOnObject();\n    return returnValue;\n}    \n\nprivate static void OverallFunction()\n{\n    MyObject myObject = new MyObject();\n\n    bool method1Success = MyFunction(myObject.Method1);\n    bool method2Success = MyFunction(myObject.Method2);\n}
1868	1. Change the assembly name and/or namespace name in project -> properties\n2. Localization DLL uses(assumes) assembly name as the default namespace. \n   Here we need to provide the namespace name.\n3. Rebuild DLL and add reference to project.
1869	var results = new List<Products>(); //our new data source with only checked items\n\nforeach (DataGridViewRow row in productsDataGridView.Rows)\n{\n    var item = row.DataBoundItem as Products; //get product from row (only when grid is databound!)\n\n    if (item.Promotions > 0)\n    {\n        results.Add(item);        \n    }\n}\n\npromotionsDataGridView.DataSource = results;
1870	SchoolDepartment newPerson = rows[rows.Count - 1];\nMessageBox.Show(newPerson.ID.ToString());
1871	using System;\n\nnamespace ConsoleApplication1\n{\n    enum ButtonChanger\n    {\n        Change1 = 1,\n        Change2 = 2,\n        Change3 = 3\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var changer = GetButtonChanger(2);\n\n            Console.WriteLine(changer);\n            Console.WriteLine((int)changer);\n        }\n\n        private static ButtonChanger GetButtonChanger(int i)\n        {\n            return (ButtonChanger)Enum.Parse(typeof(ButtonChanger), string.Format("Change{0}", i));\n        }\n    }\n}
1872	CustomService custsrv = new CustomService();\nList<Code> dept = custsrv.GetDepartment(true);
1873	var ev = \n    new Eval3.Evaluator(\n        Eval3.eParserSyntax.c,/*caseSensitive*/ \n        false);\n\nMessageBox.Show(ev.Parse("1+2+3").value.ToString());
1874	function CloseDialog(tanksize,companyID, accountID, address, serviceContract, cod, divisionId) {\n    tb_remove();\n    var url = 'ServiceTicket.aspx?CompanyID=' + companyID + '&AccountID=' + accountID + '&Address=' + address.replace('#', '%23') + '&TankSize=' + tanksize + '&divisionId=' + divisionId;    \n    window.parent.location.href = url;\n}
1875	var col = gridView1.Columns.Add();\ncol.FieldName = "counter";\ncol.Visible = true;\ncol.UnboundType = DevExpress.Data.UnboundColumnType.Integer;\ngridView1.CustomUnboundColumnData += gridView1_CustomUnboundColumnData;\n\nvoid gridView1_CustomUnboundColumnData(object sender, DevExpress.XtraGrid.Views.Base.CustomColumnDataEventArgs e)\n{\n    if (e.IsGetData)\n        e.Value = e.ListSourceRowIndex+1;\n}
1876	string[] d = Directory.GetDirectories(@"C\", "*.*", SearchOption.TopDirectoryOnly);\nDirectoryInfo[] di = new DirectoryInfo[d.Length];\nfor (int x = 0; x < d.Length; x++)\n{\n    di[x] = new DirectoryInfo(d[x]);\n}
1877	this.combobox.SelectedValue = Table2ID;
1878	Color c = Color.FromArgb(128, Color.Blue);\nusing (Brush b = new SolidBrush(c))\n{\n  e.Graphics.FillRectangle(b, 0, 0, 50, 50);\n}
1879	private void ShowPage(Page page)\n{\n    NavigationWindow popup = new NavigationWindow();  \n    popup.Height = 400;\n    popup.Width = 600;\n    popup.Show();\n    popup.Navigate(page);\n}
1880	var myObjectState=myContext.ObjectStateManager.GetObjectStateEntry(myObject);\nvar modifiedProperties=myObjectState.GetModifiedProperties();\nforeach(var propName in modifiedProperties)\n{\n    Console.WriteLine("Property {0} changed from {1} to {2}", \n         propName,\n         myObjectState.OriginalValues[propName],\n         myObjectState.CurrentValues[propName]);\n}
1881	range.Borders.LineStyle = Excel.XlLineStyle.xlDot;\nrange.Borders.Color = ColorTranslator.ToOle(Color.Red);
1882	conditionX ^conditionY
1883	[MetadataType(typeof(IMyAttributes))\npublic DerivedClass : BusinessClass\n{\n}\n\npublic interface IMyAttributes\n{\n  [Required]\n  public string Name { get; set; }\n}
1884	DataTable merged = new DataTable(); \nmerged.Merge(table1); \nmerged.Merge(table2);\nmerged.Merge(table3);\n//Merge the rest of the data tables.\nlvMyList.DataSource = merged;\nlvMyList.DataBind();
1885	List<string> oldlist = new List<string>();\nList<string> newlist = new List<string>();\nforeach(string s in oldlist)\n{\n     if(s.Contains('(')) s = s.Replace('('), "");//etc\n     newlist.Add(numFormat(s));\n}\n\nstring prefix = "495";\n\nstring numFormat(string s)\n{\n     string my;\n     if(s.Length == 7)\n     {\n         my = string.Format("+7 ({0}) {1} {2} {3}", prefix, s.substring(0,3), s.subtring(3,2), s.substring(5,2);\n     }\n     else if(s.length == 10)\n     {\n         my = string.Format("+7 ({0}) {1} {2} {3}", s.substring(0,3), s.substring(3,3), s.subtring(5,2), s.substring(7,2);        \n     }\n     //etc\n     return my;\n}
1886	Response.Redirect(string.Format("{0}?ReturnUrl={1}#{2}",\n   Server.Encode(path), Server.Encode(path), placeholder))));
1887	[Flags]
1888	DateTime when = DateTime.ParseExact("20101001151014", "yyyyMMddHHmmss",\n    CultureInfo.InvariantCulture);
1889	protected void Page_Load(object sender, EventArgs e)\n{\n\n    XmlDocument xdoc = new XmlDocument();//xml doc used for xml parsing\n\n    xdoc.Load(\n        "http://latestpackagingnews.blogspot.com/feeds/posts/default"\n        );//loading XML in xml doc\n\n    XmlNodeList xNodelst = xdoc.DocumentElement.SelectNodes("entry");//reading node so that we can traverse thorugh the XML\n\n    foreach (XmlNode xNode in xNodelst)//traversing XML \n    {\n        litFeed.Text += "read";\n    }\n\n}
1890	private void createPage()\n    {\n        ClientContext context = new ClientContext(URL);\n        Site siteCollection = context.Site;\n        Web site = context.Web;\n\n        List pages = site.Lists.GetByTitle("Site Pages");\n\n        Microsoft.SharePoint.Client.\n        FileCreationInformation fileCreateInfo = new FileCreationInformation();\n        fileCreateInfo.Url = "NewPage.aspx";\n        context.Load(pages.RootFolder.Files.Add(fileCreateInfo));\n\n        context.ExecuteQuery();\n        context.Dispose();\n    }
1891	var dives = from div in htmlDoc.DocumentNode.Descendants("div")\n           where div.Id == "div_space" \n           select div;
1892	int iterationsNum = (finish - start) / 2 ;\nfor(int i=0;i<=iterationsNum;i++)\n{\n    if(start+i != finish-i)\n    {\n      swap(values, start+ i, finish-i);\n    }\n}
1893	int rowCount = (SP1 as DataTable).Rows.Count;
1894	String sb;\n\n        using (IsolatedStorageFile myIsolatedStorage = IsolatedStorageFile.GetUserStoreForApplication())\n        {\n            if (myIsolatedStorage.FileExists(fileName))\n            {\n                StreamReader reader = new StreamReader(new IsolatedStorageFileStream(fileName, FileMode.Open, myIsolatedStorage));\n\n                sb = reader.ReadToEnd();\n\n                reader.Close();\n            }\n\n            if(!String.IsNullOrEmpty(sb))\n            {\n                 MessageBox.Show(sb);\n            }\n        }
1895	IsInEnum()
1896	var filters = chkBx.Where(r => r.Checked).Select(r => r.Text).ToList();\nselectedElements = selectedElements.Where(r =>\n      filters.Contains((string)r.Parent.Element(element)))
1897	var sbSql = new System.Text.StringBuilder(500);\n\nsbSql.Append("delete from X where id in (");\n\nif (lstItem.Count != 0) {\n  foreach (int value in lstItem)\n  {\n     if (sbSql.Length != 0) \n     {\n        sbSql.Append(",");\n     }\n     sbSql.Append(value);\n  }\n\n} else {\n   sbSql.Append(-1);\n}\n\nsbSql.Append(")");\n\nSqlComm.CommandText = sbSql.ToString();
1898	System.IO.Ports.SerialPort
1899	using <Namespace of MyClass>;\n\npublic static void Main()\n{\n   MyClass blah = new MyClass();\n}
1900	*[System[(Level=1 or Level=2) and (ErrorID!=1001)]]
1901	public DataTable GetDates()\n    {\n        DataTable dt = new DataTable();\n        dt.Columns.Add("Date", typeof(DateTime));\n\n        int year = Convert.ToInt32(ddyear.SelectedItem.Value);\n        int month = Convert.ToInt32(ddmonth.SelectedItem.Value);\n\n        int daysInMonth = DateTime.DaysInMonth(year, month);\n        for (int i = 0; i < daysInMonth; i++)\n        {\n            DataRow dr = dt.NewRow();\n            dr["Date"] = new DateTime(year, month, i + 1);\n            dt.Rows.Add(dr);\n        }\n\n        return dt;\n    }
1902	var query = (from p in parents\n             from c in p.Children\n             select c)\n            .Distinct();
1903	String s = "[TEST name1=\"smith ben\" name2=\"Test\" abcd=\"Test=\" mmmm=\"Test=\"]";\n\nSortedList<string, string> list = new SortedList<string, string>();\n\n//Remove the start and end tags\ns = s.Remove(0, s.IndexOf(' '));\ns = s.Remove(s.LastIndexOf('\"') + 1);\n\n//Split the string\nstring[] pairs = s.Split(new char[] { '\"' }, StringSplitOptions.None);\n\n//Add each pair to the list\nfor (int i = 0; i+1 < pairs.Length; i += 2)\n{\n   string left = pairs[i].TrimEnd('=', ' ');\n   string right = pairs[i+1].Trim('\"');\n   list.Add(left, right);\n}
1904	InputString = InputString.Replace("\"", "&#34;");
1905	CREATE TABLE
1906	Password.Encrypt()
1907	(from categorytable in tsg.categories\nwhere categorytable.category_Id == categoryids\nselect new {Name=categorytable.category_Name, \n            Description=categorytable.category_Description}).SingleOrDefault();
1908	StreamReader reader = File.OpenText(filename);\n    string line = null\n    while ((line = reader.ReadLine()) != null)\n    {\n    // ... your stuff here\n    }\n    reader.Close();\n    reader.Dispose();
1909	string sql = "INSERT INTO tblTarget (target,ref) " + \n             "SELECT ?, MAX(ref)+1 FROM tblTarget";\nOleDbCommand cmd = new OleDbCommand(sql, conn);\ncmd.Parameters.AddWithValue("@target", TextTitle.Text);\ncmd.ExecuteNonQuery();
1910	public void DisplayLastTakenPhoto()\n    {\n        var directory = new DirectoryInfo(@"C:\temp");\n        var myFile = directory.EnumerateFiles()\n         .Where(f => f.Extension.Equals(".js", StringComparison.CurrentCultureIgnoreCase) || f.Extension.Equals("raw", StringComparison.CurrentCultureIgnoreCase))\n         .OrderByDescending(f => f.LastWriteTime)\n         .First();\n        Assert.IsNotNull(myFile);\n    }
1911	var orders = db.Orders.Where( ord => \n    (isFirstConditionRelevant && ord.Channel == 1) \n    || (isSecondConditionRelvant && ord.Channel == 2));
1912	var names = new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.Desktop))\n            .GetDirectories().Select(d => d.Name).ToList();
1913	public double this[int i]\n{  \n    get\n    {\n        int index = i - 1;\n        if (index < 0 || index >= scores.Count)\n        {\n            throw new Exception("Invalid CA number get");\n        }\n        else\n            return scores[i]; \n    }\n    set\n    {\n        int index = i - 1;\n        if (index < 0 || index > scores.Count)\n        {\n            throw new Exception("Invalid CA number set");\n        }\n        else\n        { \n            if (index < scores.Count)\n                scores[index] = value;\n            else\n                scores.Add(value);\n        }\n    }\n}
1914	ShowDialog()
1915	const int LARGE_PACK = 1000;\nconst int MEDIUM_PACK = 200;\nconst int SMALL_PACK = 20;\n\nint largePacks = (int)(Amount / LARGE_PACK);\nint mediumPacks = (int)((Amount % LARGE_PACK) / MEDIUM_PACK);\nint smallPacks = (int)ceil(((float)((Amount % LARGE_PACK) % MEDIUM_PACK) / SMALL_PACK));
1916	var qOverInclude = QueryOver.Of<MyModel>(() => mModel)\n                .JoinAlias(() => mModel.MyList, () => mList, JoinType.LeftOuterJoin)\n                    .Where(() => mList.ID == myID)\n                    .And(() => mList.Type == myType)\n                .Select(x => x.IdMyModel);\n\n  var qOver = _HibSession.QueryOver<MyModel>(() => mModel)\n                .JoinAlias(() => mModel.MyDescription, () => mDescription, JoinType.LeftOuterJoin)\n                .Where(() => mDescription.IDLanguage == myLanguage)\n                .WithSubquery.WhereProperty(() => mModel.IdMyModel).In(qOverSubQuery)\n                .OrderByAlias(() => mModel.IdMyModel).Asc\n                .Future<MyModel>();
1917	// (exists ((x Int)) (and (< t1 x) (< x t2))))\nContext z3 = new Context();\nExpr t1 = z3.MkIntConst("t1");\nExpr t2 = z3.MkIntConst("t2");\nExpr x = z3.MkIntConst("x");\n\nExpr p = z3.MkAnd(z3.MkLt((ArithExpr)t1, (ArithExpr)x), z3.MkLt((ArithExpr)x, (ArithExpr)t2));\nExpr ex = z3.MkExists(new Expr[] { x }, p);\n\nGoal g = z3.MkGoal(true, true, false);\ng.Assert((BoolExpr)ex);\nTactic tac = Instance.Z3.MkTactic("qe"); // quantifier elimination\nApplyResult a = tac.Apply(g); // look at a.Subgoals
1918	var info = Application.GetResourceStream(new Uri("pack://application:,,,/Images/hand2.cur"));\nvar cursor = new Cursor(info.Stream);
1919	Application.Current.Exit()
1920	public override void Execute(Guid targetInstanceId)\n    {\n        foreach (SPSite site in this.WebApplication.Sites)\n        {\n            try\n            {\n                if (SPSite.Exists(new Uri(site.Url)) && null != site.Features[FeatureId.AlertMeJob])\n                {\n                    try\n                    {\n                        ExecuteJob(site);\n                    }\n                    catch (Exception ex)\n                    {\n                        // handle exception\n                    }\n                }\n            }\n            finally\n            {\n                site.Dispose();\n            }\n        }\n    }
1921	ru.AsyncOperationCompleted += new AsyncOperationCompletedEventHandler(ru_AsyncOperationCompleted);\n\nvoid ru_AsyncOperationCompleted(object sender, AsyncOperationCompletedEventArgs e)\n        {\n\n            //upload complete\n            YouTubeRequestSettings ytSettings = new YouTubeRequestSettings("myApp", googleDevKey, ytUsername, ytPassword);\n            Video v = ytRequest.ParseVideo(e.ResponseStream);\n            string videoId = v.VideoId;\n            string watchPage = v.WatchPage.ToString();\n\n        }
1922	public class SparseGraphPathFinder : PathFinder<SparseGraph<ConcreteNode, ConcreteEdge>, ConcreteNode, ConcreteEdge>\n{\n\n}
1923	using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing iTextSharp.text.pdf;\nusing iTextSharp.text.xml;\nnamespace GetPages_PDF\n{\n  class Program\n{\n    static void Main(string[] args)\n      {\n       // Right side of equation is location of YOUR pdf file\n        string ppath = "C:\\aworking\\Hawkins.pdf";\n        PdfReader pdfReader = new PdfReader(ppath);\n        int numberOfPages = pdfReader.NumberOfPages;\n        Console.WriteLine(numberOfPages);\n        Console.ReadLine();\n      }\n   }\n}
1924	System.Text.UnicodeEncoding uni = new UnicodeEncoding();\nbyteArray = uni.GetBytes(data);
1925	// create attachment and set media Type\n//      see http://msdn.microsoft.com/de-de/library/system.net.mime.mediatypenames.application.aspx\nAttachment data = new Attachment(\n                         "PATH_TO_YOUR_FILE", \n                         MediaTypeNames.Application.Octet);\n// your path may look like Server.MapPath("~/file.ABC")\nmessage.Attachments.Add(data);
1926	public Form1()\n  {\n        InitializeComponent();\n  }
1927	var ds = new DataSet();\n\nmycommand.CommandText = sql;\nSQLLiteDataAdapter adapter = new SQLLiteDataAdapter(mycommand);\nadapter.Fill(ds);
1928	public string Display()\n{\n    return cproduct.Description + " (" + cquantity.ToString() + " at " + cproduct.UnitPrice.ToString("c") + " each) Total  " + (cquantity*cproduct.UnitPrice).ToString("c") ;\n}
1929	Enumerable.Range(1, 3).SelectMany(\n    i => Enumerable.Range(4, 3),\n    (i, j) => new Tuple<int, int>(i, j)\n).ToList();
1930	Random rand = new Random();\ntext = Regex.Replace(text, @"{Rand_num (.+?)-(.+?)}", match => {\n    int from = int.Parse(match.Groups[1].Value),\n        to = int.Parse(match.Groups[2].Value);\n    // note end is exclusive\n    return rand.Next(from, to + 1).ToString();\n});
1931	int i = 7122960;\ndecimal d = (decimal)i / 100;
1932	public void BatchBulkCopy(DataTable dataTable, string DestinationTbl, int batchSize)\n{\n    // Get the DataTable \n    DataTable dtInsertRows = dataTable;\n\n    using (SqlBulkCopy sbc = new SqlBulkCopy(connectionString, SqlBulkCopyOptions.KeepIdentity))\n    {\n        sbc.DestinationTableName = DestinationTbl;\n\n        // Number of records to be processed in one go\n        sbc.BatchSize = batchSize;\n\n        // Add your column mappings here\n        sbc.ColumnMappings.Add("field1","field3");\n        sbc.ColumnMappings.Add("foo","bar");\n\n        // Finally write to server\n        sbc.WriteToServer(dtInsertRows);\n    }    \n}
1933	private bool addingPage = false;\n\n....\n\n\n private void tabControl1_SelectedIndexChanged(object sender, EventArgs e)\n {\n    if(!addingPage)\n    {\n        addingPage = true;\n        TabPage tab = new TabPage("New Tab");\n        tabControl1.TabPages.Insert(tabControl1.TabPages.Count - 1,tab);\n        tabControl1.SelectedTab = tab;\n        addingPage = false;\n    }\n }
1934	public static readonly DependencyProperty HighlightedProperty = DependencyProperty.Register("highlightedIndex", typeof(int), typeof(MyListView), new PropertyMetadata(null, propertyChanged));\n\n\n    private static void propertyChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n    {\n\n        int newValue = (int)e.NewValue;\n        ListView lv = (ListView)d;\n\n        foreach (ListViewItem lvi in lv.Items)\n        {\n            if (lv.Items.IndexOf(lvi) == newValue)\n            {\n                lvi.Background = new SolidColorBrush(Colors.LightGreen);\n            }\n            else\n            {\n                lvi.Background = new SolidColorBrush();\n            }\n        }\n    }
1935	foreach (DataRow sourcerow in dt1.Rows)\n{\n    DataRow destRow = dt2.NewRow();\n    destRow["ID"] = sourcerow["PRODUCT_ID"];\n    destRow["MIN"] = sourcerow["MIN_VALUE"];\n    destRow["MAX"] = sourcerow["MAX_VALUE"];\n    destRow["POINT_TO_ADD"] = sourcerow["AMOUNT"];\n    dt2.Rows.Add(destRow);\n}
1936	/// <summary>\n/// This is a dummy attribute to support silverlight\n/// </summary>\n/// <remarks></remarks>\npublic class Serializable : Attribute\n{\n    public Serializable() : base()\n    {\n    }\n}
1937	public class MyClass\n{\n    public void MyMethod()\n    {\n        //code goes here\n    }\n}
1938	switch (e.KeyData)\n  {\n    case Keys.F6: //Copy the row above.\n      if (MyGridView.NewRowIndex > 0 && MyGridView.NewRowIndex == rowIndex)\n      {\n        int colIndex = MyGridView.CurrentCell.ColumnIndex;\n\n        MyGridView.Rows.Add();\n        MyGridView.CurrentCell = MyGridView.Rows[rowIndex].Cells[colIndex];\n\n        MyGridView.CurrentRow.Cells[CustomColumn.Index].Value\n          = MyGridView.Rows[rowIndex - 1].Cells[Customer.Index].Value;\n\n        MyGridView.CurrentRow.Cells[DateColumn.Index].Value\n          = MyGridView.Rows[rowIndex - 1].Cells[DateColumn.Index].Value;\n\n        MyGridView.CurrentRow.Cells[RefColumn.Index].Value\n          = MyGridView.Rows[rowIndex - 1].Cells[RefColumn.Index].Value;\n       }\n  }
1939	string span = "35:15";\nTimeSpan ts = new TimeSpan(int.Parse(span.Split(':')[0]),    // hours\n                           int.Parse(span.Split(':')[1]),    // minutes\n                           0);                               // seconds
1940	void fieldFilterTxtBx_TextChanged(object sender, EventArgs e)\n{\n    //blocks repainting tree till all objects loaded\n    this.fieldsTree.BeginUpdate();\n    this.fieldsTree.Nodes.Clear();\n    if (this.fieldFilterTxtBx.Text != string.Empty)\n    {\n        foreach (TreeNode _parentNode in _fieldsTreeCache.Nodes)\n        {\n            foreach (TreeNode _childNode in _parentNode.Nodes)\n            {\n                if (_childNode.Text.StartsWith(this.fieldFilterTxtBx.Text))\n                {\n                    this.fieldsTree.Nodes.Add((TreeNode)_childNode.Clone());\n                }\n            }\n        }\n    }\n    else\n    {\n        foreach (TreeNode _node in this._fieldsTreeCache.Nodes)\n        {\n            fieldsTree.Nodes.Add((TreeNode)_node.Clone());\n        }\n    }\n    //enables redrawing tree after all objects have been added\n    this.fieldsTree.EndUpdate();\n}
1941	modelBuilder.Entity<Product>()\n    .HasMany(x => x.Clients)\n    .WithMany(x => x.Products)\n.Map(x =>\n{\n    x.ToTable("UserPriceList"); // third table is named Cookbooks\n    x.MapLeftKey("ProductId");\n    x.MapRightKey("ClientId");\n});
1942	public static IEnumerable<T> Traverse<T>(this IEnumerable<T> source, Func<T, IEnumerable<T>> fnRecurse)\n    {\n        foreach (T item in source)\n        {\n            yield return item;\n\n            IEnumerable<T> seqRecurse = fnRecurse(item);\n\n            if (seqRecurse != null)\n            {\n                foreach (T itemRecurse in Traverse(seqRecurse, fnRecurse))\n                {\n                    yield return itemRecurse;\n                }\n            }\n\n        }\n    }
1943	using Newtonsoft.Json.Bson;\nusing Newtonsoft.Json;\n\n class Program\n    {\n        public class TestClass\n        {\n            public string Name { get; set; }\n        }\n\n        static void Main(string[] args)\n        {\n            string jsonString = "{\"Name\":\"Movie Premiere\"}";\n            var jsonObj = JsonConvert.DeserializeObject(jsonString);\n\n            MemoryStream ms = new MemoryStream();\n            using (BsonWriter writer = new BsonWriter(ms))\n            {\n                JsonSerializer serializer = new JsonSerializer();\n                serializer.Serialize(writer, jsonObj);\n            }\n\n            string data = Convert.ToBase64String(ms.ToArray());\n\n            Console.WriteLine(data);\n        }\n    }
1944	var result= foo.OrderByDescending(x => x.PairList[1].Value);
1945	x ^= true;
1946	#idOfyourTextbox{\n      text-transform: uppercase;\n  }
1947	Isolated Storage
1948	using (WebClient Client = new WebClient ())\n{\n    Client.DownloadFile("http://www.mywebsite.com/img.aspx?imgid=12345", "12345.jpg");\n}
1949	// TODO: Work out what to do if there are zero or multiple such elements\nvar columns = xdoc.Descendants("property")\n                  .Where(x => (string) x.Attribute("name") == "Columns")\n                  .Single();\n\nvar items = columns.Elements("property");\n\nforeach (var item in items)\n{\n    Console.WriteLine("Item {0}", (string) item.Attribute("name"));\n    foreach (var property in items.Elements("property"))\n    {\n        Console.WriteLine("  {0} = {1}", (string) item.Attribute("name"),\n                          (string) item);\n    }\n}
1950	For(j=1; j<11; j++)\n{\n    StringBuilder ab = new StringBuilder(grades[j]);\n    For(int i=0; i<grades[j]; i++)\n    {\n        sb.Append(" *");\n    }\n\n    Console.WriteLine("Student {0} has grade {1} : {2}", j, grades[j], sb.ToString());\n\n}
1951	private void button2_Click(object sender, EventArgs e)     \n{    \n     if(listbox2.SelectedIndex >= 0)\n     {\n         string curItem = listBox2.Items[listbox2.SelectedIndex].ToString();\n         if(curItem == "SomeOtherString")\n         {\n             listBox2.Items.RemoveAt(listBox2.SelectedIndex);      \n             picturebox.Image.Dispose();\n             picturebox.Image = null; // Not really necessary\n         }\n     }\n}
1952	static int MyMethod(MyClass my, bool b)\n{\n  int cnt = my.SomeMethod().Sum(cls => cls.length);    \n  if (b)\n  {\n      cnt += my.SomeOtherMethod().Sum(aa => MyMethod(aa, true));\n  }    \n  return cnt;\n}
1953	labels[index].Size = new Size(50, 12);
1954	private void button1_Click(object sender, EventArgs e)\n    {\n        int OutputNumber;  \n        bool number = Int32.TryParse(inputtxt.Text, out OutputNumber);\n        string[] array = new string[OutputNumber];\n        int put = 0;\n        for (int i = 0; i < array.Length; i++)\n        {\n\n            array[i] = put.ToString();\n            put++;\n\n            string result = ConvertStringArrayToString(array);\n            string result1 = result + OutputNumber.ToString();\n            outputtxt.Text = result1;\n        }}\n\n            static string ConvertStringArrayToString(string[] array)\n        {\n\n            StringBuilder buildingstring = new StringBuilder();\n            foreach (string value in array)\n            {\n                buildingstring.Append(value);\n                buildingstring.Append("\r\n");\n            }\n            return buildingstring.ToString();\n}
1955	// Get the words in the dictionary starting with the textbox text.\nvar matching = sortedDic.Keys.Where(x => x.StartsWith(searchText.Text)).ToList();\n\n\n// Assign the values to the listbox.\nlistboxWords1.Items.AddRange(matching);
1956	using System;\nusing System.Security.Permissions;\n\npublic class Test\n{\n\n   [SecurityPermission(SecurityAction.Demand, Flags = SecurityPermissionFlag.ControlAppDomain)]\n   public static void Example()\n   {\n       AppDomain currentDomain = AppDomain.CurrentDomain;\n       currentDomain.UnhandledException += new UnhandledExceptionEventHandler(MyHandler);\n\n       try\n       {\n          throw new Exception("1");\n       }\n       catch (Exception e)\n      {\n         Console.WriteLine("Catch clause caught : " + e.Message);\n      }\n\n      throw new Exception("2");\n\n      // Output: \n      //   Catch clause caught : 1 \n      //   MyHandler caught : 2\n   }\n\n  static void MyHandler(object sender, UnhandledExceptionEventArgs args)\n  { \n     Exception e = (Exception)args.ExceptionObject;\n     Console.WriteLine("MyHandler caught : " + e.Message);\n  }\n\n  public static void Main()\n  {\n     Example();\n  }\n\n}
1957	MongoDatabase db = MdbServer.GetDatabase(strDbName);\n                        MongoCollection<BsonDocument> collection = db.GetCollection(strCollectionName);                          \n\n                        foreach (var document in collection.Find(query).SetFields(Fields.Include(includeFields).Exclude("_id")))\n                        {\n                            foreach (string name in document.Names)\n                            {\n                                BsonElement element = document.GetElement(name);\n                                BsonValue value = document.GetElement(name).Value;\n                                bsonDoc.Add(element.Name, value);\n                            }\n                        }
1958	Response.AddHeader("content-disposition", "attachment; filename=SomeName.pdf");
1959	cmdmysql.Parameters.AddWithValue("@_maxvalue", words[0]);
1960	DataGridViewLinkCell linkCell = dcell as DataGridViewLinkCell\nif(linkCell != null)\n//your code...
1961	var span = (DateTime.UtcNow - new DateTime(1970, 1, 1)).TotalSeconds;\n\nreturn span;
1962	if ((FileSystemRights.Write & fsar.FileSystemRights) != FileSystemRights.Write) \n    return false;\n\nreturn true;
1963	class MyClass\n    {\n\n\n\n\n System.Timers.Timer m_ConnectTimer = null;\n\n        ..\n        ..\n\n    void ConnecToServer()\n    {\n        if (m_ConnectTimer != null)\n        {\n            m_ConnectTimer.Enabled = false;\n            m_ConnectTimer.Dispose();\n            m_ConnectTimer = null;\n        }\n\n        //Try to connect to the server\n\n        if (bConnectedToTheServer)\n        {\n            //Do the servery stuff\n        }\n        else //set the timer again\n        {\n            m_ConnectTimer = new Timer(30 * 60 * 1000);\n            m_ConnectTimer.Elapsed += new ElapsedEventHandler(TimerHandler)\n            m_ConnectTimer.Enabled = true;\n        }\n\n    }\n\n\n    void TimerHandler(object sender, ElapsedEventArgs e)\n    {\n        ConnectToServer();\n    }\n\n}
1964	foreach (SPFeatureDefinition feature in SPFarm.Local.FeatureDefinitions)\n{\n    if (feature.Scope = "Farm")\n    {\n        string featureName = feature.DisplayName;\n        if (featureName != null)\n        {\n            XElement newItem = new XElement("Item", featureName);\n            infoTree.Add(newItem);\n        }\n    }
1965	public class BankAccount<T> where T : BankAccount<T>, new()\n{\n    public T SomeFactoryMethod() { return new T(); }\n}\n\npublic class SavingsAccount: BankAccount<SavingsAccount>{}
1966	HorizontalScrollView scrollView1 = new HorizontalScrollView(this);\nvar handler = new Handler();\nhandler.PostDelayed (() => scrollView1.FullScroll (FocusSearchDirection.Right), 100);
1967	Application.ActiveWindow
1968	void input_completed(object sender, PopUpEventArgs<string, PopUpResult> e)\n{\n    string result = e.Result;\n}
1969	private static Call AddLog(NewCallEventArgs ev, Call previousCall)\n{\n    var newCall = new Call\n    {\n    }\n    return newCall;\n}
1970	using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Payments\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Payment p1 = new Payment();\n            Payment p2 = new Payment();\n            Payment p3 = new Payment();\n\n            Payment Sorted = SortPayments(p1, p2, p3);\n        }\n\n        static private Payment SortPayments(params Payment[] payments)\n        {\n            if(payments.Length == 0)\n            {\n               return null;\n            }\n\n            Payment FirstPayment = payments[0];\n\n            Payment current = FirstPayment;\n            for (int i = 1; i < payments.Length; i++ )\n            {\n                current.SupplementalPayment = payments[i];\n                current = current.SupplementalPayment;\n            }\n\n            return FirstPayment;\n        }\n    }\n}
1971	var removed = s.Remove(1, 1);
1972	class MyList<T> : List<T>\n  where T : myObjectBase, IDisposable, IClonable\n{\n}
1973	TimeSpan.TryParseExact(\n    "00h:03m:30s:793ms",\n    "hh'h:'mm'm:'ss's:'fff'ms'",\n    CultureInfo.InvariantCulture,\n    out testCaseData.duration);
1974	var link = "https://www.google.com"\nvar result = confirm("Do you want to navigate to: " + link + "?");\nif (result)\n{\n    window.location = link;   \n}
1975	void Application_Start(object sender, EventArgs e) {\n    Application["OnlineUsers"] = 0;\n}\n\nvoid Session_Start(object sender, EventArgs e) {\n    Application.Lock();\n    Application["OnlineUsers"] = (int)Application["OnlineUsers"] + 1;\n    Application.UnLock();\n}\n\nvoid Session_End(object sender, EventArgs e) {\n    Application.Lock();\n    Application["OnlineUsers"] = (int)Application["OnlineUsers"] - 1;\n    Application.UnLock();\n}
1976	copy to output directory
1977	public static Dictionary<int,int> GetPair(List<Token> data)\n{\n    var pair = new Dictionary<int, int>();\n\n    var stack = new Stack<Token>();\n    foreach (var item in token)\n    {\n        if (item.TokenValue == "(")\n        {\n            stack.Push(item);\n            continue;\n        }\n\n        if (item.TokenValue == ")")\n        {\n            var starting = stack.Pop();\n            pair.Add(starting.TokenId, item.TokenId);\n        }\n    }\n\n    return pair;\n}
1978	yyyy-MM-ddTHH:mm:ss.fffzzz
1979	XElement.Parse("<root>"+myValue+"</root>").Value
1980	string myString = null;\nstring isNullString = myString == null ? "0" : myString;
1981	int T = 0;\nres.rows = new List<User>();\n    int cnt = 0;\n\n    while (reader.Read())\n    {\n\n        //if (T == 0)\n        {\n            User u =new users();\n            res.rows.Add(u);\n\n            res.rows[T].age = (String)reader["age"];\n            res.rows[T].height = (String)reader["height"];\n\n            T = T + 1;\n\n        }\n        cnt = cnt + 1;               \n    }\n\n    return res;
1982	BOOL WINAPI MoveFileWithProgress(\n  __in      LPCTSTR lpExistingFileName,\n  __in_opt  LPCTSTR lpNewFileName,\n  __in_opt  LPPROGRESS_ROUTINE lpProgressRoutine,\n  __in_opt  LPVOID lpData,\n  __in      DWORD dwFlags\n);
1983	var s = (from p in dv\n             orderby p.YourColumn\n             select p.YourColumn.ToUpper()).Distinct();
1984	SqlCommand execute = new SqlCommand('SELECT Pernr from View_PhoneBook where DisplayName= @text', conn);\n\nexecute.Parameters.Add("text", SqlDbType.Text).Value = Textbox1.text;
1985	var nextTwo = yourTable.Take(2).ToArray() ;\nvar res = \n    nextTwo[0].status == nextTwo[1].status ? \n        nextTwo.Take(2) :\n        nextTwo.Take(1);
1986	protected int GetPageIndex()\n    {\n        int output = 0;\n        Int32.TryParse(Request.QueryString["page"], out output);\n        return output;\n    }
1987	if (GlobalClass.BlocksPositions.All(x => !DoesIntersect(Position, x))\n     Position.X += speed;
1988	List<LineElement> Lines = Elements.OfType<LineElement>.ToList();
1989	# Three points are a counter-clockwise turn if ccw > 0, clockwise if\n# ccw < 0, and collinear if ccw = 0 because ccw is a determinant that\n# gives the signed area of the triangle formed by p1, p2 and p3.\nfunction ccw(p1, p2, p3):\n    return (p2.x - p1.x)*(p3.y - p1.y) - (p2.y - p1.y)*(p3.x - p1.x)
1990	string strFullPath = @"C:\Users\Ronny\Desktop\Sources\Danny\kawas\trunk\csharp\ImportME\XukMe\bin\Debug\DannyGoXuk.DTDs.xhtml-math-svg-flat.dtd";\nstring strDirName; \nint intLocation, intLength;\n\nintLength = strFullPath.Length;\nintLocation = strFullPath.IndexOf("DTDs");\n\nstrDirName = strFullPath.Substring(0, intLocation); \n\ntextBox2.Text = strDirName;
1991	var myList = Enumerable.Repeat(false, 100).ToList();
1992	double[] doubleArray = Array.ConvertAll(decimalArray, x => (double)x);
1993	DateTime today = DateTime.Now;\nint year = today.Year;\nint month = today.Month\nint day = today.Day;
1994	Expression<Func<T, bool>> falsePredicate = x => false;
1995	Page tempPage = new Views.Blog.BlogDetail();\ntempPage.PageIntro = intro;\ntempPage.PageContent = content;\n\nStringWriter sw = new StringWriter();\nHttpContext.Current.Server.Execute(tempPage, sw, false);\nif (!String.IsNullOrEmpty(sw.ToString()))\n{\n    return sw.ToString();\n}
1996	public class MyTesterContext : DbContext\n{\n    public MyTesterContext () : base("name=MyTesterContext ")\n    {\n    }\n\n    public DbSet<Trip> Trips { get; set; }\n    public DbSet<Location> Locations { get; set; }\n\n    protected override void OnModelCreating(DbModelBuilder modelBuilder)\n    {\n        modelBuilder.Entity<Trip>().\n          HasMany(t => t.Itinerary).\n          WithMany(l => l.Trips).\n          Map(\n           m =>\n           {\n               m.MapLeftKey("TripID");\n               m.MapRightKey("LocationID");\n               m.ToTable("TripLocations");\n           });\n    }\n\n}
1997	DispatcherTimer tgtTimer = new DispatcherTimer();\n        DispatcherTimer txbTimer2 = new DispatcherTimer();\n        DispatcherTimer rt = new DispatcherTimer();\n\n\npublic void Window_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)\n    {            \n        tgtTimer.Tick += new EventHandler(tgtTimer_tick);\n        tgtTimer.Interval = new TimeSpan(0, 0, 3);\n        tgtTimer.Start();\n\n\n\n        txbTimer2.Tick += new EventHandler(txbTimer2_tick);\n        txbTimer2.Interval = new TimeSpan(0, 0, 0, 4, 000);\n        txbTimer2.Start();\n\n\n        rt.Tick += new EventHandler(rt_tick);\n        rt.Interval = new TimeSpan(0, 0, 1);\n        rt.Start();\n    }
1998	FileStream fs = new FileStream(fileName, FileMode.Open, FileAccess.Read);\nBinaryReader br = new BinaryReader(fs);\nint numBytes = new FileInfo(fileName).Length;\nbyte[] buff = br.ReadBytes(numBytes);
1999	private void Form1_Load(object sender, EventArgs e)\n{\n    comboBoxAdminVisit.DataSource = be.Events;\n    comboBoxAdminVisit.DisplayMember = "EventName";\n}\n\nprivate void comboBoxAdminVisit_SelectedIndexChanged(object sender, EventArgs e)\n{\n    if (comboBoxAdminVisit.SelectedItem != null)\n    {\n        Event selectedEvent = (Event)comboBoxAdminVisit.SelectedItem;\n\n        var visitors = (from cc in be.Visitors\n                        where cc.Attending.Events.Contains(x => x.EnventId = selectedEvent.Id)\n                        select cc);\n\n        comboBoxAdminName.DataSource = visitors;\n        comboBoxAdminName.DisplayMember = "Name";\n    }\n}
2000	RedColorYouWant = Offset * 0D + (1 - Offset) * 6F\nGreenColorYouWant = Offset * 00 + (1 - Offset) * FD\nBlueColorYouWant = Offset * F9 + (1 - Offset) * FD
2001	net start
2002	DataTable dt = new DataTable();\n        dt.Columns.Add("FirstName");\n        dt.Columns.Add("Age");\n\n        dt.Rows.Add("rambo", 60);\n        dt.Rows.Add("Arnie", 35);\n        bindingSource1.DataSource = dt;\n        gridControl1.DataSource = bindingSource1;\n        gridView1.RefreshData();\n\n        gridView1.Columns.Add(\n            new DevExpress.XtraGrid.Columns.GridColumn()\n            {\n                Caption = "Selected",\n                ColumnEdit = new RepositoryItemCheckEdit() { },\n                VisibleIndex = 0,\n                UnboundType = DevExpress.Data.UnboundColumnType.Boolean\n            }\n            );
2003	var app = Application.Current;
2004	public class FooWrapper<T1, T2>\n  {\n     public Foo<Bar<T1, T2>> FooObj;\n\n     public FooWrapper()\n     {\n        FooObj = new Foo<Bar<T1, T2>>();\n     }\n\n     public class Foo<T> : IFoo<T1, T2> where T : Bar<T1, T2>\n     {\n        // ...\n        public void Baz() \n        {\n           Type t1 = typeof(T1);\n           Type t2 = typeof(T2);\n        }\n     }\n  }
2005	return (T)_values[value];
2006	Expression<Func<T,object>> original = // ... something\nExpression<Func<T,TResult>> converted = Expression.Lambda<Func<T,TResult>>(\n        Expression.Convert(original.Body,typeof(TResult)), \n        original.Parameters);
2007	var checksum = memStream\n    .GetBuffer() // Get the underlying byte array\n    .Skip(1)     // Skip the first byte\n    .Take(memStream.Length-3) // One for the beginning, two more for the end\n    .Aggregate(0, (p,v) => p ^ v); // XOR the accumulated value and the next byte
2008	static void Main(string[] args)\n    {\n        using (TextWriter streamWriter = new StreamWriter("lineLimit.txt")) {\n            String s=String.Empty;\n            for(int i=0;i<1025;i++){\n                s+= i.ToString().Substring(0,1);\n            }\n            streamWriter.Write(s);\n            streamWriter.Close();\n        }\n        using (TextReader streamReader = new StreamReader("lineLimit.txt"))\n        {\n            String s = streamReader.ReadToEnd();\n            streamReader.Close();\n            Console.Out.Write(s.Length);\n        }\n    }
2009	public byte[] GetJPGFromImageControl(BitmapImage imageC)\n{\n    MemoryStream memStream = new MemoryStream();\n    JpegBitmapEncoder encoder = new JpegBitmapEncoder();\n    encoder.Frames.Add(BitmapFrame.Create(imageC));\n    encoder.Save(memStream);\n    return memStream.GetBuffer();\n}
2010	IQueryable<T>
2011	ID       userID     permissionID\n------   -------    -------------\n1        4711       15\n2        4711       23\n3        4743       15\n4        4711       36
2012	private int[] xLoc = {0,70,140,210,280,350,420};\n   private int k = 0;\n\n private void panel1_Click(object sender, EventArgs e)\n    {\n\n        int yLoc = 50;\n        foreach (MusKey mk in this.panel2.Controls)\n        {\n            if (sender == mk)\n            {\n\n                textBox1.Text = "Key No. " + mk.musicNote.ToString() + " pressed";\n                MusicNote musNote = new MusicNote(mk.musicNote,"Crotchet.bmp");\n                musNote.PlaySound();\n                this.panel3.Controls.Add(musNote);\n                musNote.ShowNote("", xLoc[k], yLoc); \n                k=k>=xLoc.Length-1? xLoc.Length:k++; // so that k does not point to non existent location\n                textBox2.Text = Convert.ToString(k); //Done for testing.. too see if k      is incrementing....\n                musNote.BringToFront();\n            } \n        } \n    }
2013	dataGridView1.Columns["Old Column Name"].HeaderText = "New Grid Column Name";\n\n                                  or\n\n dataGridView1.Columns[column_index].HeaderText = "New Grid Column Name";
2014	protected override void OnCreateControl()\n  {\n     base.OnCreateControl();\n     if (Items.Count == 0)\n     {\n        Items.Add("Product 1");\n        Items.Add("Product 2");\n     }\n  }
2015	public class WebServiceController : ApiController\n{\n    [HttpGet]\n    [Route("api/WebService")]\n    public IHttpActionResult Post(MyRequest request)\n    { \n        //work\n        return StatusCode(HttpStatusCode.OK);\n    }\n}\n\npublic class MyRequest\n{\n    public string FirstName { get; set; }\n    public string Surname { get; set; }\n}
2016	string path = System.IO.Path.Combine(@"F:\", textBox1.Text + ".txt");\n  System.IO.File.WriteAllLines(path, contents);
2017	public Func<double> ReturnExpression(Func<double> a, Func<double> b)\n        {\n            return () => a() * b();\n        }
2018	listof.Select(c => c.surename).ToArray();
2019	String[] test = { "1", "2" };\nobject o = test;\n\nif (o is string[])\n{\n   Console.WriteLine("this is string array");\n}
2020	partial class Window2 : Window\n{\n    ...\n    private Window1 _otherWindow;\n    private void OnClick(object sender, RoutedEventArgs e)\n    {\n        _otherWindow.image.Visibility = Visibility.Collapsed;\n    }\n}
2021	public MyDestinationType(MySourceType source)\n{\n    Mapper.Map<MySourceType, MyDestinationType>(source, this);\n}
2022	string fileSpec = @"C:\Temp\TestData-Original.xlsx";\n\n    var wb = new XLWorkbook(fileSpec);\n    var ws = wb.Worksheet("Sheet1");\n\n    MessageBox.Show(ws.RowCount().ToString());
2023	[TestMethod]\npublic void MyIntegratonTestLikeUnitTest()\n{\n    AssertScenarioA();\n\n    AssertScenarioB();\n\n    ....\n}\n\nprivate void AssertScenarioA()\n{\n     // Assert\n}\n\nprivate void AssertScenarioB()\n{\n     // Assert\n}
2024	[DllImport("gatewayapi.dll", CharSet = CharSet.Ansi)]\n    static extern IntPtr AMTgetLocks(string password);\n    public RECORD[] GetLocks(string password)\n    {\n        var channels = new RECORD[MAXCHANS + 1];\n        try\n        {\n            var c = AMTgetLocks(password);\n            var crSize = Marshal.SizeOf(typeof(RECORD));\n            for (int i = 0; i < MAXCHANS + 1; i++)\n            {\n                channels[i] = (CHANNELRECORD)Marshal.PtrToStructure(c, typeof(RECORD));\n                c = new IntPtr(c.ToInt64() + crSize);\n            }\n        }\n        catch (Exception)\n        {\n            throw new Exception();\n        }\n        if (channels.Length == 0)\n        {\n            throw new Exception();\n        }\n        return channels;\n    }
2025	public class ChildOne : Parent\n{\n    public new int PropertyOne  // No Compiler Error\n    {\n        get { return base.PropertyOne; }\n        set { base.PropertyOne = value; }\n    }\n    // PropertyTwo is not available to users of ChildOne\n}\n\npublic class ChildTwo : Parent\n{\n    // PropertyOne is not available to users of ChildTwo\n    public new int PropertyTwo\n    {\n        get { return base.PropertyTwo; }\n        set { base.PropertyTwo = value; }\n    }\n}
2026	myImageImage.ImageUrl = "data:image/jpeg;base64," + Convert.ToBase64String(myImage.Jpeg);
2027	Db.Templates.Add(newItem);\nforeach (var record in variable.Where(record => record.Name == newItem.Name))\n    {\n         record.Templates.Add(newItem);\n    }\n\n}\nDb.SaveChanges();
2028	DateTime.Now
2029	public Task<HttpResponseMessage> PostFile() \n{ \n    HttpRequestMessage request = this.Request; \n    if (!request.Content.IsMimeMultipartContent()) \n    { \n        throw new HttpResponseException(HttpStatusCode.UnsupportedMediaType); \n    } \n\n    string root = System.Web.HttpContext.Current.Server.MapPath("~/App_Data/uploads"); \n    var provider = new MultipartFormDataStreamProvider(root); \n\n    var task = request.Content.ReadAsMultipartAsync(provider). \n        ContinueWith<HttpResponseMessage>(o => \n    { \n\n        string file1 = provider.BodyPartFileNames.First().Value;\n        // this is the file name on the server where the file was saved \n\n        return new HttpResponseMessage() \n        { \n            Content = new StringContent("File uploaded.") \n        }; \n    } \n    ); \n    return task; \n}
2030	// I use this static method to make it faster.\nprivate static Regex oClearHtmlScript = new Regex(@"<(.|\n)*?>", RegexOptions.Compiled);\n\npublic static string RemoveAllHTMLTags(string sHtml)\n{\n    if (string.IsNullOrEmpty(sHtml))\n         return string.Empty;\n\n    return oClearHtmlScript.Replace(sHtml, string.Empty);\n}
2031	using System;\nusing System.Text;\n\nclass Program {\n  static void Main(string[] args) {\n    string input = "??????";\n    Console.WriteLine(EncodeTwit(input));\n    Console.ReadLine();\n  }\n  public static string EncodeTwit(string txt) {\n    var enc = Encoding.GetEncoding("iso-2022-jp");\n    byte[] bytes = enc.GetBytes(txt);\n    char[] chars = new char[(bytes.Length * 3 + 1) / 2];\n    int len = Convert.ToBase64CharArray(bytes, 0, bytes.Length, chars, 0);\n    return "=?ISO-2022-JP?B?" + new string(chars, 0, len) + "?=";\n  }\n}
2032	var myEvidence = new Evidence(new object[] {SecurityZone.Internet});\nvar newDomain = AppDomain.CreateDomain("InternetDomain");\nmyDomain.Load("MyUntrustedAssembly.dll", myEvidence);\nmyDomain.CreateInstanceAndUnwrap("MyUntrustedAssembly","MyUntrustedObjectType");\n\n//do your work with the untrusted assembly/type\n\nAppDomain.Unload(myDomain);
2033	associativeEntity[] AdditionalAttributes = new associativeEntity[2];\n                associativeEntity isMemoAdditionalAttribute = new associativeEntity();\n                associativeEntity aaaAdditionalAttribute = new associativeEntity();\n\n      // 1st Attribute\n                    isMemoAdditionalAttribute.key = "is_memo";\n                    isMemoAdditionalAttribute.value = "1";\n                    AdditionalAttributes[0] = isMemoAdditionalAttribute;\n    // 2nd attribute\n                aaaAdditionalAttribute.key = "attrib2";\n                aaaAdditionalAttribute.value = "testvalue";\n\n                AdditionalAttributes[1] = aaaAdditionalAttribute;\n\n>    catalogProductAdditionalAttributesEntity AdditionalAttributesEntity = new catalogProductAdditionalAttributesEntity();\n                AdditionalAttributesEntity.single_data = AdditionalAttributes;// for setting single attribute\n\n\n                mageProduct.additional_attributes = AdditionalAttributesEntity;
2034	// Get values from the text boxes\ndecimal up = Convert.ToDecimal(unitprice.Text);\ndecimal calories = Convert.ToDecimal(gizlikalori.Text);\ndecimal tot, totCalories;\n\n// Do the calculation\nif (pepper.Checked) {\n    up = up + pepperprice;\n    calories = calories + pepperkalori;\n}\ntot = up * numberofunit.Value;\ntotCalories = calories * numberofunit.Value;\n\n// Assign the results to text boxes\nunitprice.Text = up.ToString();\ntotal.Text = tot.ToString();\ngizlikalori.Text = calories.ToString();\namountofcalorie.Text = totCalories.ToString();
2035	var grouped = SomeList.GroupBy(item => item.Bar)\n                      .OrderBy(gr=>gr.Key);\n\n\nforeach (var item in grouped)\n{\n    // item has a Key property associated with the value of Bar\n    // You can take the list of Foo by simply calling this\n    // item.ToList() and then you can process this.\n}
2036	public IntExp GetExpression(int value)\n{\n    return GetIntExp(value);\n}\n\npublic StringExp GetExpression(string value)\n{\n    return GetStringExp(value);\n}
2037	var exp = from log in db.Places\n                      where log.IsActive==true\n                      select new\n                          {\n                              logId= log.Id,,\n                              experiences = from exp in log.Experiences \n                                         where(log1.LanguageId==1)\n                                         select new\n                                             {\n                                                 id=log1.Id,\n                                                 title=log1.Title\n                                             }\n                          };
2038	public void ProcessRequest(HttpContext context)\n        {\n            Byte[] yourImage = //get your image byte array\n            context.Response.BinaryWrite(yourImage);\n            context.Request.ContentType = "image/jpeg";\n            context.Response.AddHeader("Content-Type", "image/jpeg");\n            context.Response.AddHeader("Content-Length", (yourImage).LongLength.ToString());\n            con.Close();\n\n            context.Response.End();\n            context.Response.Close();\n        }
2039	File.Delete
2040	public void TestMethod()\n{\n    DataTemplate dt = FlipView5Horizontal.ItemTemplate;\n    DependencyObject dio = dt.LoadContent();\n    foreach (var timeLine in FindVisualChildren<TextBlock>(dio)) //FindVisualTree is defined in the question :)\n    {\n        if (timeLine.Name == "xxxTB")\n        { }\n    }\n}
2041	private const int MAX_DISPLAYLENGTH_IN_LIST = 25;
2042	TreeView.Nodes.Insert(0, ...)
2043	public object GetDefaultValue(Type t)\n{\n    if (t.IsValueType) {\n        return Activator.CreateInstance(t);\n    } else {\n        return null;\n}
2044	foreach(AClass i in AClassCollection) \n   { \n      AClass anotherI= i;\n      listOfLambdaFunctions.AddLast(  () =>  {  PrintLine(anotherI.name); }  ); \n   }
2045	//smtp.Port = 465;\n //smtp.EnableSsl = true;
2046	Array[] array = new Array[dataGrid.SelectedItems.Count];\n\ndataGrid.SelectedItems.CopyTo(array,0);\n\nasyncUpload.BeginInvoke(array.ToList(), out tt, new AsyncCallback(test), null);
2047	for (int i = 0; i < 4; i++)\n        {\n            Guid g = Guid.NewGuid();\n\n            s.Children.Add(new ComboBox()\n            {\n                Tag = g\n            });\n\n            s.Children.Add(new Label()\n            {\n                Tag = g\n            });\n        }
2048	bool equal = collection1.SequenceEqual(collection2);
2049	private void dataGridView1_SelectionChanged(object sender, EventArgs e)\n    {\n        if (dataGridView1.SelectedRows.Count > 2)\n        {\n            for (int i = 2; i < dataGridView1.SelectedRows.Count; i++)\n            {\n                dataGridView1.SelectedRows[i].Selected = false;\n\n            }\n        }\n    }
2050	YourProject/bin/Debug/YourProject.dll\nYourProject/bin/Release/YourProject.dll
2051	manager.Employees[0]
2052	properties-events
2053	[STAThread]\nstatic void Main() \n{\n   using(Mutex mutex = new Mutex(false, "Global\\" + appGuid))\n   {\n      if(!mutex.WaitOne(0, false))\n      {\n         MessageBox.Show("Instance already running");\n         return;\n      }\n\n      Application.Run(new Form1());\n   }\n}
2054	string value = Interaction.InputBox("Enter Array size", "Enter Array size");\nint array = 0;\nif (int.TryParse(value, out array))\n{\n    int[] size = new int[array];\n    txtOutput.Text = "Numbers: " + "\r\n";\n\n    for (int i = 0; i < size.Length; i++)\n    {\n        string prompt = Interaction.InputBox("Enter values" + (i + 1), "Enter values");\n        int num = 0;\n        if (int.TryParse(prompt, out num))\n        {\n            size[i] = num;\n            txtOutput.Text += size[i] + "\t";\n        }\n    }\n}
2055	public void OnTagsReported()\n{\n  if (dgvScanResult.InvokeRequired)\n  {\n    dgvScanResult.Invoke(new MethodInvoker(OnTagsReported), null);\n    return;\n  }\n\n  for( var i = dgvScanResult.Rows.Count - 1; i >= 0; i-- )\n  {\n    var row = dgvScan.Rows[ i ];\n    ...\n  }  \n  ...\n}
2056	// get FlowDocument object\nvar uri = new Uri("/Documents/SamplePDF.xaml", UriKind.Relative);\n\nFlowDocument doc = App.LoadComponent(uri) as FlowDocument;\n\n\n// create TextRange representation of the FlowDocument\nvar content = new TextRange(doc.ContentStart, doc.ContentEnd);\n\nif (content.CanSave(DataFormats.Rtf))\n{\n    using (var stream = new FileStream(@"C:\Path\To\file.rtf", FileMode.OpenOrCreate))\n    {\n        // save it\n        content.Save(stream, DataFormats.Rtf);\n    }\n}
2057	SqlParameter[] myparm = new SqlParameter[2];\nmyparm[0] = new SqlParameter("@User",user);\nmyparm[1] = new SqlParameter("@Pass",password);\n\nstring comando = "SELECT * FROM ANAGRAFICA WHERE E_MAIL=@User AND PASSWORD_AZIENDA=@Pass";
2058	private void button1_Click(object sender, EventArgs e)\n{\n    String[] r1 = MyParser("my text 1 (Sample Text1) (9874) (1478) ");\n    String[] r2 = MyParser("Thing1 : my text 2 (Text2) (98631)");\n    String[] r3 = MyParser("This is a other Sample : mqlsdjflkj (1478) "); \n}\n\nstring[] MyParser(String Input)\n{\n    String[] RawResult;\n\n    RawResult = Input.Split(new char[] {'(', ')'},  StringSplitOptions.RemoveEmptyEntries );\n\n    List<string> Results = new List<string>();\n\n    foreach(String S in RawResult)\n    {\n        if (String.IsNullOrWhiteSpace(S) == false)\n            Results.Add(S.Trim());\n    }          \n\n    return Results.ToArray();\n}
2059	if (treeView1.SelectedNode != null) {\n  if (treeView1.SelectedNode.Parent == null) {\n    treeView1.Nodes.Remove(treeView1.SelectedNode);\n  } else {\n    treeView1.SelectedNode.Parent.Nodes.Remove(treeView1.SelectedNode);\n  }\n}
2060	private void timer1_Tick(object sender, EventArgs e)  \n    {  \n        if (port.IsOpen)  \n        {\n           string s = port.ReadExisting();\n\n               if (s.Contains("\r\nRING\r\n"))\n               {\n                   incall_status.Text = "Incoming Call....";\n                   incall_status.Visible = true;\n               }\n               else if (s.Contains("\r\nNO CARRIER\r\n"))\n               {\n                   incall_status.Text = "Call Disconnected";\n                   bgwrkr_calldisconect.RunWorkerAsync();\n               }\n\n        }\n    }
2061	public static bool IsKeyAChar(Keys key)\n{\n    return key >= Keys.A && key <= Keys.Z;\n}\n\npublic static bool IsKeyADigit(Keys key)\n{\n    return (key >= Keys.D0 && key <= Keys.D9) || (key >= Keys.NumPad0 && key <= Keys.NumPad9);\n}
2062	Console.CancelKeyPress
2063	lbl_users.DataSource = users;\nlbl_users.DataValueField = "userID";\nlbl_users.DataTextField = "name";\nlbl_users.DataBind();
2064	int sum=0;\n  private void TextBox_TextChanged(object sender, TextChangedEventArgs e)\n  {\n     sum = sum + Convert.ToInt32(_1.Text);\n     Add.Text = sum.ToString();\n  }\n  private void TextBox_TextChanged_1(object sender, TextChangedEventArgs e)\n  {\n      sum = sum + Convert.ToInt32(_2.Text);\n      Add.Text = sum.ToString();\n  }
2065	XElement root = XElement.Load("file.xml");\n\n// look for a File1\nvar file1 = root.Descendants()\n    .Where(elem => elem.Attribute("Name").Value == "File1")\n    .Single();\n\n// go 2 levels back\nvar mainFolder = file1.Parent.Parent;\n\n// display each folder\nforeach (var folder in mainFolder.Elements())\n{\n    Console.WriteLine(folder.Attribute("Name").Value);\n\n    // display each file\n    foreach (var file in folder.Elements())\n    {\n        Console.WriteLine("  " + file.Attribute("Name").Value);\n    }\n    Console.WriteLine();\n}
2066	_context.Database.ExecuteSqlCommand("spGetSchedule @theDate, @teamId",\n    new SqlParameter("@theDate", DateTime.Now.Date),\n    new SqlParameter("@teamId", teamId));\n    spGetSchedule @theDate, @teamId.
2067	system.web
2068	switch (personType)\n{\n    case 1: {\n        Employee emp = new Employee();\n        emp.ExperienceInfo();\n        break;\n    }\n    case 2: {\n        Employee emp = new Employee(); \n        // No longer an error; now 'emp' is local to this case.\n        emp.ManagementInfo();\n        break;\n    }\n    case 3: {\n        Student st = new Student();\n        st.EducationInfo();\n        break;\n    }\n    ...\n}
2069	for each pixel\n    if pixel is not green\n        pixel <- black
2070	// You can use replace windows authentication with any user credentials who has proper permissions.\nusing (SqlConnection connection = new SqlConnection(@"server=(local);database=master;Integrated Security=SSPI"))\n{\n    connection.Open();\n\n    using (SqlCommand command = connection.CreateCommand())\n    {\n        command.CommandText = "CREATE DATABASE [XYZ]";\n        command.ExecuteNonQuery();\n    }\n}\n\n// Quering the XYZ database created\nusing (SqlConnection connection = new SqlConnection(@"server=(local);database=XYZ;Integrated Security=SSPI"))\n{\n    connection.Open();\n\n    using (SqlCommand command = connection.CreateCommand())\n    {\n        command.CommandText = "select * from sys.objects";\n        ...\n    }\n}
2071	public partial class myLinqClass {\n   public string fullFilePath {\n      get { return this.filepath + this.filename; } //clean this up as appropriate\n   }\n}
2072	UserControl1.xaml <-- move here\n\n   UserControl2.xaml <-- move here
2073	private DataSet FilterData()\n    {\n        DataSet filteredData = new DataSet("FilteredData");\n        DataView viewAccount = new DataView(global65DataSet.SET_ACCOUNT_TABLE);\n        viewAccount.Sort = "Number ASC";\n        viewAccount.RowFilter = " Number >= '" + beginningAcct+"' AND Number <= '" + endAcct + "' ";\n\n        DataView viewTrans = new DataView(global65DataSet.SET_TRANSACTION_TABLE);\n        viewTrans.Sort = "Transaction_ID ASC, DateTime ASC";\n        viewTrans.RowFilter = " DateTime >= '" + beginningDate.ToShortDateString() + "' AND DateTime <= '" +\n                              endDate.ToShortDateString() + "'";\n\n        filteredData.Tables.Add(viewAccount.ToTable());\n        filteredData.Tables.Add(viewTrans.ToTable());\n        filteredData.Tables[0].TableName = "SET_ACCOUNT_TABLE";\n        filteredData.Tables[1].TableName = "SET_TRANSACTION_TABLE";\n\n        return filteredData;\n    }
2074	DateTime dateBase = DateTime.Parse(odDate);\nforeach (DataGridViewRow row in dataGridView1.Rows)\n{\n    DateTime dateRow = DateTime.Parse(row.Cells[0].Value.ToString());\n    row.Visible = (dateRow >= dateBase);\n}
2075	for(int i =0; i <person_list.Count; i++)\n{\n  string name =  person_list[i].FirstName;\n  string email =  person_list[i].Email;\n  string daysLeft =  person_list[i].DaysLeft;\n}
2076	System.IO.Path.Combine
2077	string myFileName = @"c:\temp\sample.docx";\n\n        using (WebClient wc = new WebClient())\n        {\n            wc.Proxy = null;\n            wc.DownloadFile("http://urlhere/Test.docx", myFileName);\n        }
2078	// Returns the node with the first hit, or null if none\n    public TreeNode Search(TreeView treeView, string text)\n    { \n        return SearchNodes(treeView.Nodes, text);\n    }\n\n    // Recursive text search depth-first.\n    private TreeNode SearchNodes(TreeNodeCollection nodes, string text)\n    {\n        foreach (TreeNode node in nodes)\n        {\n            if (node.Text.Contains(text)) return node;\n            var subSearchHit = SearchNodes(node.Nodes, text);\n            if (subSearchHit != null) return subSearchHit;\n        }\n        return null;\n    }
2079	myexternalexe.StartInfo.Arguments = @"comments ""\\192.168.1.1\a\here is the problem\c\d\""";
2080	[DllImport("user32.dll", CharSet=CharSet.Unicode, SetLastError=true)]\npublic static extern int DrawTextExW( HandleRef hDC\n                                     ,string lpszString\n                                     ,int nCount\n                                     ,ref RECT lpRect\n                                     ,int nFormat\n                                     ,[In, Out] DRAWTEXTPARAMS lpDTParams);\n\n[StructLayout(LayoutKind.Sequential)]\npublic struct RECT\n {\n   public int left;\n   public int top;\n   public int right;\n   public int bottom;\n }\n\n[StructLayout(LayoutKind.Sequential)]\npublic class DRAWTEXTPARAMS\n{\n  public int iTabLength;\n  public int iLeftMargin;\n  public int iRightMargin;\n  public int uiLengthDrawn;\n}
2081	public static byte[] StringToAscii(string s) {\n        byte[] retval = new byte[s.Length];\n        for (int ix = 0; ix < s.Length; ++ix) {\n            char ch = s[ix];\n            if (ch <= 0x7f) retval[ix] = (byte)ch;\n            else retval[ix] = (byte)'?';\n        }\n        return retval;\n    }
2082	foreach(ICodec codec in file.Properties.Codecs) {\n    Mpeg.AudioHeader header = (Mpeg.AudioHeader) codec;\n    if(header == null)\n        return;\n\n    if(header.XingHeader != Mpeg.XingHeader.Unknown) {\n        /* CODE HERE */\n    }\n\n    if(header.VBRIHeader != VBRIHeader.Unknown) {\n        /* CODE HERE */\n    }\n}
2083	config.Routes.MapHttpRoute(\n    name: "Sample",\n    routeTemplate: "{sessionId}/{controller}"\n );\n\nconfig.MapODataServiceRoute(\n    routeName: "HSODataRoute",\n    routePrefix: "{sessionId}/",\n    model: GetEdmModel());
2084	var l = list.Split(' ').Skip(1);
2085	[DllImport("coredll.dll")]\n        static extern bool SetForegroundWindow (IntPtr hWnd);\n\n         private void BringToFront(Process pTemp)\n         {\n           SetForegroundWindow(pTemp.MainWindowHandle);\n         }
2086	richTextBox1.Text = reader.GetString(0)
2087	... from r in DataItems.Include(di => di.Business.Businessunit.Level1) ...
2088	private void Form1_Load(object sender, EventArgs e)\n{\n        DataSet DSg = ACC_Data.Get_DT(File_Path.Text.ToString());\n\n        var t = new DataTable(); \n        for (int c = 0; c < DSg.Tables[0].Columns.Count; c++) t.Columns.Add();\n\n        for (int r = 0; r < DSg.Tables[0].Rows.Count; r++)\n        {\n            string[] Dr = new string[DSg.Tables[0].Columns.Count];\n            int i = 0;\n\n            foreach (DataColumn C in DSg.Tables[0].Columns)\n            {\n               Dr[i] = DSg.Tables[0].Rows[r][C].ToString();\n               i++;\n            }\n\n            var row = t.Rows.Add(Dr);\n        }\n\n        dataGridView1.DataSource = t;\n\n}
2089	protected void Step03SubmitButton_Click(object sender, EventArgs e)\n{\n  List<string> selections = Session["Step02Services"] as List<string>;\n\n  if (selections != null) {\n    if (selections.Contains("Site content uploading") || selections.Contains("Site content & layout checking")) {\n      Response.Redirect("/YourConfirmationPage.aspx");\n    } else {\n      Response.Redirect("/Step04.aspx");\n    }\n  }\n}
2090	var aspxmemo1 = "php;visual basic;c#";\n\nvar aspxmemo2 = "visual basic;javascript";\n\nvar collection1 = aspxmemo1.Split(';');\nvar collection2 = aspxmemo2.Split(';');\n\nif (collection1.Intersect(collection2).Any())\n{\n      //Do Something\n}\n\n//Or iterate over the duplicate memo's (you get the point)\n foreach(var item in collection1.Intersect(collection2))\n {\n       Console.WriteLine(item + " occured in both collections!");\n }
2091	public class NameComparer : IEqualityComparer<FileInfo>\n{\n   public bool Equals(FileInfo x, FileInfo y)\n   {\n      if (x == y)\n      {\n         return true;\n      }\n\n      if (x == null || y == null)\n      {\n         return false;\n      }\n\n      return string.Equals(x.Name, y.Name, StringComparison.OrdinalIgnoreCase);\n   }\n\n   public int GetHashCode (FileInfo obj)\n   {\n      return obj.Name.GetHashCode ();\n   }\n}
2092	public class GenericRepository<T> : where T : class\n {\n    internal YourConext context;\n    internal DbSet<T> dbSet;\n\n    public GenericRepository(YourContext context)\n    {\n        this.context = context;\n        this.dbSet = context.Set<T>();\n    }\n\n    public virtual void Insert(T entity)\n    {\n        dbSet.Add(entity);\n        context.SaveChanges();\n    }\n\n  }
2093	var one = new[] {"One", "Two"};\nvar two = new[] {"One", "Two"};\nvar three = new[] {"One", "Three"};\n\nList<string[]> list = new List<string[]>(){one, two, three};\n\n\nvar i = list.Select(l => new {Key = String.Join("|", l), Values = l})\n    .GroupBy(l => l.Key)\n    .Select(l => l.First().Values)\n    .ToArray();
2094	public class TestEntity : Entity\n{\n    public virtual uint Unsigned { get; set; }\n    public virtual ushort UnsignedShort { get; set; }\n}\n\npublic class TestEntityMap : ClassMap<TestEntity>\n{\n    public TestEntityMap()\n    {\n        Map( x => x.Unsigned ).CustomSqlType( "bigint" );\n        Map( x => x.UnsignedShort ).CustomSqlType( "int" );\n    }\n}
2095	var linkButton = ContentPlaceHolder1.FindControl("contentPageButton1") as LinkButton;\nlinkButton.Text = "Foo";
2096	mySerial.println(temperature);
2097	while (PeulaRashit())\n{\n    //your code\n}
2098	using (StreamReader sr = new StreamReader("C:\\Users\\Donavon\\Desktop\\old.sql"))\n        {\n            int i =0;\n            string text = "";\n            do\n            {\n                i++;\n                string line = sr.ReadLine();\n                if (line != "")\n                {\n                    line = line.Replace("('',", "('" + i + "',");\n                    text = text + line + Environment.NewLine;\n                }\n\n            } while (sr.EndOfStream == false);\n        }\n        File.WriteAllText("C:\\Users\\Donavon\\Desktop\\new.sql", text);
2099	System.Collections.IEnumerable temp = yourGrid.ItemsSource;\n yourGrid.ItemsSource = null;\n yourGrid.ItemsSource = temp;
2100	Connect()
2101	/// <summary>\n/// Processes Windows messages.\n/// </summary>\n/// <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>\n[SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.UnmanagedCode)]\nprotected override void WndProc(ref Message m) {\n    if (m.Msg == (NativeMethods.WM_COMMAND + NativeMethods.WM_REFLECT) && NativeMethods.HIWORD(m.WParam) == NativeMethods.CBN_DROPDOWN) {\n        // Wout: changed this to use BeginInvoke instead of calling ShowDropDown directly.\n        // When calling directly, the Control doesn't receive focus.\n        BeginInvoke(new MethodInvoker(ShowDropDown));\n        return;\n    }\n    base.WndProc(ref m);\n}
2102	string[] names = Enum.GetNames(typeof(Fruits));
2103	// List<Tuple<int, double>>\nvar list1 = multiValueList.Select(t=>Tuple.Create(t.Item1, t.Item2)).ToList();\n\n// List<string>\nvar list2 = multiValueList.Select(t=>t.Item3).ToList();
2104	private void ModifyTable(DataTable toModify)\n    { //Add a column to sort by later. \n        DataColumn col = toModify.Columns.Add("DummySort", typeof(int));\n        col.DefaultValue = 0;\n    }\n    private void SetDummyColumnValue(DataRow dr, int value)\n    { //Mark the columns you want to sort to bring to the top. \n        //Give values bigger than 0! \n        dr["DummySort"] = value;\n    }\n    private DataTable GetSortedTable(DataTable modifiedTable)\n    {\n        //Sort by the column from bigger to smaller \n        DataView dv = new DataView(modifiedTable);\n        dv.Sort = "DummySort DESC"; return dv.ToTable();\n    }
2105	private void RemoveOldLabels()\n  {\n    List<Label> LabelsToRemove = new List<Label>();\n\n    foreach (var x in this.picNodes.Controls)\n    {\n        if (x.GetType() == typeof(System.Windows.Forms.Label))\n        {\n            LabelsToRemove.Add((Label)x);\n        }\n    }\n\n    foreach (var label in LabelsToRemove)\n    {\n        this.picNodes.Controls.Remove(label);\n        label.Dispose();\n    }\n  }
2106	XmlDocument xDoc = new XmlDocument();\n        string path = Directory.GetCurrentDirectory();\n        foreach (string file in Directory.EnumerateFiles(path, "*.xml"))\n        {\n          xDoc.Load(System.IO.Path.Combine(System.IO.Directory.GetCurrentDirectory(), file));\n          string strpath = xDoc.BaseURI;\n        }
2107	public partial class MainPage : PhoneApplicationPage\n{\n    // Constructor\n    public MainPage()\n    {\n        InitializeComponent();\n\n        People.Loaded += People_Loaded;\n    }\n\n    void People_Loaded(object sender, System.Windows.RoutedEventArgs e)\n    {\n        for (int i = 0; i < People.Items.Count; i++)\n        {\n            var container = People.ItemContainerGenerator.ContainerFromIndex(i);\n            container.SetValue(SlideInEffect.LineIndexProperty, i);\n        }\n    }\n}
2108	StorageFile file;\nStorageFolder InstallationFolder = Windows.ApplicationModel.Package.Current.InstalledLocation;      \n\nstring filePath = @"Assets\dock.jpg";\nfile = await InstallationFolder.GetFileAsync(filePath);\nIRandomAccessStream dockpic = await file.OpenAsync(0);\nBitmapImage dockimage = new BitmapImage();\ndockimage.SetSource(dockpic);\n\nRectangle blueRectangle = new Rectangle();\nblueRectangle.Height = 100;\nblueRectangle.Width = 200;\n// Create an ImageBrush\nImageBrush imgBrush = new ImageBrush();\nimgBrush.ImageSource = dockimage;\n\n// Fill rectangle with an ImageBrush\nblueRectangle.Fill = imgBrush;\npaintCanvas.Children.Add(blueRectangle);
2109	var dt = new DataTable();\n... set up dt ...\npar = new SqlParameter("@TemplatesIds", SqlDbType.Structured, dt)
2110	var integers = Enum.GetValues(typeof(Status))\n                   .Cast<Status>()\n                   .Where(status => status.ToString().Contains("InStock"))\n                   .Select(status => (int) status);
2111	switch (variable) {\n  case "OneMethod": OneMethod(); break;\n  case "OtherMethod": OtherMethod(); break;\n}
2112	MgProcess.CorProcess.Stop(0);\n  MgProcess.Detach();
2113	var values = gvtest.Rows.Cast<GridViewRow>().Select(x => x.Cells[0].Text);\nvar sector1 = values.Count(x => Convert.ToInt32(x) >= 0 && Convert.ToInt32(x) < 30);
2114	public void LoadPageFromDisk(string filePath)\n{\n    Uri targetPage = null;\n\n    string workingPageURI = filePath.Trim();\n\n    workingPageURI = Path.GetFullPath(workingPageURI);\n\n    if (Uri.TryCreate(workingPageURI, UriKind.RelativeOrAbsolute, out targetPage) == true)\n    {\n\n        webBrowserControl.Navigate(targetPage);\n    }\n\n}
2115	public static MyInterfaceExtensions\n{\n    public T Create<T>(this IMyInterface target)  \n    {\n        return (T) target.Create(typeof(T)); \n    }\n}
2116	var productCategory = await db.ProductCategories.Include(p => p.Categories.Select(c => c.Products)).FirstOrDefaultAsync(category => category.Id == Id);
2117	private static int FindStudentPosition(string name, string[] array)\n{\n    int intLocation = -1;\n    //loops through all array elements\n    for (int i = 0; i < array.Length; i++; )\n    {\n        //checks if array element matches name\n        if (array[i] == name)\n        {\n            //displays message and stores position in intLocation\n            Console.WriteLine("Matches Name " + i);\n            intLocation = i;\n            break; // break when match found\n        }    \n    }\n    return intLocation;\n}
2118	static Expression<Func<T, bool>> BuildWhere<T>(int deviceId) {\n    var id = Expression.Constant(deviceId, typeof(int));\n    var arg = Expression.Parameter(typeof(T), "x");\n    var prop = Expression.Property(arg, "DeviceId");\n    return Expression.Lambda<Func<T, bool>>(\n        Expression.Equal(prop, id), arg);\n}
2119	([\S\s]*\"])\"UDF5\" : \"[\S\s]*?\",([\S\s]*)
2120	protected override void OnLoad(EventArgs e)\n{\n    base.OnLoad(e);\n   // prevents form from being submitted multiple times in MOST cases\n   // programatic client-side calls to __doPostBack() can bypass this\n    Page.ClientScript.RegisterOnSubmitStatement(GetType(), "ServerForm",\n    "if (this.submitted) return false; this.submitted = true; return true;");\n}
2121	string input = "A01+B02+C03+D04+E05+F06+G07+H08+I09+J10+K11+L12+M13+N14+O15+P16";\n\nstring final = string.Join(\n    "+", \n    input\n        .Split('+')\n        .Select( (s, i) => (i>0 && i%4==0) ? " "+ s : s));
2122	[assembly:InternalsVisibleTo("MyVbAssemblyName")]
2123	string s = "Hello";\nSecureString ss = new SecureString();\n\nforeach(char c in s) ss.AppendChar(c);
2124	private void TxtName_Tapped(object sender, TappedRoutedEventArgs e)\n    {\n        clickedElementName = ((TextBlock)sender).Name ;\n        if(clickedElementName == "element1")\n        {\n        }\n    }
2125	DateTime dateValue;\n  string dateString = "2/16/2008 12:15:12 PM";\n  try {\n     dateValue = DateTime.Parse(dateString);\n     Console.WriteLine("'{0}' converted to {1}.", dateString, dateValue);\n  }   \n  catch (FormatException) {\n     Console.WriteLine("Unable to convert '{0}'.", dateString);\n  }
2126	List<ContentType> contentTypes = new List<ContentType>();\n\n//Fill Your List With Names and IDs\n//Eg: contentTypes.Add(new ContentType(0,"Menu")) and so on and so forth then:\n\nforeach (ContentType contentType in contentTypes )\n{\n        _uow.ContentTypes.Add(contentType);\n}
2127	mhpList = new List<MHP>();\n\nmhpList.Add(new MHP\n{\n MHP_Name = something,\n MHP_AC = a number\n});\n\nmhpList[0].MHP_ParId= "Something";
2128	Dictionary<int, string>
2129	public delegate void ReportProgressDelegate(Double ^completionPercentage);
2130	process.StartInfo.Arguments = "-I dummy --dummy-quiet";
2131	Interface IFoo\n{\n   [Required]\n   string Bar {get; set;}\n}\n\nInterface IBar\n{\n   string Bar {get; set;}\n}\n\nClass Foo : IFoo, IBar\n{\n   string Bar {get; set;}\n}
2132	public IQueryable<Clam> getAllClams(int clamTypeID, int? parentClamID)\n{\n     return from clam in Clams\n            where clam.ClamTypeID == clamTypeID &&\n                  object.Equals(clam.ParentClamID, parentClamID)\n            select clam;\n}
2133	public static async string Save(...)\n{\n    //Get all active controllers\n    List<Controller> lstControllers = Controller.Get();\n\n    //Create a task object for each async task\n    List<Task<returnValueType>> controllerTasks = lstControllers.Select(controller=>{\n        DeviceControllerAsync caller = new DeviceControllerAsync(ArubaBL.RegisterDevice);\n        return Task.Factory.FromAsync<returnValueType>(caller.BeginInvoke, caller.EndInvoke, null);\n    }).ToList();\n\n    // wait for tasks to complete (asynchronously using await)\n    await Task.WhenAll(controllerTasks);\n\n    //Do something with the result value from the tasks within controllerTasks\n}
2134	int i = booleans[0]?1:0 \n      + 2*(booleans[1]?1:0)\n      + 4*(booleans[2]?1:0)\n      + 8*(booleans[3]?1:0);\n\nswitch (i)\n{\n   case 0: //false false false false\n   case 1: //true false false false\n   case 2: //false true false false\n   //...\n   case 15: //true true true true\n}
2135	private static Type GetTypeFromHandle(IntPtr handle)\n{\n    var method = typeof(Type).GetMethod("GetTypeFromHandleUnsafe", BindingFlags.Static | BindingFlags.NonPublic);\n    return (Type)method.Invoke(null, new object[] { handle });\n}\n\nprivate static void Main(string[] args)\n{\n    IntPtr handle = typeof(string).TypeHandle.Value;//Obtain handle somehow\n\n    Type type = GetTypeFromHandle(handle);\n}
2136	var lst = new List<int>();\nlst.Sum();
2137	object calcInstance = Activator.CreateInstance(calcType);\nor    \nAssembly testAssembly = Assembly.LoadFile(@"c:\Test.dll");
2138	using System;\nusing System.Text.RegularExpressions;\n\nclass Program\n{\n  static void Main()\n  {\n    string input = "select ceiling(a.interest) as interest, a.myID as mID, a.studentID as sID from mytable";\n    string column = "a.myID";\n    string pattern = "((?<=\\bselect)\\s+[^,]*\\b" + Regex.Escape(column) + "\\b[^,]*\\s*,?|\\s*,\\s*[^,]*\\b" + Regex.Escape(column) + "\\b[^,]*(?=(?:,|\\sfrom\\b)))";\n    string output = Regex.Replace(input, pattern, "", RegexOptions.IgnoreCase);\n    Console.WriteLine(output);\n  }\n}
2139	private string ReadSignature()\n{\n    string appDataDir = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Microsoft\\Signatures";\n    string signature = string.Empty;\n    DirectoryInfo diInfo = new DirectoryInfo(appDataDir);\n\n    if(diInfo.Exists)\n    {\n        FileInfo[] fiSignature = diInfo.GetFiles("*.htm");\n\n        if (fiSignature.Length > 0)\n        {\n            StreamReader sr = new StreamReader(fiSignature[0].FullName, Encoding.Default);\n            signature = sr.ReadToEnd();\n\n            if (!string.IsNullOrEmpty(signature))\n            {\n                string fileName = fiSignature[0].Name.Replace(fiSignature[0].Extension, string.Empty);\n                signature = signature.Replace(fileName + "_files/", appDataDir + "/" + fileName + "_files/");\n            }\n        }\n    }\n        return signature;\n}
2140	private void _txtPath_KeyDown(object sender, KeyEventArgs e)\n  {\n     if ((e.Key < Key.A) || (e.Key > Key.Z))\n        e.Handled = true;\n  }
2141	Web.Webs WebService = new Web.Webs();\n        WebService.Credentials = new NetworkCredential("username", "password");\n        XmlNode list = WebService.GetContentTypes();
2142	var dtableDemo = new DataTable();\ndtableDemo = this.dgvDemo.DataSource as DataTable; //// Getting the datatable of datagridview datasource\nif (dtableDemo != null)\n{\n    dtableDemo.Columns.RemoveAt(0); //// Removing the first column of derived table\n\n    dtableDemo.Rows.Cast<DataRow>().Where(\n               row => row.ItemArray.Contains("put_your_value_to_check")).ToList()\n               .ForEach(row => row.Delete()); //// Remove the row if it contains the given value\n    dtableDemo.AcceptChanges(); //// Finalize the delete\n}
2143	// item type to display in the combobox\npublic class Item\n{\n    public int Id { get; set; }\n    public string Text { get; set; }\n}\n\n// build new list of Items\nvar data = List<Item>\n{\n    new Item{Id = 1, Text = "Item 1"},\n    new Item{Id = 2, Text = "Item 2"},\n    new Item{Id = 3, Text = "Item 3"}\n};\n\n// set databind\ncomboBox1.DataSource = data;\ncomboBox1.ValueMember = "Id";  // the value of a list item should correspond to the items Id property\ncomboBox1.DisplayMember = "Text";  // the displayed text of list item should correspond to the items Id property\n\n// get selected value\nprivate void comboBox1_SelectedIndexChanged(object sender, EventArgs e)\n{\n    var selectedValue = comboBox1.SelectedValue;        \n}
2144	openFileDialog1.Filter = "png files (*.png)|*.png|jpg files (*.jpg)|*.jpg|jpeg files (*.jpeg)|*.jpeg|gif files (*.gif)|*.gif|Image Files(*.png;*.jpg;*.jpeg;*.gif)|*.png;*.jpg;*.jpeg;*.gif";
2145	wspart.Worksheet.Save();\ndocument.WorkbookPart.Workbook.Save();
2146	string Img1, unq1;\nstring filepath = "~/YourFolder/";\nimg1 = System.IO.Path.GetFileName(gridusers.SelectedRow.Cells[2].ImageName);\nunq1 = filepath + img1;
2147	/FileTypeAssociation?fileToken=17B9F681-058D-4B01-B33F-FAFF70760D25
2148	// to display user selection - days is a List<DayOfWeek> as stored by you in database\nforeach(var day in days)\n{\n    ListBoxItem lbi = new ListBoxItem();\n    TextBlock tb = new TextBlock();\n    tb.Text = day.ToString();\n\n    lbi.Content = tb;\n    lbi.VerticalContentAlignment = System.Windows.VerticalAlignment.Center;\n    lbi.IsSelected = AlarmMod.AlarmData.SelectedDays.Contains(day);\n\n    this.listBox.Items.Add(lbi);\n}\n\n// to store\nList<DayOfWeek> iDays = new List<DayOfWeek>();\n\nfor (int i = 0; i < 7; i++)\n{\n    if ((this.listBox.Items[i] as ListBoxItem).IsSelected)\n    {\n        iDays.Add((DayOfWeek)i);\n    }\n}\n// now you store iDays which is a List<DayOfWeek> in database.
2149	public class ScheduleThread \n{\n    private readonly TimeSpan _timeSpan;\n    private readonly Timer _timer;\n    public bool IsRunning { get; protected set; }   \n    public ScheduleThread()\n    {\n        IsRunning = false;\n                    //set the timespan according your config            \n        _timeSpan = new TimeSpan();\n    }\n    public void Start()\n    {\n        if (IsRunning == false)\n        {\n            IsRunning = true;\n            StartTimer();\n        }\n    }\n    private void StartTimer()\n    {\n                    _timer = new Timer(CallBack);\n        _timer.Change(_timeSpan, TimeSpan.Zero);\n    }\n    public void Stop()\n    {\n        if (IsRunning)\n        {\n            _timer.Dispose();\n            IsRunning = false;\n        }\n    }\n    private void CallBack(object obj)\n    {\n        //if process is not running\n        //start process\n    }       \n}
2150	public class AirportClass\n    {\n        private string connectionString;\n        private SqlConnection connection;\n        private SqlCommand command;\n        private List<string> items;\n\n        public AirportClass()\n        {\n            connectionString = @"Server=server;database=database;uid=username;pwd=password;";\n        }\n\n        public List<string> getListItems()\n        {\n            items = new List<string>();\n            connection = new SqlConnection(connectionString);\n            command = new SqlCommand("SELECT * FROM Table");\n            command.Connection = connection;\n            connection.Open();\n            SqlDataReader dataReader = command.ExecuteReader();\n            while (dataReader.Read())\n            {\n                string data = dataReader.GetValue(0).ToString();\n                items.Add(data);\n            }\n            connection.Close();\n            return items;\n        }\n    }
2151	testesiteEntities db = new testesiteEntities();//create object\n\n//select object\nrblCategoria.DataValueField = "codcategoria"; \nrblCategoria.DataTextField = "dsccategoria";\nrblCategoria.DataSource = db.categoria.Select().ToList();\nrblCategoria.DataBind();//define valores no bullet list
2152	foreach (var account in sortedAccounts)\n                        {\n                            var outputLine =\n                            account.accountholder + "\t" +\n                            account.accountnumber + "\t" +\n                            account.accounttype.Substring(0, 2) + "\t" +\n                            account.amount + "\t" +\n                            account.date.ToShortDateString();\n\n                            //output\n                            File.WriteAllText(text, outputLine);\n                        }
2153	foreach (ListItem li in dropdownlist1.Items)\n{\n    if (li.Value == textBox1.text)\n    {\n       // The value of the option matches the TextBox. Process stuff here.\n    }\n}
2154	secondTree.HideSelection = false;
2155	namespace Different \n{\n    public class Class1\n    {      \n        public static int[] Function1()\n        {\n           // code to return value\n        }\n    }\n}\n\nnamespace MyNamespace\n{    \n    class Program\n    { \n          static void Main(string[] args)\n          {\n              // Error\n              var arr = Class1.Function();\n\n              // you need to use...\n              var arr = Different.Class1.Function();\n          }\n    }\n}
2156	string pattern = @"\bDriver=[^;]+;";\nstring replacement = "";\nRegex rgx = new Regex(pattern);\nstring result = rgx.Replace(input, replacement);
2157	string[] ASIA = new []{ Taiwan, Vietnam, Korea, China, Japan}\n                      .SelectMany(s => s)  // not entirely sure what these abbreviations are...\n                      .ToArray();
2158	function vehicleSelected() {  \n        var autoSelect = document.getElementById('vehicleSelect');  \n        var strAuto = autoSelect.options[autoSelect.selectedIndex].value;                                  \n        var rows = document.getElementById('tableList').getElementsByClassName('TR');             \n        for (var i = 0; i < rows.length; i++) {    \n            rows[i].style.display='none'; // note: better to use a css class here\n        }  \n        var selectedRow = document.getElementById(strAuto); // assuming that the values are the same as the row Id's.\n        selectedRow.style.display = ''; // again, better to use a Css style.\n    }
2159	secpol.msc
2160	List<string> items = XDocument.Parse("the xml")\n                         .Descendants("item")\n                         .Select(item => item.Attribute("id").Value).ToList();
2161	public sealed class Singleton\n{\n    private static readonly Singleton instance = new Singleton();\n    static Singleton() {} // Make sure it's truly lazy\n    private Singleton() {} // Prevent instantiation outside\n\n    public static Singleton Instance { get { return instance; }\n}
2162	[DllImport(@"..\lib\DDS_Service.dll", EntryPoint="SetCallback")]\n   private static extern void SetCallback(Callback fn);
2163	void Start()\n    {\n        ClickToMove = FindObjectOfType<ClickToMoveScript>();\n        ClickToMove.PlayWoodCuttingAnim();  \n    }
2164	internal class Test \n{\n    public Enumerator GetEnumerator()\n    {\n        return new Enumerator();\n    }\n\n    public struct Enumerator\n    {\n        public bool MoveNext()\n        {\n            return false;\n        }\n\n        public object Current\n        {\n            get { return null; }\n        }\n    }\n}
2165	for(int v = 0; v < dataGrid1.Rows.Count; v++)\n{\n    if(string.Equals(dataGrid1[0, v].Value as string, "ITM-000001"))\n    {\n        dataGrid1.Rows.RemoveAt(v);\n        v--; // this just got messy. But you see my point.\n    }\n}
2166	-- declare input - could be the input parameter of a stored procedure or something\nDECLARE @input XML = '<Employees><Employee><ID>4040</ID><Vorname>Dieter</Vorname><Nachname>Mueller</Nachname></Employee></Employees>'\n\n-- INSERT INTO your table\nINSERT INTO dbo.Employee(ID, Vorname, Nachname)\n    -- shred the incoming XML into rows of data, based on the XPath /Employees/Employee\nSELECT\n    XEmp.value('(ID)[1]', 'int'),\n    XEmp.value('(Vorname)[1]', 'varchar(50)'),\n    XEmp.value('(Nachname)[1]', 'varchar(50)')\nFROM \n    @input.nodes('/Employees/Employee') AS XTbl(XEmp)
2167	IObservable<bool> ValidateAsync(Row item)\n{\n    return Observable.Start(() => {\n        // TODO: Figure out if the row is valid\n        return true;\n    }, Scheduler.TaskPoolScheduler);\n}\n\nmyBigDataTable.ToObservable()\n    .Select(x => ValidateAsync(x).Select(y => new { Row = x, IsValid = y }))\n    .Merge(10 /* rows concurrently */)\n    .ObserveOn(SynchronizationContext.Current /*assuming WinForms */)\n    .Subscribe(x => {\n        Console.WriteLine("Row {0} validity: {1}", x.Row, x.IsValid);\n    });
2168	// Define the cancellation token.\nCancellationTokenSource source = new CancellationTokenSource();\npreviouslyProvidedToken = source.Token;\n...\nsource.Cancel();
2169	DataTable dtFinal = dtOriginal.Clone();\nfor (int i = 0; i < dtOriginal.Rows.Count; i++)\n{\n    bool isDupe = false;\n    for (int j = 0; j < dtFinal.Rows.Count; j++)\n    {\n        if (dtOriginal.Rows[i][0].ToString() == dtFinal.Rows[j][0].ToString()\n            && dtOriginal.Rows[i][1].ToString() == dtFinal.Rows[j][1].ToString()\n            && dtOriginal.Rows[i][2].ToString() == dtFinal.Rows[j][2].ToString())\n        {\n            dtFinal.Rows[j][3] = int.Parse(dtFinal.Rows[j][3].ToString()) + int.Parse(dtOriginal.Rows[i][3].ToString()); \n            isDupe = true;\n            break;\n        }\n    }\n\n    if (!isDupe)\n    {\n        dtFinal.ImportRow(table.Rows[i]);\n    }\n}
2170	Split('\\')
2171	using (var streamReader = new StreamReader(jsonStream, Encoding.GetEncoding("iso-8859-1")))
2172	protected void txtDate_TextChanged(object sender, EventArgs e)\n     {\n          SqlDataSource2.SelectCommand = "NEW SQL COMMAND";\n          DropDownList1.DataSourceID = "SqlDataSource2";\n     }
2173	System.IO.File.WriteAllLines(Server.MapPath("~/App_Data/log.txt"))
2174	SqlCommand command = new SqlCommand();\ncommand.Connection = someConnectionObj;\ncommand.CommandText = "INSERT INTO Sometable (datecolumn) VALUES (@p_date)";\ncommand.Parameters.Add ("@p_date", SqlDbType.DateTime).Value = someDate;\ncommand.ExecuteNonQuery();
2175	string s = ...;\ns = s.TrimEnd('\0');
2176	Device.BeginInvokeOnMainThread(() => { App.Locator.TaggingPageVM.ImageSrc = sender.Result[0].Source; });
2177	dt = GetNetworkTime().AddDays(1);
2178	string input = "CaptainNillo";\nstring first = listFO.FirstOrDefault(x => input.StartsWith(x));\nstring second = listFN.FirstOrDefault(x => input.EndsWith(x));\nif (first != null && second != null)\n   // play first.wav and second.was
2179	...\n    using (var dr = cmd.ExecuteReader())\n    {\n        while (dr.Read()) //for each item in the datatable\n        {\n            dr.GetString(0);\n        }\n    }
2180	class PsudoStream \n{\n    public virtual bool CanRead { get { return false; } }\n    public virtual bool CanWrite { get { return false; } }\n}\n\nclass WritableStream : PsudoStream \n{\n    //CanRead is false already and does not need to be overwritten\n\n    public override bool CanWrite { get { return true; } }\n}\n\nclass ReadableStream : PsudoStream \n{\n    //CanWrite is false already and does not need to be overwritten\n\n    public override bool CanRead { get { return true; } }\n}
2181	if (o.NodeType == NodeType.Element && o is GeckoInputElement)\n{\n      GeckoInputElement asd = (GeckoInputElement)o;\n      if (asd.Checked)\n        ....\n}
2182	public static class IDbConnectionExtensions {\n    public static void MyExtension(this IDbConnection connection) {\n        Console.WriteLine("Hello, connection!");\n    }\n}
2183	private void DataGrid_CopyingRowClipboardContent(object sender, DataGridRowClipboardEventArgs e)\n{\n    var currentCell = e.ClipboardRowContent[ dataGrid.CurrentCell.Column.DisplayIndex];\n    e.ClipboardRowContent.Clear();\n    e.ClipboardRowContent.Add( currentCell );\n}
2184	var dupeNumbers = new int[]{1,2,3,4,2,5};\n\nvar dupes = dupeNumbers\n    .GroupBy(n => n)\n    .Where(g => g.Count() > 1)\n    .Select(g => g.Key);\n\nvar rageNumbers = new int[]{1,2,3,5,6,7};\nvar fullRange = Enumerable.Range(rageNumbers.Min(), rageNumbers.Max());\n\nvar missing = fullRange\n    .GroupJoin(rageNumbers, n => n, full => full, (full, n) => new { full, n })\n    .SelectMany(joined => joined.n.DefaultIfEmpty(), (full, n) => new{ Full = full.full, n})\n    .Where(joined => joined.Full != joined.n)\n    .Select(n => n.Full);
2185	public static void GetSubnetMask()\n    {\n        foreach (NetworkInterface adapter in NetworkInterface.GetAllNetworkInterfaces())\n        {\n            foreach (UnicastIPAddressInformation unicastIPAddressInformation in adapter.GetIPProperties().UnicastAddresses)\n            {\n                if (unicastIPAddressInformation.Address.AddressFamily == AddressFamily.InterNetwork)\n                {\n                    Console.WriteLine(unicastIPAddressInformation.IPv4Mask);\n                }\n            }\n        }\n    }
2186	var credentials = new X509CertificateCredentials(\n    cert,\n    new SecurityKeyIdentifier(\n        new NamedKeySecurityKeyIdentifierClause(\n            "kid",\n            "F8A59280B3D13777CC7541B3218480984F421450")));
2187	seriesSmall.YAxisType = AxisType.Secondary;
2188	foreach(Results result in _results)\n    {\n        int examID = _theDisplay.userInputAsInteger("Select a result");\n        _findExamIndex(examID, _exams);\n         int studentID = _theDisplay.userInputAsInteger("Please select a users result");\n        _findStudentIndex(studentID, _students);\n\n         //filter on the _exams' Topic == '_topicName'\n         exam[]  exams  = FindExamByTopic("youtopic",_exams)\n\n    }\n\n\n  private Exam[] FindExamByTopic(string topic, Exam[] _exams)\n    {\n         return _exams.Where(ex => ex.Topic == topic).ToArray();  \n    }\n\n\n  //here without using  linq \n\n     private Exam[] FindExamByTopicSimple(string topic, Exam[] _exams)\n    {\n        List<Exam>  exams = new List<Exam>();\n\n        for (int i = 0; i < _exams.Length; i++)\n        {\n            if (_exams[i].Topic == topic)\n            {\n                exams.Add(_exams[i]); \n            }\n        }\n        return exams.ToArray();   \n    }
2189	public partial class RecComparer : Window\n{\n    public BaselineEntity _blEnty{get;set}\n    public List<RecComparisionData> _compData {get;set}\n\n    public RecComparer(BaselineEntity blEnty)\n    {\n        InitializeComponent();\n        DataContext = this;\n\n        _blEnty = blEnty;\n\n        _compData = blEnty.ComparisionData;\n\n        // this is a datagrid, whose xaml is cited below\n\n        //ComparisionDataGrid.ItemsSource = _compData;\n    }\n}
2190	SqlConnection.ClearPool
2191	public string UserName {get {return textBoxUserName.Text;}}
2192	Type implementationType = typeof(T).Assembly.GetTypes()\n                                   .Where(t => t.IsSubclassOf(typeof(T))\n                                   .Single();\nreturn (T) Activator.CreateInstance(implementationType);
2193	public ActionResult BlogEntry(int year, int month , int day , string title)\n\n    using System;\n    using System.Collections.Generic;\n    using System.Linq;\n    using System.Web;\n     using System.Web.Mvc;\n\n    namespace OurAttributes\n    {\n     public class PopulateTitleDandDateAttribute : ActionFilterAttribute\n     {\n    public override void OnActionExecuting(ActionExecutingContext filterContext)\n    {\n\n                string[] url = filterContext.HttpContext.Request.Uri.split('/');\n                DateTime d = new Date(url[2],url[3],url[4]);\n                if (filterContext.ActionParameters.ContainsKey("createdDate"))\n                {\n                    filterContext.ActionParameters["createdDate"] = d;\n                }\n\n                if (filterContext.ActionParameters.ContainsKey("title"))\n                {\n                    filterContext.ActionParameters["title"] = url[5] ;\n                }\n                base.OnActionExecuting(filterContext);\n\n\n    }\n  }\n }
2194	double dateDouble = 40461;  \nDateTime dt = DateTime.FromOADate(dateDouble);\n\nstring dateString = dt.ToString();
2195	private string createTable(string[] cols, string[][] values)\n{\n    StringBuilder sb = new StringBuilder();\n    sb.AppendLine(@"\begin{table}[ht]");\n    sb.AppendLine(@"\centering");\n    // Assuming four columns.\n    sb.AppendLine(@"\begin{tabular}{c c c c}");\n    sb.AppendLine(@"\hline\hline");\n    // Column headers.\n    bool first = true;\n    foreach (string col in cols)\n    {\n        if (!first)\n            sb.Append(" & ");\n        sb.Append(col);\n        first = false;\n    }\n    sb.AppendLine();\n    sb.AppendLine(@"\hline");\n    foreach (string[] rowCells in values)\n    {\n        first = true;\n        foreach (string cell in rowCells)\n        {\n            if (!first)\n                sb.Append(" & ");\n            sb.Append(cell);\n            first = false;\n        }\n        sb.AppendLine(@" \\");\n    }\n    sb.AppendLine(@"\hline");\n    sb.AppendLine(@"\end{tabular}");\n    sb.AppendLine(@"\end{table}");\n    return sb.ToString();\n}
2196	var finalValue = ... // 512 -> 1000000010\nvar possibleValues = ... // array of flags [00000001, 000000010, 00000100, 00001000 ... ]\n\nvar appliedFlags = possibleValues.Where(x => x & finalValue == x).ToList();
2197	gvMessageList.Columns[4].HeaderStyle.Width = New Unit(50, UnitType.Percentage);
2198	while (rdr.Read())\n{\n    for (int y = 0; y <= numberColumns; y++)         \n    {\n        string childData = rdr[y].ToString();\n        treeView1.Nodes[y].Nodes.Add(childData);\n    }\n}
2199	if(!user.Activated)\n{\n  yield return new ValidationResult("NotActived", Resources.UserNotActivated);\n  yield break;\n}
2200	clientsList[dataFromClient]
2201	using UnityEngine;\nusing UnityEngine.UI;\n\npublic class FlappyScore : MonoBehaviour{\n\n// Add the Above if you still haven't cause the Text class that you will need is in there, in UnityEngine.UI;\n\npublic Text MyScore;\n\n// Go back to Unity and Drag the "text" GameObject in your canvas to this script.\n\nvoid Start(){\n\n /* if Having difficulty with the above instruction. Un comment this comment block.\nMyScore = GameObject.Find("text").GetComponent<Text>();\n*/\n\n\n  MyScore.text = "50";\n // Your score needs to be casted to a string type.\n\n\n }
2202	if RecordNumber mod 2 = 0 then Color (234, 234, 234) else crNoColor
2203	List<ListItem> list = new List<ListItem>(lbxCustomers.Items.Cast<ListItem>());\nlist = list.OrderBy(li => li.Text).ToList<ListItem>();\nlbxCustomers.Items.Clear();\nlbxCustomers.Items.AddRange(list.ToArray<ListItem>());
2204	Application word = new Application();\n    Document doc = new Document();\n\n    object fileName = path;\n    // Define an object to pass to the API for missing parameters\n    object missing = System.Type.Missing;\n    doc = word.Documents.Open(ref fileName,\n            ref missing, ref missing, ref missing, ref missing,\n            ref missing, ref missing, ref missing, ref missing,\n            ref missing, ref missing, ref missing, ref missing,\n            ref missing, ref missing, ref missing);\n\n    String read = string.Empty;\n    List<string> data = new List<string>();\n    for (int i = 0; i < doc.Paragraphs.Count; i++)\n    {\n        string temp = doc.Paragraphs[i + 1].Range.Text.Trim();\n        if (temp != string.Empty)\n            data.Add(temp);\n    }\n    ((_Document)doc).Close();\n    ((_Application)word).Quit();\n\n    GridView1.DataSource = data;\n    GridView1.DataBind();
2205	//here ArrayList contains the ids to match\n         ArrayList a=new ArrayList();\n         a.Add(201105);\n         a.Add(201106);\n         //loop through the items in the datalist\n         for (int i = 0; i < DataList1.Items.Count;i++ )\n         {\n             //check if the list contains the items \n             if (a.Contains(Convert.ToInt32(DataList1.DataKeys[i])))\n             {\n                 (DataList1.Items[i].FindControl("CheckBox1") as CheckBox).Checked = true;\n             }\n         }
2206	System.Environment.NewLine
2207	static Expression<Func<T,bool>> Munge<T>(Expression<Func<T>> selector)\n{\n    var memberInit = selector.Body as MemberInitExpression;\n    if (memberInit == null)\n        throw new InvalidOperationException("MemberInitExpression is expected");\n    var p = Expression.Parameter(typeof(T), "x");\n\n    Expression body = null;\n    foreach (MemberAssignment binding in memberInit.Bindings)\n    {\n        var comparer = Expression.Equal(\n            Expression.MakeMemberAccess(p, binding.Member),\n            binding.Expression);\n        body = body == null ? comparer : Expression.AndAlso(body, comparer);\n    }\n    if (body == null) body = Expression.Constant(true);\n\n    return Expression.Lambda<Func<T, bool>>(body, p);\n}
2208	var matches = from p in points\n               from r in rectangles\n               where r.Contains(p)\n               select new { r, p };
2209	flashvars='id_video=<%# (Request.QueryString["vid"] != null) ? Request.QueryString["vid"].ToString() : ""%>'
2210	if (!File.Exists("yourfilePath"))\n     File.Create("yourfilePath");\n\nusing (StreamWriter sw = new StreamWriter("yourFilePath", true))\n{\n    sw.WriteLine("logString");        \n}
2211	static class Program\n{\n    [STAThread]\n    static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n\n        var thread = new Thread(ThreadStart);\n        // allow UI with ApartmentState.STA though [STAThread] above should give that to you\n        thread.TrySetApartmentState(ApartmentState.STA); \n        thread.Start(); \n\n        Application.Run(new frmOne());\n    }\n\n    private static void ThreadStart()\n    {\n        Application.Run(new frmTwo()); // <-- other form started on its own UI thread\n    }\n}
2212	data: JSON.stringify({ login : { id: 0, "Username": "myUser", "Password" : "myPass" }}),
2213	event.OriginalSource.DataContext
2214	List<MapLocation> locations;\n        ReverseGeocodeQuery query = new ReverseGeocodeQuery();\n        query.GeoCoordinate = new GeoCoordinate(47.608, -122.337);\n        query.QueryCompleted += (s, e) =>\n            {\n                if (e.Error == null && e.Result.Count > 0)\n                {\n                    locations = e.Result as List<MapLocation>;\n                    // Do whatever you want with returned locations. \n                    // e.g. MapAddress address = locations[0].Information.Address;\n                }\n            };\n        query.QueryAsync();
2215	private void PopulateTreeView()\n{\n    treeView1.Nodes.Add(AddSubNode(0, new TreeNode("Root")));\n}\n\nprivate TreeNode AddSubNode(int level, TreeNode hierarchy)\n{\n    if (level == StructureArray.Length)\n    {\n        return hierarchy;\n    }\n\n    foreach (string s in StructureData[StructureArray[i]])\n    {\n        tn.Nodes.Add(AddSubNode(level + 1, new TreeNode(s)));\n    }\n    return tn;\n}
2216	private Label label;  // field on the class (form)\n\nprivate void checkBox1_CheckedChanged(object sender, EventArgs e)\n{\n    if (checkBox1.Checked)\n    {\n        label = new Label(); // instantiate new label\n        label.Name = "customLabel";\n        label.AutoSize = true;\n        label.Text = "Dynamically Generated Label";\n        label.Location = new Point(50, 50);\n        label.BringToFront();\n        this.Controls.Add(label);\n    }\n    else\n    {\n        if (label != null) // remove label\n        {\n            this.Controls.Remove(label);\n            label = null;\n        }\n    }\n}
2217	WebClient.UploadData
2218	StrongNameKeyPair kp;\n// Getting this from a resource would be a good idea.\nusing(stream = GetStreamForKeyPair())\n{\n    kp = new StrongNameKeyPair(fs);\n}\nAssemblyName an = new AssemblyName();\nan.KeyPair = kp;\nAssemblyBuilder ab = AppDomain.CurrentDomain.DefineDynamicAssembly(an, AssemblyBuilderAccess.RunAndSave);
2219	public static class Foo\n{\n    private static Dictionary<string,string> m_Constants = new Dictionary<string,string>();\n\n    static Foo()\n    {\n        m_Constants["Foo"] = "Hello";\n        // etc\n    }\n\n    public static string GetConstant( string key )\n    {\n        return m_Constants[key];\n    }\n}\n\npublic string Bar( string constName )\n{\n    return Foo.GetConstant( constName );\n}
2220	pointsOfList = pointsOfList.OrderByDescending(p => p.X).ToList();
2221	Process.WaitForExit()
2222	public Form1() {\n  InitializeComponent();\n  toolStripButton1.MouseDown += toolStripButton_MouseDown;\n  toolStripButton2.MouseDown += toolStripButton_MouseDown;\n\n  panel1.DragEnter += panel1_DragEnter;\n  panel1.DragDrop += panel1_DragDrop;\n}\n\nvoid toolStripButton_MouseDown(object sender, MouseEventArgs e) {\n  this.DoDragDrop(sender, DragDropEffects.Copy);\n}\n\nvoid panel1_DragEnter(object sender, DragEventArgs e) {\n  e.Effect = DragDropEffects.Copy;\n}\n\nvoid panel1_DragDrop(object sender, DragEventArgs e) {\n  ToolStripButton button = e.Data.GetData(typeof(ToolStripButton))\n                           as ToolStripButton;\n  if (button != null) {\n    if (button.Equals(toolStripButton1)) {\n      MessageBox.Show("Dragged and dropped Button 1");\n    } else if (button.Equals(toolStripButton2)) {\n      MessageBox.Show("Dragged and dropped Button 2");\n    }\n  }\n}
2223	//Create global dictionary of lists\nDictionary<string, List<string> dictionaryOfLists = new Dictionary<string, List<string>();\n\n//Get and create lists from a single method\npublic List<string> FindListByName(string stringListName)\n{\n    //If the list we want does not exist yet we can create a blank one\n    if (!dictionaryOfLists.ContainsKey(stringListName))\n        dictionaryOfLists.Add(stringListName, new List<string>());\n\n    //Return the requested list\n    return dictionaryOfLists[stringListName];\n}
2224	var additionalCompressionArgument = 123;\nusing (FileStream input = File.OpenRead("inputData.bin"))\nusing (FileStream output = File.OpenWrite("outputData.bin"))\nusing (StreamPipeline pipeline = new StreamPipeline(\n   (input, output) => Compress(input, output, additionalCompressionArgument), \n    Encrypt))\n{\n    pipeline.Run(input, output);\n}\n\nstatic void Compress(Stream input, Stream output, int additionalCompressionParameter){\n    using (GZipStream compressor = new GZipStream(\n           output, CompressionMode.Compress, true))\n        CopyStream(input, compressor);\n}
2225	string stFloat = String.Format("{0:0.0000}", FLOAT_VALUE);
2226	public class PanelEx : Panel {\n  protected override Point ScrollToControl(Control activeControl) {\n    //return base.ScrollToControl(activeControl);\n    return this.AutoScrollPosition;\n  }\n}
2227	public partial class SmoothScrollPanel : UserControl\n{\n    public SmoothScrollPanel()\n    {\n        InitializeComponent();\n        // this.DoubleBuffered = true;\n    }\n\n    private const int WM_HSCROLL = 0x114;\n    private const int WM_VSCROLL = 0x115;\n\n    protected override void WndProc(ref Message m)\n    {\n        if ((m.Msg == WM_HSCROLL || m.Msg == WM_VSCROLL)\n        && (((int)m.WParam & 0xFFFF) == 5))\n        {\n            // Change SB_THUMBTRACK to SB_THUMBPOSITION\n            m.WParam = (IntPtr)(((int)m.WParam & ~0xFFFF) | 4);\n        }\n        base.WndProc(ref m);\n    }\n\n    protected override CreateParams CreateParams\n    {\n        get\n        {\n            var cp = base.CreateParams;\n            cp.ExStyle |= 0x02000000;    // Turn on WS_EX_COMPOSITED\n            return cp;\n        }\n    }\n}
2228	string s="23,234,0,12,43,6,34,45,7";\n\nstring[] s = data.Split(',');\n\nList<int32> li = new List<int32>();\n        foreach (String sout in s)\n        {\n            int i;\n            if (Int32.TryParse(sout, out i))\n                li.Add(i);\n        }
2229	//declare your variable.  I added a connection and command so I can include parameters in the process.\nstring orderBy = "";\nstring whereClause = "";\nstring sql = "";\n\n//create your order by clause\nswitch (Request["sort"])\n{\n    case "PriceASC":\n        orderBy = "order by Product_Price ASC";\n        break;\n    case "PriceDESC":\n        orderBy = "order by Product_Price DESC";\n        break;\n    default:\n        orderBy = "ORDER BY Product_ID";\n        break;\n}\n\n//create your where clause.  \nif (!string.IsNullOrEmpty(Request["search"])) // forgot the ! here\n{\n    whereClause = string.Format(" where Product_Keywords like '%{0}%'", Request["search"]); // very unsafe to plug this in.  should use parameter\n\n}\n\nsql = string.Format("SELECT * FROM Products{0} {1}",whereClause, orderBy); //build your query string.  if no search parameter was given the where clause will be blank, but the order by will still exist.\n\n@foreach (var row in db.Query(sql))\n{\n    //some code here\n}
2230	string year = "2013";\n\nprotected List<string> GetPersons(string year)\n{\n    XElement company= XElement.Load(Server.MapPath(XMLfil));\n\n    var persons= (from a in company.Elements("department").Elements("people").Elements("person")\n                  where (string)a.Element("gender").Value == 'male' && (string)a.Element("datum").Value.StartsWith(year)\n                  select (string)(a.Element("age"))).ToList<string>();\n    return persons;\n}
2231	var st = new StackTrace(ex, true);\nvar frame = st.GetFrame(0); //Not sure if 0 is correct index, but try it first\nvar line = frame.GetFileLineNumber();
2232	Console.WriteLine("DHCP Servers");\nNetworkInterface[] adapters  = NetworkInterface.GetAllNetworkInterfaces();\nforeach (NetworkInterface adapter in adapters)\n{\n\n    IPInterfaceProperties adapterProperties = adapter.GetIPProperties();\n    IPAddressCollection addresses = adapterProperties.DhcpServerAddresses;\n    if (addresses.Count >0)\n    {\n        Console.WriteLine(adapter.Description);\n        foreach (IPAddress address in addresses)\n        {\n            Console.WriteLine("  Dhcp Address ............................ : {0}", \n                address.ToString());\n        }\n        Console.WriteLine();\n    }\n}
2233	var d = new List<Tuple<string, double>>();\n.\n.\n.\nwhile ((line = file.ReadLine()) != null)\n{\n    d.Add(Tuple.Create(line, p.calculate_CS(line, document)));\n}\n.\n.\n.\nforeach (double item in d.OrderByDescending(t => t.Item2))\n{\n    fileW.WriteLine("{0} from line {1}", item.Item2, item.Item1);\n}
2234	AND apptDate = thepassedindate
2235	[Authorize]
2236	string[] filea = File.ReadAllLines("test.txt");\nforeach (var s in filea)\n{\n    string[] parts = s.Split(':');\n\n    if (parts.Length == 2)\n    {\n        if (parts[0].Contains("Email"))\n            richTextBox1.AppendText(parts[1].Trim());\n\n        if (parts[0].Contains("Status"))\n            richTextBox1.AppendText(":" + parts[1].Trim() + Environment.NewLine);\n    }\n}
2237	this.label.BorderStyle = System.Windows.Forms.BorderStyle.None
2238	string getfile="";\nfoeach(string f in Directory.GetFiles(Server.MapPath("~/"+str+"/"))\n{\n  getfiles= getfiles + f + ",";\n }
2239	Regex regex = new Regex("<strong>(.*)</strong>");\n  var v = regex.Match("Unneeded text <strong>Needed Text</strong> More unneeded text");\n  string s = v.Groups[1].ToString();
2240	// Determine whether the directory exists.\nif (Directory.Exists(path)) \n{\n    Console.WriteLine("That path exists already.");\n    return;\n}\n\n// Try to create the directory.\nDirectoryInfo di = Directory.CreateDirectory(path);\nConsole.WriteLine("The directory was created successfully at {0}.",\n    Directory.GetCreationTime(path));
2241	create table students(id varchar(10) primary key not null, Department varchar(2), Name varchar(80))\ngo\n\ncreate trigger students_insert_PK\n    on students\n    INSTEAD OF INSERT\nas\n    declare @id int;\n    declare @dept varchar(2); select @dept=Department from INSERTED;\n    select @id=cast(max(right(id,4)) as int) from students where Department=@dept;\n    set @id=isnull(@id,0)+1;\n\n    insert into students\n    select Department+right('0000'+cast(@id as varchar(4)),4)\n    , Department\n    , name\n    from INSERTED;\ngo\n\ninsert into students (Department,Name) values ('CS','John');\ninsert into students (Department,Name) values ('CS','Pat');\ninsert into students (Department,Name) values ('CS','Sheryl');\ninsert into students (Department,Name) values ('IT','Phil');\ninsert into students (Department,Name) values ('EE','Frank');\ninsert into students (Department,Name) values ('EE','Amy');\ninsert into students (Department,Name) values ('EE','Stu');\ngo\n\nselect * from students;\ngo
2242	html = html.Replace(ItemMatch.Value, "<h2>My Partial View</h2>");
2243	String test = DateTime.Now.ToString("dd.MM.yyy");
2244	var project = accounts.Select(a => a.AccountProjects)\n                      .Where(x => x.AccountProjectID == accountProjectId);
2245	myList.ForEach(x => x.IsUnread = (x.UnreadCount > 0));
2246	public class CreateArtistViewModel\n{\n    public string ArtistName { get; set; }\n    public int? Genres { get; set; } // if you provide chooser for user\n    public string GenresName { get; set; } // if user can enter new genre\n    public string GenresDecription { get; set; } // if user can enter new genre\n\n    public IList<Genre> Genres { get; set; }\n}
2247	int i = 0, flag = 5;\nvar uiScheduler = TaskScheduler.FromCurrentSynchronizationContext();\nTask.Factory.StartNew(() =>\n{\n    while (i < flag)\n    {\n        Task.Factory.StartNew(() =>\n        {\n            this.Text = i.ToString();\n        }, System.Threading.CancellationToken.None, TaskCreationOptions.None, uiScheduler);\n        i++;\n        System.Threading.Thread.Sleep(1000);\n\n    }\n}); // <---- Removed arguments (specifically uiScheduler)
2248	//SQL Connection stuff here\ncon.Open();\nString queryStr = "SELECT name FROM bbc WHERE name LIKE '*%'";\nSqlCommand com = new SqlCommand(queryStr, con);\nSqlDataReader sdr = com.ExecuteReader();\n\nwhile(sdr.Read())\n{\n   this.textbox2.Text = sdr.GetValue(0).ToString();\n}
2249	string xml = @"<MyApp version='1.01'>\n   <MySettings>\n      <Setting1>1</Setting1>\n      <Setting2>2</Setting2>\n   </MySettings>\n </MyApp>";\n var doc= XDocument.Parse(xml);\nvar settings = doc.Descendants("MyApp")\n                  .Where(x => (string)x.Attribute("version") == "1.0")\n                  .Descendants("MySettings")\n                  .Elements()\n                  .ToDictionary(x => x.Name.ToString(), x => (string)x);
2250	double price = 0.0;\n    foreach ( ListViewItem item in breakfast )\n    {\n        price += Double.Parse(item.SubItems[1].Text);\n    }
2251	string pattern= "\b(?<protocol>https?|ftp|gopher|telnet|file|notes|ms-help)://(?<domain>[-A-Z0-9.]+)(?<file>/[-A-Z0-9+&@#/%=~_|!:,.;]*)?(?<parameters>\?[-A-Z0-9+&@#/%=~_|!:,.;]*)?"
2252	public static T To<T>(this object value)\n{\n    Type t = typeof(T);\n\n    // Get the type that was made nullable.\n    Type valueType = Nullable.GetUnderlyingType(typeof(T));\n\n    if (valueType != null)\n    {\n        // Nullable type.\n\n        if (value == null)\n        {\n            // you may want to do something different here.\n            return default(T);\n        }\n        else\n        {\n            // Convert to the value type.\n            object result = Convert.ChangeType(value, valueType);\n\n            // Cast the value type to the nullable type.\n            return (T)result;\n        }\n    }\n    else \n    {\n        // Not nullable.\n        return (T)Convert.ChangeType(value, typeof(T));\n    }\n}
2253	int now = DateTime.Now.Month;\n                string month;\n                if (now < 10)\n                {\n                    month = "0" + now.ToString();\n                }\n                else\n                {\n                    month = now.ToString();\n                }\n\nmySearcher.Filter = ("(&(objectClass=user)(|(employeeHireDate=" + month + "*)(employeeBirthDate=" + month + "*)))");
2254	openFileDialog1.FileNames.Length
2255	Microsoft.Office.Interop.Outlook.Inspector oInspector = oMsg.GetInspector;
2256	int i=0; \n foreach (DataRow dgvr in  _ds.Tables[0].Rows )\n                {\n                    grvPackList.Rows[i].Cells["Units"].Value = dgvr["Units"].ToString();\n                    i++;\n                }
2257	// this is a MatchEvaluater for a regex replace\nstring me_setFormatValue(Match m){\n    // this is the key for the value you want to pull from the database\n    // Job_Number, etc...\n    string key = m.Groups[1].Value;\n\n    return SomeFunctionToGetValueFromKey(key);\n}\n\n\nvoid testMethod(){\n    string format_string = @"No: {Job_Number}\nCustomer: {Cust_Name}\nAction: {Action}";\n\n    string formatted = Regex.Replace(@"\{([a-zA-Z_-]+?)\}", format_string, me_SetFormatValue);\n}
2258	foreach (var item in Items.Select((elem, index) => new { Item = elem, Index = index }))\n{\n    DoStuff(item.Item, item.Index);\n}
2259	var result1 = new\n{\n    draw = Draw,\n    recordsTotal = persons.Count(),\n    recordsFiltered = (iDisplayLength - iDisplayStart),\n    data = persons\n        .Where(p => InString(p.FName) || InString(p.LName) || InString(p.Id.ToString()) || InString(p.Email))\n        .Select(p => new { Email = p.Email }) //already a list, does not need to be an array of objects\n        .Skip(iDisplayStart)   \n        .Take(iDisplayLength)\n        .ToList() //execute\n};\n\n//also consider an extension method\npublic bool InString(string prop, string search)\n{\n    return prop.Contains(search, StringComparison.OrdinalIgnoreCase)\n}
2260	GL.VertexAttribPointer((int)GLKVertexAttrib.Color,\n                           3, VertexAttribPointerType.Float,\n                           false, 0, 0);
2261	List<string> namesCollection = new List<string>();\nSqlConnection conn = new SqlConnection();\nconn.ConnectionString = 'Connexion String or From File'\nSqlCommand cmd = new SqlCommand();\ncmd.Connection = conn;\ncmd.CommandType = CommandType.Text;\ncmd.CommandText = "Select distinct [Name] from [Names] order by [Name] asc";\nconn.Open();\nSqlDataReader dReader = cmd.ExecuteReader();\nif (dReader.HasRows == true)\n{\n   while (dReader.Read())\n   namesCollection.Add(dReader["Name"].ToString());\n}\ndReader.Close();\n\ntxtName.AutoCompleteMode = AutoCompleteMode.Suggest;\ntxtName.AutoCompleteSource = AutoCompleteSource.CustomSource;\ntxtName.AutoCompleteCustomSource = namesCollection;
2262	using (var context = new PrincipalContext( ContextType.Domain ))\n{\n  using (var user = UserPrincipal.FindByIdentity( context, IdentityType.SamAccountName, userName ))\n  {\n      user.SetPassword( "newpassword" );\n      // or\n      user.ChangePassword( "oldPassword", "newpassword" );\n  }\n}
2263	SyncNotification=true
2264	m_oEnum  = m_oEnum.Select(s => s == "abc" ? "abc-test" : s).ToArray();
2265	myGrid.NotifyCurrentCellDirty(true);
2266	MainForm.Invoke(helperMethod)
2267	File.Copy(@"Resources\install.bat", @"C:\directory\install.bat");
2268	- Create new cache (bottom up, top down)\n- Foreach CachedObject\n- Check if items exist (both parent and child)\n     : yes -> select node\n     : no -> create node and insert it in the new cache\n - add child to parent node
2269	[Table("webnews_in")]\npublic class WEBNews_in : AbsNews {\n\n   private DateTime _inDateTimeAdded = DateTime.MinValue;\n\n   public string InDateTimeAdded {\n       get {\n           return Format(_inDateTimeAdded, " dd/MM/yyyy hh:mm:ss tt");\n       }\n       set {\n           _inDateTimeAdded = DateTime.Parse(value);\n       }\n   }\n\n   private DateTime _inDateTimeUpdated = DateTime.MinValue;\n\n   public string InDateTimeUpdated {\n       get {\n           return Format(_inDateTimeUpdated, " dd/MM/yyyy hh:mm:ss tt");\n       }\n       set {\n           _inDateTimeUpdated = DateTime.Parse(value);\n       }\n   }\n}
2270	var myFile = MyApp.Resources.AppResources.myFile;\n\n        StringReader sr = new StringReader(myFile);\n        var xmlSerializer = new XmlSerializer(typeof(Foo));\n        var classInstance = xmlSerializer.Deserialize(sr);
2271	declare @string varchar(16)\nset @string = 'abcdefghijklmnop'\n\nSELECT\nLEFT(@string,1),\nRIGHT(LEFT(@string,2),1),\nRIGHT(LEFT(@string,3),1),\nRIGHT(LEFT(@string,4),1),\nRIGHT(LEFT(@string,5),1),\nRIGHT(LEFT(@string,6),1),\nRIGHT(LEFT(@string,7),1),\nRIGHT(LEFT(@string,8),1),\nRIGHT(LEFT(@string,9),1),\nRIGHT(LEFT(@string,10),1),\nRIGHT(LEFT(@string,11),1),\nRIGHT(LEFT(@string,12),1),\nRIGHT(LEFT(@string,13),1),\nRIGHT(LEFT(@string,14),1),\nRIGHT(LEFT(@string,15),1)
2272	public class Student \n   {\n      public int StudentId { get; set; }\n      public int StudentName { get; set; }\n      public int StudentRoll { get; set; }\n\n      public int DepartmentId { get; set; }\n      public virtual Department Department { get; set; }\n   }\n\n   public class Department \n   {\n      public int DepartmentId { get; set; }\n      public int DepartmentName { get; set; }\n\n      public virtual ICollection<Student> Students { get; set; } \n   }
2273	ToolStripComboBox1.ComboBox.ValueMember = "YourValueField";
2274	List<ListViewDataItem> lItems = fundingListView.Items.ToList();\n\n        foreach(ListViewDataItem item in lItems)\n        {\n            TextBox tb = item.FindControl("fundingConfirmationAmount") as TextBox;\n            string addToDatabase = tt.Text;\n\n        }
2275	using System;\nusing System.Text.RegularExpressions;\n\npublic class Program\n{\n    public static void Main()\n    {\n        Regex regex = new Regex(@"\d{4}");\n        Match match = regex.Match("Payment for the month ending 30 Nov 2014");\n        if (match.Success)\n        {\n            Console.WriteLine(match.Value);\n        }\n    }\n}
2276	using (System.IO.UnmanagedMemoryStream memoryStream = new UnmanagedMemoryStream(pointer, length, length, FileAccess.Read))\n{\n    byte[] imageBytes = new byte[length];\n    memoryStream.Read(imageBytes, 0, length);\n}
2277	public static DependencyProperty Thickness = \n    DependencyProperty.Register("Thickness", typeof(double), typeof(Test));
2278	mnuLogin_Click()\n{\nFrmLogin frmLogin = new FrmLogin();\nif(frmLogin.ShowDialog() == DialogResult.OK)\n{\n//Enable menu here.\n}\n}
2279	toolTip.PlacementTarget = yourSelectedItem;\n        toolTip.Placement = PlacementMode.Right;\n        toolTip.Content = {place whatever you need to display here};
2280	foreach (var entry in json["feed"]["entry"])\n        {\n            var title = (string)entry.SelectToken("title.$t");\n        }
2281	public static bool isTrue = true;
2282	static void Main(string[] args)\n    {\n        bool a = true;\n        bool b = true;\n        bool c = true;\n        string x = "";\n        string Test = x + (a ? "Clear" : "") + (b ? "Permanent" : "") + (c ? "Salaried" : "");\n        Console.WriteLine(Test);\n\n        Console.ReadLine(); //so that my console window doesn't close\n\n    }
2283	var str =   "<ControlTemplate TargetType=\"HyperlinkButton\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">" +\n            "   <TextBlock HorizontalAlignment=\"{TemplateBinding HorizontalContentAlignment}\" Text=\"{TemplateBinding Content}\" VerticalAlignment=\"{TemplateBinding VerticalContentAlignment}\"/>" +\n            "</ControlTemplate>";\n\nvar template = (ControlTemplate)XamlReader.Load(str);  \n\nHyperlinkButton hyperlinkButton = new HyperlinkButton()\n{\n    Content = "Click me",\n    HorizontalAlignment = HorizontalAlignment.Left,\n    NavigateUri = new Uri("http://my-link-com", UriKind.Absolute),\n    Template = template\n};
2284	private Rectangle lastBounds;\n\n    private void contextMenuStrip1_Opened(object sender, EventArgs e)\n    {\n        lastBounds = contextMenuStrip1.Bounds;\n    }\n\n    private void contextMenuStrip1_SizeChanged(object sender, EventArgs e)\n    {\n        Rectangle rc = contextMenuStrip1.Bounds;\n        int diff = lastBounds.Height - rc.Height;\n        if (diff > 0)\n        {\n            contextMenuStrip1.Bounds = new Rectangle(new Point(rc.X, rc.Y + diff), rc.Size);\n            lastBounds = contextMenuStrip1.Bounds;\n        }\n        else\n        {\n            contextMenuStrip1.Bounds = new Rectangle(new Point(rc.X, rc.Y - diff), rc.Size);\n            lastBounds = contextMenuStrip1.Bounds;\n        }\n    }
2285	protected void Page_PreRender(object sender, EventArgs e)\n{\n    Literal1.Text = "Hello, World";\n}
2286	string name = SomeUserObject != null ? SomeUserObject.Username : string.Empty;
2287	System.Media.SystemSounds.Beep.Play();
2288	try\n        {\n            var hwndSource = PresentationSource.FromVisual(this) as HwndSource;\n            var hwndTarget = hwndSource.CompositionTarget;\n            hwndTarget.RenderMode = RenderMode.SoftwareOnly;\n        }\n        catch (Exception ex)\n        {\n            Log.ErrorException(ex.Message, ex);\n        }
2289	g.DrawImage(res, p);            \n        //left\n        g.FillRectangle(Brushes.Black, new Rectangle(0, 0, p.X, dest_size.Height));\n        //right\n        g.FillRectangle(Brushes.Black, new Rectangle(p.X + act_size.Width, 0, p.X, dest_size.Height));\n        //up\n        g.FillRectangle(Brushes.Black, new Rectangle(0, 0, dest_size.Width, p.Y));\n        //down\n        g.FillRectangle(Brushes.Black, new Rectangle(0, p.Y + act_size.Width, dest_size.Width, p.Y));
2290	(\*|[0-6])\s+(\*|[0-2]\d|3[01])\s+([01]\d|2[0-3])\s+(00|15|30|45)
2291	Workbook workbook = new Workbook(@"D:\a.xlsm");\n            //Get the first worksheet.\n            Worksheet sheet = workbook.Worksheets[12];\n\n            //Define ImageOrPrintOptions\n            ImageOrPrintOptions imgOptions = new ImageOrPrintOptions();\n            //Specify the image format\n            imgOptions.ImageFormat = System.Drawing.Imaging.ImageFormat.Jpeg;\n            //Only one page for the whole sheet would be rendered\n            imgOptions.OnePagePerSheet = true;\n\n            //Render the sheet with respect to specified image/print options\n            SheetRender sr = new SheetRender(sheet, imgOptions);\n            //Render the image for the sheet\n            Bitmap bitmap = sr.ToImage(0);\n\n            //Save the image file specifying its image format.\n            bitmap.Save(@"d:\SheetImage.jpg");
2292	XmlElement itemTitle = (XmlElement)doc.SelectSingleNode("/configuration/car[@title = '" + var_x + "']");\n XmlNode itemUrl = doc.SelectSingleNode("/configuration/car[@title = '" + var_x + "']/url");\n\n itemTitle.Attributes["title"].Value = texbox_title.Text;\n itemUrl.InnerText = textbox_url.Text;
2293	private void ProcessSelectedObject(System.Collections.IList list)\n    {\n        foreach (object obj in list)\n        {\n            if (obj is Contact)\n            {\n                if (((Contact)obj).Sector == null)\n                {\n                    ((Contact)(obj)).Sector = "Default";\n                }\n            }\n        }\n     }
2294	DispatcherTimer dt = new DispatcherTimer();\n        dt.Interval = TimeSpan.FromMilliseconds(1000);\n\n        dt.Tick += (s, e) => { currentTime.Text = DateTime.Now.ToShortTimeString(); };\n\n        dt.Start();
2295	items = items.OrderBy(x => x.GetType().Name).ToList();
2296	public bool IsDefaultPrice\n{\n    get\n    {\n         return price1 == 0 && price2 == 0;\n    }\n}
2297	produseDataGridView.Rows(Index + 1).Selected = True;\nproduse_magazinDataGridView.Rows(Index1 + 1).Selected = True;
2298	var doc = new XDocument(\n  new XElement("SEITOrders",\n  from o in apiCall.ApiResponse.OrderArray.ToArray()\n  select \n  new XElement("order", \n  new XElement("orderID", o.OrderID))));
2299	SqlCommand com = new SqlCommand("SELECT id, nome, sigla FROM  pais WHERE (estado=@estado)", connection);\ncom.Parameters.Add(new SqlParameter("estado", value)); \n        SqlDataAdapter cidadeTableAdapter = new SqlDataAdapter();\n        cidadeTableAdapter.SelectCommand = this.com;\n        DataSet set = new DataSet("return");\n        cidadeTableAdapter.Fill(set);\n        this.com.Connection.Close();\n        return set;
2300	private void button_addTab_Click(object sender, EventArgs e)\n        {\n            TabPage addedTabPage = new TabPage("tab title"); //create the new tab\n            tabControl_webBrowsers.TabPages.Add(addedTabPage); //add the tab to the TabControl\n\n            WebBrowser addedWebBrowser = new WebBrowser()\n            {\n                Parent = addedTabPage, //add the new webBrowser to the new tab\n                Dock = DockStyle.Fill\n            };\n            addedWebBrowser.NewWindow += specificWebBrowser_NewWindow;\n            addedWebBrowser.Navigate("www.google.com");\n        }
2301	// If the to be called method is generic...\nvar methodInfo = Type.GetType("System.Reflection.Emit.ModuleBuilder")\n                    .GetTypeInfo()\n                    .DeclaredMethods\n                    .Where((method) => method.Name == "GetMethodTokenInternal" && method.GetParameters().Length == 3)\n                    .First();\nint token = \n    (int)methodInfo.Invoke(_moduleBuilder, new object[] { closedGenericMethod, null, false });
2302	SqlDataAdapter dba = new SqlDataAdapter(@"SELECT * from [tblCountries] \n                                     WHERE [Continent] IS NULL order by [Common Name]", connection);\n            dba.Fill(ds);\n            drpNonAfricanCountries.DataSource = ds;
2303	if (Input.GetMouseButtonDown (0)) {\n    target = Camera.main.ScreenToWorldPoint (Input.mousePosition);\n    target.z = transform.position.z;\n    if(target.x > transform.position.x) transform.localScale = new Vector3(1, 1, 1); \n    else if(target.x < transform.position.x) transform.localScale = new Vector3(-1, 1, 1);\n    anim.SetInteger ("Direction", 1);\n } \n transform.position = Vector3.MoveTowards(transform.position, target, speed * Time.deltaTime);
2304	// Populate the repeater control with the Items DataSet\nPagedDataSource objPds = new PagedDataSource();\nobjPds.DataSource = Items.Tables[0].DefaultView;\n\n// Indicate that the data should be paged\nobjPds.AllowPaging = true;\n\n// Set the number of items you wish to display per page\nobjPds.PageSize = 3;\n\n// Set the PagedDataSource's current page\nobjPds.CurrentPageIndex = CurrentPage - 1;\n\nrepeaterItems.DataSource = objPds;\nrepeaterItems.DataBind();
2305	DataSet1TableAdapters.PersonTableAdapter adapter = new DataSet1TableAdapters.PersonTableAdapter;\nadapter.InsertQuery(...) // <-- my method haha!
2306	var tmpItems = comboBoxKey.Items\n            .Cast<Object>()\n            .ToArray();\ncomboBoxKey.Items.Clear();\nString tmp2 = textBoxSearchKey.Text;\n\nvar filteredItems = tmpItems.Where(x=> x.ToString().Contains(tmp2))\n                            .ToArray();\ncomboBoxKey.Items.AddRange(filteredItems );
2307	string output= input.Substring(input.IndexOf('.') + 1, \n                  input.LastIndexOf('.') - input.IndexOf('.') - 1);
2308	string url = 'http://...';\nWebClient client = new WebClient ();\nstring content = client.DownloadString(url);\n\n// And now you can search\nif (content.Contains("Zyak"))\n{\n    ...\n}
2309	item.Imported
2310	using (UdpClient udpLink = new UdpClient(ipAddress, 514))\n{\n    udpLink.Send(rawMsg, rawMsg.Length);\n}
2311	public long RecursivePLINQ(long factor,long total)\n    {\n\n        if(total == 0)\n        {\n            total = 1;\n        }\n        if (factor > 1)\n        {\n            Parallel.For<long>(0, 1, () => factor, (j, loop, factorial) =>\n            {\n                Thread.Sleep(1);    /*Simulate Moderate Operation*/\n                total = factorial * RecursivePLINQ(--factorial, total);\n                return total;\n            }, (i) =>  {return;});\n        }\n        return total;\n    }
2312	MethodInfo mi = typeof(Example).GetMethod("MethodBodyExample");\nMethodBody mb = mi.GetMethodBody();\nConsole.WriteLine("\r\nMethod: {0}", mi);\n\n// Display the general information included in the \n// MethodBody object.\nConsole.WriteLine("    Local variables are initialized: {0}", \n    mb.InitLocals);\n\nforeach (LocalVariableInfo lvi in mb.LocalVariables)\n{\n    Console.WriteLine("Local variable: {0}", lvi);\n}
2313	public class MyClass\n{\n    public MyClass()\n    {\n        Foo = 1;\n    }\n\n    public int Foo { get; set; }\n}
2314	string path = @"C:\ProjectTesting\TwsDde.xlsm";\n\n        oXL = new Microsoft.Office.Interop.Excel.Application();\n\n        oXL.Visible = true;\n\n        oXL.DisplayAlerts = false;\n\n        mWorkBook = oXL.Workbooks.Open(path, 0, false, 5, "", "", false, Microsoft.Office.Interop.Excel.XlPlatform.xlWindows, "", true, false, 0, true, false, false);\n\n        //Get all the sheets in the workbook\n\n        mWorkSheets = mWorkBook.Worksheets;\n\n        //Get the allready exists sheet\n\n        mWSheet1 = (Microsoft.Office.Interop.Excel.Worksheet)mWorkSheets.get_Item("Basic Orders");\n\n        Microsoft.Office.Interop.Excel.Range range= mWSheet1.UsedRange;\n\n        mWSheet1.Cells[12, 1] = "bla bla bla";
2315	char* short_to_byteArr (short value)\n{\n   static char byte_arr[] = {};\n   byte_arr[0] = value & 0x00FF;\n   byte_arr[1] = (value>>8) & 0x00FF;\n   return byte_arr;\n}
2316	Request.Url.AbsolutePath
2317	foreach (var item in records)\n{\n    string category = item.Description\n                          .Split(new char[] { '|' })[1]\n                          .Trim(new char[] { '[', ']');\n\n    // this will give me the category for each item\n    FieldItem fi = new FieldItem { Category = category }; // more items will be added\n\n    if (!dict.Keys.Contains(category))\n       dict.Add(category, new List<FieldItem>());\n\n    dict[category].Add(fi);   \n}
2318	WebClient webC = new WebClient();\nwebC.Encoding = Encoding.UTF8;\nstring jsonStr = webC.DownloadString("http://www.express-board.fr/api/jobs");
2319	public abstract class MyBaseClass\n{\n    protected string _status;\n    public virtual string Status\n    {\n        get { return _status; }\n        set { _status = value; } \n    }\n}\n\npublic class MySpecificClass : MyBaseClass\n{\n    public override string Status\n    {\n        get\n        {\n            if(_status == "something")\n                return "some status";\n            else\n                return "some other status";\n        }\n        set\n        {\n            _status = value;\n        }\n    }\n}
2320	using System;\nusing System.Diagnostics;\nusing System.Windows.Forms;\n\nnamespace VirtualKeyboard\n{\n    public partial class Form1 : Form\n    {\n\n        public Form1()\n        {\n            InitializeComponent();\n        }\n\n        private void Open_Click(object sender, EventArgs e)\n        {\n            Process.Start(@"C:\Program Files\Common Files\microsoft shared\ink\tabtip.exe");\n        }\n\n        private void Close_Click(object sender, EventArgs e)\n        {\n            Process[] processlist = Process.GetProcesses();\n\n            foreach(Process process in processlist)\n            {\n                if (process.ProcessName == "TabTip")\n                {\n                    process.Kill();\n                    break;\n                }\n            }\n        }\n\n    }\n}
2321	using System.Net;\nusing System.Net.Mail;\n\n\nSmtpClient smtpClient = new SmtpClient();\nNetworkCredential basicCredential = \n    new NetworkCredential("username", "password"); \nMailMessage message = new MailMessage(); \nMailAddress fromAddress = new MailAddress("from@yourdomain.com"); \n\nsmtpClient.Host = "mail.mydomain.com";\nsmtpClient.UseDefaultCredentials = false;\nsmtpClient.Credentials = basicCredential;\n\nmessage.From = fromAddress;\nmessage.Subject = "your subject";\n//Set IsBodyHtml to true means you can send HTML email.\nmessage.IsBodyHtml = true;\nmessage.Body = "<h1>your message body</h1>";\nmessage.To.Add("to@anydomain.com"); \n\ntry\n{\n    smtpClient.Send(message);\n}\ncatch(Exception ex)\n{\n    //Error, could not send the message\n    Response.Write(ex.Message);\n}
2322	Type t = typeof(x) \n        for fields:\n        t.GetFields().Where(p=> !p.Attributes.HasFlag(FieldAttributes.NotSerialized));\n        for type\n        t.Attributes.HasFlag(TypeAttributes.Serializable);
2323	public void SetColor(DataGridViewRow row, string columnName, int cellIndex)\n{\n    var data = (GridViewRow)row.DataItem;\n    int number = Convert.ToInt32(data[columnName]);\n    if (number > 74) return;\n\n    row.Cells[cellIndex].BackColor = Color.Red;\n}\n\nprotected void gv1_RowDataBound(object sender, GridViewRowEventArgs e)\n{\n    if (e.Row.RowType != DataRowType.DataRow) return;\n    SetColor(e, "A", 2);\n}
2324	if(e.Row.RowType == DataControlRowType.DataRow)\n {\n      (e.Row.FindControl("ddlStateCode") as DropDownList).ForeColor = System.Drawing.Color.LightBlue;\n }
2325	ISpatialReferenceFactory srFactory = new SpatialReferenceEnvironmentClass();\n\nIGeographicCoordinateSystem gcs = srFactory.CreateGeographicCoordinateSystem((int)esriSRGeoCSType.esriSRGeoCS_WGS1984);\nISpatialReference sr1 = gcs;\n\nIPoint point = new PointClass() as IPoint;\npoint.PutCoords(-92.96000, 44.9227);\n\nIGeometry geometryShape;\ngeometryShape = point;\ngeometryShape.SpatialReference = sr1;\n\ngeometryShape.Project(mapControl.SpatialReference);\n\nmapControl.DrawShape(geometryShape);
2326	CREATE PROC dbo.RBARBane(@tvp dbo.MyUserDefinedTableType)\nAS\nBEGIN\n    UPDATE\n        T\n    SET\n        col1 = TVP.col1\n        -- all the columns that need updated\n    FROM\n        dbo.Table T\n        INNER JOIN\n            @tvp TVP\n            ON TVP.key1 = T.key1\nEND
2327	#if WIN64\n        return Document.IdToObject(ObjectID.ToInt64()); //returns an object\n#else\n        return Document.IdToObject(ObjectID.ToInt32()); //returns an object\n#endif
2328	root.Elements("elements").Select(\n    e => e.Elements("element").Average(f => (int)f.Attribute("attribute"))\n)
2329	MessageBox.Show()
2330	private void Button_Click(object sender, RoutedEventArgs e)\n    {\n        MoveGrid();\n    }\n\n    private void MoveGrid()\n    {\n        var sb = new Storyboard();\n        var animation = new DoubleAnimation()\n        {\n            To = 0,\n            From = content1.ActualWidth,\n            EnableDependentAnimation = true\n        };\n        Storyboard.SetTargetProperty(animation, "Width");\n        Storyboard.SetTarget(animation, content1);\n        sb.Children.Add(animation);\n\n        sb.Begin();\n    }
2331	Program Files
2332	ImageAnnotation logo = new ImageAnnotation();\n logo.X = 75;\n logo.Y = 60; \n logo.Image = "imagePath";\n chart.Annotations.Add(logo);
2333	class CellInfo<T>\n{\n    public string Title { get; set; }\n    public string FormatString { get; set; }\n    public Func<T, object> Selector { get; set; }\n}\n\nDictionary<string, CellInfo<Person>> dict = new Dictionary<string, CellInfo<Person>>();\n\ndict.Add("LastName", new CellInfo<Person> { Selector = p => p.LastName });\ndict.Add("Age", new CellInfo<Person> { Selector = p => p.Age });\n\nforeach (Person p in someCollection)\n{\n    foreach (var cellInfo in dict)\n    {\n        object value = cellInfo.Value.Selector(p);\n    }\n}
2334	_contextProvider.BeforeSaveEntitiesDelegate = BeforeSaveEntities;\n\nprivate Dictionary<Type, List<EntityInfo>> BeforeSaveEntities(Dictionary<Type, List<EntityInfo>> arg)\n        {\n            var resultToReturn = new Dictionary<Type, List<EntityInfo>>();\n            foreach (var type in arg.Keys)\n            {\n                var entityName = type.FullName;\n                var list = arg[type];\n                if (entityName == "xyz" && list[0].EntityState!="Added")\n                {\n                    resultToReturn.Add(type, list);\n                }\n            }\n            return arg;\n        }
2335	public ActionResult Index(string jobType)\n{\n    return (jobType.ToLower() == "this") ?\n        RedirectToAction("CandidateResults") :\n        RedirectToAction("JobResults");\n}\n\nprivate ActionResult CandidateResults()\n{\n    var model = //logic\n    return View(model);\n}\nprivate ActionResult JobResults()\n{\n    var model = //logic\n    return View(model);\n}
2336	var certificateStore = new CmsSignedData(new FileStream("chain.p7b", FileMode.Open));\nIX509Store x509Certs = certificateStore.GetCertificates("Collection");\nArrayList a = new ArrayList(x509Certs.GetMatches(null));\nX509Certificate signerCert = (X509Certificate) a[0];\n\nvar gen = new CmsSignedDataGenerator();\ngen.AddCertificates(x509Certs);\ngen.AddSigner(_privateKey, signerCert, CmsSignedGenerator.DigestSha1);\n\nCmsProcessable msg = new CmsProcessableByteArray(Encoding.ASCII.GetBytes(FullUnsignedMessage));\n\nCmsSignedData signedData = gen.Generate(msg, true);
2337	var p= new System.Diagnostics.Process();\n    p.StartInfo = new ProcessStartInfo(arguments)\n    {\n        FileName="cmd.exe",\n        Arguments = "/C"+arguments,\n        CreateNoWindow = true,\n        UseShellExecute = false,\n        RedirectStandardOutput = true,\n        RedirectStandardInput = true,\n        RedirectStandardError = true\n    };\np.Start();
2338	class nac\n{\n   public decimal nr_zbor ...\n   public string airport ...\n   public string company ...\n}\n\nList<nac> nacs = new List<nac>();
2339	private static int RandomNumberEven(int min, int max)\n        {\n            Random random = new Random();\n            int ans = random.Next(min, max);\n            if (ans % 2 == 0) return ans;\n            else\n            {\n                if (ans + 1 <= max)\n                    return ans + 1;\n                else if (ans - 1 >= min)\n                    return ans - 1;\n                else return 0;\n            }\n        }\n\nprivate static int RandomNumberOdd(int min, int max)\n        {\n            Random random = new Random();\n            int ans = random.Next(min, max);\n            if (ans % 2 == 1) return ans;\n            else\n            {\n                if (ans + 1 <= max)\n                    return ans + 1;\n                else if (ans - 1 >= min)\n                    return ans - 1;\n                else return 0;\n            }\n        }
2340	msWordApp.Quit()
2341	var SQL1 = (from i in ESE.viw_kisiler\n                           select i);\n\n                DataTable DT = LINQToDataTable(SQL1);\n\n                var SQL2 = (from t in DT.AsEnumerable()\n                         where t.Field<string>(ColumnName).Contains(Word)\n                         select t);
2342	XmlNodeList searchResultNodes = searchResult.ChildNodes;\n                        foreach (XmlNode node in searchResultNodes)\n                        {\n                            XmlElement nodeXml = GetElement(node.OuterXml);\n                            ProcessList.DocumentElement.AppendChild(ProcessList.ImportNode(nodeXml, false));\n                        }
2343	"C:\Program Files (x86)\MiKeSoft\PCG Tools\PcgTools.exe" debug "%1"
2344	submit N jobs (where N is your max in flight)\n\nWait for a job to complete, and if queue is not empty, submit next job.
2345	webbrowser1.Document.getElementById("id1").SetAttribute("style","display:none;");
2346	var cellValues = from cell in row.Descendants<Cell>()\n                    select cell;\n\nforeach (var cell in cellValues)\n{\n    if(cell.DataType != null \n        && cell.DataType.HasValue \n        && cell.DataType == CellValues.SharedString\n        && int.Parse(cell.CellValue.InnerText) < sharedString.ChildElements.Count)\n    {\n        DoSomething(sharedString.ChildElements[int.Parse(cell.CellValue.InnerText)].InnerText);\n    }\n    else\n    {\n        DoSomething(cell.CellValue.InnerText);\n    }\n}
2347	You can try something like this you have to reference \n  System.Drawing.dll from the projects --> Reference--> Add\n\n//Namespace:  System.Drawing.Printing\n//Assembly:  System.Drawing (in System.Drawing.dll)\n\nPrintDocument printDoc = new PrintDocument();\nPaperSize oPS = new PaperSize();\noPS.RawKind = (int)PaperKind.A4;\nPaperSource oPSource = new PaperSource();\noPSource.RawKind = (int) PaperSourceKind.Upper;\n\nprintDoc.PrinterSettings = new PrinterSettings();\nprintDoc.PrinterSettings.PrinterName = sPrinterName;\nprintDoc.DefaultPageSettings.PaperSize = oPS;\nprintDoc.DefaultPageSettings.PaperSource = oPSource;\nprintDoc.PrintPage += new PrintPageEventHandler(printDoc_PrintPage);\nprintDoc.Print();\nprintDoc.Dispose();
2348	var date = DateTime.Now.ToString("dd MMMM", CultureInfo.InvariantCulture);
2349	using (ZipFile zip = new ZipFile())\n  {\n    string[] files = Directory.GetFiles(path);\n    // filter the files for *.pdf\n    zip.AddFiles(files, "Test"); //Test Folder \n    zip.Save(path+"/test.zip"); \n  }
2350	List<int> list = new List<int>(arr);
2351	IList<MenuItem> itemsToRemove = Items.Cast<object>().Where(mi => mi is MenuItem && ((MenuItem) mi).Tag == "Dynamic").ToList();\nforeach (MenuItem item in itemsToRemove)\n{\n    Items.Remove(item);\n}
2352	public static class TreeNodeExtensions {\n    public static int Level(this TreeNode value) {\n      if (Object.ReferenceEquals(null, value))\n        throw new ArgumentNullException("value"); // <- or return 0 \n\n      int result = 0;\n\n      for (TreeNode node = value; node != null; node = node.Parent)\n        result += 1;\n\n      return result;\n    }\n  }\n\n  ... \n\n  TreeNode node1 = ...\n  TreeNode node2 = ...\n\n  if (node1.Level() != node2.Level()) {\n    ...\n  }
2353	string[] CCindividual = Regex.Split(CCstring, "CC[0-9]+=").Where(x => x != "").\n    Select(x => x.Trim()).ToArray<String>();
2354	using (var streamReader = new StreamReader("fileName.json"))\n{\n    string json = streamReader.ReadToEnd();\n    var deserializedObject = JsonConvert.DeserializeObject<SomeClass>(json);\n}
2355	if (e.Row.RowType == DataControlRowType.DataRow)\n        { //convert that row }
2356	private void ImageForm_Load(object sender, EventArgs e)\n        {\n var f1 = GetLatestWritenFileFileInDirectory(new DirectoryInfo(@"C:\Users\Public\Pictures\Sample Pictures"));\n  pictureBox1.ImageLocation = f1.FullName;\n}\n\n\n     private List<FileInfo> GetLastUpdatedFileInDirectory(DirectoryInfo directoryInfo)\n        {\n            FileInfo[] files = directoryInfo.GetFiles();\n            List<FileInfo> lastUpdatedFile = new List<FileInfo>();\n            DateTime lastUpdate = DateTime.MinValue;\n            foreach (FileInfo file in files)\n            {\n                if (file.LastAccessTime > lastUpdate)\n                {\n                    lastUpdatedFile.Add(file);\n                    lastUpdate = file.LastAccessTime;\n                }\n            }\n\n            return lastUpdatedFile;\n        }
2357	private void GetRepliesStats_Load(object sender, EventArgs e)\n        {\n            WebBrowser bro = new WebBrowser();\n            bro.Navigate("http://library.islamweb.net/hadith/RawyDetails.php?RawyID=1");\n            bro.DocumentCompleted += new WebBrowserDocumentCompletedEventHandler(BrowsingCompleted);\n\n\n        }\n\nprivate void BrowsingCompleted(object sender, WebBrowserDocumentCompletedEventArgs e)\n            {\n                WebBrowser browser = sender as WebBrowser;\n\n                Stream documentStream = browser.DocumentStream;\n                StreamReader streamReader = new StreamReader(documentStream, Encoding.GetEncoding("windows-1256"));\n\n                documentStream.Position = 0L;\n                String My_Result = streamReader.ReadToEnd();\n\n\n}
2358	IEnumerable<Member> searchResults = members.ToList().Where(m => keywords.Any(k => m.Summary.Contains(k)))
2359	string usr = Request.QueryString["usr"];
2360	public static bool IsValidLogin(string user, string password)\n{\n    XDocument doc = XDocument.Load("Login.xml");\n\n    return doc.Descendants("id")\n              .Where(id => id.Attribute("userName").Value == user \n                     && id.Attribute("passWord").Value == password)\n              .Any();\n}
2361	if((AxiomSubSet.Select(x => x.CC).Distinct().ToList()).Count > 1)
2362	var id = Session["id"];\n   Session["id"] = id;
2363	var index = List.FindIndex(x=>x.ID==50);
2364	panel1.Dock = DockStyle.Fill;\npanel1.Margin = new Padding(0);
2365	this.ObjectDataSource1.TypeName = "NamespaceName.ClassName";\nthis.ObjectDataSource1.SelectMethod = "SelectMethodName";\nthis.ObjectDataSource1.InsertMethod = "InsertMethodName";
2366	playlists = new List()\nfor line in file\n  if line is blank\n    continue\n  if line starts with "STATICTEXT"\n    playslists.add(playlist)\n    playlist = new Playlist()\n  song = parse song //this is something that regex does good\n  playlist.add(song)
2367	cmd.Parameters.AddWithValue("@FirstName", txtFirstName.Text);\ncmd.Parameters.AddWithValue("@LastName", txtLastName.Text);\ncmd.Parameters.AddWithValue("@FamDOB", txtFamDOB.Text);\ncmd.Parameters.AddWithValue("@Medical", txtMedical.Text);\ncmd.Parameters.AddWithValue("@ID", txtFamID.Text);
2368	\[([A-Za-z]+)?#(\d)+\]
2369	private void printPreviewToolStripMenuItem_Click(object sender, EventArgs e)\n    {\n        if (PrintPreviewIcon != null)\n        {\n            PrintPreviewTimer.Enabled = true;\n        }\n\n        PlotChart.Printing.PrintPreview();\n    }\n\n    private void PrintPreviewTimer_Tick(object sender, EventArgs e)\n    {\n        foreach (Form f in Application.OpenForms)\n        {\n            if (f is PrintPreviewDialog)\n            {\n                f.Icon = PrintPreviewIcon;\n                PrintPreviewTimer.Enabled = false;\n            }\n        }\n    }
2370	def gen_command_string(path, url):\n    cmd = path + 'TortoiseProc.exe /command:ignore /path:\"%s\" /closeonend:0' % url\n    return cmd\n\nSVN_PATH = 'C:/Program Files/TortoiseSVN/bin'\nHG_PATH = 'C:/Program Files/TortoiseHg/bin/'\n\ncmd = gen_command_string(SVN_PATH, 'http://google.com')\ncall(cmd)
2371	using System.IO.Ports;\n\npublic void TestSerialPort()\n{\nSerialPort serialPort = new SerialPort("COM1", 115200, Parity.None, 8, StopBits.One);\nserialPort.Open();\nbyte[] data = new byte[] { 1, 2, 3, 4, 5 };\nserialPort.Write(data, 0, data.Length);\nserialPort.Close();\n}
2372	class FooTextBox : TextBox\n{\n    public FooTextBox()\n    {\n        margin = new Panel();\n\n        margin.Enabled   = false;\n        margin.BackColor = Color.LightGray;\n        margin.Top       = 0;\n        margin.Height    = ClientSize.Height;\n        margin.Left      = <whatever>;\n        margin.Width     = 1;\n\n        Controls.Add(margin);\n    }\n\n    Panel margin;\n}
2373	CREATE UNIQUE INDEX uix ON PERSON(NAME, LASTNAME) WHERE ACTIVE=1;
2374	int distance;\nif (int.TryParse(txtEvDistance.Text, out distance))\n{\n    // it's a valid integer => you could use the distance variable here\n}
2375	private void webBrowser1_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e) {\n        if (e.Url.Equals(webBrowser1.Url)) {\n            foreach (HtmlElement ele in webBrowser1.Document.GetElementsByTagName("img")) {\n\n                ele.AttachEventHandler("onclick", Document_Click);\n            }\n        }\n    }
2376	void Main() // run this in LinqPad\n{\nstring text = "I was here on {D}/{MMM}/{YYYY}.";\nstring result = Regex.Replace(text, "{[a-zA-Z]+}", ReplaceMatched);\n\nConsole.WriteLine(result);\n}\n\nprivate string ReplaceMatched(Match match)\n{\nif( match.Success )\n{\nswitch( match.Value )\n{\ncase "{D}":\nreturn DateTime.Now.Day.ToString();\ncase "{YYYY}":\nreturn DateTime.Now.Year.ToString();\ndefault:\nbreak;\n}\n}\n// note, early return for matched items.\n\nConsole.WriteLine("Warning: Unrecognized token: '" + match.Value + "'");\nreturn match.Value;\n}
2377	(data-[a-z][^=]*)=("[a-z0-9"#][^=]*")
2378	List<Project> projects = null;\n\n        var weeksAndHours = projects\n            .Select(p => new \n            {\n                Id = p.Id,\n                Name = p.Name,\n                Weeks = p\n                    .SubProjects.SelectMany(sp => sp.Weeks)\n                    .Where(w => w.Week >= 30 && w.Week <= 35)\n                    .GroupBy(w => w.Week)\n                    .Select(g => new { week = g.Key, hours = g.Sum( w=> w.Hours) })\n            });
2379	(e.OriginalSource as Border).DataContext as Hour
2380	DataGridView.AutoGenerateColumns = true;\nDataGridView.DataSource = dbconnection.getDataReader();\nDataGridView.DataBind();\n\nint result;\n\nfor (int i = 0; i < DataGridView.Rows.Count; i++)\n{\n  foreach (TableCell c in DataGridView.Rows[i].Cells)\n  {\n    if (int.TryParse(c.Text, out result))\n    {\n      c.Text = String.Format("{0:n0}", result);\n    }\n  }\n}
2381	var myBrush = new LinearGradientBrush(Color.Red, Color.Black, myAngle);\nmyBrush.StartPoint = new Point(myRectangle.X, myRectangle.Y);\nmyBrush.EndPoint = new Point(myRectangle.X+myRectangle.Width, myRectangle.Y+myRectangle.height);
2382	var zero_counts = piks.Select(p => p.Count(c => c == 0));
2383	var a = new A();\n\nConsole.WriteLine(a.GetType().BaseType);
2384	var clientOffers = (from cli in dbContext.Clients\n\njoin cli_ofr in dbContext.ClientOffer\non cli.ClientId\nequals cli_ofr.ClientId\n\njoin ofr in dbContext.Offers\non cli_ofr.OfferId\nequals ofr.OfferId\n\nselect new {\nClient = new Client { Guid = cli.Guid...},\nOffer = new Offer { Guid = ofr.Guid... }\n}).toList();
2385	Image tappedImage = new Image();\n    tappedImage = e.OriginalSource as Image;\n    textbox.Text = tappedImage.DataContext.ToString();
2386	public void AddEmailToDB(string email)\n{\n    // first find out if the email already exists in the database\n    bool isDuplicate = ...; \n    // if it does, simply return and do nothing\n    if(isDuplicate) return; \n\n    // if control reaches here then the email is not\n    // a duplicate and you can do your normal processing\n}
2387	AddNumber method = r => \n{\n    Console.WriteLine(r + r);\n    Console.Read();\n};
2388	result=string.Format("{0:0.0}",Math.Truncate(value*10)/10);
2389	SmtpClient smtpClient = new SmtpClient("mail.MyWebsiteDomainName.com", 25);\n\nsmtpClient.Credentials = new System.Net.NetworkCredential("info@MyWebsiteDomainName.com", "myIDPassword");\nsmtpClient.UseDefaultCredentials = true;\nsmtpClient.DeliveryMethod = SmtpDeliveryMethod.Network;\nsmtpClient.EnableSsl = true;\nMailMessage mail = new MailMessage();\n\n//Setting From , To and CC\nmail.From = new MailAddress("info@MyWebsiteDomainName", "MyWeb Site");\nmail.To.Add(new MailAddress("info@MyWebsiteDomainName"));\nmail.CC.Add(new MailAddress("MyEmailID@gmail.com"));\n\nsmtpClient.Send(mail);
2390	var files = Directory.GetFiles(@"c:\mydir", "*.pdf")\n                     .Where(file => Regex.IsMatch(Path.GetFileName(file), "^[0-9]+"));\n                     //.ToArray() <-add if you want a string array instead of IEnumerable
2391	TableCell tblCell = (TableCell)button.Parent;
2392	private object RefineResults(ResultList<Result> results)\n{           \n  // results has three properties: Summary, QueryDuration, and List\n  var refined = results.Select(x => new\n  {\n    x.ID, x.FirstName, x.LastName\n  });\n\n  return new { Results = refined, Summary = results.Summary, QueryDuration = results.QueryDuration };\n}
2393	use XmlDocument.OuterXml to get the XmlDocument as a string. ie:\n\nXmlDocument doc1 = new XmlDocument();\ndoc.LoadXml("Some XML");\nXmlDocument doc2 = new XmlDocument();\ndoc2.LoadXml("Some other XML");\nStringBuilder sb = new StringBuilder();\nsb.Append(doc1.OuterXml);\nsb.Append(doc2.OuterXml);
2394	string text = GetLongText();\nbyte[] ba = Encoding.UTF8.GetBytes(text);\nusing (MemoryStream ms = new MemoryStream())\n{\n    using (ZipStorer zip = ZipStorer.Create(ms, "My Zip"))\n    {\n        zip.AddStream(ZipStorer.Compression.Deflate, "text.txt", new MemoryStream(ba), DateTime.Now, "My Text");\n    }\n    Response.AppendHeader("content-disposition", "attachment; filename=MyZip.zip");\n    Response.ContentType = "application/zip";\n    Response.BinaryWrite(ms.ToArray());\n    Response.End();\n}\n}
2395	doc.Load(AppDomain.CurrentDomain.BaseDirectory + "CrystalReport1.rpt");
2396	"data source=localhost\sqlexpress; initial catalog=Halloween; integrated security=True;MultipleActiveResultSets=True;"
2397	System.Web.Hosting.HostingEnvironment.MapPath("~/images")
2398	return myList.Any(item => item.InstanceName == "Searched name");
2399	var integer = rnd1.Next((int)numericUpDown_RandomMin.Value, (int)numericUpDown_RandomMax.Value);
2400	decimal index = SeriesList.Select(i => i.Childs.Where(j => j.key == "aa"))\n    .FirstOrDefault()\n    .FirstOrDefault().Value;
2401	ColumnClickEventArgs args = new ColumnClickEventArgs(0);\n        listView1_ColumnClick(this, args);
2402	LHS = RHS1 RHS2 ... RHSn ;
2403	IUnknown* pUnk = reinterpret_cast<IUnknown*>(buff);\nIBufferByteAccess* pBufferByteAccess = nullptr;\nHRESULT hr = pUnk->QueryInterface(IID_PPV_ARGS(pBufferByteAccess);\nbyte *pbytes = nullptr;\nhr = pBufferByteAccess->Buffer(&pbytes);
2404	DataTable _newTable = new DataTable();\n\nforeach(DataRow _row in _dataTable) {\n\n}
2405	.If(t => t.Name.EndsWith("Adapter"))
2406	int password = random.Next(1000, 100000000);
2407	PrivateType myTypeAccessor = new PrivateType(typeof(TypeToAccess));\nmyTypeAccessor.SetStaticFieldOrProperty("bNoError", false);
2408	var xml = new StreamReader("xmlPath");\nvar t = new XmlSerializer(typeof(Boolean),"http://schemas.microsoft.com/2003/10/Serialization/");\nvar o = t.Deserialize(xml); // true
2409	var pageText = page.PageText.Replace("Corporate Trade Payment", "\r\nCorporate Trade Payment").Replace("Preauthorized ACH Credit", "\r\nPreauthorized ACH Credit");
2410	subst z: c:\windows\assembly
2411	public class FileLog : ILog\n{\n    public void Log(string text)\n    {\n        // write text to a file\n    }\n}\n\npublic class DatabaseLog : ILog\n{\n    public void Log(string text)\n    {\n        // write text to the database\n    }\n}\n\npublic interface ILog\n{\n    void Log(string text);\n}\n\npublic class SomeOtherClass\n{\n    private ILog _logger;\n\n    public SomeOtherClass(ILog logger)\n    {\n        // I don't know if logger is the FileLog or DatabaseLog\n        // but I don't need to know either as long as its implementing ILog\n        this._logger = logger;\n        logger.Log("Hello World!");\n    }    \n}
2412	public int DoSomething() {\n    CheckValid(); // might throw an exception\n    return 1;\n}
2413	public interface IValidationHandle \n     {\n       bool Validate();         \n     }\n\n      //TODOs: Separate classes\n      public class IsTrulyValidValidator:IValidationHandle;\n      public class IsValidValitor:IValidationHandle;\n      public class EntirelyFilledValidator:IValidationHandle;\n\n      class Client\n      {\n           private IValidationHandle validator=null;\n           public void SetValidationHandler(IValidationHandle validator)\n           {\n             this.validator=validator;\n           }\n            //Where You need call\n            validator.Validate();\n       }
2414	Regex.Split(sentence, @"(?:\s*,\s*)|\s+")
2415	FileStream fo = new FileStream("hello.txt", FileMode.Open);\nStreamReader sr = new StreamReader(fo);
2416	Image img1 = Image.FromFile(file.FullName);
2417	string AMCStartDate = Convert.ToDateTime(AMCStartDateTextBox.Text).ToShortDateString();\ncommand.Parameters.Add(new OracleParameter("p_AMCSTARTDATE", OracleDbType.Date));\ncommand.Parameters["p_AMCSTARTDATE"].Value = AMCStartDate;
2418	INSERT INTO tblTeams (TeamName, TeamTag) VALUES(@TEAMNAME, @TEAMTAG)
2419	int precision = (int)Math.Max(0, -Math.Floor(Math.Log10(value)));
2420	[Browsable(true), EditorBrowsable(EditorBrowsableState.Always)]\n    public new event EventHandler TextChanged {\n        add {\n            base.TextChanged += value;\n        }\n        remove {\n            base.TextChanged -= value;\n        }\n    }
2421	JSON.parse
2422	for (int i = 1; i <= 12; ++i)\n{\n    DateTime firstDate = new DateTime(2012, i, 1, 0, 0, 0);\n    int daysInMonth = DateTime.DaysInMonth(2012, i);\n    DateTime endDate = new DateTime(2012, i, daysInMonth-1, 23, 59, 59);\n    DateTime TransactionDate = new DateTime(2012, i, daysInMonth, 0, 0, 0);\n    Console.WriteLine(firstDate.ToString() + \n                "," + endDate.ToString() + \n                "," + TransactionDate.ToString());\n }
2423	StreamWriter Writer = new StreamWriter("Filename");\n    string SQL = "select Item from Table where ID in (1, 2, 3)";\n    SqlCommand Command = new SqlCommand(SQL, Con);\n    SqlDataReader Reader = Command.ExecuteReader();\n    while (Reader.Read())\n        Writer.WriteLine(Reader["Item"].ToString());\n    Reader.Close();\n    Writer.Close();
2424	//Count-1 to stop at the second to last item\nfor(int i = 0; i < dm.Count-1; ++i)\n{\n      mdmList.Add(new ModifiedDefectMap()\n      {                        \n           StartingPoint = dm[i].Start,\n           Length =  dm[i+1].Start - dm[i].Start\n      });\n}
2425	Random r = new Random();\n\nfor (int i = 0; i < 40; i++)\n        {\n            {\n                {\n                    int distance = r.Next(0, 10000);\n                    var rv = r.Next(0, 359);\n                    var x = Math.Sin(rv * Math.PI / 180) * 225;\n                    rv = r.Next(0, 359);\n                    var y = Math.Cos(rv * Math.PI / 180) * 225;\n                    Ellipse e = new Ellipse();\n                    e.Fill = new SolidColorBrush(Color.FromArgb(255, (byte)(counter * 5), (byte)(counter * 3), (byte)(counter * 1)));\n                    e.Margin = new Thickness(y, -150 + x, 0, 0);\n                    e.Width = 25;\n                    e.Height = 25;\n                    counter++;\n                    PointsGrid.Children.Add(e);\n                    //MessageBox.Show(""); // Additional line\n                }\n            }\n        }
2426	proCraneVertices[2] =  realCraneVertices[1].Clone();
2427	public static Series GetIrregularTimeChartData()\n{\n    List<Series> Series = new List<Series>();\n\n    // get data from db and convert it to chart data (name, value, date)\n    var chartSeries = db.Graphs.GroupBy(x => new { x.Name })\n                      .Select(g => new\n                      {\n                          Name = g.Key,\n                          Data = g.Select(x => x.Value).ToArray(),\n                          Date = g.Select(x => x.Date).ToArray()\n                      }).ToArray();\n\n    // create 2D array => [value, date]\n    foreach (var item in chartSeries)\n    {\n        int lenght = item.Data.Count();\n        object[,] data = new object[lenght, 2];\n        for (int i = 0; i < lenght; i++)\n        {\n            data[i, 0] = item.Date[i];\n            data[i, 1] = item.Data[i];\n        }\n        Series localSeries = new Series { Name = item.Name, Data = new Data(data) };\n        Series.Add(localSeries);\n    }\n\n    return Series;\n}
2428	vertex1= A  \nvertex2 = point(A.x, 0)  \nvertex3= B  \nvertex4 = point(B.x, 0)  \nvertex5= C  \nvertex6 = point(C.x, 0)  \nvertex7= D  \nvertex8 = point(D.x, 0)
2429	// XAML in Window A\n\n<StackPanel>\n    <Button Click="Button_Click">Show Window</Button>\n    <Button Click="Button_Click_1">Garbage Collect</Button>\n</StackPanel>\n\n// Code in Window A\n private void Button_Click(object sender, RoutedEventArgs e)\n        {\n            WindowB windowB = new WindowB(this);\n            windowB.Show();\n        }\n\n        private void Button_Click_1(object sender, RoutedEventArgs e)\n        {\n            GC.Collect();\n        }\n\n    // Code in WindowB\n    public WindowB(WindowA windowA)\n    {\n        this.Owner = windowA;\n        InitializeComponent();\n    }\n\n    ~WindowB()\n    {\n        Console.WriteLine("Gone up in a puff of smoke");\n    }
2430	protected void Application_BeginRequest(Object sender, EventArgs e)\n{\n    HttpApplication app = (HttpApplication)sender;\n\n    if (Request.RawUrl.StartsWith("http://b.com"))\n    {\n        app.Response.Redirect(Request.RawUrl.Replace("http://b.com", "http://a.com"), true);            \n        return;\n    }       \n}
2431	List<List<int>> foo = new List<List<int>> { new List<int> { 1, 2, 3 }, new List<int> { 1, 2 } };\nvar flat = foo.SelectMany(x => x).ToList();
2432	public string GetData(int typeOfData)\n{\n    string query = null;\n    switch (typeOfData) {\n    case 1:\n        query = "/data/car/milafe/option";\n        break;\n    case 2:\n        query = "/data/car/fuel/option";\n        break;\n    }\n\n    var results = from e in db.XPathSelectElements(query)\n        select new { ID = e.Attribute("value").Value, Name = e.Attribute("text").Value };\n}
2433	for(int i=0;i<DataGrid.items.count-1;i++)\n{\n     CheckBox chkBx = (CheckBox)DataGrid.items[i].Cells[3].FindControl("EmpId") ;\n     if( chkBx !=null && chkBx.Checked )\n      {\n        Response.Write(DataGrid.items[i].Cells[1].Text.ToString() );\n      }\n}
2434	DataTable.AsEnumerable()\n         .Where(r => r.Field<int>("Employee") == 123)\n         .OrderByDescending (r => r.Field<DateTime>("Date"))\n         .FirstOrDefault (r => r.Field<DateTime>("Date") < new DateTime(2013, 7, 8) )
2435	foreach (Block block in rtb.Blocks)\n        {\n            if (block is Paragraph)\n            {\n                Paragraph paragraph = (Paragraph)block;\n                foreach (Inline inline in paragraph.Inlines)\n                {\n                    if (inline is InlineUIContainer)\n                    {\n                        InlineUIContainer uiContainer = (InlineUIContainer)inline;\n                        if (uiContainer.Child is Image)\n                        {\n                            Image image = (Image)uiContainer.Child;\n//Copy Image source to another repository folder and save the path.\n                        }\n                    }\n                }\n            }
2436	BOXTRANSACTION boxTransaction = new BOXTRANSACTION();\n                    {\n                        boxTransaction.BOXID = long.Parse(dr["BoxId"].ToString());\n                        boxTransaction.BOXIDSpecified = true;\n                        boxTransaction.TRANSACTIONDATE = DateTime.Parse(dr["TransactionDate"].ToString());\n                        boxTransaction.TRANSACTIONDATESpecified = true;
2437	PrivateObject.GetField()
2438	private void numericUpDown1_KeyUp(object sender, KeyEventArgs e)\n        {\n            numericUpDown1.Focus();\n            //Edit:\n            numericUpDown1.Select(desiredPosition,0)\n        }
2439	if ( source != null )\n     {\n        var keys = ( from d in source\n                          from k in d.Keys\n                          select k ).Distinct();\n        foreach ( var key in keys)\n        {\n           //...some logic to try and find if the key.Key Value in question has any legitimate value other than null to set the DataType to      \n           var thisKey = key;\n           var valueNotNull = source.FirstOrDefault( dictionary => dictionary[thisKey] != null );\n           var colType = valueNotNull != null ? valueNotNull[thisKey].GetType() : typeof( string );\n\n\n           dt.Columns.Add( new DataColumn()\n           {\n              ColumnName = thisKey,\n              DataType = colType\n           } );\n\n        }
2440	public static void forceSetForegroundWindow( IntPtr hWnd, IntPtr mainThreadId )\n{\n    IntPtr foregroundThreadID = GetWindowThreadProcessId( GetForegroundWindow(), IntPtr.Zero );\n    if ( foregroundThreadID != mainThreadId )\n    {\n        AttachThreadInput( mainThreadId, foregroundThreadID, true );\n        SetForegroundWindow( hWnd );\n        AttachThreadInput( mainThreadId, foregroundThreadID, false );\n    }\n    else\n        SetForegroundWindow( hWnd );\n}
2441	SPUtility.GetLocalizedString(...)
2442	cmd.CommandText = "select count(id) from myTable where word = '" + word + "';";\ncmd.CommandType = CommandType.Text;\nint RowCount = 0;\n\nRowCount = Convert.ToInt32(cmd.ExecuteScalar());\n\ncmd.CommandText = "select id from myTable where word = '" + word + "';";\nSQLiteDataReader reader = cmd.ExecuteReader();\n\n//...
2443	IList<string> keys = parent.Properties().Select(p => p.Name).ToList();
2444	public class ViewModel\n{\n    public TypeOfYourModel MyModel1 { get; set; }\n    public TypeOfYourModel MyModel2 { get; set; }\n}
2445	public static DateTime GetCurrentDate() \n{ \n   return DateTime.Now.AddHours(6); \n}
2446	//set up a collection\n\n   var xptos = new List<Xpto>() \n            { new Xpto() \n            { Sons = new List<Son> \n                { new Son() { Names = "test1" },\n                  new Son() { Names = "test2" } \n                }\n            },\n          new Xpto() \n          {\n             Sons = new List<Son> {\n             new Son() { Names = "test3" } \n           }\n           }};    \n\n //select the names\nvar names = xptos.SelectMany(r => r.Sons).Where(k => k.Names != null)\n           .Select(r => r.Names + ",") .ToList();\n\nnames.ForEach(n => Console.WriteLine(n));
2447	string fontsfolder = System.Environment.GetFolderPath(\nSystem.Environment.SpecialFolder.Fonts);
2448	ConfigurationManager.GetSection
2449	namespace System.Runtime.CompilerServices\n{\n   [AttributeUsage(AttributeTargets.Method)]\n   public sealed class ExtensionAttribute : Attribute\n   {\n      public ExtensionAttribute() { }\n   }\n}
2450	String path = System.Reflection.Assembly.GetExecutingAssembly().Location;\npath = System.IO.Path.GetDirectoryName(path);\nDirectory.SetCurrentDirectory(path);
2451	System.Net.NetworkInformation
2452	using(PrincipalContext principalContext = new PrincipalContext( ContextType.Domain,\n            TargetDomain,\n            TargetDomainUserName,\n            TargetDomainPassword))\n using(var userPrincipal = UserPrincipal.FindByIdentity(principalContext, IdentityType.SamAccountName, "somaloginname"))\n{ \nuserPrincipal.SetPassword(newPassword);\n//or userPrincipal.ChangePassword\n            userPrincipal.Save();\n            }
2453	int i = e.RowIndex;
2454	Fraction(1, 3)
2455	_zoom = (int)Math.Round(System.Convert.ToDouble(zoom));
2456	int serialNumber = 1;\n\nvar query = from r0w1 in dt.AsEnumerable()\n            join r0w2 in ndt.AsEnumerable()\n            on r0w1.Field<string>("ID") equals r0w2.Field<string>("CID")\n            select new string [] { serialNumber++.ToString() }\n                   .Concat(r0w2.ItemArray.Skip(1))\n                   .Concat(r0w1.ItemArray).ToArray();
2457	var x = Convert.ChangeType(15, Enum.GetUnderlyingType(typeof(EmpType)))
2458	string list<T>(IEnumerable<T> enumerable)\n {\n   List<T> list = new List<T>(enumerable);\n   return string.Join(",", list.ToArray());\n } \n\n//...\nstring sql= String.Format("INSERT INTO registrations({0}) VALUES({1})",\n                list(fields.Keys),\n                list(fields.Values));
2459	string url = "http://sms80.com";\nHttpWebRequest http = (HttpWebRequest)WebRequest.Create(url);\nhttp.CookieContainer = _cookieJar;\nhttp.Connection = "Keep-alive";\nhttp.Method = "POST";\nhttp.ContentType = "application/x-www-form-urlencoded";\nstring postData="username=" + username + "&password=" + password;\nbyte[] dataBytes = UTF8Encoding.UTF8.GetBytes(postData);\nhttp.ContentLength = dataBytes.Length;\nStream postStream = http.GetRequestStream();\npostStream.Write(dataBytes, 0, dataBytes.Length);\npostStream.Close();\n// see if we're logged in\nHttpWebResponse httpResponse = (HttpWebResponse)http.GetResponse();\n// continue (read the response etc.)
2460	private void Delay()\n        {\n            DelayTimer dt = new DelayTimer(1);\n            Thread thread = new Thread(new ThreadStart(dt.AddDelay));\n            thread.Start();\n            while (thread.IsAlive)\n            {\n                Application.DoEvents();\n            }\n\n        }\n\n\n\n\npublic class DelayTimer\n    {\n        private int _seconds;\n        public DelayTimer(int time)\n        {\n            _seconds = time;\n        }\n        public void AddDelay()\n        {\n           Thread.Sleep(_seconds*1000);\n        }\n    }
2461	List<MyType> lstCloned = lstOriginal.Select(i => i.Clone()).ToList();
2462	var path = "/path/to/element/I/want";\nvar route = path.Split(new []{'/'}, StringSplitOptions.RemoveEmptyEntries);\n\nXElement result = null;\nforeach (var node in route)\n{\n    if (result == null)\n    {\n        result = _xmlDocument.Element(node);    \n    }\n    else\n    {\n        result = result.Element(node);\n    }\n}\n\nreturn result;
2463	INSERT ... SELECT
2464	private Person aktuellPerson;\n\nprotected void Page_Load(object sender, EventArgs e)\n{\n    ListBoxPersoner.DataSource = Databasfunktioner.getPersoner();\n    ListBoxPersoner.DataValueField="PersonID";\n    ListBoxPersoner.DataTextField="Fornamn";\n    ListBoxPersoner.DataBind();\n}\n\n    protected void ListBoxPersoner_SelectedIndexChanged(object sender, EventArgs )\n   {\n       var temItem= sender as DropDownList;  // if you are talking about DropDownList\n        TextBoxFornamn.Text = temItem.SelectedItem.Text;\n    }
2465	byte[] pdfFile = System.IO.File.ReadAllBytes((string)saveto);
2466	String test1 = webKitBrowser1.StringByEvaluatingJavaScriptFromString("document.getElementById('email').value");
2467	public MyClass(string description = null) { .... }
2468	Font fontH1 = new Font(Currier, 16, Font.NORMAL);\n\nPdfPTable table = new PdfPTable(1);\n\ntable.AddCell(new PdfPCell(new Phrase(yourDatabaseValue,fontH1)));
2469	bool gotList;\n        List<string> files = new List<string>();\n\n        using (SvnClient client = new SvnClient())\n        {\n            Collection<SvnListEventArgs> list;\n\n            gotList = client.GetList(projectPath, out list);\n\n            if (gotList)\n            {\n                foreach (SvnListEventArgs item in list)\n                {\n                    files.Add(item.Path);\n                }\n            }\n        }
2470	using Microsoft.Xna.Framework.Media.PhoneExtensions;\n\nMediaLibrary m = new MediaLibrary();        \nfor (int j = 0; j < m.Pictures.Count; j++)\n{\n  var r = m.Pictures[j];\n  MessageBox.Show(MediaLibraryExtensions.GetPath(r));\n}
2471	[TestFixture]
2472	if (operator1.equals("<"))\n    IsActive = value < jjj\n// etc.
2473	public partial class CustomTextBox : TextBox\n{\n    public CustomTextBox()\n    {\n        InitializeComponent();\n    }\n\n    protected override void OnKeyDown(KeyEventArgs e)\n    {\n        base.OnKeyDown(e);\n        if(e.Key == Key.Return)\n        Keyboard.ClearFocus();\n    }\n}
2474	.Select((v,i) => new { Name = v.Name, \n                         Score = v.Score, \n                         Position = \n                            players.Count(p => p.Score > v.Score) + 1\n                       }\n         );
2475	System.exit()
2476	cb.MoveTo(0f, 225f);\ncb.SetLineDash(8, 4, 0);\ncb.LineTo(doc.PageSize.Width, 225f);\ncb.Stroke();\n\nvar pos = writer.GetVerticalPosition(false);\n\nvar p = new Paragraph("test", _myFont) { SpacingBefore = pos - 225f };\ndoc.add(p);
2477	String charabia = "???????? ???????? ?????????? ????????????" ;\ntry {\n     String utf8String = new String(charabia.getBytes(), "UTF-8");\n} catch (UnsupportedEncodingException e) {\n}
2478	object misValue = System.Reflection.Missing.Value;\n    Microsoft.Office.Interop.Word.Application wordApp = new Microsoft.Office.Interop.Word.Application();\n    object docPth = @"c:\tmp\aDoc.doc";\n    Microsoft.Office.Interop.Word.Document aDoc = wordApp.Documents.Open(ref docPth, ref misValue, ref misValue,\n        ref misValue, ref misValue, ref misValue, ref misValue, ref misValue, ref misValue, ref misValue,\n        ref misValue, ref misValue, ref misValue, ref misValue, ref misValue, ref misValue);\n    wordApp.Visible = true;\n    foreach (Microsoft.Office.Interop.Word.Paragraph aPar in aDoc.Paragraphs)\n    {\n        Microsoft.Office.Interop.Word.Range parRng = aPar.Range;\n        string sText = parRng.Text;\n        string sList = parRng.ListFormat.ListString;\n        int nLevel = parRng.ListFormat.ListLevelNumber;\n        MessageBox.Show("Text = " + sText + " - List = " + sList + " - Level " + nLevel.ToString());\n    }
2479	dataGridView1.CellFormatting += dataGridView1_CellFormatting;\n\nvoid dataGridView1_CellFormatting(object sender, DataGridViewCellFormattingEventArgs e)\n{            \n    if (dataGridView1.Columns[e.ColumnIndex].Name == "ImageColumnName")\n    {\n        if (collection[e.RowIndex].Result)\n        {\n            e.Value = (System.Drawing.Image)Properties.Resources.Check;\n        }\n        else\n        {\n            e.Value = (System.Drawing.Image)Properties.Resources.Cancel;\n        }\n    }\n}
2480	public partial class UserControl1 : UserControl\n{\n    public UserControl1()\n    {\n        InitializeComponent();\n    }\n\n\n    public Planets Planet\n    {\n        get { return (Planets)GetValue(PlanetProperty); }\n        set { SetValue(PlanetProperty, value); }\n    }\n\n\n    public static readonly DependencyProperty PlanetProperty =\n        DependencyProperty.Register("Planet", typeof(Planets), typeof(UserControl1), new UIPropertyMetadata(Planets.Mercury));\n\n\n}\n\npublic enum Planets\n{ \n    Mercury, \n    Venus, \n    Earth,\n    Mars\n\n}
2481	bitmap.Save(System.IO.Path.Combine(Server.MapPath("~/RELATIVE PATH OF YOUR APPLICATION"), imageName + ".png"));
2482	string s = "123\t456\t789";\nstring[] split = s.Split('\t');
2483	using ( FileStream inputStream = File.OpenRead ( aPackage ) )\n{\n    using ( GzipInputStream gzStream = new GzipInputStream ( inputStream ) )\n    {\n        using ( TarInputStream tarStream = new TarInputStream ( gzStream ) )\n        {\n            TarEntry entry = tarStream.GetNextEntry();\n            while ( entry != null )\n            {\n                if ( entry == theOneIWant )\n                {\n                    tarStream.CopyEntryContents (outputStream );\n                    break;\n                }\n                entry = tarStream.GetNextEntry();\n            }\n        }\n    }\n}
2484	int val = 0;\nif(Conditions.A)\n    val = a.Value.ValueX;\nelse if(Conditions.B)\n    val = a.Value.ValueY;\n\n// Your code block here using "val".
2485	var userObj = new User() { name = "John" };\nclient.PostAsJsonAsync(url, new { user = userObj });
2486	private void XmppCon_OnSaslStart(object sender, SaslEventArgs args)\n{\n   args.Auto = false;\n   Mechanism.GetMechanismName(MechanismType.ANONYMOUS);\n}
2487	SET @query\n= 'SELECT empid, name, status, ' + @cols + ' \n   FROM (SELECT empid, name, status, doortime, date + ''_'' + col AS col_names \n         FROM  (SELECT k_userid AS [empid], K_Name AS name, \n                       k_description1 as [status], K_WorktimeUp1 AS [IN], \n                       ktimeDown1 AS OUT, CONVERT(char(10), K_Date, 101) AS date \n                FROM  dbo.kq_report_analyze \n                WHERE (K_Date BETWEEN @dt AND @dt2) \n                GROUP BY K_UserID, K_Name, k_description1, K_Date, K_WorktimeUp1,\n                         K_WorktimeDown1) src  \n   UNPIVOT (doortime FOR col IN ([IN], [OUT])) unpiv) p \n   PIVOT (max(doortime) FOR col_names IN (' + @cols + ')) piv;'\n\nEXEC sp_executesql @query, N'@dt datetime, @dt2 datetime', @dt, @dt2
2488	string str = "Hello, my name is Boris, [image1.jpg] i like drinking tea [img2.jpg]";\nstring[] Arr = str.Split(new char[] { '[', ']' }, StringSplitOptions.RemoveEmptyEntries);
2489	DateTime fileDate, closestDate;\nArrayList theDates;\nint min = int.MaxValue;\n\nforeach (DateTime date in theDates)\n if (Math.Abs(date.Ticks- fileDate.Ticks) < min)\n {\n   min = date.Ticks- fileDate.Ticks;\n   closestDate = date;\n }
2490	gv.AlternatingRowStyle.CssClass = "altrowstyle";\ngv.HeaderStyle.CssClass = "headerstyle";\ngv.RowStyle.CssClass = "rowstyle";
2491	public override object ProvideValue( IServiceProvider serviceProvider )\n{\n    var contextProvider = (IXamlSchemaContextProvider)serviceProvider.GetService( typeof( IXamlSchemaContextProvider ) );\n    var type = contextProvider.SchemaContext.GetType().Assembly.GetType( "System.Windows.Baml2006.Baml2006SchemaContext" );\n    var property = type.GetProperty( "LocalAssembly", BindingFlags.Instance | BindingFlags.NonPublic );\n    var assembly = (Assembly)property.GetValue( contextProvider, null );\n    ...\n}
2492	ConventionRegistry.Register(\n            "Dates as utc documents",\n            new ConventionPack\n            {\n                new MemberSerializationOptionsConvention(typeof(DateTime), new DateTimeSerializationOptions(DateTimeKind.Utc, BsonType.Document)),\n            },\n            t => true);
2493	JToken.FromObject(x.Concat(x))
2494	WITH CTE as (\n   SELECT \n     RN = ROW_NUMBER() OVER (ORDER BY EmployeeID),\n     * \n   FROM HumanResources.Employee\n )\n SELECT\n   [Previous Row].*,\n   [Current Row].*,\n   [Next Row].*\n FROM CTE [Current Row]\n LEFT JOIN CTE [Previous Row] ON \n   [Previous Row].RN = [Current Row].RN - 1\n LEFT JOIN CTE [Next Row] ON \n   [Next Row].RN = [Current Row].RN + 1\n WHERE\n       [Current Row].EmployeeID = 5
2495	PicasaEntry entry = (PicasaEntry) service.Getstring.Format("http://picasaweb.google.com/data/entry/api/user/" +\n                                                      "{0}/photoid/{1}",service.Credentials.Username,photo.GooglePhotoId
2496	[DllImport("mscoree.dll", CharSet=CharSet.Unicode)]\nstatic extern bool StrongNameSignatureVerificationEx(string wszFilePath, bool fForceVerification, ref bool  pfWasVerified);
2497	using System.Windows.Threading;\n\nnamespace MyWPF App\n{\n/// <summary>\n/// Interaction logic for MainWindow.xaml\n/// </summary>\n\npublic partial class MainWindow : Window\n{\n\n    DateTime dt;\n    DispatcherTimer t;\n\n    public MainWindow()\n    {\n\n        InitializeComponent();\n        t = new DispatcherTimer();\n        t.Tick += new EventHandler(t_Tick);\n\n    }\n    private void button1_MouseEnter(object sender, MouseEventArgs e)\n    {\n        dt=DateTime.Now;\n        t.Interval = new TimeSpan(0, 0, 1);\n        t.IsEnabled = true;\n\n\n    }\n\n    void t_Tick(object sender, EventArgs e)\n    {\n\n        if ((DateTime.Now - dt).Seconds >= 5)\n        {\n            MessageBox.Show("Hello");// Here you can put your code which you want to execute after 5 seconds.\n        }\n\n    }\n\n    private void button1_MouseLeave(object sender, MouseEventArgs e)\n    {\n        t.IsEnabled = false;\n    }\n}\n\n}
2498	string[] output =\n  Regex.Matches(s, @"\([^\)]+\)+")\n  .Cast<Match>()\n  .Select(x => x.Value)\n  .ToArray();
2499	Data.Indications.IndexType indexType = (Chatham.Web.Data.Indications.IndexType)sm.FloatingComponent.IndexID.Value;
2500	private Binding CreateBinding()\n{\n    Binding binding = new WebHttpBinding();\n\n    CustomBinding customBinding = new CustomBinding(binding);\n    var transportElement = customBinding.Elements.Find<HttpTransportBindingElement>();\n    transportElement.KeepAliveEnabled = false;\n\n    return customBinding;\n}
2501	foreach(DataRow row in myDataSet.Tables["Query"].Rows)\n    {\n        // For each Row add a new series\n        string seriesName = row["SalesRep"].ToString();\n        Chart1.Series.Add(seriesName);\n        Chart1.Series[seriesName].ChartType = SeriesChartType.Line;\n        Chart1.Series[seriesName].BorderWidth = 2;\n\n        for(int colIndex = 1; colIndex < myDataSet.Tables["Query"].Columns.Count; colIndex++)\n        {\n            // For each column (column 1 and onward) add the value as a point\n            string columnName = myDataSet.Tables["Query"].Columns[colIndex].ColumnName;\n            int YVal = (int) row[columnName];\n\n            Chart1.Series[seriesName].Points.AddXY(columnName, YVal);\n        }\n    }
2502	ddlRolesList.Items.Insert(0, new ListItem("Select Role","NA"));
2503	//With Auto detect changes off.\nforeach(var batch in batches)//keep batch size below 1000 items, play around with the numbers a little\n{\n    using(var ctx = new MyContext())//make sure you create a new context per batch.\n    {\n        foreach(var entity in batch){\n             ctx.Entities.Add(entity);\n        }\n        ctx.SaveChanges();\n    }\n}
2504	var pngEncoder = new PngBitmapEncoder();\npngEncoder.Frames.Add(ApplyWatermark(null, null));\n\nMemoryStream stm = File.Create(image);\npngEncoder.Save(stm);\nreturn stm;
2505	private void box_Paid_CheckedChanged(object sender, EventArgs e)\n{\n    if (box_Paid.Checked == true)\n    {\n        Purchaser p = Purchasers[listDOF.SelectedIndex];\n        p.Paid = true;\n    }\n}
2506	using(OleDbConnection c = new OleDbConnection(con))\n{\n    c.Open();\n    string selectString = "SELECT * FROM [RANGE_NAMED]";\n    using(OleDbCommand cmd1 = new OleDbCommand(selectString))\n    {\n          cmd1.Connection = c;\n        var result = cmd1.ExecuteReader();\n        while(result.Read())\n        {\n              Console.WriteLine(result[0].ToString());\n        }\n    }\n}
2507	List<decimal> monthsTotals = data\n  .GroupBy(d => d["Month"])\n  .Select(d => d.Sum( r => Convert.ToDecimal(r["Revenue"])))\n  .ToList<decimal>();
2508	public static string GetNextLetter(string letter = null)\n{\n     if (IsStringNullOrEmpty(letter))\n         return "A";\n\n     char lastLetter = letter.Last();\n\n     if (lastLetter.ToString() == "Z")\n         return GetNextLetter(RemoveLastCharacter(letter)) + "A";\n     else\n         return RemoveLastCharacter(letter) + (char)(lastLetter + 1);\n    }
2509	private string GetGroupsForUser(string UserName)\n    {\n        ManagementObjectSearcher searcher = new ManagementObjectSearcher("select * from Win32_GroupUser where PartComponent=\"Win32_UserAccount.Domain='MyDomain',Name='" + UserName + "'\"");\n        StringBuilder strGroups = new StringBuilder();\n\n        foreach (ManagementObject mObject in searcher.Get())\n        {\n            ManagementPath path = new ManagementPath(mObject["GroupComponent"].ToString());\n\n            if (path.ClassName == "Win32_Group")\n            {\n                String[] names = path.RelativePath.Split(',');\n                strGroups.Append(names[1].Substring(names[1].IndexOf("=") + 1).Replace('"', ' ').Trim() + ", ");\n            }\n        }\n        return strGroups.ToString();\n    }
2510	public UserPrincipal CreateNewUser(string sUserName, string sPassword)\n        {\n            // first check that the user doesn't exist\n            if (GetUser(sUserName) == null)\n            {\n                PrincipalContext oPrincipalContext = GetPrincipalContext();\n\n                UserPrincipal oUserPrincipal = new UserPrincipal(oPrincipalContext);\n                oUserPrincipal.Name = sUserName;\n                oUserPrincipal.SetPassword(sPassword);\n                //User Log on Name\n                //oUserPrincipal.UserPrincipalName = sUserName;\n                oUserPrincipal.Save();\n\n                return oUserPrincipal;\n            }\n\n            // if it already exists, return the old user\n            return GetUser(sUserName);\n        }\n    }
2511	BuildManager.GetGlobalAsaxType().BaseType.Assembly
2512	GraphicsPath clipPath = new GraphicsPath();\nclipPath.AddEllipse(graphBoundaries);\n\ngraphics.SetClip(clipPath, CombineMode.Exclude);\n\n// draw your line\n\ngraphics.ResetClip(); // remove clip
2513	foreach(var subview in scrollViewer.Subviews.Skip(1))\n{\n    subview.RemoveFromSuperview();\n}\n\nscrollViewer.AddSubview(newView);\n\nscrollViewer.ContentSize = new System.Drawing.SizeF(newView.Frame.Width, newView.Frame.Height);
2514	void Main()\n{\n    BsonSerializer.RegisterSerializationProvider(new MyDecimalSerializer());\n    Console.WriteLine(new Test().ToJson(new JsonWriterSettings() { Indent = true }));\n}\n\nclass MyDecimalSerializer : DecimalSerializer, IBsonSerializationProvider {\n    private IBsonSerializationOptions _defaultSerializationOptions = new RepresentationSerializationOptions(BsonType.Double);\n\n    public override void Serialize(\n        BsonWriter bsonWriter,\n        Type nominalType,\n        object value,\n        IBsonSerializationOptions options) {\n        if(options == null) options = _defaultSerializationOptions;\n        base.Serialize(bsonWriter, nominalType, value, options);\n    }\n\n    public IBsonSerializer GetSerializer(Type type) {\n        return type == typeof(Decimal) ? this : null;\n    }\n}
2515	window.Show
2516	private EntityReference GetCustomerFromCase(Guid caseId)\n{\n    Entity Case = CRMCentralCRMServiceInstance.Retrieve("incident", caseId, new ColumnSet("customerid"));\n    return Case.GetAttributeValue<EntityReference>("customerid");\n}
2517	var xDoc = XDocument.Parse(Resource1.XMLFile1); // loading source xml\nvar xmls = xDoc.Root.Elements().ToArray(); // split into elements\n\nfor(int i = 0;i< xmls.Length;i++)\n{\n    // write each element into different file\n    using (var file = File.CreateText(string.Format("xml{0}.xml", i + 1)))\n    {\n        file.Write(xmls[i].ToString());\n    }\n}
2518	Get-Help PS1XML
2519	Public Function GetValues(name As String) As IEnumerable(Of String)
2520	private void panel1_Paint(object sender, PaintEventArgs e)\n{\n    var hPadding = (pictureBox1.Width - pictureBox1.BackgroundImage.Width) / 2;\n    var vPadding = (pictureBox1.Height - pictureBox1.BackgroundImage.Height) / 2;\n    var imgRect = new Rectangle(pictureBox1.Left + hPadding, pictureBox1.Top + vPadding, pictureBox1.BackgroundImage.Width, pictureBox1.BackgroundImage.Height);\n    e.Graphics.DrawImage(pictureBox1.BackgroundImage, imgRect);\n}
2521	if (groupBox1.Controls.OfType<RadioButton>().Any(x => x.Checked)) {\n    // at least one radiobutton in groupbox1 is checked\n}
2522	public static void WriteFile()\n{\n    Car testCar= new Car();\n    string path = "c:\temp\testCarPath.xml";\n    XmlSerializer serializer = new XmlSerializer(typeof(Car));\n    StreamWriter file = new StreamWriter(path);\n\n    serializer.Serialize(file, testCar);\n    file.Close();\n}\npublic static void ReadFile()\n{\n    Car testCar;\n    string path = "c:\temp\testCarPath.xml";\n    XmlSerializer serializer = new XmlSerializer(typeof(Car));\n    StreamReader reader = new StreamReader(path);\n\n    testCar = (Car)serializer.Deserialize(reader);\n    reader.Close();\n}
2523	Button btnDelete = new Button();\n    btnDelete.Click += new EventHandler(button_Click);\n\n    protected void button_Click (object sender, EventArgs e)\n    {\n        Button button = sender as Button;\n        string buttonid = button.ID.ToString()\n        // identify which button was what row to update based on id clicked and perform necessary actions\n    }
2524	ls = System::Collections::Generic::List.of(String).new\nls.add("Peaches")\nls.add "Pulms"
2525	var toggleButtonPosition = toggleButton.TranslatePoint(new Point(0, 0), stackPanel);\nvar textBlockPosition = textBlock.TranslatePoint(new Point(0, 0), stackPanel);
2526	private void Window_Loaded(object sender, RoutedEventArgs e)\n{\n    this.H1.DataContext = new { H1 = 50 }; // here this.H1, refers to <Rectangle x:Name="H" .. \n}
2527	public partial class TheWebServiceSubClass : ExampleService\n{\n    protected override WebRequest GetWebRequest(Uri uri)\n    {\n        HttpWebRequest webRequest = (HttpWebRequest)base.GetWebRequest(uri);\n        ExampleService client = new ExampleService();\n        string auth_id = client.authenticate_get("www.testexample.com", "e5d30c56d600a7456846164");\n        string credentials =\n            Convert.ToBase64String(Encoding.ASCII.GetBytes("www.testexample.com:e5d30c56d600a7456846164"));\n        string credentials1 = Convert.ToBase64String(Encoding.ASCII.GetBytes(auth_id+ ":"));\n        webRequest.Headers["Authorization"] = "Basic " + credentials1;\n        return webRequest;\n    }\n}
2528	delegate void ASIOCallback(IntPtr signal, int n);
2529	private void button_Click(object sender, EventArgs e)\n{\n    StringBuilder message = new StringBuilder();\n    foreach (DataGridViewCell cell in this.dataGridView.SelectedCells)\n    {\n        message.AppendLine("Value = " + cell.Value);\n    }\n\n    MessageBox.Show(message.ToString());\n}
2530	CarsAttack.ch[index];
2531	// ************************************************************************\n    private void DockingManager_DocumentClosing(object sender, Xceed.Wpf.AvalonDock.DocumentClosingEventArgs e)\n    {\n        e.Document.CanClose = false;\n\n        DocumentModel documentModel = e.Document.Content as DocumentModel;\n        if (documentModel != null)\n        {\n            Dispatcher.BeginInvoke(new Action(() => this.Model.DocumentItems.Remove(documentModel)), DispatcherPriority.Background);\n        }\n    }
2532	int i = 0; \n    foreach (DataRowView rowView in chListBox.CheckedItems) \n    { \n        phoneNumbers[i] = rowView["ContactNumber"]; \n        i++; \n    }
2533	string sql = @"SELECT username,password FROM users \n             WHERE username=@username and password = @password";\n\nSqlCommand userSELECTcom = new SqlCommand(sql, myConnection);\nuserSELECTcom.Parameters.AddWithValue(@username, ReceivedUsername);\nuserSELECTcom.Parameters.AddWithValue(@password, ReceivedPassword);\n\nusing(SqlDataReader reader = userSELECTcom.ExecuteReader())\n{\n   ValidLogin = reader.HasRows; \n}
2534	if(stringdate[0] == '0')\n    stringdate = stringdate.Substring(1);
2535	private string GetCompressedString()\n{\n    byte[] byteArray = Encoding.UTF8.GetBytes("Some long log string");\n    using (var ms = new MemoryStream())\n    {\n        using (var gz = new GZipStream(ms, CompressionMode.Compress, true))\n        {\n            ms.Write(byteArray, 0, byteArray.Length);\n        }\n\n        ms.Position = 0;\n\n        var compressedBytes = new byte[ms.Length];\n        ms.Read(compressedBytes, 0, compressedBytes.Length);\n\n        return Convert.ToBase64String(compressedBytes);\n    }\n}
2536	public class ControllerBase : Controller\n{\n    public ControllerBase()\n        : base()\n    {\n        this.VerifySession();  \n    }\n\n    /// <summary>\n    /// Indicates whether the session must be active and contain a valid customer.\n    /// </summary>\n    protected virtual bool RequiresActiveSession\n    {\n        get { return true; }\n    }\n\n    public void VerifySession()\n    {\n        if (this.RequiresActiveSession && Session["UserId"] == null)\n        {\n            Response.Redirect(Url.Action("LoginPage"));\n        }\n    }\n\n}\n\npublic class HomeController : ControllerBase\n{\n    protected override bool RequiresActiveSession\n    {\n        get\n        {\n            return true;\n        }\n    }\n\n    public ActionResult Index()\n    {\n        return View();\n    }\n}
2537	srcRange.Copy(destRange, PasteType.Values, PasteOperation.None, false, false);
2538	pdfReader.Close();
2539	string postCode = "AB111AD".Replace(" ", "");\nstring firstPart = postCode.Substring(0, postCode.Length - 3);
2540	private IMessage _next;\n\npublic void ReceiveMessage(IMessage message)\n{\n    Interlocked.Exchange(ref _next, message);\n}\n\npublic void Process()\n{\n    IMessage next = Interlocked.Exchange(ref _next, null);\n\n    if (next != null)\n    {\n        //...\n    }\n}
2541	string jScript;\n    jScript="<script>close_window();</script>";\n    ClientScript.RegisterClientScriptBlock(this.GetType(),"keyClientBlock", jScript);
2542	var props = typeof(Manufacturer).GetFields(BindingFlags.Public | BindingFlags.Static);\n   var wantedProp = props.FirstOrDefault(prop => (ushort)prop.GetValue(null) == 6);
2543	ShellTile tile = ShellTile.ActiveTiles.FirstOrDefault();\n                   if (tile != null)\n                   {\n                       FlipTileData data = new FlipTileData()\n                       {\n                           SmallBackgroundImage = new Uri("isostore:/Shared/ShellContent/" + mediumTile, UriKind.RelativeOrAbsolute),\n                           BackgroundImage = new Uri("isostore:/Shared/ShellContent/" + mediumTile, UriKind.RelativeOrAbsolute),\n                           WideBackgroundImage = new Uri("isostore:/Shared/ShellContent/" + wideTile, UriKind.RelativeOrAbsolute)\n                       };\n\n                   tile.Update(data);\n               }\nNotifyComplete();
2544	list = listOfList.SelectMany(x => x).ToList();
2545	//First create a connection string to destination database\nstring connectionString;\nconnectionString = <EM>YourConnectionString</EM>and\n    Initial Catalog=TestSMODatabase";\n\n//Open a connection with destination database;\nusing (SqlConnection connection = \n       new SqlConnection(connectionString))\n{\n   connection.Open();\n\n   //Open bulkcopy connection.\n   using (SqlBulkCopy bulkcopy = new SqlBulkCopy(connection))\n   {\n    //Set destination table name\n    //to table previously created.\n    bulkcopy.DestinationTableName = "dbo.TestTable";\n\n    try\n    {\n       bulkcopy.WriteToServer(SourceTable); // SourceTable would come from your DataSet\n    }\n    catch (Exception ex)\n    {\n       Console.WriteLine(ex.Message);\n    }\n\n    connection.Close();\n   }\n}
2546	string something = "Apple";\nType type = something.GetType();\nType listType = typeof(List<>).MakeGenericType(new [] { type } );\nIList list = (IList)Activator.CreateInstance(listType);
2547	protected void MyUI_MouseDown(object inSender, MouseEventArgs inArgs)\n{\n    switch(myState)\n    {\n        case CreateBox:\n            Rectangle rect = new Rectangle(inArgs.X, inArgs.Y, 0, 0);\n            break;\n    }\n} \n\nprotected void MyUI_MouseUp(object inSender, MouseEventArgs inArgs)\n{\n    rect.Width = inArgs.X - rect.X;\n    rect.Height = inArgs.Y - rect.Y;\n    // now save/draw your object\n}
2548	someDateTime.ToString("hh:mm:ss");
2549	var functions=ListFunctions(0); // For example\nforeach(var function in functions)\n{\n  Console.WriteLine("{0} = {1}",function.ID, function.Description);\n}
2550	TextBox_name.Text = loginEmail;
2551	GetCustomAttributes()
2552	public formCanvas()\n{\n    InitializeComponent();\n    lblUsed.Visible = false;\n    lblScore.Visible = false;\n    lblUsedLetters.Visible = false;\n    lblGuessWord.Visible = false;\n    lblUserChoice.Visible = false;\n    lblWord.Visible = true;\n    txtUserLetter.Visible = false;\n    txtUserWord.Visible = true;\n    btnSubmitWord.Visible = true;\n    btnSubmitLetter.Visible = false;\n    lblLives.Visible = false;\n    btnExit.Visible = false;\n    btnRestart.Visible = false;\n\n}
2553	var client = new HttpClient();\n\n        var stream3 = new FileStream("saved.jpg", FileMode.Open);\n        var stream2 = new FileStream("saved2.jpg", FileMode.Open);\n\n        var dic = new Dictionary<string, string>();\n        dic.Add("Test1", "This was the first test.");\n\n        var addy = "http://posttestserver.com/post.php";\n\n        using (var content = new MultipartFormDataContent())\n        {\n            content.Add(new StreamContent(stream2), "s1", "Saved1.jpg");\n            content.Add(new StreamContent(stream3), "s2", "Saved2.jpg");\n\n            var response = await client.PostAsync(addy, content);\n            response.EnsureSuccessStatusCode();\n\n            string finalresults = await response.Content.ReadAsStringAsync();\n        }
2554	this._Button1.Attributes.Add("OnClick", "GetSelectedItems('" + _RadGrid1.ClientID + "');return false;");
2555	if(!Page.IsPostBack)
2556	private void dataGridView1_CellClick(object sender, DataGridViewCellEventArgs e) \n{ \n    if (e.RowIndex >= 0 && e.ColumnIndex >= 0) {\n        // .. my code goes here ..\n    }\n}
2557	System.Net.ServicePointManager.MaxServicePointIdleTime = 1;
2558	var arr = ["Horse", "Pearl", "House"];\nvar string_matched="";\nfor (var i = 0; i < arr.length; i++)\n{\n    if (/se/gi.test(arr[i])) {\n\n        string_matched += ", " + arr[i];\n    }\n}
2559	Application.Current.Resources.MergedDictionaries
2560	db.Database.SqlQuery<IEnumerable<string>>("SELECT hospitalName FROM hospital"); //would work if all you're trying to do is get the Name\n\ndb.Database.SqlQuery<MyEntity>("SELECT * FROM hospital"); //where you define MyEntity as the same structure as the table would work\n\ndb.Database.SqlQuery<IEnumerable<Tuple<int, string>>>("SELECT * FROM hospital"); // would theoretically work although I haven't tried it.  Where the Tuple items would have to match the database types in order.  I.e. if field 1 is an int and field 2 is a string then Tuple<int,string>
2561	RootElement[] root = new RootElement[10];\n\nroot [0] = new RootElement ("caption 1");\n...\nroot [9] = new RootElement ("caption 10");
2562	[RunInstaller(true)]\npublic class ServiceInstall : Installer\n{\n    public ServiceInstall()\n    {\n        ServiceInstaller serviceInstaller = new ServiceInstaller();\n        ServiceProcessInstaller serviceProcessInstaller = new ServiceProcessInstaller();\n\n        serviceProcessInstaller.Account = ServiceAccount.User;\n        serviceProcessInstaller.Username = "User";\n        serviceProcessInstaller.Password = "Password";\n\n        serviceInstaller.DisplayName = "Some Service";\n        serviceInstaller.StartType = ServiceStartMode.Automatic;\n        serviceInstaller.ServiceName = "Some Service";\n\n        this.Installers.Add(serviceProcessInstaller);\n        this.Installers.Add(serviceInstaller);\n    }\n}
2563	Mapper.CreateMap<Transaction, Transaction>();\nvar newtransact = new Transaction();\nMapper.Map(transact, newtransact);
2564	if (IsKeyPushedDown('B') && IskeyPushedDown(VK_CONTROL))
2565	int counter = 0;\n\n//in event\n\nif(textbox1.ToString().Equals(textbox2.ToString()))\n{\ncounter++;\n}
2566	var trace = new System.Diagnostics.StackTrace(exception);
2567	var board = db.Boards.Select(b => new BoardViewModel\n    {\n        Title = b.Title\n    }).FirstOrDefault(b => b.Id == id)
2568	class NPC {\nstatic bool isBeingControlled = false;\npublic void OnUpdate() {\n    if (isBeingControlled)\n    {\n        //set camera position to NPC position (make sure you're using NPC as an instantiated class)\n        //accept key input WASD or whatever you are using and move NPC according to input.\n    }\n}
2569	foreach(string key in Request.Form){\n    Response.Write(key + "=" + Request.Form[key]);\n}
2570	string selectQuery = "select field1,field2,field3 from mytable where offerMadeBy=@param";\nMySqlConnection sqlCOnnect = new MySqlConnection(RootDBConnection.myConnection);\nMySqlCommand sqlCmd = new MySqlCommand(selectQuery,sqlCOnnect);\nsqlCmd.Parameters.AddWithValue("@param", cbox1.Text.ToString());\ntry { \n       sqlCOnnect.Open()\n       using (sqlCOnnect)\n       {\n        ....\n       }\n      }
2571	public class NodeMap : ClassMap<Node>\n{\n    public NodeMap()\n    {\n        //Id and any other fields mapped in node\n\n        HasMany(x => x.Links);\n    }\n}\n\npublic class LinkMap : ClassMap<Link>\n{\n    public LinkMap()\n    {\n        //Id and any other fields mapped in node\n\n        References(x => x.StartNode);\n        References(x => x.EndNode);\n    }\n}
2572	if (_mQuestions.Any(q => q.QuestionID == 12)) \n{\n   Question question14 = _mQuestions.FirstOrDefault(q => q.QuestionID == 14);\n   if (question14 != null)\n       question14.QuestionAnswer = "Some Text";\n}
2573	class Demo\n{\n    public int Distance { get; set; }\n    public int Frequency { get; set; }\n    public override string ToString()\n    {\n        return string.Format("Distance:{0}  Frequency:{1}", this.Distance, this.Frequency);\n    }\n}\n\nList<Demo> list = new List<Demo>\n    {\n        new Demo{ Distance=3, Frequency=15},\n        new Demo{ Distance=4, Frequency=17},\n        new Demo{ Distance=5, Frequency=3},\n    };\n    int[] weight = { 30, 70 };\n    var tmp = list.OrderByDescending(x => x.Distance * 0.3 + x.Frequency * 0.7);//there just a guess\n    foreach(var q in tmp)\n    {\n        Console.WriteLine(q);\n    }
2574	public static extern int XIJET_GetPrinterParameter(IntPtr printerHandle,\n            Uint16 parameterIndex,\n            IntPtr pParameter, UInt16 headNumber);
2575	using System.Collections.Generic;\nnamespace Test\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int[] vec0 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n            int[] vec1 = { 1, 4, 2, 7, 3, 2 };\n            int[] vec2 = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n            int[] vec3 = { 7, 2, 7, 9, 9, 6, 1, 0, 4 };\n            int[] vec4 = { 0, 0, 0, 0, 0, 0 };\n            List<int> temp = new List<int>();\n            temp.AddRange(vec0);\n            temp.AddRange(vec1);\n            temp.AddRange(vec2);\n            temp.AddRange(vec3);\n            temp.AddRange(vec4);\n            int[] mainvec = temp.ToArray();\n        }\n    }\n}
2576	public class Person\n{\n    public string strFirstName;\n    ...\n}\n\npublic class Persons\n{\n    List<Person> lstPersons = new List<Person>();\n\n    public void AddPerson(string FirstName, ...)\n    {\n        Person person = new Person();\n        person.strFirstName = FirstName;\n        ...\n        lstPersons.Add(person);\n    }\n}
2577	var WordsArray=Details.Split(); \nstring Items = WordsArray[0] + ' ' + WordsArray[1];
2578	public static int valToInt(string v)\n{     \n    return (int)(Decimal.Parse(v, new System.Globalization.CultureInfo("en-US")) * 100m);     \n}
2579	string fname = Path.Combine(\n    Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicatio??????nData),\n    "your_app_name", "log.txt"); \nFile.AppendAllText(fname, "Started");
2580	var selectedRows = dGV_model.SelectedCells.Cast<DataGridViewCell>()\n                                          .Select(c=>c.RowIndex).Distinct()\n                                          .ToList();
2581	var foo = File.ReadAllText(Server.MapPath("NewFolder1/HTMLPage1.htm"));
2582	sqlcomm.CommandText="select [objId] from [tablename] where cast(href as nvarchar(max))=@href"
2583	GridView grid = new GridView();\n    grid.ShowDialog(); \nif (grid.dataGridView1.CurrentRow.Cells[3].Value.ToString()=="Male")\n{male_radiobtn.Checked=true;\nfemale_radiobtn.Checked=false;}\nelse {female_radiobtn.Checked=true;\nmale_radiobtn.Checked=false;}
2584	/accepteula
2585	using NAudio.Wave;\n...\nWaveFileReader reader = new WaveFileReader(MyProject.Resource.AudioResource);\nTimeSpan span = reader.TotalTime;
2586	ListBox3.DataSource = ds;\nListBox3.DataTextField = "Salary";\nListBox3.DataValueField = "EmpID";\nListBox3.DataBind();
2587	Try\n      Dim appFolder = Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)\n      appFolder = Path.Combine(appFolder, "MyAppDatabaseFolder")\n      If Not Directory.Exists(appFolder) Then\n           Directory.CreateDirectory(appFolder)\n      End If\n      Dim myDB = Path.Combine(appFolder, "MY_DB.db")\n      If (Not File.Exists(myDB)) Then\n          .....\n      End If\n Catch ex As Exception\n      'Throw ex\n      Return False\n End Try
2588	pdftk folder1/file1.pdf folder1/file2.pdf folder2/file1.pdf cat output all_files.pdf
2589	string currentLabel = (from s2f in stream2FieldTypesTable\n                          where s2f.s2fID == item.s2fID\n                          && (s2f.s2fLabel != item.s2fLabel || s2f.s2fIsRequired != item.s2fIsRequired)\n                          select s2f.s2fLabel)\n                         .FirstOrDefault();
2590	private BaseClass child;\n\npublic bool DomeSomethingSpecific(int i)\n{\n        var c = {initialization to an instance - e.g. Child1(), Child2(), Child3()..};\n        if (c is Child1){\n            ((Child1)c).DomeSomethingSpecificForChild1(i);\n        }\n}
2591	private void printDocument1_PrintPage(object sender, System.Drawing.Printing.PrintPageEventArgs e) {\n        e.Graphics.DrawImage(pictureBox1.Image, 0, 0);\n    }
2592	orderedDates\n    .SkipWhile(x => x.datetime1 < afterDateTime)\n    .TakeWhile(x => x.datetime2 > beforeDateTime)
2593	void WriteLineKeepingIndent(string format, params object[] args)\n{\n    int x = Console.CursorLeft;\n    Console.WriteLine(format, args);\n    Console.CursorLeft = x;\n}
2594	modelBuilder.Entity<Element>()\n    .HasMany(e => e.Parent)\n    .WithMany(e => e.Child)\n    .Map(m => {\n        m.ToTable("ElementMap"); // name of the link table\n        m.MapLeftKey("ParentID");\n        m.MapRightKey("ChildID");\n    });
2595	var rowIndex = ((GridViewRow)((Control)sender).NamingContainer).RowIndex;
2596	protected void Button1_Click(object sender, EventArgs e)\n{\n\n    wbRfrnc.TransactionPut obj =new wbRfrnc.TransactionPut();\n    string result = obj.GetPoint(TextBox1.Text, TextBox2.Text);\n    var objGD = JsonConvert.DeserializeObject<GetData[]>(result);\n    Response.Write(objGD[0].Response); \n}
2597	string trimmedByLine = string.Join(\n                             "\n", \n                             temp2.Split('\n').Select(s => s.Trim()));
2598	using (SqlTransaction transaction = destinationConnection.BeginTransaction())\n{\n    using (SqlBulkCopy bulkCopy = new SqlBulkCopy( destinationConnection, SqlBulkCopyOptions.KeepIdentity, transaction))\n    {\n        bulkCopy.BatchSize = 10;\n        bulkCopy.DestinationTableName = "dbo.BulkCopyDemoMatchingColumns";\n\n        try\n        {\n            bulkCopy.WriteToServer(reader);\n            transaction.Commit();\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(ex.Message);\n            transaction.Rollback();\n        }\n        finally\n        {\n            reader.Close();\n        }\n    }\n}
2599	xDoc.PreserveWhitespace = true;\nxDoc.Save(...);
2600	String value = "A|B|C";\nString secondColumn = value.split("|")[1];
2601	XDocument x = (XDocument)HttpContext.Current.Cache[ns + "SomeRandomDate"];\nif (x == null)\n{\n  x = new XDocument(new XElement(ns + "SomeRandomDate", DateTime.Now()));\n  HttpContext.Current.Cache.Insert(ns + "SomeRandomDate", x, null,\n    DateTime.Now.AddHours(12d), Cache.NoSlidingExpiration);\n}
2602	// named and nameless\n[Export("TypeA", typeof(MyPlugin))]\n[Export(typeof(MyPlugin))]\n\n// named nameless, again\n[Export("TypeB", typeof(MyPlugin))]\n[Export(typeof(MyPlugin))]\n\nclass MyPlugin { }\n\n\n[TestMethod]\npublic void mef()\n{\n    var catalog = new AssemblyCatalog(this.GetType().Assembly);\n    var container = new CompositionContainer(catalog);\n\n    Assert.AreEqual(2, container.GetExportedValues<MyPlugin>().Count());\n}
2603	byte[] imageBytes;\nHttpWebRequest imageRequest = (HttpWebRequest)WebRequest.Create(imageUrl);\nWebResponse imageResponse = imageRequest.GetResponse();\n\nStream responseStream = imageResponse.GetResponseStream();\n\nusing (BinaryReader br = new BinaryReader(responseStream ))\n{\n    imageBytes = br.ReadBytes(500000);\n    br.Close();\n}\nresponseStream.Close();\nimageResponse.Close();\n\nFileStream fs = new FileStream(saveLocation, FileMode.Create);\nBinaryWriter bw = new BinaryWriter(fs);\ntry\n{\n    bw.Write(imageBytes);\n}\nfinally\n{\n    fs.Close();\n    bw.Close();\n}
2604	private void radGridView1_CellValidating(object sender, CellValidatingEventArgs e)\n     {\n        String[] Acceptable = new string[] {"c", "d"};\n\n        if (e.Value != null && e.ColumnIndex == 4)\n        {\n            if(e.Value != e.OldValue)\n            {\n                if (!Acceptable.Contains(e.Value))\n                {\n                    e.Cancel = true;\n                }\n            }\n        }\n    }
2605	ServiceBase.RequestAdditionalTime(4000); // add 4 seconds
2606	DECLARE\n    @start_date    DATETIME,\n    @end_date      DATETIME,\n    @chosen_time   DATETIME\nSELECT\n    @start_date    = '2009 Jan 05 00:00',\n    @end_date      = '2009 Jan 12 00:00',\n    @chosen_time   = '1900 Jan 01 17:30'   -- '1900 Jan 01' is day 0\n\nSELECT\n    <whatever>\nFROM\n    WideHistory  \nWHERE\n        [WideHistory].DateTime >= @start_date\n    AND [WideHistory].DateTime <  @end_date\n    AND DATEADD(DAY, DATEDIFF(MINUTE, 0, [WideHistory].DateTime), 0) = @chosen_time
2607	IPAddress ipAddress = Dns.GetHostEntry(Dns.GetHostName()).AddressList[0];\nIPEndPoint ipLocalEndPoint = new IPEndPoint(ipAddress, clientPort);\nTcpClient clientSocket = new TcpClient(ipLocalEndPoint);\nclientSocket.Connect(remoteHost, remotePort);
2608	// Create a DrawingBrush and use it to\n// paint the rectangle.\nDrawingBrush myBrush = new DrawingBrush();\n\nGeometryDrawing backgroundSquare =\n    new GeometryDrawing(\n        Brushes.Yellow,\n        null,\n        new RectangleGeometry(new Rect(0, 0, 100, 100)));\n\nGeometryGroup aGeometryGroup = new GeometryGroup();\naGeometryGroup.Children.Add(new EllipseGeometry(new Rect(0, 0, 20, 20)));\n\nSolidColorBrush checkerBrush = new SolidColorBrush(Colors.Black);\n\nGeometryDrawing checkers = new GeometryDrawing(checkerBrush, null, aGeometryGroup);\n\nDrawingGroup checkersDrawingGroup = new DrawingGroup();\ncheckersDrawingGroup.Children.Add(backgroundSquare);\ncheckersDrawingGroup.Children.Add(checkers);\n\nmyBrush.Drawing = checkersDrawingGroup;\nmyBrush.Viewport = new Rect(0, 0, 0.05, 0.05);\nmyBrush.TileMode = TileMode.Tile;   \n\nyellowPolygon.Fill = myBrush;
2609	object obj = collection["NoRepeate"];\nstring str = obj == null ? null : obj.ToString();
2610	void SaveUrl(string sourceURL, string savepath) {\n        CookieContainer cookies = new CookieContainer();\n        HttpWebRequest webRequest = (HttpWebRequest)WebRequest.Create(sourceURL);\n        webRequest.CookieContainer = cookies;\n\n        HttpWebResponse response = (HttpWebResponse)webRequest.GetResponse();\n        StreamReader responseReader = new StreamReader(response.GetResponseStream());\n\n        string sResponseHTML = responseReader.ReadToEnd();\n        using (StreamWriter sw = new StreamWriter(savepath, false)) {\n            sw.Write(sResponseHTML);\n        }\n\n        string[] ImageUrl = GetImgLinks(sResponseHTML);\n        foreach (string imagelink in ImageUrl) {\n            HttpWebRequest imgRequest = (HttpWebRequest)WebRequest.Create(imagelink);\n            imgRequest.CookieContainer = cookies;\n            HttpWebResponse imgresponse = (HttpWebResponse)imgRequest.GetResponse();\n            //Code to save image\n        }\n    }
2611	IIS_APPPOOL\mysite
2612	private void respondWithFile(string filePath, string remoteFileName) \n{\n    if (!File.Exists(filePath))\n        throw new FileNotFoundException(\n              string.Format("Final PDF file '{0}' was not found on disk.", \n                             filePath));\n    var fi = new FileInfo(filePath);\n    Response.Clear();\n    Response.AddHeader("Content-Disposition", \n                  String.Format("attachment; filename=\"{0}\"", \n                                 remoteFileName));\n    Response.AddHeader("Content-Length", fi.Length.ToString());\n    Response.ContentType = "application/octet-stream";\n    Response.WriteFile(fi.FullName);\n    Response.End();\n}
2613	button.Click += (sender, args) =>\n            {\n                var intent = new Intent(this, typeof(Results));\n                intent.PutExtra("cbs", new[] { cb1.Checked, cb2.Checked, cb3.Checked, cb4.Checked });\n                intent.PutExtra("texts", new[] { cb1.Text, cb2.Text, cb3.Text, cb4.Text });\n                this.StartActivity(intent);\n            };\n    }\n}\n\n[Activity(Label = "Results", MainLauncher = false, Icon = "@drawable/icon")]\npublic class Results : Activity\n{\n    protected override void OnCreate(Bundle bundle)\n    {\n        base.OnCreate(bundle);\n\n        var cbs = this.Intent.Extras.GetBooleanArray("cbs");\n        var texts = this.Intent.Extras.GetStringArray("texts");\n\n        foreach (var cb in cbs)\n        {\n            System.Diagnostics.Debug.WriteLine(cb);\n        }\n\n        foreach (var text in texts)\n        {\n            System.Diagnostics.Debug.WriteLine(text);\n        }\n\n    }\n}
2614	string _time_One = "08:30" ;\nstring _time_Two = "08:35" ;\n\nTimeSpan ts = DateTime.Parse(_time_One) - DateTime.Parse(_time_Two);\nMessageBox.Show(String.Format("Time: {0:00}:{1:00}", ts.Hours, ts.Minutes));
2615	string a = "foo";\nstring b = "bar";\n\na = a + b.Substring(0, 2); // a is now "fooba";
2616	public int WeekNumber(DateTime date)\n{\n    CultureInfo ciCurr = CultureInfo.CurrentCulture;\n    int weekNum = ciCurr.Calendar.GetWeekOfYear(date,\n                                          CalendarWeekRule.FirstFourDayWeek,\n                                          DayOfWeek.Monday);\n    return weekNum;\n}
2617	public static string Foo<T>(this IEnumerable<T> source)\n{\n    var list = source as IList<T>;\n    if(list != null)\n    {\n        // use more efficient algorithm and return\n    }\n    // default to basic algorithm\n}
2618	public string RemoveSpaceAfter(string inputString)\n    {\n        try\n        {\n\n\n            string[] Split = inputString.Split(new Char[] { ' ' });\n            //SHOW RESULT\n            for (int i = 0; i < Split.Length; i++)\n            {\n                fateh += Convert.ToString(Split[i]);\n            }\n            return fateh;\n        }\n        catch (Exception gg)\n        {\n            return fateh;\n        }\n    }
2619	string x = "<tr><td>17-05-2011&nbsp;16:28&nbsp;</td><td>DB&nbsp;</td><td>(YB)&nbsp;0&nbsp;</td><td>75%&nbsp;</td>" +\n                       "<td>&nbsp;</td><td>[10] Pending - Probable</td></tr><tr><td>15-05-2011&nbsp;22:40&nbsp;</td>" +\n                       "<td>YB&nbsp;</td><td>(YB)&nbsp;0&nbsp;</td><td>90%&nbsp;</td><td>&nbsp;</td>" +\n                       "<td>[12] Solution Confirmed</td></tr>";\n            int searchBeforeLocation = x.LastIndexOf("Solution Confirmed");\n            x = x.Substring(0, searchBeforeLocation);\n            Regex r = new Regex(@"\d{2}-\d{2}-\d{4}");\n            MatchCollection matches = r.Matches(x);\n            int matchCount = matches.Count;\n            Console.WriteLine(matches[matches.Count - 1].Value);\n            Console.Read();
2620	comboBoxPlatypusId.SelectedIndex = comboBoxPlatypusId.Items.IndexOf(DuckbillVals[Duckbill_PlatypusID]);\ncomboBoxPlatypusId.Tag = comboBoxPlatypusId.SelectedIndex;\n...\nprivate void comboBoxFunnyMammals_SelectedValueChanged(object sender, EventArgs e) {\n    var cb = sender as ComboBox;\n    if (cb != null)\n    {\n        int validSelection = Convert.ToInt32(cb.Tag);\n        if (cb.SelectedIndex != validSelection) {\n            cb.SelectedIndex = validSelection;\n        }\n    }\n}
2621	public static TEntity CopyTo<TEntity>(this TEntity OriginalEntity, TEntity NewEntity)\n    {\n        PropertyInfo[] oProperties = OriginalEntity.GetType().GetProperties();\n\n        foreach (PropertyInfo CurrentProperty in oProperties.Where(p => p.CanWrite))\n        {\n            if (CurrentProperty.GetValue(NewEntity, null) != null)\n            {\n                CurrentProperty.SetValue(OriginalEntity, CurrentProperty.GetValue(NewEntity, null), null);\n            }\n        }\n\n        return OriginalEntity;\n    }
2622	CreateItem[] array = new CreateItem[1];\n\nCreateItem item = new CreateItem();\nitem.name = "Necklace";\nitem.value = 5;\narray[0] = item;\n\nConsole.WriteLine(array[0].name);
2623	createMSFile.Create("Provider=Microsoft.ACE.OLEDB.12.0;Exclusive=1;Data Source=" +\n        sfdNewFile.FileName);
2624	distance = acos(\n     cos(lat1 * (PI()/180)) *\n     cos(lon1 * (PI()/180)) *\n     cos(lat2 * (PI()/180)) *\n     cos(lon2 * (PI()/180))\n     +\n     cos(lat1 * (PI()/180)) *\n     sin(lon1 * (PI()/180)) *\n     cos(lat2 * (PI()/180)) *\n     sin(lon2 * (PI()/180))\n     +\n     sin(lat1 * (PI()/180)) *\n     sin(lat2 * (PI()/180))\n    ) * 3959
2625	using SW = System.Windows;\n\nSW.MessageBox.Show("");
2626	PointD^ GetPoint();
2627	var reminderDate = DateTime.ParseExact("24/01/2013", "d/MM/yyyy", null);\n\n   MessageBox.Show(reminderDate.ToString("d/MM/yyyy"));
2628	Application.Current.Resources.MergedDictionaries\n            .Add(new ResourceDictionary\n            {\n                Source = new Uri(@"pack://application:,,,/My.Application;component/Resources/Resources.xaml")\n            });
2629	class TestShow \n{\n    public string id { get; set; }\n    public string IMDB_ID { get; set; }\n    public string Language { get; set; }\n}\n\n[XmlRoot("Data")]\nclass Data \n{\n    [XmlElement("Series")]\n    public TestShow TestShow { get; set; }\n}
2630	from p in products\nselect new\n{\n   _ = p.Titles.Select(x=>CreateField("Titles_" + x.Culture, x.Text)),\n   _+ = p.Descriptions.Select(x=>CreateField("Descriptions_" + x.Culture, x.Text)),\n}
2631	Test.exe ^%Temp^%
2632	list.Add(\n   new SqlParameter("print_sql", System.Data.SqlDbType.Bit) { Value = (print_sql != null ? print_sql : DBNull.Value) }\n);
2633	List<x> myList = GetList();\n\nmyGrid.DataSource = myList;\nmyGrid.DataBind();
2634	var length = new System.IO.FileInfo(Server.MapPath(filePath)).Length;\nResponse.BufferOutput = false;\nResponse.AddHeader("Content-Length", length.ToString());\nreturn File(Server.MapPath(filePath), System.Net.Mime.MediaTypeNames.Application.Octet, fileName);
2635	public IEnumerable<T> Get<T>()\n{\n  return _vehicles.OfType<T>();\n}
2636	yourString = Regex.Replace(yourString, @"\bFUT\w*?\b", "");
2637	var cookieContainer = new CookieContainer();\nWebReq.CookieContainer = cookieContainer;
2638	[DllImport("user32.dll")]\n[return: MarshalAs(UnmanagedType.Bool)]\nprivate static extern bool IsIconic(IntPtr hWnd); //returns true if window is minimized\n\nprivate List<IntPtr> windowsHandles = new List<IntPtr>();\n//fill list with window handles\n\nfor (i = 0; i < windowsHandles.Count; i++)\n{\n    if (windowsHandles[i] != browserHandle && windowsHandles[i] != this.Handle && !IsIconic(windowsHandles[i]))\n    { \n        SetWindowPos(windowsHandles[i], HWND_BOTTOM, 0, 0, 0, 0, SWP_NOMOVE | SWP_NOSIZE | SWP_NOACTIVATE);\n    }\n}
2639	Nullable<T>
2640	int count = 0;\nmySortedlist.FindAll(delegate(myclass tmp){ return (tmp.ID == 123 && ++count <= 10);});
2641	webBrowser1.ScriptErrorsSuppressed = true;
2642	IObservable<T> fastest = slowObservables.Amb();
2643	DataTable dt = bLStatus.GetStatusDetail();\n            if (dt != null && dt.Rows.Count > 0)\n            {\n                dt.DefaultView.Sort = "Description ASC";\n                DataTable dt2 = dt.DefaultView.ToTable();\n\n                DataRow row1 = dt2.NewRow();\n                row1["Description"] = "All";\n                dt2.Rows.InsertAt(row1, 0);\n\n                cmbCurrentStatus.DataSource = dt2;\n                cmbCurrentStatus.ValueMember = "Description";\n                cmbCurrentStatus.DisplayMember = "Description";\n\n            }
2644	if (saveFileDialog1.ShowDialog() == DialogResult.OK)\n        {\n            System.Net.WebClient web = new WebClient();\n            web.DownloadFile(url, saveFileDialog1.FileName);\n            web.Dispose();\n        }
2645	var filteredData = _repository.GetAll();\n//If your data source is IEnumerable, just add .AsQueryable() to make it IQueryable\n\nif(keyWordTextBox.Text!="")\n    filteredData=filteredData.Where(m=>m.Keyword.Contains(keyWordTextBox.Text));\n\nif(LocationDropDown.SelectedValue!="All")\n    filteredData=filteredData.Where(m=>m.Location==LocationDropDown.SelectedValue));\n\n... etc....
2646	string Data = @"[{\n    ""created_at"": ""Fri Sep 27 02:00:08 +0000 2013"",\n    ""id"": 1\n},\n{\n    ""created_at"": ""Sat Sep 28 02:00:08 +0000 2013"",\n    ""id"": 1\n}]";\nIEnumerable<dynamic> d = (dynamic)JsonConvert.DeserializeObject(Data);\nvar dates = d.Select(x => DateTime.ParseExact(x.created_at.ToString(),\n    "ddd MMM dd HH:mm:ss K yyyy", CultureInfo.InvariantCulture))\n    .Cast<DateTime>().ToList();\nvar maxDate = dates.Max();\nvar minDate = dates.Min();
2647	FileShare.ReadWrite | FileShare.Delete
2648	XElement tweet = XElement.Parse(e.Result);\nvar thisTweet = new Tweet()\n{\n    created_at = tweet.Element("created_at").Value,\n    text = tweet.Element("text").Value,\n\n    //user info\n    name = tweet.Element("user").Element("name").Value,\n    profile_image_url = tweet.Element("user").Element("profile_image_url").Value,\n    screen_name = tweet.Element("user").Element("screen_name").Value,\n    user_id = tweet.Element("user").Element("id").Value\n\n};
2649	public class BlockingQueue<T> { \n    private Queue<Cell<T>> m_queue = new Queue<Cell<T>>(); \n    public void Enqueue(T obj) { \n        Cell<T> c = new Cell<T>(obj);\n        lock (m_queue) {\n            m_queue.Enqueue(c); \n            Monitor.Pulse(m_queue); \n        }\n    } \n    public T Dequeue() { \n        Cell<T> c; \n        lock (m_queue) { \n            while (m_queue.Count == 0) Monitor.Wait(m_queue); \n            c = m_queue.Dequeue();\n        } \n        return c.m_obj; \n    } \n}\n\nclass Cell<T> { \n    internal T m_obj; \n    internal Cell(T obj) { \n        m_obj = obj;\n    } \n}
2650	private void LoadImageToMemory()\n        {\n            openFileDialog1.Filter = "png files (*.png)|*.png|jpg files (*.jpg)|*.jpg";\n            openFileDialog1.Multiselect = false;\n            openFileDialog1.InitialDirectory = @"C:\";\n            openFileDialog1.Title = "Select a picture to transform.";\n\n            if (openFileDialog1.ShowDialog() == DialogResult.OK)\n            {\n                txtFileName.Text = openFileDialog1.FileName;\n            }            \n        }
2651	Type.GetAllBaseClassesAndInterfaces
2652	public void Process(string param1, List<string> param2 = null) {\n    param2 = param2 ?? new List<String>();\n}
2653	public partial class Student : IUniversityPerson{ ... }
2654	using (MemoryStream m = new MemoryStream())\n{\n    m.Position = 0;\n    bmp.Save(m, ImageFormat.Png);\n    bmp.Dispose();\n    data = m.ToArray();\n    MemoryStream ms = new MemoryStream(data);\n    // Upload ms\n}
2655	var centralTime = centralTimeZone.AtLeniently(localDateTime);\nvar easternTime = centralTime.InZone(easternTimeZone);
2656	// Reading the file\n  String text = File.ReadAllText(@"MyMessageFile.txt");\n\n  // Parsing: startIndex - index of the first '{' from the heading\n  // that is  #Msg ... 10001   \n  int startIndex = text.IndexOf('{', Regex.Match(text, @"#Msg\ *10001").Index);\n  // stop index: closing '}'\n  int stopIndex = text.IndexOf('}', startIndex);\n\n  // Message is text between '{' and '}'\n  // heading and trailing whitespaces (\n, \n, ' ')  removed\n  String message = text.Substring(startIndex + 1, stopIndex - startIndex - 1).Trim(' ', '\r', '\n');
2657	Process notePad = new Process();    \nnotePad.StartInfo.FileName   = "notepad.exe";\nnotePad.StartInfo.Arguments = "ProcessStart.cs"; // if you need some\nnotePad.Start();
2658	public void CountRowColor()\n    {\n        int red = 0, yellow = 0;\n\n        foreach(DataGridViewRow row in dataGridView1.Rows)\n        {\n            if (row.DefaultCellStyle.BackColor == Color.Red)\n                red++;\n            if (row.DefaultCellStyle.BackColor == Color.Yellow)\n                yellow++;\n        }\n\n        this.label14.Text = yellow.ToString();\n        this.label16.Text = red.ToString();\n    }
2659	GetRequestType( database.SomeThirdParty.RequestTypeEnumValue )
2660	var argsDeleteWebUserXref1 = new DbParameter[] {         new SqlParameter { ParameterName = "WebUserId", Value = user.WebUserId }  \n\nvar argsDeleteWebUserXref2 = new DbParameter[] {         new SqlParameter { ParameterName = "WebUserId", Value = user.WebUserId }  \n\nrowsAffectedDeleteWebUserXref += base.context.ExecuteStoreCommand(sqlDeleteWebUserGreen, argsDeleteWebUserXref1);      \nrowsAffectedDeleteWebUserXref += base.context.ExecuteStoreCommand(sqlDeleteWebUserBlue, argsDeleteWebUserXref2);
2661	string username = User.Identity.Name;\nbool isadmin = select admin from db where user == username;\nif(isadmin)\n{\nreturn View();\n}\nelse\n{\nreturn HttpNotFound();\n}
2662	var v = new { Amount = 108, Message = "Hello" };\nConsole.WriteLine(v.Amount + v.Message);
2663	System.Configuration.Configuration config = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);\nconfig.AppSettings.Settings.Add("Lorem", "metadata=res://*/Models.HOGC.csdl|res://*/Models.HOGC.ssdl|res://*/Models.HOGC.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=(local);initial catalog=Ipsum;user id=sa;password=Qwer0987;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient");\nconfig.Save(ConfigurationSaveMode.Modified);\nConfigurationManager.RefreshSection("appSettings");
2664	//asuming your db has these fields: db.Shifts, db.OperatorShifts\n//and model is the current Operator\n\nvar existingShifts = (from os in db.OperatorShifts\n                where os.OperatorId == model.Id\n                select os).ToList();\n\nIEnumerable<Guid> newShiftIds = ?; //don't now how your selected shift ids got post back, figure it out yourself\n\nvar shiftsToRemove = existingShifts.Where(e => newShiftIds.All(id => e.Id != id)).ToList();\nvar shiftIdsToAppend = newShiftIds.Where(id => exising.All(e => e.Id != id)).ToList();\n\nforeach(var shift in shiftsToRemove)\n{\n    db.OperatorShifts.Remove(shift);\n}\n\nforeach(var shiftId in shiftIdsToAppend)\n{\n    db.OperatorShifts.Add(new OperatorShift{\n        OperatorId = model.Id,\n        ShiftId = shiftId\n    });\n}
2665	public interface IRepository<T>\n{\n     T Get(int id);\n     void Add(T entity);\n     void Update(T entity);\n     void Remove(T entity);\n     void Save();\n}
2666	string.Format("sample {0}", "blah")
2667	tesseract-2.00.eng.tar.gz
2668	var session = ... ; // standard session, with access to other mapped stuff\nvar sql = "SELECT settingCol FROM dbo.myTable WHERE ... ";\nvar result = session\n    .CreateSQLQuery(sql)\n    .UniqueResult<string>(); // or <int>
2669	public class Orders\n{\n    public int OrderID { get; set; }\n    public decimal Total { get; set; }\n    public DateTime Date { get; set; }\n\n    public virtual Clients Clients { get; set; }\n\n    public string ClientsName\n    {\n      if(Clients != null)\n      {\n         return Clients.Name\n      }\n\n      return string.Empty;\n    }\n}
2670	private void DeleteSdtBlockAndKeepContent(MainDocumentPart mainDocumentPart, string sdtBlockTag)\n    {\n        List<SdtBlock> sdtList = mainDocumentPart.Document.Descendants<SdtBlock>().ToList();\n        SdtBlock sdtA = null;\n\n        foreach (SdtBlock sdt in sdtList)\n        {\n            if (sdt.SdtProperties.GetFirstChild<Tag>().Val.Value == sdtBlockTag)\n            {\n                sdtA = sdt;\n                break;\n            }\n        }\n\n\n        OpenXmlElement sdtc = sdtA.GetFirstChild<SdtContentBlock>();\n        OpenXmlElement parent = sdtA.Parent;\n\n        OpenXmlElementList elements = sdtc.ChildElements;\n\n        var mySdtc = new SdtContentBlock(sdtc.OuterXml);\n\n        foreach (OpenXmlElement elem in elements)\n        {\n\n            string text = parent.FirstChild.InnerText;\n            parent.Append((OpenXmlElement)elem.Clone());\n        }\n\n        sdtA.Remove();\n    }
2671	var task = Task.Run(() => { \n                var req = new HttpClient().GetAsync("http://www.google.com");\n                if (!req.Wait(10000))//wait for 10 seconds\n                    throw new TaskCanceledException(req);\n            });\ntask.Wait();
2672	//Make the framework (re)calculate the size of the element\n    _Element.Measure(new Size(Double.MaxValue, Double.MaxValue));\n    Size visualSize = _Element.DesiredSize;\n    _Element.Arrange(new Rect(new Point(0, 0), visualSize));\n    _Element.UpdateLayout();
2673	Expect.Once.On(mockSqlDao).Method("ExecuteNonQuery")\n          .With("usp_Update_Comment", Has.Property("ParameterName").EqualTo("@Id") & \n                                      Has.Property("Value").EqualTo(1));
2674	string propertyFile = @"C:\Users\myName\Desktop\ProgramFolder\assembly\settings.xml"; \n            string propertyFolder = propertyFile.Substring(0, propertyFile.LastIndexOf("\\") + 1); \n            string newXML = propertyFolder + "newXML.xml"; \n \n            //XmlDocument doc name of xml document in code \n            doc.Save(newXML);???
2675	string yourString = "this,is,a,example,string";\n        string newString = "";\n\n        string[] array = yourString.Split(',');\n\n        foreach (string s in array)\n        {\n            newString += s;\n        }\n\n        Console.WriteLine(newString);
2676	loanStatusUpdater\n        .Stub(x => x.TryUpdateStatus(loan))\n        .WhenCalled(call => ((Loan)call.Arguments[0]).LOAN_STATUS = "A");                         \n        .Return(true);
2677	void Main()\n{\n    // Create an Outlook application.\n    Outlook._Application oApp;\n    oApp = new Outlook.Application();\n\n    // Create a new MailItem.\n    Outlook._MailItem oMsg;\n    oMsg = oApp.CreateItem(Outlook.OlItemType.olMailItem);\n    oMsg.Subject = "Send Attachment Using OOM in Visual Basic .NET";\n    oMsg.Body = "Hello World" + vbCr + vbCr;\n\n    // TODO: Replace with a valid e-mail address.\n    oMsg.To = "user@example.com";\n\n    // Add an attachment\n    // TODO: Replace with a valid attachment path.\n    string sSource = "C:\\Temp\\Hello.txt";\n    // TODO: Replace with attachment name\n    string sDisplayName = "Hello.txt";\n\n    string sBodyLen = oMsg.Body.Length;\n    Outlook.Attachments oAttachs = oMsg.Attachments;\n    Outlook.Attachment oAttach;\n    oAttach = oAttachs.Add(sSource, , sBodyLen + 1, sDisplayName);\n\n    // Send\n    oMsg.Send();\n\n    // Clean up\n    oApp = null;\n    oMsg = null;\n    oAttach = null;\n    oAttachs = null;\n}
2678	public partial class Form1 : Form\n{\n    Button lastButton = null;\n    int buttoncount;\n\n    public Form1()\n    {\n        InitializeComponent();\n        button1.Tag = "Ford Mustang";\n        button2.Tag = "Ford Focus";\n        button3.Tag = "Chevy Malibu";\n        button4.Tag = "Chevy Camaro";\n        button1.Click += button_Click;\n        button2.Click += button_Click;\n        button3.Click += button_Click;\n        button4.Click += button_Click;\n        //etc...\n    }\n\n    void button_Click(object sender, EventArgs e)\n    {\n        if (lastButton != null)\n        {\n            SwitchTagWithText();\n        }\n\n        lastButton = sender as Button;\n        SwitchTagWithText();\n\n        buttoncount++;\n        label2.Text = buttoncount.ToString();\n    }\n\n    void SwitchTagWithText()\n    {\n        string text = lastButton.Text;\n        lastButton.Text = lastButton.Tag.ToString();\n        lastButton.Tag = text;\n    }\n}
2679	private void Save()\n    {\n        List<Element> elementList = new List<Element> ();\n        elementList = Root [1].Elements;\n        foreach (Element element in elementList) {\n            RootElement radioElement = (RootElement)element;\n            user.Title = radioElement[0].Elements[radioElement.RadioSelected].Caption;\n        }\n        user.Save ();\n    }
2680	ddlCity.Items.FindByValue(CityID.ToString()).Selected = true
2681	var fileName = FileUpload1.PostedFile.FileName;
2682	XmlWriterSettings settings = new XmlWriterSettings();\nsettings.Indent = true;\n// other settings...\n\nXmlWriter xmlWriter = XmlWriter.Create(exportFile, settings);
2683	dtData.Select("ID=1 AND ID2=3");
2684	combobox1.datasource = null;\ncombobox1.items.clear();
2685	(outVect.X-a1.X), (outVect.Y-a1.Y)
2686	XDocument xml = XDocument.Load("Registro.xml");
2687	//*[contains(text(), 'text you want to find')]
2688	HtmlNodeCollection OneHome = document.DocumentNode.SelectNodes("//div[@id='accordion1']");\n    var OneHomelinks = OneHome.Descendants("a")\n            .Select(a => a.OuterHtml)\n            .ToList();\n    var headerCount = 0;\n    foreach (string link in OneHomelinks)\n    {\n        var prevCounter = headerCount;\n        if (link.Contains('#'))\n        {\n            headerCount++;\n\n            if (headerCount != 1 && headerCount > prevCounter) {\n                Response.Write("</ul>");\n                Response.Write("</p>");\n                Response.Write("</div>");\n            }\n\n            Response.Write("<div data-role=\"collapsible\" data-collapsed=\"true\">");\n            Response.Write("<h3>" + link + "</h3>");\n            Response.Write("<p>");\n            Response.Write("<ul>");\n\n\n        }\n        else {\n            Response.Write("<li>" + link + "</li>");\n        } \n    }\n    Response.Write("</ul>");\n    Response.Write("</p>");\n    Response.Write("</div>");
2689	protected void list_Sorting(object sender, ListViewSortEventArgs e)\n{\n     ...\n     list.Sort(sortColumn, sortDirection);\n     ...\n}
2690	public List<string>[] SomeClientBuilsenessLogicMethod()\n{\n    var serviceClient = GetServiceClientInstance(); //you might want to have single instance (single connection) of WCF service client, so I implemented it's creation as factory method here.\n\n    string[][] serviceData = serviceClient.MyMethod();\n\n    List<string>[] mutableDataList = serviceData.Select(x=>x.ToList()).ToArray();//Not the best memory usage here probably (better is a loop), but for not big data lists it's fine.\n\n    //Perform any needed operations for list changing. Again there is NO NEED to use List if you don't plan to add/remove items to/from that collection.\n\n    return mutableDataList;\n}
2691	public ObservableCollection<efcFixtureMode> Modes { get; set; }
2692	SPWeb web = SPContext.Current.Web;\nSPGroup oGroup = web.Groups.GetByID   (oFieldUserValue.LookupId);   //Look up field value                                     \nSPPrincipal principal = (SPPrincipal)oGroup;\nSPRoleAssignment roleAssignment = new SPRoleAssignment(principal);                                        \npermFolder.Item.BreakRoleInheritance(true);                                        \nroleAssignment.RoleDefinitionBindings.Add(web.RoleDefinitions["Contribute"]);\npermFolder.Item.RoleAssignments.Add(roleAssignment);\npermFolder.Item.Update();\nfinalItem.Update();
2693	double avg = 0;\nfor (int i = 0; i < arr.Length; i++) // arr.Length should be the same as MaxRate\n{\n    avg += arr[i] * (i + MinRate);\n}\navg /= arr.length;
2694	private string _GetXmlWithoutHeadersAndComments(XmlDocument doc)\n{\n    string xml = null;\n\n    // Loop through the child nodes and consider all but comments and declaration\n    if (doc.HasChildNodes)\n    {\n        StringBuilder builder = new StringBuilder();\n\n        foreach (XmlNode node in doc.ChildNodes)\n            if (node.NodeType != XmlNodeType.XmlDeclaration && node.NodeType != XmlNodeType.Comment)\n                builder.Append(node.OuterXml);\n\n        xml = builder.ToString();\n    }\n\n    return xml;\n}
2695	mail.Headers.Add("Sensitivity", "Company-Confidential");
2696	var words = text.Split(" ");\n\n        foreach (var word in words)\n            if (word.Contains("lookup"))\n                Console.WriteLine("found it");
2697	newid()
2698	var source =\n            @"\nclass Hello:\ndef __init__(self):\n    pass\ndef add(self, x, y):\n    return (x+y)\n\n";\n\n        var engine = Python.CreateEngine();\n        var scope = engine.CreateScope();\n        var ops = engine.Operations;\n\n        engine.Execute(source, scope);\n        var pythonType = scope.GetVariable("Hello");\n        dynamic instance = ops.CreateInstance(pythonType);\n        var value = instance.add(10, 20);\n        Console.WriteLine(value);\n\n        Console.WriteLine("Press any key to exit.");\n        Console.ReadLine();
2699	DBcmd.CommandText = "INSERT INTO tbl_ClientInfo (FirstName, LastName, Address, ZipCode, " + \n                    "City, State, Country, [Language], PhoneNr, MobileNr)" + \n                    "VALUES (@FirstName, @LastName, @Address, @ZipCode, " + \n                    "@City, @State, @Country, @Language, @PhoneNr, @MobileNr)";
2700	var TRANSACTIONS=new XElement("TRANSACTIONS");\nTRANSACTIONS.Add(new XElement("TRANSACTION",new XElement("TYPE",4)));\nTRANSACTIONS.Add(new XElement("TRANSACTION",new XElement("TYPE",5)));\nTRANSACTIONS.Add(new XElement("TRANSACTION",new XElement("TYPE",6)));
2701	decimal mLon1 = 0;\ndecimal mLat1 = 0;\ndecimal mFactor = 111021;\ndecimal mRadius = 100;\ndecimal mLat = (decimal)12.123;\ndecimal mLon = 0;\nmLon1 = mLon - mRadius / (decimal)Math.Abs(Math.Cos(((Math.PI / 180) * (double)mLat)) * (double)mFactor);\nmLat1 = mLat - (mRadius / mFactor);
2702	^((?!.*[\s])(?=.*[A-Z])(?=.*\d).{8,15})
2703	ISQLFunction sqlAdd = new VarArgsSQLFunction("(", "+", ")");\nvar concat = Projections.SqlFunction(sqlAdd, NHibernateUtil.String, Projections.Property("ObjectProperty1"), Projections.Property("ObjectProperty2"));\nvar sha1 = Projections.SqlFunction("SHA1", NHibernateUtil.String, concat);\n...\nsession.CreateCriteria<Car>().Add(Expression.Eq(sha1, "hash"));
2704	SqlDataAdapter adpt = new SqlDataAdapter(string.Format("Select ColumName from TableName where Field like '%{0}%'", \n                 comboBox_Search.Text), sqlcon);
2705	dbc.SetCommand("INSERT INTO publishing_info ([ID], [Author], [DateTime], [Publisher], [Pages], [ISBN_NO]) " +\n           "VALUES (" +\n           "(SELECT([ID] FROM inventory " +\n           "WHERE inventory.CallNumber=@CALLNUMBER AND inventory.Title=@TITLE AND inventory.ImageLocation=@IMAGELOC), " +\n           "@AUTHOR, @DATETIME, @PUBLISHER, @PAGES, @ISBN);");
2706	public class CustomControllerClass : Controller\n{\n    public User CurrentUser;\n\n    protected override void Initialize(System.Web.Routing.RequestContext requestContext)\n    {\n        base.Initialize(requestContext);\n\n        if (requestContext.HttpContext.User.Identity.IsAuthenticated)\n        {\n            string userName = requestContext.HttpContext.User.Identity.Name;\n            CurrentUser = UserRepository.GetUser(userName);\n            ViewData["CurrentUser"] = CurrentUser;\n        }\n        else\n            ViewData["CurrentUser"] = null;\n    }\n}
2707	var properties = typeof(customclass).GetProperties(BindingFlags.Public | \n                          BindingFlags.Instance).OrderBy(x => x.Name).ToList();\n\nList<customclass> BMrep = somefunction();\nvar retdata = new object[BMrep.Count, properties.Count];\n\nfor (int i = 0; i < BMrep.Count; i++)\n{\n    for (int j = 0; j < properties.Count; j++)\n    {\n        retdata[i, j] = properties[j].GetValue(BMrep[i], null);\n    }\n}\n\nreturn retdata;
2708	try\n{ \n    throw new CustomException("An exception.");\n}\ncatch (Exception ex)\n{\n   if (ex is CustomException)\n   {\n        // Do whatever\n   }\n   // Do whatever else\n}
2709	System.EventHandler<TEventArgs>
2710	CultureInfo c = CultureInfo.CreateSpecificCulture(CultureInfo.CurrentCulture.Name);\nc.NumberFormat.CurrencyNegativePattern = 14; // From MSDN -- no enum values for this\nc.NumberFormat.CurrencySymbol = "USD";\n\ndecimal d = Decimal.Parse("(USD 92.90)", NumberStyles.Currency, c);
2711	Debug.WriteLine()
2712	sql-server
2713	height:100%
2714	Request.QueryString("SubPage")
2715	...\nint PageToAccess = 2;\n((Control)FindName("DocumentPage" + PageToAccess)).Height = 200;\n...
2716	public IEnumerable<DateTime> GetAllQuarters(DateTime current, DateTime past)\n        {\n            var curQ = (int)Math.Ceiling(current.Month / 3.0M);\n            var lastQEndDate = new DateTime(current.Year, curQ * 3, 1).AddMonths(-2).AddDays(-1);\n\n            do\n            {\n                yield return lastQEndDate;\n                lastQEndDate = lastQEndDate.AddMonths(-3);\n            } while (lastQEndDate > past);\n        }
2717	Trace.Flush
2718	internal static void Notify_SettingChange()
2719	protected void Button_Click(object sender, EventArgs e)\n{\n    int q1 = Convert.ToInt16(TextBox1.Text);\n\n    string t1 = DropDownList1.SelectedItem.ToString().Trim();\n    int start = 1;\n    string checkBoxValue = string.Concat(t1, start);\n    while (CheckBoxList1.Items.Cointains(new ListItem(checkBoxValue)))\n    {\n        start++;\n        checkBoxValue = string.Concat(t1, start);\n    }\n\n    for (int i = start; i <= start + q1 - 1; i++)\n    {\n        CheckBoxList1.Items.Add(string.Concat(t1, i));\n    }\n\n    TextBox1.Text = "";\n}
2720	Process vbsProcess = new Process();\nvbsProcess.StartInfo.FileName = "yourscript.vbs";\nvbsProcess.StartInfo.UseShellExecute = false;\nvbsProcess.StartInfo.RedirectStandardOutput = true;\nvbsProcess.OutputDataReceived += new DataReceivedEventHandler(YourOutputHandler);\nvbsProcess.Start();\nvbsProcess.WaitForExit();
2721	IntPtr hWnd;\n  WindowInteropHelper helper = new WindowInteropHelper(wnd);\n\n  WindowState prevState = wnd.WindowState;\n  bool prevShowInTaskBar = wnd.ShowInTaskbar;\n\n  wnd.ShowInTaskbar = false;\n  wnd.WindowState = WindowState.Minimized;\n  wnd.Show();\n  hWnd = helper.Handle;\n  wnd.Hide();\n\n  wnd.ShowInTaskbar = prevShowInTaskBar;\n  wnd.WindowState = prevState;
2722	XElement xelement = XElement.Load(Server.MapPath("~/web.sitemap"));\n    var urlList = xelement.Descendants().Attributes()\n       .Where(x => x.Name == "title")\n       .Select(x => x.Value);\n\n    foreach (string s in urlList)\n    {\n\n    }
2723	private static
2724	DateTime dt = new DateTime(1601, 01, 02).AddTicks(129508380000000000);
2725	foreach(Control control in this.Controls)\n{\n    cName = control as ICustomerName;\n    if (cName != null) break;\n}
2726	using Microsoft.Deployment.WindowsInstaller;\nusing(Database database = new Database(PATH_TO_MSI, DatabaseOpenMode.ReadOnly))\n{\n  Console.WriteLine(database.SummaryInfo.Template);\n}
2727	Mapper.CreateMap<Conference,Model>()\n     .ForMember(c => c.Id, op => op.MapFrom(v => v.Id))\n     .ForMember(c => c.NumberOfTables, op => op.MapFrom(v => v.NumberOfTables))\n      .ForMember(c => c.Peoples, op =>\n                        op.ResolveUsing<CustomConvert>()\n                            .FromMember(x => x.Peoples));
2728	AppDomain myDomain = AppDomain.CreateDomain("MyDomain");\n\nstring pathToTheDll = "C:\\SomePath\\MyAssembly1.dll";\nobject obj = myDomain.CreateInstanceFromAndUnwrap(pathToTheDll, "MyAssembly1.TypeName");\nType myType = obj.GetType();\n\nmyType.InvokeMember("SomeMethodName", BindingFlags.InvokeMethod, null, obj, null);\n\nAppDomain.Unload(myDomain);
2729	INSERT INTO [Projects] \nSELECT '1', 'None', '2', '2010/09/08 10:36:30 AM', 4, 1, 4, '6', '', 'n/a', 'no', 'n/a', 'None', 0, 'n/a', 'n/a', 'no', 'A3', 'no', 'Blnk', 'aa',\nstatus.statusID from status where name = 'STOPPED'
2730	Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =>\n            {\n                if (this.Frame != null)\n                {\n                    Frame.Navigate(typeof(NetworkDisconection));\n                }\n            });
2731	text.Options = TextField.READ_ONLY;
2732	public List<Appointment> GetAppointments()      \n{\n    return dataEntities.Appointments\n                       .Where(a => a.PATIENTID == PatientId)\n                       .Select(a => new OtherNamespace.Appointment \n                                    {\n                                        Id = a.Id,\n                                        Name = a.Name,\n                                        // etc.\n                                    })\n                       .ToList();\n}
2733	public overrride InnerMapArray this[int x, int y] { ... }
2734	protected void Button3_Click(object sender, EventArgs e)\n{\n   Button3.Enabled = false;\n   //rest of code\n}
2735	abstract class Rack\n{\n   public abstract void GetData();\n}\n\nclass ChildRack1 : Rack\n{\n    public override void GetData(){}\n}\n\nclass ChildRack2 : Rack\n{\n    public override void GetData(){}\n}\n\nclass Channel\n{\n    private Rack rack1;\n    private Rack rack2;\n    public Channel()\n    {\n\n    }\n\n    public Channel(Rack h1, Rack  h2)\n    {\n        rack1 = h1;\n        rack2 = h2;\n    }\n\n    public void send()\n    {\n\n        rack1.GetData();\n    }\n\n}
2736	List<string> words = Search.GetTags(q);\n using(ShapesDataContext context = new ShapesDataContext())\n {\n   IQueryable<Shape> query = Enumerable.Empty<Shape>().AsQueryable();\n   foreach (var word in words)\n   {\n     query = query.Union(context.Shapes.Where(x => x.Title.Contains(word) || x.Description.Contains(word)));\n   }
2737	// Add the last item to the listbox again\n    listBox.Items.Add(listBox.Items.Last());\n\n    // Place the textbox in the previous item\n    listBox.Items[listBox.Items.Count - 2] = new TextBox();
2738	ffmpeg -i input.avi
2739	gv.DataSource = Enumerable.Range(0, int.Parse(txtCount.Value))\n               .Select (e => new \n               { \n                  RTDetailID = "", \n                  AssyNo = "", \n                  Position = "-1"\n               });\ngv.DataBind();
2740	var sample =\n    (\n        from e in dataContext.tblA.Include("tblB")\n        where e.Active == true && System.Data.Objects.EntityFunctions.CreateDateTime(e.DateA.Year, e.DateA.Month,e.DateA.Day,e.DateB.Hour,e.DateB.Minute,e.DateB.Second) >= DateTime.Now\n        select new \n        {\n            ...\n        }\n    ).ToList();
2741	ProcessStartInfo psi = new ProcessStartInfo();\npsi.FileName = @"D:/Path to /My/Program to be run.exe";\npsi.WorkingDirectory = IO.Path.GetDirectoryName(psi.FileName);\nDiagnostics.Process.Start(psi);
2742	IEnumerable<T>
2743	var ret = DoDragDrop( ... );\nif(ret == DragDropEffects.None) //not successfull\nelse // etc.
2744	JArray jsonarray = JArray.Parse("Your Json String Here");\nvar dict = (JArray)JsonConvert.DeserializeObject(Convert.ToString(jsonarray));\nforeach (var obj in dict[0])\n{\n  Debug.WriteLine(obj["condition_name"]);\n}
2745	TextRange tr = new TextRange(position, nextPosition);\nvar Br = new SolidColorBrush(Color.FromScRgb(alpha, 1f, 1f, 0f));\ntr.ApplyPropertyValue(TextElement.BackgroundProperty, Br);
2746	// Scan through series and find the nearest datapoint within a given time interval\n            foreach (DataPoint pt in calCheckChart.Series[0].Points)\n            {\n                // Initialize point attributes.\n                pt.MarkerStyle = MarkerStyle.None;\n                // Check if the cursor's x-value is the near a point in series, and if so highlight it\n                if (pt.XValue > calCheckChart.ChartAreas[0].CursorX.Position - 0.4 && pt.XValue < calCheckChart.ChartAreas[0].CursorX.Position + 0.5)\n                {\n                    pt.MarkerStyle = MarkerStyle.Circle;\n                    pt.MarkerSize = 8;\n                    // toolStripStatusLabel1.Text = pt.YValues[0].ToString();\n                }\n            }\n\n // ...
2747	foreach(byte b in System.Text.Encoding.UTF8.GetBytes(str.ToCharArray()))\n    Console.Write(b.ToString());
2748	public class IntConverter : IValueConverter\n{\n    public object Convert(object value,\n                          Type targetType,\n                          object parameter,\n                          CultureInfo culture)\n    {\n        if (value is int?)\n        {\n            int? intValue = (int?)value;\n            if (intValue.HasValue)\n            {\n                return intValue.Value.ToString();\n            }\n        }\n\n        return Binding.DoNothing;\n    }\n\n    public object ConvertBack(object value,\n                              Type targetType,\n                              object parameter,\n                              CultureInfo culture)\n    {\n        if(value is string)\n        {\n            int number;\n            if (Int32.TryParse((string)value, out number))\n            {\n                return number;\n            }\n        }\n\n        return null;\n    }\n}
2749	StringWriter output = new StringWriter(new StringBuilder());\nXmlSerializer s = new XmlSerializer(this.GetType());\ns.Serialize(output,this);\nvar result = output.ToString()
2750	const string refString = "PO NO.";\n        string aLine = "Widget PO NO. 1234";\n\n        string orderNumb = aLine.Substring(aLine.LastIndexOf(refString) + refString.Length).Trim();
2751	#pragma strict\n\npublic var myText : GameObject; // Assign the text to this in the inspector\n\nfunction Start() {\nyield WaitForSeconds (5);\nmyText.SetActive( true ); // Enable the text so it shows\nyield WaitForSeconds (5);\nmyText.SetActive( false ); // Disable the text so it is hidden\n}
2752	using(SqlConnection cn = new SqlConnection("data source=(local);initial catalog=pubs;.....")) {\n        cn.Open();\n        SqlCommand cmd = new SqlCommand("SELECT * FROM authors FOR XML AUTO, XMLDATA", cn);\n\n        XmlReader xmlr = cmd.ExecuteXmlReader();\n        xmlr.Read();\n        while(xmlr.ReadState != ReadState.EndOfFile) {\n                    Console.WriteLine(xmlr.ReadOuterXml());\n        }                       \n   }
2753	using (var stream = new StreamReader( File.Open(_file, FileMode.Open, FileAccess.Read, FileShare.ReadWrite)))\n     {\n         string str = stream.ReadToEnd();\n         int x = str.LastIndexOf('\n');\n         string lastline = str.Substring(x + 1);                              \n     }
2754	var queryResult = from records in container.tableWhatever \n                  where records.Time >= DateTime.Today \n                  group records by tableWhatever.tableHeader.UserId into userRecords \n                  select new\n                  {\n                       UserID = userRecords.Key,\n                       Records = userRecords.OrderByDescending( u => u.Time )\n                  };
2755	routes.MapRoute(\n    name: "SubmitBid",\n    url: "Tender/SubmitBid/{id}/{bidId}/",\n    defaults: new \n                { \n                    controller = "Tender", \n                    action = "SubmitBid", \n                    id = UrlParameter.Optional, \n                    bidId = UrlParameter.Optional \n                });\n\nroutes.MapRoute(\n    name: "Tender",\n    url: "Tender/Create/{id}/{templateId}",\n    defaults: new \n                { \n                    controller = "Tender", \n                    action = "Create", \n                    id = UrlParameter.Optional, \n                    templateId = UrlParameter.Optional \n                });\n\n// Default route, keep this at last for fall-back.\nroutes.MapRoute(\n    name: "Default", \n    url: "{controller}/{action}/{id}", \n    defaults: new \n                { \n                    controller = "Home", \n                    action = "Index", \n                    id = UrlParameter.Optional \n                });
2756	Application app = new Application();\n\nbyte[] wordContent = GetBytesInSomeWay();\n\nvar tmpFile = Path.GetTempFileName();\nvar tmpFileStream = File.OpenWrite(tmpFile);\ntmpFileStream.Write(wordContent, 0, wordContent.Length);\ntmpFileStream.Close();\n\napp.Documents.Open(tmpFile);
2757	(from r in db.Restaurants where r.Restaurant_Name.StartsWith(restName) \n&& r.any(c=>test.contains(r.Restaurant_Name))\nselect r.Restaurant_Name).Take(matchingCount).toList();
2758	void()\n{\n    var testWasTrue = false;\n    foreach()\n    {\n        if()\n        {\n            testWasTrue = true;\n            break;  // break out of the "foreach"\n        }\n    }\n\n    if( !testWasTrue ) {\n        //code I want to skip if "if" statement is true\n    }\n\n}
2759	string[] splits = Regex.Split(txtfile, @"(?<=\}),");
2760	new NHibernate.Tool.hbm2ddl.SchemaExport(NHibernateConfiguration).Create(false, true);
2761	internal class Program {\n    private static void Main(string[] args) {            \n        // suppose it's from another assembly, and you don't have direct reference to type\n        var c = Activator.CreateInstance(typeof(MyClass)); \n        IMyClass iface = c.ActLike<IMyClass>();\n        iface.method1();\n        Console.ReadKey();\n    }\n}\n\npublic class MyClass\n{\n    public void method1() {\n        Console.WriteLine("Method 1");\n    }\n\n    public void method2() {\n        Console.WriteLine("Method 2");\n    }\n}\n\npublic interface IMyClass {\n    void method1();\n    void method2();\n}
2762	using System;\nusing System.Linq;\nusing DocumentFormat.OpenXml.Packaging;\nusing DocumentFormat.OpenXml.Drawing;\n\n\nnamespace OpenXmlGetPowerpointTextInfo\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            using (PresentationDocument myPres = PresentationDocument.Open(@"test.pptx", true))\n            {\n                PresentationPart presPart = myPres.PresentationPart;\n                //SlidePart slide = presPart.GetPartsOfType<SlidePart>().FirstOrDefault();\n                SlidePart[] slidePartList = presPart.SlideParts.ToArray();\n                foreach (SlidePart part in slidePartList)\n                {\n                    RunProperties[] runProList = part.Slide.Descendants<RunProperties>().ToArray();\n                    foreach (RunProperties r in runProList)\n                   {\n                       Console.WriteLine(r.FontSize.Value);\n                   }\n                }\n            }\n        }\n    }\n}
2763	var chart = new Highcharts.Chart({\n    chart: {\n        renderTo: 'container'\n    },\n    xAxis: {\n        categories: ['01/02/2012', '01/03/2012', '01/04/2012', '01/05/2012', '01/06/2012', '01/07/2012'],\n        labels: {\n            formatter: function () {\n                var index = this.axis.categories.indexOf(this.value);\n                var points = this.axis.series[0].options.data;\n                return points[index];\n            }\n        }\n    },\n\n    series: [{\n        data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0]\n    }]\n});
2764	db.getCollection('15').find();
2765	// add a reference to System.ServiceProcess.dll\nusing System.ServiceProcess;\n\n// ...\nServiceController ctl = ServiceController.GetServices()\n    .FirstOrDefault(s => s.ServiceName == "myservice");\nif(ctl==null)\n    Console.WriteLine("Not installed");\nelse    \n    Console.WriteLine(ctl.Status);
2766	public int TransactionSubcategoryId { get; set; }\npublic int OwnerMemberId { get; set; }
2767	System.Diagnostics.Process.Start("iexplore.exe", "http://sp.path.to/your/file.doc")
2768	PdfAppearance ap = newPage.CreateAppearance(rect.Width, rect.Height);\nannot.SetAppearance(PdfAnnotation.APPEARANCE_NORMAL, ap);\nannot.SetPage();\nstamper.AddAnnotation(annot, i);\nsd.Dispose();\nsd.Close();
2769	if (e.InnerException is DirectoryServicesCOMException)\n{\n    DirectoryServicesCOMException innerException = (DirectoryServicesCOMException)e.InnerException;\n    // do whatever is correct with these kind of exception\n}
2770	var methods = typeof( MyClass ).GetMethods( BindingFlags.Public );\n\nforeach(var method in methods)\n{\n    var attributes = method.GetCustomAttributes( typeof( MyAttribute ), true );\n    if (attributes != null && attributes.Length > 0)\n        //method has attribute.\n\n}
2771	using(XmlWriter writer = XmlWriter.Create("output.xml"))\n{\n    writer.WriteStartElement("Document");\n    writer.WriteStartElement("Header");\n\n    writer.WriteStartElement("OrgName");\n    writer.WriteString("abc");\n    writer.WriteEndElement();\n\n    writer.WriteStartElement("OrgAddress");\n    writer.WriteString("asd dfs 999 dfsd");\n    writer.WriteEndElement();\n\n    // End Header\n    writer.WriteEndElement();\n\n    writer.WriteStartElement("Detail");\n\n    writer.WriteStartElement("EmpId");\n    writer.WriteString("100");\n    writer.WriteEndElement();\n\n    // End Detail\n    writer.WriteEndElement();\n\n    // End Document\n    writer.WriteEndElement();\n}
2772	var numbers = Enumerable.Range(2, (int)(20000 * (Math.Log(20000) + Math.Log(System.Math.Log(20000)) - 0.5)))\n                .AsParallel()\n                .WithDegreeOfParallelism(Environment.ProcessorCount) \n                .WithExecutionMode(ParallelExecutionMode.ForceParallelism)\n                .WithMergeOptions(ParallelMergeOptions.NotBuffered) // remove order dependancy\n                .Where(x => Enumerable.Range(2, x - 2)\n                                      .All(y => x % y != 0))\n                .TakeWhile((n, index) => index < 20000);\nstring result = String.Join(",",numbers.OrderBy (n => n));
2773	Certificate[1].Thumbprint
2774	public IObservable<object> BindingList\n{\n  get { return (IObservable<object>)base.GetValue(BindingListProperty); }\n  set { base.SetValue(BindingListProperty, value); }\n}\n\npublic static DependencyProperty BindingListProperty =\n  DependencyProperty.Register(\n  "BindingList",\n  typeof(IObservable<object>),\n  typeof(CustomControl),\n  new PropertyMetadata(null));
2775	BluetoothAddress addr = ...\nGuid serviceClass;\nserviceClass = BluetoothService.SerialPort;\nvar ep = new BluetoothEndPoint(addr, serviceClass);\nvar cli = new BluetoothClient();\ncli.Connect(ep);\nStream peerStream = cli.GetStream();\npeerStream.Write ...
2776	static void Main(string[] args)\n    {\n\n        DB db = new DB();\n        DataTable dtServers = db.GetDataTable("select * from SYS_Servers");\n        string htmlCode;\n        var json = "";\n        using (var webClient = new System.Net.WebClient())\n        {\n            json = webClient.DownloadString("http://www.soyoustart.com/fr/js/dedicatedAvailability/availability-data.json");\n        }\n\n        RootObject myData = JsonConvert.DeserializeObject(json, typeof(RootObject)) as RootObject;\n        foreach (var availability in myData.availability)\n        {\n            //do something with availability\n        }\n        String x = "moo";\n    }\n    public class Zone\n    {\n        public string availability { get; set; }\n        public string zone { get; set; }\n    }\n\n    public class Availability\n    {\n        public string reference { get; set; }\n        public Zone[] zones { get; set; }\n    }\n\n    public class RootObject\n    {\n        public Availability[] availability { get; set; }\n    }
2777	//add table first\nTable tbl = new Table();\nint columnsToAdd = 4;\nfor (int x = 0; x < columnsToAdd; x++)\ntbl.Columns.Add(new TableColumn());\n//then get table count\nint columns = tbl.Columns.Count;
2778	public class PaymentSection : ConfigurationSection\n{\n   // Simple One\n   [ConfigurationProperty("name")]]\n   public String name\n   {\n      get { return this["name"]; }\n      set { this["name"] = value; }\n   }\n\n}
2779	var a = Directory.GetFiles(path)\n                 .OrderBy(p => Regex.Replace(p,@"^.*\\(\d\d)(\d\d)(\d\d\d\d).*$","$3$2$1"))
2780	var xmlItem = root.SelectSingleNode("/Primary/Complex[@Name='comp1']/@Value");
2781	var cleanString = new string(dirtyString.Where(Char.IsLetter).ToArray());
2782	if (info.Trim() != String.Empty)\n{\n    string[] words = info.Split(',');\n    if (words.Length == 6)\n    {\n        name = words[0].Trim();\n        date = words[1].Trim();\n        place = words[2];\n        blood = words[3];\n        num = words[4];\n        address = words[5];\n    }\n\n\n    string cmdText = "INSERT INTO patients (" +\n       "firstlastname, birthdate, birthplace, bloodtype, telnum, address) " +\n       "VALUES (?,?,?,?,?,?)";\n\n    using (OleDbConnection cn = GetConnection())\n    {\n        using (OleDbCommand cmd = new OleDbCommand(cmdText, cn))\n        {\n            cmd.Parameters.AddWithValue("name", name);\n            cmd.Parameters.AddWithValue("date", date);\n            cmd.Parameters.AddWithValue("place", place);\n            cmd.Parameters.AddWithValue("blood", blood);\n            cmd.Parameters.AddWithValue("num", num);\n            cmd.Parameters.AddWithValue("address", address);\n            cmd.ExecuteNonQuery();\n        }\n    }\n}
2783	Uri address = OperationContext.Current.IncomingMessageHeaders.To;
2784	List<int> customerIds = customerList.Select(c => c.Id).Distinct().ToList();
2785	CREATE PROCEDURE Test\n@startdate DATETIME, @enddate DATETIME, @Userid INT, @Registerid INT\nAS\nBEGIN\n    SELECT Count(*)\n    FROM   leave\n    WHERE  ((UserID = @userid)\n            AND ((@startdate BETWEEN StartDate AND EndDate)\n                 AND (@Registerid <> Registerid)\n                 OR (@enddate BETWEEN StartDate AND EndDate)\n                 OR ((@startdate <= Startdate\n                      AND @enddate >= EndDate))));\nEND
2786	foreach(GridViewRow row in GridView1.Rows) {\n    if(row.RowType == DataControlRowType.DataRow) {\n\n        TextBox txtbx= row.FindControl("txtbx") as TextBox;\n        //using the txtbx you can get the new values and update then to the db\n    }\n}
2787	System.IO.DirectoryInfo dir = new System.IO.DirectoryInfo("your path");\nif (dir.Exists)\n     dir.Delete(true);
2788	dataGridBasket.InvalidateRow(row.Index)
2789	public class CustomLabel : Label\n{\n    public CustomLabel()\n    {            \n    }\n\n    protected override void OnPaint(PaintEventArgs e)\n    {\n        e.Graphics.DrawString(Text, Font, new SolidBrush(ForeColor), 0, 0);\n    }\n}
2790	using Microsoft.VisualBasic;\n\nprivate void button1_Click(object sender, EventArgs e)\n{\n      string inputText = textBox1.Text;\n      string singleByteString =  Strings.StrConv(inputText, VbStrConv.Narrow, 0);\n\n      textBox2.Text = singleByteString;\n      textBox3.Text = inputText;\n}
2791	photos/puppy.jpg?AWSAccessKeyId=0PN5J17HBGZHT7JJ3X82\n    &Signature=rucSbH0yNEcP9oM2XNlouVI3BH4%3D\n    &Expires=1175139620
2792	var users = context.Messages\n            .Where(m => m.Code == "22X")\n            .GroupBy(m => m.User)\n            .Where(m => m.All(x => x.Replied == false))\n            .Select(p => p.Key);
2793	from a in (from d in AllowanceDomains _\nfrom t in AllowanceTypes _\nwhere (new integer(){1,2}).contains(t.AllowanceTypeID) and t.active = true and d.active=true _\nselect  t.allowancetypeid,tdescen =t.descen, d.allowancedomainid,ddescen=d.descen)  _\ngroup join qqq in AllowanceQties on new with {.k1 = a.allowancetypeid, .k2 = a.allowancedomainid, .k3 = 2} equals _\nnew with {.k1 = qqq.allowancetypeid, .k2 = qqq.allowancedomainid, .k3 = qqq.allowanceid} into qq = group _\nfrom q in qq.DefaultIfEmpty _\njoin u in units on if(object.equals(q.unitid,nothing),1,q.unitid) equals u.unitid _\nselect  AllowanceID =if(object.equals(q.AllowanceID,nothing),2,q.AllowanceID) ,a.tdescen,a.ddescen,qty = if(object.equals(q.qty,nothing),0,q.qty),u.descen
2794	var assemblyName = "System"; // assembly to get the guid\n\n var assembly = AppDomain.CurrentDomain\n        .GetAssemblies()\n        .FirstOrDefault(a => a.GetName().Name == assemblyName);\n\n var attr = assembly\n        .GetCustomAttributes(false)\n        .OfType<GuidAttribute>()\n        .FirstOrDefault();\n\n var guid = attr.Value;
2795	[-\d.]*,\[[-\d.]*,[-\d.]*,[-\d.]*,[-\d.]*,[-\d.]*],\[[-\d.]*,[-\d.]*]
2796	var groupedData = from DataRow row in dt.Rows\n                    let specimen = row["specimen"].ToString()\n                    let batch = row["batch"].ToString()\n                    let position = row["position"].ToString()\n                    group new { specimen, position } by batch;\n\nforeach (var dataGroup in groupedData)\n{\n    string fileName = string.Format(@"C:\Temp\{0}.txt", dataGroup.Key); // construct filename based on batch?\n    using (StreamWriter writer = new StreamWriter(fileName))\n    {\n        foreach (var item in dataGroup)\n        {\n            writer.WriteLine("{0}\t{1}", item.specimen, item.position);\n        }\n    }\n}
2797	var filtered = HourList.GroupBy(h => h.id)\n                       .Select(g => new { Id = g.Key,\n                                          Hours = g.Sum(h => h.Hours)\n                                        })\n                       .Where(h => h.Hours >= 10);
2798	public class myCustomTextBox : TextBox\n{\n    protected override void WndProc(ref Message m)\n    {\n        if (m.Msg == 770) // window paste message id\n        {\n            string clipBoardData = Clipboard.GetDataObject().GetData(DataFormats.Text).ToString();\n            handlePasteEvent(clipBoardData);\n        }\n        else\n        {\n            base.WndProc(ref m);\n        }\n    }\n    private void handlePasteEvent(string pasteData)\n    {\n        // process pasted data\n    }\n}
2799	protected void Page_Load(object sender, EventArgs e)\n    {\n        if(!IsPostBack)\n        {\n            this.DataBind();\n        }\n    }\n    protected void MyButton_Click(object sender, EventArgs e)\n    {\n        //Code to do stuff here...\n\n        //Re DataBind\n        this.DataBind();\n    }\n    public override void DataBind()\n    {\n        //Databinding logic here\n    }
2800	DateTime start = new DateTime(2012,4,1); \nDateTime end = new DateTime(2016,7,1); \n\nvar dates = from year in Enumerable.Range(start.Year,end.Year-start.Year+1)\n        let yearStart=new DateTime(year,1,1)\n        let yearEnd=new DateTime(year,12,31)\n        select Tuple.Create(start>yearStart ? start : yearStart, end<yearEnd ? end : yearEnd); \n\nIList<Tuple<DateTime,DateTime>> result = dates.ToList();
2801	using System;\n\npublic class Test\n{\n    static void Main()\n    {\n        Console.WriteLine(SameDayLastYear(DateTime.Today));\n        Console.WriteLine(SameDayLastYear(new DateTime(2010, 12, 31)));\n    }\n\n    static DateTime SameDayLastYear(DateTime original)\n    {\n        DateTime sameDate = original.AddYears(-1);\n        int daysDiff = original.DayOfWeek - sameDate.DayOfWeek;\n        return sameDate.AddDays(daysDiff);\n    }\n}
2802	BEGIN TRANSACTION\n\nINSERT INTO members\n(id, firstname, etc.)\nVALUES (tbMemberID.text, tbFirstName.text, etc)\n\nINSERT INTO fees\n(id, amount, etc.)\nVALUES (tbFeeID.text, tbAmount.text, etc)\n\nINSERT INTO schedule\n(id, session)\nVALUES (tbScheduleID.text, tbSession.text)\n\nCOMMIT TRANSACTION\nGO
2803	string inputMessage = @"The \i{quick} brown fox jumps over the lazy dog^{note}";\nMatchCollection matches = Regex.Matches(inputMessage, @"(?<=(\\i|_|\^)\{)\w*(?=\})");\n\nforeach (Match match in matches)\n{\n    string textformat = match.Groups[1].Value;\n    string enclosedstring = match.Value;\n    // Add to Dictionary<string, TextFormats> \n}
2804	using System;\nusing Microsoft.Win32;\n\nnamespace RegistryTestApp\n{\n   class Program\n   {\n      static void Main(string[] args)\n      {\n         object mailClient = Registry.GetValue(@"HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail", "", "none"); \n         Console.WriteLine(mailClient.ToString());\n      }\n   }\n}
2805	HasMany(x => x.EventCodes)\n            .Table("tblSomeOtherTable")\n            .KeyColumn("EventID")\n            .Element("DisciplineCode")\n            .AsSet()\n            .ReadOnly();
2806	dgv.DataSource = ds;\ndgv.DataBind();\n\ncombobox1.ValueMember = "cLoadName";\ncombobox1.DisplayMember = "cLoadName";\ncombobox1.DataSource = ds;\ncombobox1.DataBind();
2807	protected override void OnInvoke(ScheduledTask task)\n{ \n Deployment.Current.Dispatcher.BeginInvoke( async () =>\n {\n      await DataLib.DataLib.Daten();\n      NotifyComplete();\n });\n}
2808	public string SignalName\n    {\n        get\n        {\n            return _signalName;\n        }\n        set\n        {\n            _signalName = value;\n            OnPropertyChanged("SignalName"); //Added\n        }\n    }\n\n    public string SignalValue\n    {\n        get\n        {\n            return _signalValue;\n        }\n        set\n        {\n            _signalValue = value;\n            OnPropertyChanged("SignalValue"); //NOTE: quotation marks added\n        }\n    }
2809	string height="5'6\"";\n\n      Regex r = new Regex("^\\d+'\\d+\"$");\n      Match m = r.Match(height);\n      if (m.Success)\n      {\n            ' Yes!\n      }
2810	"data source=sahil-pc\sqlexpress; database=abadakDb; Integrated Security=true " providerName="System.Data.SqlClient"
2811	foreach (string batch in Regex.Split(script, "^GO$\\n", RegexOptions.IgnoreCase | RegexOptions.Multiline))\n{\n    yield return batch;\n}
2812	double value = double.Parse(str);\nConsole.WriteLine(value.ToString("##.##"));
2813	List<string> result = new List<string>();\nDateTime startDate = new DateTime(2012, 1, 8);\nDateTime endDate = new DateTime(2013, 1, 3);\nDateTime temp = startDate;\nendDate = new DateTime (endDate.Year, endDate.Month, DateTime.DaysInMonth(endDate.Year,endDate.Month));\nwhile (temp <= endDate)\n{\n    Console.WriteLine((string.Format("{0}/{1}", temp.Month, temp.Year));\n    temp = temp.AddMonth(1);\n}
2814	[ServiceContract]\nIDestinationHelper\n{\n  [OperationContract]\n  IEnumerable<Waypoint> ReachDestination(string transportationMode);\n\n  [OperationContract]\n  IEnumerable<string> GetAvailabletransportationModes();\n}\n\nIDestinationHelperService : IDestinationHelper\n{\n  public IEnumerable<Waypoint> ReachDestination(string transportationMode)\n  {\n     // decide return value by transportation mode. Use a switch statement, dependency injection, IoC containers, whatever you want\n  }\n\n  public IEnumerable<string> GetAvailabletransportationModes()\n  {\n     // decide return value by getting all modes from wherever you decided upon above.\n  }\n}
2815	DataTable dt = new DataTable();\ndt.Columns.Add("Spots");\ndt.Columns.Add("CompanyName");\n\nint i = 0;\nwhile(i<10)\n{\n   DataRow dr = dt.NewRow();\n   dr["Spots"] = "";\n   dr["CompanyName"] = "";\n\n   dt.Rows.Add(dr);\n   i++;\n}\n\nMyGrid.DataSource = dt;\nMyGrid.DataBound();
2816	for(limit=0;;++limit) {\n  for(i0=0; i0<=limit; ++i0) {\n    for(i1=0; i1<=limit-i0; ++i1) {\n      for(i2=0; i2<=limit-i0-i1, ++i2) {\n        for(i3=0; i3<=limit-i0-i1-i2, ++i3) {\n          int i4 = limit-i0-i1-i2-i3;\n          //do stuff with i0, i1, i2, i3, i4; break when had enough\n      }}}}}}
2817	(llat, llong) -> (x = llong * cos(llat), y = llong)
2818	[XmlElement("D")]\npublic List<D> D { get; set; }
2819	String data = \n  Regex.Match(@"PO\d{10}", "PurchaseOrderPO1000000109.pdf", \n    RegexOptions.IgnoreCase).Value;
2820	{\n     var i= PhoneApplicationService.Current.State["yourparam"];\n\n     //convert object to list//\n     iList1 = (IList) i ; \n     lstpro.ItemsSource = iList1;\n\n}
2821	ServicePointManager.DefaultConnectionLimit = 300; // or sth
2822	DateTime d;\nDateTime.TryParseExact(target,"dd/MMM/yyyy:hh:mm:ss zzzz", CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, out d);
2823	Task.WhenAny
2824	private  List<string> LoadFirstNames(string json)\n{\n   JObject o = JObject.Parse(json);\n   List<string> firstNames = new List<string>();\n   foreach(var token in o.GetPropertyValues())\n   {\n    FindFirstName(token, firstNames);\n   }\n\n   return firstNames;\n}\n\nprivate void FindFirstName(JToken currentProperty, List<string> firstNamesCollection)\n{\n   if(currentProperty == null)\n   {\n     return;\n   }\n\n   if(currentProperty["firstName"] != null)\n   {\n       firstNamesCollection.Add(currentProperty["firstName"]);\n   }\n\n   foreach(var token into currentProperty.Values())\n   {\n     FindFirstName(token , firstNamesCollection);\n   }\n\n}
2825	DataSet.Tables[0].Copy()
2826	private void chkBuried_CheckedChanged(object sender, EventArgs e)\n{\n    chkAboveGround.Checked = !chkBuried.Checked;\n}\nprivate void chkAboveGround_CheckedChanged(object sender, EventArgs e)\n{\n    chkBuried.Checked = !chkAboveGround.Checked;\n}
2827	AgentsNotselected = AvaliableAgents.Where(a => !AvailableAgentSelected.Contains(a.Value));
2828	using System.Collections.Generic;\nusing System.ComponentModel.DataAnnotations;\nusing System.Threading.Tasks;\nusing System.Web.Mvc;\n\nnamespace Checked.Entitites\n{\n    public class BooleanRequiredAttribute : ValidationAttribute, IClientValidatable\n    {\n        public override bool IsValid(object value)\n        {\n            return value != null && (bool)value == true;\n        }\n\n        public IEnumerable<ModelClientValidationRule> GetClientValidationRules(ModelMetadata metadata, ControllerContext context)\n        {\n            //return new ModelClientValidationRule[] { new ModelClientValidationRule() { ValidationType = "booleanrequired", ErrorMessage = this.ErrorMessage } };\n            yield return new ModelClientValidationRule() \n            { \n                ValidationType = "booleanrequired", \n                ErrorMessage = this.ErrorMessageString \n            };\n        }\n    }\n}
2829	foreach(string id in list) {\n    //get item which matches the id\n    var item = myitemcollection.Where(x => x.id == id);\n    //remove that item\n    myitemcollection.Remove(item);\n}
2830	CallMethod(() => Foo()); // Compiler will use default within the lambda.\n...\npublic void Foo(bool x = true) { ... }\n\npublic void CallMethod(Action action) { ... }
2831	public Counter<T> GetCounter<T>(string columnName)\n{\n    if (columnName == "id")\n        return new Counter<T>(this._table.IDs);\n    else if (columnName == "name")\n        return new Counter<T>(this._table.Names);\n}
2832	[XmlElement("AttributesCustomList")]\n    public list<string> _AttributesCustomList;\n    [CategoryAttribute("Custom"), ReadOnly(false),\n    Description("This property is customised to put new attributes")]\n    //[RefreshProperties(RefreshProperties.All)]\n    [RulesCriteria("Custom AttributesList")]\n    public list<string> AttributesCustomList\n    {\n        get { return _AttributesCustomList; }\n        set { _AttributesCustomList = value; }\n    }
2833	string sOut = Encoding.ASCII.GetString(Encoding.ASCII.GetBytes(s))
2834	FileInfo logfileInfo = new FileInfo(Path.GetDirectoryName(Assembly.GetExecutingAssembly().GetName().CodeBase) + @"\Log4Net.config");
2835	Sub ChangeColor\n    Options.DefaultHighlightColorIndex = wdBrightGreen\n    Selection.Find.ClearFormatting\n    Selection.Find.Highlight = True\n    Selection.Find.Replacement.ClearFormatting\n    Selection.Find.Replacement.Highlight = True\n    Selection.Find.Execute Replace:=wdReplaceAll\n\n    Selection.Find.ClearFormatting\n    Selection.Find.Font.Color = wdColorBrightGreen\n    Selection.Find.Replacement.ClearFormatting\n    Selection.Find.Replacement.Font.Color = wdColorRed\n    With Selection.Find\n        .Text = ""\n        .Replacement.Text = ""\n        .Forward = True\n        .Wrap = wdFindContinue\n    End With\n    Selection.Find.Execute Replace:=wdReplaceAll\nEnd Sub
2836	[XmlIgnore]\npublic int[, ,] Data { get; set; }\n\n[XmlElement("Data"), Browsable(false)]\n[EditorBrowsable(EditorBrowsableState.Never)]\npublic int[] DataDto\n{\n    get { /* flatten from Data */ }\n    set { /* expand into Data */ }\n}
2837	private void listBox1_SelectedIndexChanged(object sender, EventArgs e)\n{\n     if (listBox2.Items.Count >= listBox1.SelectedIndex + 1)\n     {\n          listBox2.SelectedIndex = listBox1.SelectedIndex;\n     }\n}\n\nprivate void listBox2_SelectedIndexChanged(object sender, EventArgs e)\n{\n    if (listBox1.Items.Count >= listBox2.SelectedIndex + 1)\n    {\n         listBox1.SelectedIndex = listBox2.SelectedIndex;               \n    }\n}
2838	drop table table1;\ncreate table table1 as select * from table2;
2839	Process[] processes = Process.GetProcessesByName(processName);\nforeach(Process process in processes)\n{\n   process.Kill();\n}
2840	if (selectedCellRow != null)\n{\n    DataGridCellsPresenter presenter = GetVisualChild<DataGridCellsPresenter>(selectedCellRow);\n\n    DataGridCell cell = (DataGridCell)presenter.ItemContainerGenerator.ContainerFromIndex(column);\n    if (cell == null)\n    {\n        cell = (DataGridCell)presenter.ItemContainerGenerator.ContainerFromIndex(column);\n    }\n}
2841	DateTime d = new DateTime(year, 1, 1);
2842	list = list.Select(m => m == "A" ? "C" : m).ToList();
2843	public class ReportRequest\n    {\n        public DateTime StartTime { get; set; }\n        public DateTime EndTime { get; set; }\n        public string FileName { get; set; }\n        public string UserName { get; set; }\n        public string Password { get; set; }\n    }
2844	public static bool DoesTypeSupportInterface(Type type,Type inter)\n{\n    if(inter.IsAssignableFrom(type))\n        return true;\n    if(type.GetInterfaces().Any(i=>i. IsGenericType && i.GetGenericTypeDefinition()==inter))\n        return true;\n    return false;\n}\n\npublic static IEnumerable<Type> TypesImplementingInterface(Type desiredType)\n{\n    return AppDomain\n        .CurrentDomain\n        .GetAssemblies()\n        .SelectMany(assembly => assembly.GetTypes())\n        .Where(type => DoesTypeSupportInterface(type,desiredType));\n\n}
2845	List<FileHierarchy> mylist = GetList();\nvar selected = mylist.Where(s => s.NeedsShowing.HasValue && s.NeedsShowing.Value);\nvar children = mylist.Where(c => c.ParentID.HasValue && selected.Select(s => s.ID).Contains(c.ParentID.Value));\nvar unselected = mylist.Except(selected);\nwhile (children.Any())\n{\n    unselected = unselected.Except(children);\n    var childChild = unselected.Where(c => c.ParentID.HasValue && children.Select(s => s.ID).Contains(c.ParentID.Value));\n    selected = selected.Union(children);\n    children = childChild;\n}
2846	Map = locations => from l in locations\n                   select new {\n                       _ = SpatialIndex.Generate(l.Geo.Lat, l.Geo.Lon),\n                       AvgRating = l.Reviews.Average(r => r.Rating)\n                   };
2847	static void Main()\n    {\n            Process setupProcess = new Process();\n            string msiFilePath = @"c:\path to msi package";\n            string targetDir = @"target dir path";\n            setupProcess.StartInfo.FileName = @"msiexec.exe /i " + msiFilePath + " TARGETDIR=\"" + targetDir + "\"";\n            setupProcess.StartInfo.UseShellExecute = false;    \n            setupProcess.Start();\n   }
2848	Regex test = new Regex(@"(?i)^(?:(?:Team\s+(?<team>.*?))|(?<name>.*?))(?:\s+(?<vs>v\.?s\.?)\s+)(?:(?:Team\s+(?<team>.*?))|(?<name>.*?))$");\nforeach (string input in ...)\n{\n  Match match = test.Match(input);\n  if (match.Success) \n  {\n    string team = match.Groups["team"].Value;\n    string name = match.Groups["name"].Value;\n  }\n}
2849	string newValue = "1234";\nXmlDocument doc;\nvar paths = new[] { "config1.xml", "config2.xml" };\npaths.ToList().ForEach(path =>\n{\n    doc = new XmlDocument();\n    doc.Load(path);\n\n    // process the document\n    var nm = new XmlNamespaceManager(doc.NameTable);\n    var a = doc.SelectSingleNode("//SomeKeyValue", nm);\n    a.InnerText = newValue;\n\n    // save the file\n    doc.Save(path);\n});
2850	public void AddPictureBox(int x, int y)\n    {\n        try\n        {\n            PictureBox _picBox = new PictureBox();\n            _picBox.Size = new Size(100, 100);\n            _picBox.SizeMode = PictureBoxSizeMode.StretchImage;\n            _picBox.BackColor = Color.Black;\n            _picBox.Location = new Point(x, y);\n            _displayedImage.Add(_picBox);\n\n            return _picBox;\n\n        }\n        catch (Exception e)\n        {\n            Trace.WriteLine(e.Message); return null;\n        }\n    }\n\n\nprivate void MouseDown( object sender, MouseEventArgs e)\n    {\n        if (e.Button == MouseButtons.Left)\n        {\n            PictureBox pic = _testImage.AddPictureBox(e.X, e.Y);\n            if(pic != null)\n            {\n                this.Controls.Add(pic);\n                Trace.WriteLine("Picture box added");\n            }\n        }\n\n        Trace.WriteLine("Mouse Click");\n    }
2851	private void dateTimePicker1_KeyDown(object sender, KeyEventArgs e)\n    {\n        if (e.KeyCode == Keys.Delete || e.KeyCode == Keys.Back)\n        {\n            dateTimePicker1.Format = DateTimePickerFormat.Custom;\n            dateTimePicker1.CustomFormat = " ";\n        }\n    }\n\n    private void dateTimePicker1_ValueChanged(object sender, EventArgs e)\n    {\n        dateTimePicker1.Format = DateTimePickerFormat.Long;\n    }
2852	name.Age = 1;\n// and\nnames[i].Age = 1;
2853	else if (state.IsKeyDown(Keys.H))\n    {\n        if (!help.Visible)\n             help.ShowDialog();\n    }
2854	comboBox.DataSource = new BindingSource(list1, null);
2855	[assembly: AssemblyVersion("2.0.*")]
2856	SortedList<string,bool> l=new SortedList<string, bool>();\n        l.Add("a",true);\n        l.Add("a",false);\n        l.Add("b",true);\n        l.Add("b",false);\n        var orderByVal=l.OrderBy(kvp => kvp.Value);
2857	Date d = new Date(dt);
2858	var result = listToPermutate.Permutations();
2859	result = indexA < indexB ? Min(indexA, indexC) : Min(indexB, indexC);
2860	EnableDoubleBuffer(myListVeiew);
2861	INSERT INTO employee (name,path) \nSELECT 'sarju','~/images/'+CAST(IDENT_CURRENT('employee') AS VARCHAR(50))+'.jpg'
2862	wspkcs11d.dll
2863	Canvas.SetLeft(MousePos_Ellipse, MousePos_Point.X);\n   Canvas.SetTop(MousePos_Ellipse, MousePos_Point.Y);
2864	public class DataStore\n{\n     // UnderlyingDataStore is another class that manages a queue, or a linked list\n     private UnderlyingDataStore dataQueue = new UnderlyingDataStore();\n     public void addData(object data) { dataQueue.Add(data); }\n     public object getLastData() { dataQueue.getLastData(); }\n}
2865	var result=new { PWs=PWs, Files=Files};\nreturn Json(result, JsonRequestBehavior.AllowGet);
2866	protected void Page_PreRender(object sender, EventArgs e)\n{\n      Label lblCreateDate = ((Label)gvMainView.FooterRow.FindControl("lblCreateDate")).Text;\n    lblCreateDate.Text = AutoDate;\n    Label lblWebsite = ((Label)gvMainView.FooterRow.FindControl("lblWebsite")).Text;\n    lblWebsite.Text = Website;\n}
2867	[EmployeeField]\n-----------------------------------------------------\nEmployeeID    EmployeeFieldName    EmployeeFieldValue
2868	var res =  Enumerable.Range(50, 51).Where(n=>n%10==0);
2869	private void Form1_Click(object sender, EventArgs e)\n{\n  var p = PointToClient(Cursor.Position);\n  var c = GetChildAtPoint(p);\n  if (c != null && c.Enabled == false)\n    System.Media.SystemSounds.Beep.Play();\n}
2870	if(!IsPostback)\n{\n   this.TextBox1.Text = FirstDayOfMonthDateTime.ToString(dd/MM/yyyy);\n   this.TextBox2.Text = LastDayOfPreviousMonthDateTime.ToString(dd/MM/yyyy);\n}
2871	var q = new Queue<string>( new[]{ "A", "B", "C" });
2872	class CookieAwareWebClient : WebClient\n{\n    public CookieContainer Cookies { get; private set; }\n\n    public CookieAwareWebClient()\n    {\n        Cookies = new CookieContainer();\n    }\n\n    protected override WebRequest GetWebRequest(Uri address)\n    {\n        var request = base.GetWebRequest(address) as HttpWebRequest;\n        if (request != null)\n        {\n            request.CookieContainer = Cookies;\n            return request;\n        }\n\n        return null;\n    }\n}
2873	builder.RegisterControllers(typeof(MvcApplication).Assembly)\n       .PropertiesAutowired();
2874	// Declaration required for interop\n[DllImport(@"gdiplus.dll")]\npublic static extern int GdipWindingModeOutline( HandleRef path, IntPtr matrix, float flatness );\n\nvoid someControl_Paint(object sender, PaintEventArgs e)\n{\n    // Create a path and add some rectangles to it\n    GraphicsPath path = new GraphicsPath();\n    path.AddRectangles(rectangles.ToArray());\n\n    // Create a handle that the unmanaged code requires. nativePath private unfortunately\n    HandleRef handle = new HandleRef(path, (IntPtr)path.GetType().GetField("nativePath", BindingFlags.NonPublic | BindingFlags.Instance).GetValue(path));\n    // Change path so it only contains the outline\n    GdipWindingModeOutline(handle, IntPtr.Zero, 0.25F);\n    using (Pen outlinePen = new Pen(Color.FromArgb(255, Color.Red), 2))\n    {\n        g.DrawPath(outlinePen, path);\n    }\n}
2875	NumberFormatInfo info = (NumberFormatInfo)CultureInfo.InvariantCulture.NumberFormat.Clone();\n    info.NumberGroupSeparator = " ";\n\n    Console.WriteLine(12345.ToString("n", info )); // 12 345.00
2876	private void LoadEditorTab()\n    {\n        var editor = new PcmEditorForm();\n        var grid = new GridView();\n        grid.width=editor.width\n        grid.Anchor= AnchorStyles.Left | AnchorStyles.Top | AnchorStyles.Right;\n        editor.Controls.Add(grid);\n        tabEdit.Controls.Clear();\n        editor.TopLevel = false;\n        editor.Visible = true;\n        editor.dock=DockStyle.Fill;  // Dock the editor\n        tabEdit.Controls.Add(editor);\n    }
2877	default(T)
2878	textBox1.WordWrap = false;
2879	EventLog.CreateEventSource
2880	foreach (int T in ToolList)\n{\n   strToolList.add(Enum.GetName(typeof(Tools), (Tools)T)); \n}
2881	var q = xdoc.Root.Attributes()\n                 .Where(x => x.IsNamespaceDeclaration)\n                 .Select(x => new {Prefixes = x.Name.LocalName, ns = x.Value});
2882	using (FrmModal myForm = new FrmModal())\n{\n    DialogResult dr = myForm.ShowDialog();\n    if (dr == DialogResult.OK)\n    {\n        // ...\n    }\n    else\n    {\n        // ...\n    }\n}
2883	XDocument xDoc = XDocument.Parse(utf8Xml);
2884	System.Net.WebRequest request = System.Net.WebRequest.Create(YourURLString);\n      System.Net.WebResponse resp = request.GetResponse();\n      System.IO.Stream respStream = resp.GetResponseStream();\n      Bitmap bmp = new Bitmap(respStream);\n      respStream.Dispose();\n      picturebox1.Image = bmp;
2885	--  CUSTOMER  ----\nCustomerId\n\n--  QUOTE  ----\nQuoteId\nCustomerId\nData1Id\n\n--  QUOTEREVISION  ----\nQuoteRevisionid\nQuoteId\nCreatedAt\nData2Id\nData3Id\n\n--  DATA1  ----\nData1Id\n\n--  DATA2  ----\nData2Id\n\n--  DATA3  ----\nData3Id
2886	var orderedEntries = from entry in entries orderby entry.Length, entry select entry;\n    foreach (var entry in orderedEntries)\n    {\n        // TODO - add to WPF control\n    }
2887	var dict = ... // dictionary\nvar keys = ... // enumerable with 1 and 3 in it\nvar result = from key in keys\n             from val in dict[key]\n             select val;
2888	//set up the datatable\nDataTable dt = new DataTable("parms");\ndt.Columns.Add("ParmName",typeof(string));\ndt.Columns.Add("ParmValue",typeof(string));\n//bind to a gui object\nmyDataGridView.DataSource = dt;\n\n//do this after each sproc call\nforeach (SqlParameter parm in cmd.Parameters)\n{\n    if (parm.Direction == ParameterDirection.Output)\n    {\n        //do something with parm.Value\n        dt.Rows.Add(new object [] { parm.ParameterName, \n            Convert.ToString(parm.Value) } );\n    }\n}
2889	const int DaysInPeriod = 14;\n\nstatic IEnumerable<DateTime> GetPayPeriodsInRange(DateTime start, DateTime end, bool isOdd)\n{\n    var epoch = isOdd ? new DateTime(2009, 11, 1) : new DateTime(2009, 4, 1);\n    var periodsTilStart = Math.Floor(((start - epoch).TotalDays) / DaysInPeriod);\n\n    var next = epoch.AddDays(periodsTilStart * DaysInPeriod);\n\n    if (next < start) next = next.AddDays(DaysInPeriod);\n\n    while (next <= end)\n    {\n        yield return next;\n        next = next.AddDays(DaysInPeriod);\n    }\n\n    yield break;\n}\n\nstatic DateTime GetPayPeriodStartDate(DateTime givenDate, bool isOdd)\n{\n    var candidatePeriods = GetPayPeriodsInRange(givenDate.AddDays(-DaysInPeriod), givenDate.AddDays(DaysInPeriod), isOdd);\n    var period = from p in candidatePeriods where (p <= givenDate) && (givenDate < p.AddDays(DaysInPeriod)) select p;\n    return period.First();\n}
2890	dynamic item = cbo.SelectedItem;\n\nString text = item.Text;\nInt32 value = item.Value;
2891	path = New Uri(Assembly.GetExecutingAssembly().CodeBase).LocalPath;\npath = IO.Path.GetDirectoryName(path);
2892	private static void Word2003(ChartPart importedChartPart, MainDocumentPart mainDocumentPart, Stream fileStream)\n{\n    // Add of the external data id\n    ExternalData ext = new ExternalData { Id = "rel" + 5 };\n    AutoUpdate autoUpdate = new AutoUpdate{ Val = false};\n    ext.Append(autoUpdate);\n    importedChartPart.ChartSpace.Append(ext);\n\n    // Set of the relationship\n    var fi = new FileInfo(@"generated.xlsx");\n    importedChartPart.AddExternalRelationship("http://schemas.openxmlformats.org/officeDocument/2006/relationships/oleObject", new Uri(fi.Name, UriKind.Relative), "rel5");\n\n    // Link to the embedded file\n    EmbeddedPackagePart embeddedObjectPart = mainDocumentPart.AddEmbeddedPackagePart(@"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");\n    Stream copyStream = new MemoryStream();\n    fileStream.CopyTo(copyStream);\n    embeddedObjectPart.FeedData(copyStream);\n}
2893	int currRow = 0; currRow = dataGridView1.CurrentRow.Index;\n   dataGridView1.ClearSelection();\n       dataGridView1.Rows[currRow].Selected = true;
2894	var writer = new BarcodeWriter\n{\n   Format = BarcodeFormat.PDF_417,\n   Options = new EncodingOptions {Width = 115, Height = 65}\n};\nvar imgBitmap = writer.Write(value);
2895	For Each tInterface As NetworkInterface in NetworkInterface.GetAllNetworkInterfaces()\n  If (tInterface.Supports(NetworkInterfaceComponent.IPv4)) Or (tInterface.Supports(NetworkInterfaceComponent.IPv6)) Then\n    '\n    '  Do something with tInterface.GetPhysicalAddress()\n    '\n  End If\nNext
2896	SPWeb thisWeb = thisSite.RootWeb;\nstring toField = "someone@microsoft.com";\nstring subject = "Test Message";\nstring body = "Message sent from SharePoint";\nHttpContext oldContext = HttpContext.Current;\nHttpContext.Current = null;\n\nbool success = SPUtility.SendEmail(thisWeb, true, true, toField, subject, body);\nHttpContext.Current = oldContext;
2897	data.AcceptChanges()
2898	document.activeElement
2899	protected void SendErrorMessageToClient(string strErrorType, string strErrorMessage, Page page)\n{\n    string strMessageToClient = "";\n\n    //Allow single quotes on client-side in JavaScript\n    strErrorMessage = strErrorMessage.Replace("'", "\\'");\n\n    strMessageToClient = "<script type=\"text/javascript\" language=\"javascript\">alert( '" + strErrorType + "\\n\\n" + strErrorMessage + "' );</script>";\n\n    page.ClientScript.RegisterStartupScript(this.GetType(), "ErrorMessage", strMessageToClient);\n\n}
2900	Uri uri = new Uri("MainModule1;component/" + resourceFile, UriKind.Relative);
2901	var result = from r in dt.AsEnumerable()\n                     join c in dt2.AsEnumerable()\n                     on r.Field<string>("col1") equals c.Field<string>("col1")\n                     select r;
2902	request = (HttpWebRequest) WebRequest.Create(uri);\nrequest.PreAuthenticate = true;\nrequest.Credentials = new NetworkCredential(user, password);\nrequest.Method = WebRequestMethods.Http.Post;
2903	private Point mouseDownPos;\n\n    private void dataGridView1_CellMouseDown(object sender, DataGridViewCellMouseEventArgs e) {\n        mouseDownPos = e.Location;\n    }\n\n    private void dataGridView1_CellMouseMove(object sender, DataGridViewCellMouseEventArgs e) {\n        if ((e.Button & MouseButtons.Left) == MouseButtons.Left) {\n            if (Math.Abs(e.X - mouseDownPos.X) >= SystemInformation.DoubleClickSize.Width ||\n                Math.Abs(e.Y - mouseDownPos.Y) >= SystemInformation.DoubleClickSize.Height) {\n                // Start dragging\n                //...\n            }\n        }\n    }
2904	Imports System.ComponentModel\n\nPublic Class ctlA\n\n    Private _LabelText As String = "label"\n    <Localizable(True)>\n    Public Property LabelText() As String\n        Get\n            Return _LabelText\n        End Get\n        Set(ByVal value As String)\n            _LabelText = value\n            Label1.Text = value\n        End Set\n    End Property\nEnd Class
2905	using System;\nusing System.Collections.Generic;\nusing System.Net;\nusing System.IO;\nusing System.Linq;\nusing Newtonsoft.Json;\n\npublic class Program\n{\n    public static void Main()\n    {\n        WebClient client = new WebClient();\n\n        using (Stream stream = client.OpenRead("http://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&explaintext=1&titles=stack%20overflow"))\n        using (StreamReader reader = new StreamReader(stream))\n        {\n            JsonSerializer ser = new JsonSerializer();\n            Result result = ser.Deserialize<Result>(new JsonTextReader(reader));\n\n            foreach(Page page in result.query.pages.Values)\n                Console.WriteLine(page.extract);\n        }\n    }\n}\n\npublic class Result\n{\n    public Query query { get; set; }\n}\n\npublic class Query\n{\n    public Dictionary<string, Page> pages { get; set; }\n}\n\npublic class Page\n{   \n    public string extract { get; set; }\n}
2906	namespace MyCompany.Data.Repositories\n{\n    public class User\n    {\n        public int Id { get; set; }\n        public string Username { get; set; }\n        public string Name { get; set; }\n        public bool Locked { get; private set; }\n    }\n\n    public class UserRepository\n    {\n        public User GetAll() { }\n        public User GetById() { }\n\n        // Add your check password method here\n    }\n}
2907	var data=(List<YourType)myComboBox.DataSource;\nmyComboBox.SelectedIndex=data.FindIndex(p=>p.Text=="SomeValue");
2908	public abstract class YourClass\n{\n    // Your class implementation\n\n    public abstract void DoSomething(int x, int y);\n\n    public void DoSomethingElse(int a, string b)\n    {\n        // You can implement this here\n    }\n}
2909	workbook.Save(HttpContext.Current.Response, "HelloWorld.xls", ContentDisposition.Attachment, new XlsSaveOptions(SaveFormat.Excel97To2003));
2910	int i = 0;\nforeach (Control ctl in myForm.FindControl("myDiv").Controls)\n{\n    if (ctl is CheckBox)\n    {\n        if (((CheckBox)ctl).Checked)\n            i++;\n    }\n}
2911	Point locationFromWindow = this.textBox.TransformToVisual(this).Transform(new Point(0, 0)); \nPoint point = this.textBox.PointToScreen(new Point(0, 0));\nRect rect = new Rect(0, 0, SystemParameters.PrimaryScreenWidth, SystemParameters.PrimaryScreenHeight);\nif (!rect.Contains(point))\n{\n    // Outside screen bounds.\n}
2912	using (SqlConnection...)\n{\n // all your data calls\n}
2913	Action<string^, string^>^
2914	var n = (int) Math.Sqrt(pads.Length);\nint i = 0, j = 0, k = 0;\nfor(i = 0; i < n; i++){\n   k = i;\n   AnimatePad(ref beginMs, spd, pads[k], toColor);\n   for(j = 0; j < i; j++){\n      k += n-1;          \n      AnimatePad(ref beginMs, spd, pads[k], toColor);\n   }\n   beginMs += interval;\n}\nfor(i = n-2; i >= 0; i--){       \n   k = (n-i)*n - 1;\n   AnimatePad(ref beginMs, spd, pads[k], toColor);\n   for(j = 0; j < i; j++){\n      k += n-1;\n      AnimatePad(ref beginMs, spd, pads[k], toColor);\n   }\n   beginMs += interval;\n}
2915	public override void SetLength(\n    long value\n)
2916	db.Entry(entidade) = EntityState.Modified;\ndb.SaveChanges();
2917	private void panel1_Paint(object sender, PaintEventArgs e)\n{\n    GraphicsPath path = new GraphicsPath();\n    path.AddArc(0, 0, (this.Width / 2), (this.Height / 2), 135, 195);\n    path.AddArc((this.Width / 2), 0, (this.Width / 2), (this.Height / 2), 210, 195);\n    path.AddLine((this.Width / 2), this.Height, (this.Width / 2), this.Height);\n\n    GraphicsPath path2 = new GraphicsPath();\n    path2.AddRectangle(new Rectangle(new Point(0, 0), panel1.Size));\n\n    path2.AddPath(path, false);\n\n    e.Graphics.FillPath(Brushes.Black, path2);\n}
2918	public static int [] threeIntegers (int [] numbers){\n    int max=0 //assuming array contains positive only\n    int [] maxArray = new int [3];\n    for(int j=0;j<numbers.length-2;++j){\n      int sum=0;\n      int [] newArray = new int [3];\n      for(int i=0; i<3;i++){\n        sum+=numbers[i+j];\n        newArray[i]=numbers[i+j];\n      }\n      if (sum>max){\n        max=sum;\n        maxArray=newArray;\n      }\n   }\n\n   return maxArray;\n}
2919	public class CustomMsSql2008Dialect : MsSql2008Dialect\n        {\n            public override string PrimaryKeyString\n            {\n                get { return "primary key nonclustered"; }\n            }           \n\n        }
2920	countReader = command7.ExecuteReader();\nstring countName = String.Empty;\n\n while (countReader.Read())\n {\n  countName = countReader["count(*)"].ToString();                \n }
2921	List<List<int>>
2922	var credits = from credit in this.test.WorksheetNoHeader().ToList()\n  join debit in this.test.WorksheetNoHeader().ToList() on credit[6] equals debit[6]\n  where debit[13] != "0.00"\n  where debit[13] == credit[15]\n  select credit
2923	webBrowser1.Document.GetElementById("ctl00_ucContent_cntrlRegister_btnRegister").PerformClick();
2924	DataTable _table = new DataTable()\nDataRow _row = _table.NewRow()\n_table.Rows.Add(_row)
2925	objSlide = objSlides[15]
2926	[XmlRoot("TERMS")]\npublic class TermData\n{\n    public TermData()\n     {\n       terms = new List<Term>();\n     }\n\n    [XmlElement("TERM")]\n    public List<Term> terms{get;set;}\n}\n\npublic class Term\n{\n    [XmlElement("ID")]\n    public string id{get;set;}\n\n    [XmlElement("DESC")]\n    public string desc{get;set;}\n}
2927	XmlNamespaceManager nsmgr = new XmlNamespaceManager(xdoc.NameTable);\nnsmgr.AddNamespace("x", xdoc.DocumentElement.NamespaceURI);\nXmlNodeList pits = dStr.SelectNodes("x:pit");
2928	List<Fruit> fruits = new List<Fruit>();\n\nwhile (reader.Read())\n{\n    Fruit f = new Fruit();\n    f.aID = (string) reader["aID"];\n    f.bID = (string) reader["bID"];\n    f.name = (string) reader["name"];\n    fruits.Add(f);\n}
2929	string[] replaces =  {"123","456","789"};\nRegex regEx = new Regex("abc");\nint index = 0;\nstring result = regEx.Replace(input, delegate(Match match) { return replaces[index];} );
2930	public void NewsLetterHtmlAdd(NewsLetterHtmlAdd newsLetterHtmlAdd)\n    {\n        string url = "https://api.mailjet.com/v3/DATA/NewsLetter/" + newsLetterHtmlAdd.ID + "/HTML/text/html/";\n\n        url.PostToUrl(newsLetterHtmlAdd.Data, "text/html; charset=utf-8",\n              request =>\n              {\n                  request.Credentials = new NetworkCredential(_apiKey, _secretKey);\n                  request.ContentType = "text/html; charset=utf-8";\n              });\n\n    }
2931	string total_req = "select count(*) from Request where Date>='" + d2.ToString() + "'";
2932	using(SqlCommand cmd = new SqlCommand("INSERT INTO MyTable (myvarbinarycolumn) VALUES (@myvarbinaryvalue)", conn))\n{\n    cmd.Parameters.Add("@myvarbinaryvalue", SqlDbType.VarBinary, myarray.length).Value = myarray;\n    cmd.ExecuteNonQuery();\n}
2933	MyUserControl.ItsDropdown.SelectedIndex
2934	locked = !locked;
2935	JObject obj = JObject.Parse(json);\ndouble[,] array = obj["array2D"].ToObject<double[,]>();
2936	int[] theData = new int[] { 14, 17, 5, 11, 2 };\ndataGridView1.DataSource = theData.Where(x => x>0).Select((x, index) =>\n    new { RecNo = index + 1, ColumnName = x }).OrderByDescending(x => x.ColumnName).ToList();
2937	Referenced from AbbydonKrafts\n\n// Get the Date Created property \n//System.Drawing.Imaging.PropertyItem propertyItem = image.GetPropertyItem( 0x132 );\nSystem.Drawing.Imaging.PropertyItem propertyItem \n         = image.PropertyItems.FirstOrDefault(i => i.Id == 0x132 ); \nif( propItem != null ) \n{ \n  // Extract the property value as a String. \n  System.Text.ASCIIEncoding encoding = new System.Text.ASCIIEncoding(); \n  string text = encoding.GetString(propertyItem.Value, 0, propertyItem.Len - 1 ); \n\n  // Parse the date and time. \n  System.Globalization.CultureInfo provider = CultureInfo.InvariantCulture; \n  DateTime dateCreated = DateTime.ParseExact( text, "yyyy:MM:d H:m:s", provider ); \n}
2938	protected void parentRep_ItemDataBound(object sender, RepeaterItemEventArgs e)\n{\n   if (args.Item.ItemType == ListItemType.Item || args.Item.ItemType == ListItemType.AlternatingItem)\n   {\n        Repeater childRepeater = (Repeater)e.Item.FindControl("childRep");\n        childRepeater.ItemDataBound += new RepeaterItemEventHandler(childRepeater_ItemDataBound);\n        childRepeater.ItemCommand += new RepeaterCommandEventHandler(childRepeater_ItemCommand);\n        childRepeater.DataSource = dt3; //dt3 is the DataTable from your code sample\n        childRepeater.DataBind();\n   }\n}
2939	Path.GetFullPath
2940	Car selectedCar = cars\n .Where(x => x.Location * direction > location * direction)\n .Aggregate((a, b) => (a.Location * direction < b.Location * direction) ? a : b);
2941	dynamic d = JObject.Parse(json);\n//d.founded == "1998"
2942	PictureBox[] pictureBoxes = { PictureBox1, PictureBox2, PictureBox3, PictureBox4 };\nImage[] images = { ImageHere1, ImageHere2, ImageHere3, ImageHere4 };\n\nfor (int i = 0; i < pictureBoxes.Length; i++)\n{\n    pictureBoxes[i].Image = images[i];\n}
2943	MyModelEntities.Refresh(System.Data.Objects.RefreshMode.StoreWins, TbMyRecord);
2944	// iterate cyclicly from 0 to 26^3 - 1\nint incrementValue(int i) {\n    // a verbose way of writing "return (i + 1) % 26^3"\n    i++;\n    if (i == 26*26*26) i = 0;\n    return i;\n}\n\n// convert 0 to AAA, 1 to AAB, ...\nstring formatValue(int i) {\n    var result = new StringBuilder();\n\n    result.Insert(0, (char)('A' + (i % 26)));\n    i /= 26;\n    result.Insert(0, (char)('A' + (i % 26)));\n    i /= 26;\n    result.Insert(0, (char)('A' + (i % 26)));\n\n    return result.ToString();\n}
2945	return "data:image/jpeg;base64," + Convert.ToBase64String(p.Trunk);
2946	if ((letter & Letters.AB) != 0)\n{\n    // Some flag (A,B or both) is enabled\n}\nelse\n{\n    // None of them are enabled\n}
2947	If e.ColumnIndex = 3 Then\n\n\n Dim c As DataGridViewComboBoxColumn\n\n\n    Dim cmd2 As New SqlCommand("select Did,DName from Designation_tbl where deleted=0", con.connect)\n    cmd2.CommandType = CommandType.Text\n    Dim objdataadapter As New SqlDataAdapter(cmd2)\n    Dim results As New DataSet\n\n    objdataadapter.Fill(results, "DesignationMaster_tbl")\n    c = DGVEmployee.Columns(3)\n    c.DataSource = results.Tables("DesignationMaster_tbl")\n    c.ValueMember = "Did"\n    c.DisplayMember = "DName"\n    con.disconnect()\n    end if
2948	private int xSpeed;\nprivate int ySpeedMod; // we have the direction variable here -1 or 1 so everytime you want to change the direction you change this variable\nprivate int ySpeed {\n    get { return Form.trackBarValue * ySpeedMod; }\n}
2949	using System.Linq;\n\n//...\n\nif (portBuffer.SequenceEqual(ret_bytes))\n         status = 0;
2950	// Instantiate window\nAboutWindow aboutWindow = new AboutWindow();\n\n// Show window modally\n// NOTE: Returns only when window is closed\nNullable<bool> dialogResult = aboutWindow.ShowDialog();
2951	"SetPropertyValue/{propertyID}/{propertyValue}"
2952	void PrintReport(string header, params int[] numbers)\n{\n    Console.WriteLine(header);\n    foreach (int number in numbers)\n        Console.WriteLine(number);\n}
2953	public static bool DoesKeyExists(string containerName)\n    {\n        var cspParams = new CspParameters\n        {\n            Flags = CspProviderFlags.UseExistingKey,\n            KeyContainerName = containerName\n        };\n\n        try\n        {\n            var provider = new RSACryptoServiceProvider(cspParams);\n        }\n        catch (Exception e)\n        {\n            return false;\n        }\n        return true;\n    }
2954	System.Windows.Forms
2955	var convertDecimal = Convert.ToDecimal("45,4512")\nconvertDecimal = Math.Round(convertDecimal , 1);
2956	Word.Application app = (Word.Application)System.Runtime.InteropServices.Marshal.GetActiveObject("Word.Application");\nif (app == null)\n    return true;\n\nforeach (Word.Document d in app.Documents)\n{\n    if (d.FullName.ToLower() == osPath.ToLower())\n    {\n        object saveOption = Word.WdSaveOptions.wdDoNotSaveChanges;\n        object originalFormat = Word.WdOriginalFormat.wdOriginalDocumentFormat;\n        object routeDocument = false;\n        d.Close(ref saveOption, ref originalFormat, ref routeDocument);\n        return true;\n    }\n}\nreturn true;
2957	int[] array = new int[6]; \n    for(int val = 0; val < 6; val++)\n    {\n    if(array[val] > 0)\n    array[val] = 6; \n    }
2958	public class ExtendedReportController:BaseReportController\n{\n    public override ReportExecution GetReportExecution(BaseReportModel model)\n    {\n        var castedModel = (ExtendedFromBaseReportModel) model;\n        ReportExecution exec = new ReportExecution();\n        exec.AddOptionalParameter("SomeID1", castedModel.SomeID1);\n        exec.AddOptionalParameter("SomeID2", castedModel.SomeID2);\n        return exec;\n    }\n}
2959	private void Form1_Load(object sender, EventArgs e)\n{\n    DateTime LastCreatedDate = Properties.Settings.Default["LastDateTime"].ToDateTime();\n    var filePaths = Directory.GetFiles(@"\\Pontos\completed\", "*_*.csv").Select(p => new {Path = p, Date = System.IO.File.GetLastWriteTime(p)})\n        .OrderBy(x=>x.Date)\n        .Where(x=>x.Date>=LastCreatedDate);\n\n}
2960	//myBindingSource = dataGridView1.DataSource;\nmyBindingSource.Position = myBindingSource.Find("p_Name", textBox1.Text);
2961	n & (n - 1) != 0
2962	public class Target : Page\n{\n    protected override void Page_Load(object sender, EventArgs e)\n    {\n        Response.Write("<b><u>Request.Form.Keys</u></b><br>");\n\n        Response.Write("<ul>");\n        foreach (var key in Request.Form.AllKeys)\n        {\n            Response.Write(string.Format(\n              "<li>Key: '{0}'    Value: '{1}'", key, Request.Form[key]));\n        }\n        Response.Write("</ul>");\n\n        // flush\n        Response.Flush();\n    }\n}
2963	private void _dgwMain_MouseDown(object sender, MouseEventArgs e)\n{\n    if (e.Button == MouseButtons.Right)\n    {\n         DataGridView.HitTestInfo info = _dgwMain.HitTest(e.X, e.Y);\n         //now you can use info.RowIndex and info.CellIndex (not sure for porporty          \n         //name) to generate menu you want\n    }\n}
2964	public class CompareCustomDataType : IComparer<Student> {\n\n  public int Compare(Student x, Student y)\n  {\n    if (x == y)    return 0;\n    if (x == null) return -1;\n    if (y == null) return 1;\n\n    return String.Compare(x.Surname, y.Surname);\n  }\n...\n}
2965	dynamic data = JsonConvert.DeserializeObject<dynamic>(json_siteResp);\n\n    foreach (dynamic d in data)\n    {\n        var x = d.DoSomeThing;\n    }
2966	double.Parse("2140.76", CultureInfo.InvariantCulture)
2967	(Application.Current.RootVisual as PhoneApplicationFrame).Navigate(new Uri("/PivotPage1.xaml",\n            UriKind.Relative));
2968	{Binding ElementName=grid}
2969	face1.Location.X = new_X;\nface1.Location.Y = new_Y;
2970	Console.Write(\n    new Uri(\n     "http://www.TestThis.com/Some-Data/Some-Other-Data/Even-More-Dat"\n    ).PathAndQuery);
2971	async Task
2972	MainWindow.UserClickedButtonXEvent += ProjectB.ClassB.UserClickedButtonXFunction;
2973	private void MenuItem_Click(object sender, RoutedEventArgs e)\n    {\n        App.Current.MainWindow = this;\n        Window1 secondWindow = new Window1();\n        secondWindow.ShowDialog();\n    }
2974	string solutiondir = Directory.GetParent(\n    Directory.GetCurrentDirectory()).Parent.FullName;\n// may need to go one directory higher for solution directory\nreturn XDocument.Load(solutiondir + "\" + ProjectBName + "\Mock\myDoc.html");
2975	string sr = a.Replace('A', '4').Replace('a', '4');
2976	txtRichTextBox.Select(txtRichTextBox.Text.IndexOf("hi"), "hi".Length);\ntxtRichTextBox.SelectionColor = YourColor;\ntxtRichTextBox.SelectionFont = new Font("Times New Roman",FontStyle.Bold);
2977	// The Id of the Alarm to edit\nint idToEdit = 2;\n\n// The new comment for the Alarm\nstring newCommentValue = "Here is a new comment";\n\nXmlDocument doc = new XmlDocument();\ndoc.LoadXml(xml);\n\nXmlNode commentsElement = doc.SelectSingleNode(String.Format("Alarms/Alarm[Id = '{0}']/Comments", idToEdit));\ncommentsElement.InnerText = newCommentValue;\n\ndoc.Save(Console.Out);
2978	using System;\nusing PaymentPlanLogic;\nnamespace PaymentPlanStoreLogic\n{\n  public class Class1\n  {\n    Logger myLog = new Logger();\n\n    void YouForgotThisMethod()\n    {\n      myLog.createLog();\n    }\n  }\n}
2979	string str = "Hello C#"\nchar[] arr = str.ToCharArray();\n\nforeach (char c in arr)\n{\n    Console.WriteLine(c);\n}
2980	var cookieAwareWebClient= //.... authenticate \n\nvar db = new ServiceReference.MyEntities(new Uri("MyDomain/WcfDataService.svc"));\n\ndb.SendingRequest += ( s,  arg) =>\n{                \n    HttpWebRequest httpRequest = arg.Request as HttpWebRequest;\n    httpRequest.CookieContainer = cookieAwareWebClient.CookieContainer;   // I made that property public                             \n};\n\nvar myUsers = db.Users.ToList();
2981	HtmlDocument doc = new HtmlWeb().Load("http://www.google.com");\n\n IEnumerable<HtmlNode> linkedPages = doc.DocumentNode.Descendants("a");\n foreach (var item in linkedPages)\n {\n    Console.WriteLine("Href : " + item.GetAttributeValue("href", string.Empty) +\n    " id : " + item.GetAttributeValue("id", string.Empty) +\n    " class : " + item.GetAttributeValue("class", string.Empty));\n }
2982	string tempVar = test.Substring(0, test.IndexOf(separator[0].ToString()));
2983	DateTime buildDate = \n   new FileInfo(Assembly.GetExecutingAssembly().Location).LastWriteTime;
2984	MemoryStream ms = new MemoryStream();\n        XmlWriterSettings xws = new XmlWriterSettings();\n        xws.OmitXmlDeclaration = true;\n        xws.Indent = true;\n        XDocument xDoc = XDocument.Parse(utf8Xml);\n        xDoc.Declaration.Encoding = "utf-16";\n        using (XmlWriter xw = XmlWriter.Create(ms, xws))\n        {\n\n            xDoc.WriteTo(xw);\n        }\n        Encoding ut8 = Encoding.UTF8;\n        Encoding ut116 = Encoding.Unicode;\n        byte[] utf16XmlArray = Encoding.Convert(ut8, ut116, ms.ToArray());\n        var utf16Xml = Encoding.Unicode.GetString(utf16XmlArray);
2985	private int _age;\n\npublic int Age\n{\n    get { return _age; }\n    set\n    {\n        if (_age > 18)\n            _age = value;\n        else\n        {\n            //throw exception, Show message etc \n        }\n    }\n}
2986	var onlyTheseFlagsSet = (value[0] | value[1]) == input;
2987	RegistryKey rkApp = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);\n\nrkApp.SetValue("MyApp", Application.ExecutablePath.ToString());
2988	var result = from cat in Categories\n             where cat.Id == 39\n             select cat.Name + "-" + String.Join(",",\n                 cat.Products.Select(product => product.Name));
2989	DropDownList ddl = (DropDownList)e.Row.FindControl("DDL_StatusList1");\n            ddl.SelectedValue = DataBinder.Eval(e.Row.DataItem,"status_id").ToString();\n            if (DataBinder.Eval(e.Row.DataItem, "group_id").ToString() != "")\n            {\n            DropDownList ddl1 = (DropDownList)e.Row.FindControl("DDL_GroupList1");\n            ddl1.SelectedValue = DataBinder.Eval(e.Row.DataItem, "group_id").ToString();\n            }
2990	static public ObservableCollection<GetDrive> RootDrive = new ObservableCollection<GetDrive>();\n\npublic MainWindow()\n{\n    InitializeComponent();\n\n    foreach (DriveInfo di in DriveInfo.GetDrives())\n    {\n        ObservableCollection<GetDirectory>directories = new ObservableCollection<GetDirectory>();\n        try\n        {\n            foreach (string s in Directory.GetDirectories(di.Name))\n            {\n                directories.Add(new GetDirectory(s));\n            }               \n        }\n        catch (IOException)  //drive is not ready, e.g. DVD drive\n        {\n           // Handle it?\n        }    \n        RootDrive.Add(new GetDrive(di.Name, directories));\n    }\n}
2991	/// <summary>\n    /// Creates a new user account.\n    /// </summary>\n    /// <param name="model">Object containing the basic information about the user.</param>\n    /// <returns>User with the basic data and the JWT token.</returns>\n    /// <exception cref="BusinessLogicException">\n    /// Throws business exception if the user that is being created contains invalid data, such as invalid email, username and so on.\n    /// </exception>\n    public async Task<ResponseMessage<UserLogin>> Post(PostUserModel model)\n    {\n        ...\n    }
2992	if (Screen.AllScreens.Length > 1)\n{\n    // Multiple monitors\n}
2993	[HttpPost]\n    [Route("UpdateRoles")]\n    public AdminAccountGenericResponse UpdateRoles([FromBody]RoleStatusUserModel model)\n    {
2994	Product firstNewProduct = (Product) e.NewItems[0];
2995	public static DependencyProperty SomeObjectsProperty = DependencyProperty.Register("SomeObjects", typeof(ObservableCollection<Entities>), typeof(ObjectTemplate), new PropertyMetadata(new ObservableCollection<Entities>(), new PropertyChangedCallback(OnSomeObjectsPropertyChanged));\n\nprivate static void OnSomeObjectsPropertyChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n{\n    (d as ObjectTemplate).UpdateSomeObjects(e.NewValue as SomeObjects);\n}\n\npublic void UpdateSomeObjects(SomeObjects value)\n{\n    if (value != null && value.Count > 0)\n    {\n        foreach (SomeObject eLink in value)\n        {\n            //Add a new control to a wrap panel for each object in the list\n        }\n    }\n}
2996	CELL_WIDTH = W/7 - M \nCELL_HEIGHT = H/5 - M
2997	V.Speak ("Text", SpeechVoiceSpeakFlags.SVSFlagsAsync | SpeechVoiceSpeakFlags.SVSFIsXML);
2998	[DllImport("LibNonthreaded.dll", CallingConvention = CallingConvention.Cdecl)]\n public static extern void process(int high, int low);
2999	var whateverName = new Date(year, month, day);
3000	IList objectList = obj as IList;
3001	var str1 = document.getElementById("<%= amt3.ClientID %>").value;\n        var str2 = document.getElementById("<%= amt4.ClientID %>").value;\n\n        document.getElementById("<%= hf1.ClientID %>").value = str1;\n        document.getElementById("<%= hf2.ClientID %>").value = str2;
3002	TPDataContext db = new TPDataContext(connStr);
3003	namespace Mailer\n{\n  public partial class Mailer : ServiceBase\n  {\n    System.Timers.Timer createOrderTimer;\n    public Mailer()\n    {\n      InitializeComponent();\n    }\n\n    protected override void OnStart(string[] args)\n    {\n      createOrderTimer = new System.Timers.Timer();                      \n      createOrderTimer.Elapsed += new  System.Timers.ElapsedEventHandler(sendmail);\n      createOrderTimer.Interval = 900000; // 15 min\n      createOrderTimer.Enabled = true;\n      createOrderTimer.AutoReset = true;                      \n      createOrderTimer.Start();\n    }\n\n    protected void sendmail(object sender, System.Timers.ElapsedEventArgs args)\n    {\n      //code to send email.\n    }\n\n    protected override void OnStop() {  }\n  }\n}
3004	tabControl.SelectedItem = tabControl.Items.OfType<TabItem>().SingleOrDefault(n => n.Name == selectedTabItem);
3005	string selectCommand = "sp_getAllUsers(@0, @1)";\n// selectCommand = "Select * From Users Where first_name = @0 AND last_name = @1";\n...\nvar data = DB.Query(selectCommand, "Foo", "Bar");
3006	'Create an instance of Image and load an existing image\nUsing image As Aspose.Imaging.Image = Aspose.Imaging.Image.Load("c://temp//sample.bmp")\n    'Create and initialize an instance of the Graphics class\n    Dim graphics As New Aspose.Imaging.Graphics(image)\n    'Creates an instance of Font\n    Dim font As New Aspose.Imaging.Font("Times New Roman", 16, Aspose.Imaging.FontStyle.Bold)\n\n    'Create an instance of SolidBrush and set its various properties\n    Dim brush As New Aspose.Imaging.Brushes.SolidBrush()\n    brush.Color = Aspose.Imaging.Color.Black\n    brush.Opacity = 100\n\n    'Draw a String using the SolidBrush object and Font, at specific Point\n    graphics.DrawString("Aspose.Imaging for .Net", font, brush, New Aspose.Imaging.PointF(image.Width/2, image.Height/2))\n\n    ' Export to PNG file format using default options.\n    image.Save("out.bmp",New Aspose.Imaging.ImageOptions.PngOptions())\nEnd Using
3007	public class CompanyContext : DbContext\n{\n    public CompanyContext() : base("CompanyDatabase") { }\n\n    public DbSet<Collaborator> Collaborators { get; set; }\n    public DbSet<Department> Departments { get; set; }\n    public DbSet<Manager> Managers { get; set; }\n}
3008	taggings.Clear();
3009	typeof(T).GetProperties()
3010	[DataContract]\n    [KnownType(typeof(int[]))]\n    [KnownType(typeof(bool[]))]\n    public class CompositeType\n    {\n        [DataMember]\n        public object UsedForKnownTypeSerializationObject;\n\n    [DataMember]\n    public string StringValue\n    {\n        get;\n        set;\n    }\n    [DataMember]\n    public Dictionary<string, object> Parameters\n    {\n        get;\n        set;\n    }\n}
3011	public abstract class AbstractClass\n{\n    protected static void Method<T>() where T : AbstractClass\n    {\n        Type t = typeof (T);\n\n    }\n}\n\npublic class CurrentClass : AbstractClass\n{\n\n    public void DoStuff()\n    {\n        Method<CurrentClass>(); // Here I'm calling it\n    }\n\n}
3012	using Microsoft.TeamFoundation.WorkItemTracking.Client;\n\nQuery query = new Query(\n     workItemStore, \n     "select * from issue where System.TeamProject = @project",\n     new Dictionary<string, string>() { { "project", project.Name } }\n);\n\nvar workItemCollection = query.RunQuery();\nforeach(var workItem in workItemCollection) \n{\n   /*Get work item properties you are interested in*/\n   foreach(var field in workItem.Fields)\n   {\n      /*Get field value*/\n      info += String.Format("Field name: {0} Value: {1}\n", field.name, field.Value);\n   }\n}
3013	struct TimeStamp {\n  1: i16 year\n  2: byte month\n  3: byte day\n  4: byte hour=0\n  5: byte minute=0\n  6: i16 second=0\n  7: double fraction=0\n}
3014	Console.WriteLine(string.Format("{0:X}", 5488461193L));
3015	int idx = 2;\nreturn items.Skip(idx).Union(items.Take(idx)).ToList();
3016	string root = Path.GetDirectoryName(Application.ExecutablePath);\nList<string> FullFileList = Directory.GetFiles(root, "*.*", SearchOption.AllDirectories)\n    .Where(name =>\n    { \n        return !(name.EndsWith("dmp") || name.EndsWith("jpg"));\n    })\n    .Select(file => file.Replace(root, "")\n    .ToList();
3017	var i = (IBaseInterface) (new ChildClass());
3018	string input = value.ToString().Replace(",", "."), System.Globalization.CultureInfo.InvariantCulture);\ndouble number;\nbool result = Double.TryParse(input , out number);\nif (result)\n{\n    return number;         \n}\nelse\n{\n    return input;\n}
3019	private bool DisplayErrorMessages(String[] array1, String[] array2)
3020	Collection x = new DerivedClass()
3021	var followers = service.ListFollowersOf(user_id);\nwhile (followers.NextCursor != null)\n{\n    followers =  service.ListFollowersOf(user_id, followers.NextCursor);\n}
3022	int wordCount = line.Split(new string[] { "|" }, StringSplitOptions.RemoveEmptyEntries).Length;\nstring[] wordsArr = line.Split(new string[] { "|" }, StringSplitOptions.None);
3023	var languages = TextBoxLanguagesKnown.Text.Split('\n');\n\n// Removes deleted languages (first find all language details that are missing from the UI).\nvar deletedLanguages = objUser.LanguageDetails.Where(ld => !languages\n    .Any(l => ld.Language == l.Trim())).ToArray();\nforeach(var deletedLanguage in deletedLanguages)\n{\n    objUser.LanguageDetails.Remove(deletedLanguage);\n    Context.LanguageDetails.DeleteOnSubmit(deletedLanguage);\n}\n\n// Adds new languages (then adds new language details that are not found in the database).\nvar newLanguages = languages.Where(l => !objUser.LanguageDetails\n    .Any(ld => ld.Language == l.Trim())).ToArray();\nforeach (string newLanguage in newLanguages)\n{\n    var languageDetail = new LanguageDetail\n    {\n        Emp_Id = objUser.Emp_Id,\n        Language = newLanguage.Trim()\n    };\n    objUser.LanguageDetails.Add(languageDetail);\n}\n\nContext.SubmitChanges();
3024	public class User\n{\n    public string id { get; set; }\n    public string username { get; set; }\n    public string full_name { get; set; }\n    public string profile_picture { get; set; }\n}\n\npublic class RootObject\n{\n    public string access_token { get; set; }\n    public User user { get; set; }\n}
3025	class CarOptions\n{\n    public SunroofKind Sunroof { get; set; }\n    public SpoilerKind Spoiler { get; set; }\n    public TintedWindowKind TintedWindow { get; set; }\n    // Note that I split this into two enums - the kind of tinted window\n    // (UV-resistant option too maybe?) and color might be different.\n    // This is just an example of how such option composition can be done.\n    public TintedWindowColor TintedWindowColor { get; set; }\n\n    // In this class, you can also implement additional logic, such as\n    // "cannot have spoiler on diesel engine models" and whatever may be required.\n}\n\nenum SunroofKind\n{\n    None,\n    Electrical,\n    Mechanical\n}\n\nenum SpoilerKind\n{\n    None,\n    Standard\n}\n\nenum TintedWindowKind\n{\n    None,\n    Standard\n}\n\nenum TintedWindowColor\n{\n    Black,\n    Blue\n}
3026	Dim FObj As CrystalDecisions.CrystalReports.Engine.TextObject = rpt.ReportDefinition.ReportObjects("Text10")\n        FObj.Text = beginDate.ToString
3027	public class Service<TEntity> where TEntity : IEntity\n{\n    // other code omitted \n    public virtual void Insert(TEntity entity)\n    {\n        entity.Created = DateTime.Now;\n\n        // other code omitted\n    }\n}
3028	private void interestms_SelectionChanged(object sender, SelectionChangedEventArgs e)\n{\n    if(interestms.SelectedIndex==-1) return;\n\n    //Here may be you get all selected items no need to maintain two array if you get all selected items.\n    var listcommon = (cast as your type)interestms.SelectedItems;\n    interestms.SelectedIndex=-1;\n}
3029	DateTime d1 = DateTime.ParseExact(myJames,"dd/MM/yy");
3030	ServerManager manager = new ServerManager();\nSite site = manager.Sites[siteName];\n\nforeach (XElement bindingNode in bindingsNode.Elements("Binding")) {\n    Binding binding = site.Bindings.CreateElement();\n    binding.BindingInformation = String.Format("{2}:{0}:{1}", bindingNode.Attribute("Port").Value, bindingNode.Value, bindingNode.Attribute("IP").Value);\n    site.Bindings.Add(binding);\n}\n\nmanager.CommitChanges();
3031	private void Window_Loaded(object sender, RoutedEventArgs e)\n{    \n    DispatcherTimer dispatcherTimer = new DispatcherTimer();\n    dispatcherTimer.Tick += new EventHandler(dispatcherTimer_Tick);\n    dispatcherTimer.Interval = new TimeSpan(0, 0, 1);\n    dispatcherTimer.Start();\n}\n\nprivate void dispatcherTimer_Tick(object sender, EventArgs e)\n{\n    this.label17.Text=(DateTime.Now.Hour.ToString() + ":" +\n    DateTime.Now.Second.ToString());    \n}
3032	string str = "";\nforeach (string item in list)\n{\n    TextBox txt = (TextBox)Form.FindControl(item);\n    if (txt != null)\n    {\n        str += item+":"+ txt.Text+"<br>";\n    }\n}\nResponse.Write(str);
3033	~YourClass
3034	Microsoft.Office.Interop.Word.Application appVersion = new Microsoft.Office.Interop.Word.Application();
3035	NavigationService.Navigate(new Uri("/TargetProjectName;/TargetPage.xaml", UriKind.Relative));
3036	var s = new StringBuilder();\n        s.AppendFormat("\"{0}\",\"{1}",\n                            "test1",\n                            "test2"\n                                     );\n        for (var i = 2; i < 10; i++)\n        {\n            s.AppendFormat(",\"{0}\"", "loop"); \n        }
3037	From the drop down above select Basic Syntax.\n\nIf {TableName.FeeUnit} = {TableName.Percent} Then // Assuming you have FeeUni and Percent as column in TableName table. Drag drop the two and wrap with the code\n    formula=({TableName.Fee}/100)*{TableName.Patients}  // formula here is a keyword\n\nElse \n    formula={TableName.Fee}*{TableName.Patients}  \nEnd If
3038	var xpCollection = new XPCollection<Person>();\ngridControl1.DataSource = xpCollection;\n//...\nPerson person = (Person)gridView1.GetRow(rowHandle);
3039	Button1.Attributes.Add( "onclick", "javascript:window.open('http://www.google.com');" );
3040	StreamWriter myStreamWriter = myProcess.StandardInput;\nmyStreamWriter.Writeline("Y"); // Could it be localized ??? -->Oui, Ja, S?? etc...\nmyStreamWriter.Close();  // This seems to be is important.....
3041	List<object> Response= new List<object>();\n// You need to put some stuff on Response\nParallel.ForEach(Response, o =>\n{\n   Response.Add(callMethod());\n});
3042	client.Encoding = System.Text.Encoding.UTF8;
3043	var data =\n    XDocument.Parse(xml)\n    .Root\n    .Element("response")\n    .Element("data")\n    .Elements("row")\n    .Select(row =>\n        new\n        {\n            Id = Int32.Parse(row.Element("id").Value),\n            Parameters = new\n            {\n                IpAddress = row.Element("parameters").Element("ipaddress").Value,\n                port = Int32.Parse(row.Element("parameters").Element("port").Value),\n            },\n            Status = new\n            {\n                MemFree = Int32.Parse(row.Element("status").Element("memfree").Value),\n            },\n        });
3044	file = file.Where(line => line.Contains("\t"))\n           .GroupBy(line => line.Substring(0, line.IndexOf('\t')))\n           .Where(g => g.Count() == 1)\n           .Select(g => g.First())\n           .ToArray();
3045	CheckBox.IsChecked
3046	Task.Factory.StartNew(() =>\n    {\n        System.Threading.Thread.Sleep(Interval);\n        TheMethod();\n    });
3047	ddlStateLegalRes.Items.FindByValue(sdr["STATEOFLEGALRESIDENCE"].ToString()).Selected = true;
3048	builder.Register((c, p) => new CustomRobotService(p.TypedAs<Uri>(), c.Resolve<IWebDownloader>())).As<IRobot>().InstancePerDependency();
3049	DataSet a = // Some Pre-filled DataSet.\nDataSet b = // Some Other Pre-filled DataSet.\n\nDataSet c = a.Copy();\nc.Merge(b);
3050	public Dictionary<int, Variation> Variations\n    {\n        get\n        {\n            var json = this.VariationsJson.ToString();\n            if (json.RemoveWhiteSpace() == EmptyJsonArray)\n            {\n                return new Dictionary<int, Variation>();\n            }\n            else\n            {\n                return JsonConvert.DeserializeObject<Dictionary<int, Variation>>(json);\n            }\n        }\n    }\n\n    [JsonProperty(PropertyName = "variations")]\n    public object VariationsJson { get; set; }
3051	string regex = @"(http://www\.foo\.com(?:\\.|[^""\\])*)"
3052	var resultString = String.Join(",", new []\n{\n    aLength.ToString("F1"),\n    anAngle.ToString("F4"),\n    aHeight.ToString("F1"),\n    a2DPoint.X.ToString("F2"),\n    a2DPoint.Y.ToString("F2"),\n    anID.ToString(),\n    anInt.ToString(),\n    anotherInt.ToString(),\n}.Concat(aListOfInt.Select(x => x.ToString())));
3053	Dictionary<int, int[]>
3054	ContentPlaceHolder MainContent = Page.Master.FindControl("MainContent") as ContentPlaceHolder;\n DropDownList myControl1 = (DropDownList)MainContent.FindControl("ddlGoalKeeper");
3055	new TestClass()
3056	var author = _ctx.Authors.SqlQuery(\n    "with data as (select @author as [name]) " +\n    "merge Authors a " +\n    "using data s on s.[name] = a.[name] " +\n    "when not matched by target " +\n    "then insert([name]) values(s.[name]); select * from Authors where [name]=@author", new SqlParameter("author", command.Author)).Single();\n\n\nvar book = new Book\n{\n    Isbn = command.Id,\n    Title = command.Title,\n    Stock = command.Count,\n    Author = author\n};\n\n_ctx.Books.Add(book);\n\nawait _ctx.SaveChangesAsync();
3057	strCellData = strCellData.Replace("'", "&#39;");
3058	IEnumerable<Book> books = new List<Book>();
3059	public static void SavePersons(List<Person> Persons, String path)\n{\n//your code\n}
3060	Process myProcess = null;\n\n// Start the process.\nmyProcess = Process.Start("robocopy ....");\n\nmyProcess.WaitForExit(1000);\n\nConsole.WriteLine("Process exit code: {0}",  myProcess.ExitCode);
3061	List<Actor>
3062	System.Web.Security.FormsAuthentication
3063	System.Windows.Forms.Screen.AllScreens
3064	sc.Credentials = netCred;\n\ntry \n{\n  sc.Send(message);\n}  \ncatch (Exception ex) \n{\n  MessageBox(ex.ToString());              \n}              \nMessageBox.Show("Test");
3065	Application.AutoRecover.Path
3066	abstract class AnimalProcessor<T> where T : Animal {\n    public abstract IList<T> ProcessResults();\n}\n\nclass GiraffeProcessor : AnimalProcessor<Giraffe> {\n    public override IList<Giraffe> ProcessResults() {\n        return new List<Giraffe>();\n    }\n}\n\nclass LionProcessor : AnimalProcessor<Lion> {\n    public override IList<Lion> ProcessResults() {\n        return new List<Lion>();\n    }\n}
3067	Process.Start("mailto:a@example.com,b@example.com");
3068	selectedWidth * 5606/1058.4
3069	public SqlConnection Conectar(string remoteMachine)\n{\n      SqlConnection con = new SqlConnection(string.Format(@"Data Source={0}\sqlexpress;Initial Catalog=misnotas;Integrated Security=True", remoteMachine));\n      return con;\n}
3070	string unc_server_name = new Uri(@"\\JJ01G3C5-10A6S0\C$\2015\Mar\24\").Host;
3071	from c in accounts\nfrom p in accounts\nwhere c.Account != p.Account
3072	var search = new SearchBox();\n var cust = new CustomerList();\n search.SearchSubmitted += (s,e)=>{ cust.Update(e.Term); }
3073	BaseFont title = BaseFont.CreateFont(BaseFont.HELVETICA_BOLD, BaseFont.WINANSI, BaseFont.EMBEDDED);\nFont titleFont = new Font(title, 10, Font.BOLD, Color.BLACK);\np = new Paragraph(text, titleFont);
3074	using (var wc = new System.Net.WebClient())\n{\n    wc.DownloadFile(Url, FileName);\n}
3075	var firstDays = dates.Where(d=> d.Day == 1);
3076	// NetworkCredential stores authentication to a single internet resource\n       // supplies credentials in password-based authentication schemes such as basic, digest, NTLM, and Kerberos. \n       NetworkCredential networkCredential = new NetworkCredential("username", "password");\n\n        WebRequest webRequest = HttpWebRequest.Create("www.foobar.com");\n        webRequest.Credentials = networkCredential;\n\n        // to use the same credential for multiple internet resources...\n        CredentialCache credentialCache = new CredentialCache();\n        credentialCache.Add(new Uri("www.foobar.com"), "Basic", networkCredential);\n        credentialCache.Add(new Uri("www.example.com"), "Digest", networkCredential);\n\n        // now based on the uri and the authetication, GetCredential method would return the \n        // appropriate credentials\n        webRequest.Credentials = credentialCache;
3077	foreach (Object obj in list) {\n    Type type = obj.GetType();\n\n    foreach (var f in type.GetFields().Where(f => f.IsPublic)) {\n        Console.WriteLine(\n            String.Format("Name: {0} Value: {1}", f.Name, f.GetValue(obj));\n    }   \n}
3078	process1.StartInfo.Arguments = "antc";
3079	var child = Expression.Property(parameter, "Child");\nvar jobNumber = Expression.Property(child, propertyName);\n\nvar lambda =\n    Expression.Lambda<Func<ParentObject, bool>>(\n        comparisonMethod(jobNumber, Expression.Constant(propertyValue)),\n        parameter);
3080	empty.txt
3081	using (var cmd = new OleDbCommand("Update staff set username = @username where id = @userid", myConnection))\n   {\n      cmd.Parameters.AddWithValue("@username", txt_name.Text);\n      cmd.Parameters.AddWithValue("@userid", txt_id.Text);\n      cmd.ExecuteNonQuery();\n   }
3082	Console.WriteLine("BackGroundWork 1 Started");
3083	private void btnSearchByGender_Click(object sender, EventArgs e)\n{\n    DataView data = new DataView(pID2dbDataSet.customer);\n\n    string gender;\n    if (rdoMale.Checked)\n        gender = "Male"\n    else\n       gender = "Female"\n    data.RowFilter = "Gender = '" + gender + "'";\n    customerDataGridView.DataSource = data;\n}
3084	Group Policy
3085	foreach (var control in controls)\n    Debug.Assert((control is TextBox) || (control is ComboBox));
3086	public abstract class DrilldownBase<W> : IDrilldown where W : class,
3087	public static int[] ToBuffer(int[, ,] buffer3D, int w, int h) {\n    int[] buffer = new int[w * h * 1];\n    Buffer.BlockCopy(buffer3D, 0, buffer, 0, w * h * sizeof(int));\n    return buffer;\n}
3088	SendKeys.Send(...)\nawait Task.Delay(10000)\nSendKeys.Send(...)\nawait Task.Delay(10000)
3089	public class Appointment\n    {\n        [XmlIgnore()]\n        public Person MyPerson\n        {\n            get;\n            set;\n        }\n\n        public int MyPersonId\n        {\n            get { return MyPerson.Id; }\n            set { MyPerson = new Person(value)}\n        }\n    }
3090	BlobCounterBase bc = new BlobCounter();\n                    bc.FilterBlobs = true;\n                    bc.MinHeight = 5;\n                    bc.MinWidth = 5;\n\n                    bc.ProcessImage(numberplate);\n                    Blob[] blobs = bc.GetObjectsInformation();\n                    MessageBox.Show(bc.ObjectsCount.ToString());\n                    for (int i = 0, n = blobs.Length; i < n; i++)\n                    {\n                        if (blobs.Length > 0)\n                        {\n\n                            bc.ExtractBlobsImage(numberplate, blobs[i], true);\n\n                            Bitmap copy = blobs[i].Image.ToManagedImage();\n                            pictureBox2.Image = numberplate;\n                            pictureBox2.Refresh();\n                        }\n                    }
3091	string xml = myXmlElement.OuterXml;\nbyte[] bytes = Encoding.UTF8.GetBytes(xml);\nStream requestStream = request.GetRequestStream();\nrequestStream.Write(bytes, 0, bytes.Length);\nrequestStream.Close();
3092	const string message =\n    "Are you sure that you would like to close the form?";\nconst string caption = "Form Closing";\nvar result = MessageBox.Show(message, caption,\n                             MessageBoxButtons.YesNo,\n                             MessageBoxIcon.Question);\n\n// If the no button was pressed ... \nif (result == DialogResult.No)\n{\n    // cancel the closure of the form.\n    e.Cancel = true;\n}
3093	int x = 1;\nint j = 10;\nint k = 0;\nwhile (j > 0)\n{\n    if (k <= j)\n    {\n       Console.Write("* ");\n    }\n    if (j >= 1)\n    {\n        int temp = x;\n        while (temp >= 0)\n        {\n            Console.Write(" ");\n            temp--;\n        }\n        x = x + 1;\n        Console.Write("*");\n\n     }\n       Console.WriteLine();\n       j--;\n   }\n   Console.WriteLine();\n   double f = Math.Round(x * 1.5);\n   while (f != 0)\n   {\n      Console.Write("*");\n      f--;\n   }
3094	ProcessStartInfo startInfo = new ProcessStartInfo();        \nstartInfo.FileName = @"C:\etc\Program Files\ProgramFolder\Program.exe";\nstartInfo.Arguments = @"C:\etc\desktop\file.spp C:\etc\desktop\file.txt";\nProcess.Start(startInfo);
3095	public class job\n{\n    public string title { get; set; }\n    public string company { get; set; }\n    public string companywebsite { get; set; }\n    [XmlArray("locations")]\n    [XmlArrayItem("location")]\n    public string[] locations { get; set; }\n}
3096	public class ItemEx : Item\n{\npublic byte[] IconData\n    {\n        get { return icon; }\n        set \n        { \n            icon = value;\n            Icon = null;\n        }\n    }\n    public ImageSource Icon\n    {\n        get { return ToImageSource(IconData); }\n        set { RaisePropertyChanged("Icon"); }\n    }\n}\n\npublic static ImageSource ToImageSource(byte[] icon)\n    {\n        if (icon != null)\n        {\n            BitmapImage biImg = new BitmapImage();\n            MemoryStream ms = new MemoryStream(icon);\n            biImg.BeginInit();\n            biImg.StreamSource = ms;\n            biImg.EndInit();\n            return biImg;\n        }\n        return null;\n    }
3097	if(s!= "Old" && s!= "New" )\n//send error messeage
3098	public static bool CheckInvite(string fromId, string toId)\n    {\n        var fb = new FacebookClient(APP_ID + "|" + SECRET_ID);\n        fb.AppId = APP_ID;\n        fb.AppSecret = SECRET_ID;\n        dynamic result = fb.Get(string.Format("/{0}/apprequests", toId));\n        foreach (var el in result.data)\n            if ((string)el.from.id == fromId)\n            {\n                DateTime dateTime = DateTime.Parse((string)el.created_time, CultureInfo.InvariantCulture);\n                if ((DateTime.Now - dateTime).TotalMinutes < 15)\n                {\n                        return true;\n                }\n            }\n\n        return false;\n    }
3099	string inputFile = Path.Combine(Environment.GetFolderPath(\n        Environment.SpecialFolder.MyDocuments), "temp.txt");\nstring outputFile = Path.Combine(Environment.GetFolderPath(\n        Environment.SpecialFolder.MyDocuments), "temp2.txt");\nusing (StreamReader input = File.OpenText(inputFile))\nusing (Stream output = File.OpenWrite(outputFile))\nusing (StreamWriter writer = new StreamWriter(output))\n{\n    while (!input.EndOfStream)\n    {\n        // read line\n        string line = input.ReadLine();\n        // process line in some way\n\n        // write the file to temp file\n        writer.WriteLine(line);\n    }\n}\nFile.Delete(inputFile); // delete original file\nFile.Move(outputFile, inputFile); // rename temp file to original file name
3100	var timesAsString = times.Select(s => s.ToString("mm.ss")).ToArray()
3101	const string settingsAppLaunched = "appLaunched";\n\npublic static bool IsFirstLaunch(){\n    IsolatedStorageSettings settings = IsolatedStorageSettings.ApplicationSettings;\n    return !(settings.Contains(settingsAppLaunched) && settings[settingsAppLaunched]);\n}\n\npublic static bool Launched(){\n    if(IsFirstLaunch()){\n        IsolatedStorageSettings settings = IsolatedStorageSettings.ApplicationSettings;\n        settings.Add(settingsAppLaunched, true);\n        settings.Save();\n    }\n}\n\n//usage:\nif(IsFirstLaunch()){\n    showTheFrameToTheGuyBecauseHeLaunchedTheAppForTheFirstTime();\n    Launched();\n}
3102	aspnet_isapi.dll
3103	Image First = new Image(); \n        First = (Image)(Page.Master.FindControl("First"));\n        if (First != null)\n        {\n            First.ImageUrl = "image-path";\n        }
3104	foreach (tDerived<T> lGen in myList.OfType<tDerived<T>>())\n{\n    Console.WriteLine("tDerived found!");\n}\n\nforeach (aDerived lDerived in myList.OfType<aDerived>())\n{\n    Console.WriteLine("aDerived found!");\n}
3105	private void display_SelectionChanged(object sender, SelectionChangedEventArgs e) {\n    Dispatcher.BeginInvoke(new Action(() => {\n       var editwindow = new EditWindow();\n       editwindow.Show();\n    }));\n}
3106	Content-Type: Application/octet-stream\n Content-Description: The fixed length records\n Content-Transfer-Encoding: base64\n Content-ID: <950120.aaCB@XIson.com>\n\n T2xkIE1hY0RvbmFsZCBoYWQgYSBmYXJtCkUgSS\n BFIEkgTwpBbmQgb24gaGlzIGZhcm0gaGUgaGFk\n IHNvbWUgZHVja3MKRSBJIEUgSSBPCldpdGggYS\n BxdWFjayBxdWFjayBoZXJlLAphIHF1YWNrIHF1\n YWNrIHRoZXJlLApldmVyeSB3aGVyZSBhIHF1YW\n NrIHF1YWNrCkUgSSBFIEkgTwo=
3107	var builder = new StringBuilder()\n\nforeach(var row in dataSet.Tables.First().Rows)\n{\n   foreach(var cell in row.ItemArray)\n   {\n      builder.Append(cell.ToString());\n      if(cell != row.Cells.Last())\n         builder.Append("\t");\n   }\n   builder.Append(Environment.NewLine);\n}\n\nvar file = new FileStream(filePath);\nvar writer = new StreamWriter(file);\nwriter.Write(builder.ToString());\nwriter.Flush();\nwriter.Close();
3108	from c in allCompanies\n group c by c.Company into departments\n select new {\n    Company = departments.Key,\n    Departments = from d in departments\n                  group d by d.Department into employees\n                  select new {\n                      Department = employees.Key,\n                      Employees = employees.Select(e => e.Employees)\n                                           .Distinct()\n                  }\n }
3109	string filename = reportName + ".xls";\n Response.AddHeader("Content-Disposition", "attachment; filename=\"" + filename + "\"");
3110	Process exeProcess = new Process();\nexeProcess.StartInfo.FileName = @"...\marcus12.exe";\nexeProcess.StartInfo.UseShellExecute = false;\nexeProcess.StartInfo.RedirectStandardError = true;\nexeProcess.StartInfo.RedirectStandardInput = true;\nexeProcess.StartInfo.RedirectStandardOutput = true;\nexeProcess.Start();\nexeProcess.StandardInput.WriteLine(Path.GetFileName(filePath));\nexeProcess.StandardInput.WriteLine("Y");\nexeProcess.WaitForExit();
3111	public async Task<string> httpPOST(string url, FormUrlEncodedContent content)\n{\n    var httpClient = new HttpClient(new HttpClientHandler());\n    string resp = "";\n    HttpResponseMessage response = new HttpResponseMessage();\n\n    response = await httpClient.PostAsync(url, content);\n\n    try\n    {\n        response.EnsureSuccessStatusCode();\n\n        Task<string> getStringAsync = response.Content.ReadAsStringAsync();\n\n        resp = await getStringAsync;\n    }\n    catch (HttpRequestException)\n    {\n        resp = "NO_INTERNET";\n    }\n\n        return resp;\n}
3112	static void Main(string[] args)\n{\n    int? i = GetValueOrNull<int>(null, string.Empty);\n}\n\n\npublic static Nullable<T> GetValueOrNull<T>(DbDataRecord reader, string columnName) where T : struct\n{\n    object columnValue = reader[columnName];\n\n    if (!(columnValue is DBNull))\n    return (T)columnValue;\n\n    return null;\n}
3113	object obj = new object();\nPropertyInfo[] properties = obj.GetType().GetProperties();\nforeach (var p in properties)\n{\n    var myVal = p.GetValue(obj);\n}
3114	public string emailLink(string emailAddress)\n{\n    Regex emailRegex = new Regex(@"^(?!.*\.\.)[a-zA-Z0-9\w\._%&!'*=?^+-]*@[a-zA-Z0-9][\w\.-]*[a-zA-Z0-9]*\.[a-zA-Z][a-zA-Z\.]*[a-zA-Z]$";\n\n    if (emailRegex.IsMatch(emailAddress)\n    {\n        return string.Format("<a href=\"mailto:{0}\">{0}</a>", emailAddress);\n    }\n    return "";\n}
3115	public class MyCustomResolver : CamelCasePropertyNamesContractResolver\n{\n    protected override string ResolvePropertyName(string propertyName)\n    {\n        return propertyName == "Links" ? "_links" : base.ResolvePropertyName(propertyName);\n    }\n}
3116	private void btnSubmit_Click(object sender, EventArgs e) {\n    var formFields = **formFieldCollection**;\n\n    var firstName = MyUserControl.FirstName.Text;\n    var lastName = MyUserControl.LastName.Text;\n}
3117	public static string GetNetStates()\n{\n    var info = Microsoft.Phone.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType;\n    switch (info)\n    {\n        case NetworkInterfaceType.MobileBroadbandCdma:\n            return "CDMA";\n        case NetworkInterfaceType.MobileBroadbandGsm:\n            return "CSM";\n        case NetworkInterfaceType.Wireless80211:\n            return "WiFi";\n        case NetworkInterfaceType.Ethernet:\n            return "Ethernet";\n        case NetworkInterfaceType.None:\n            return "None";\n        default:\n            return "Other";\n    }   \n}
3118	using (var myStream = new MemoryStream()) {\n    using (var myWriter = new BinaryWriter(myStream)) {\n        // write here\n    }\n    using (var myReader = new BinaryReader(myStream)) {\n        // read here\n    }\n\n    // put the bytes into an array...\n    var myBuffer = myStream.ToArray();\n\n    // if you *really* want a List<Byte> (you probably don't- see my comment)\n    var myBytesList = myStream.ToArray().ToList();\n}
3119	dbContext.Exams.Include(e => e.Questions)
3120	public Wsp GetFullWsp(Guid id)\n{\n    var wsp = wspCollection.AsQueryable().FirstOrDefault(w => w.WspId == id);\n    var sits = sitCollection.AsQueryable().Where(sit => sit.WspId == id);\n    wsp.SitList = new List<Sit>(sits);\n}
3121	context.Request.ParentRequest.ParentRequest.Target.Member.DeclaringType
3122	Properties -> Copy to output folder -> Copy Always
3123	[HttpGet]\n    public List<Category> FunctionWithParam(long id)\n    {\n        //return something\n    }
3124	int sequence = 0;\n\nprivate void timer1_Tick(object sender, EventArgs e)\n{\n    using(var still = new Bitmap(form.Width, form.Height))\n    {\n        form.DrawToBitmap(still, new Rectangle(new Point(0, 0), still.Size));\n        still.Save(String.Format(@"c:\still_{0}.gif", sequence++), ImageFormat.Gif);\n    }\n}
3125	XAttribute xmlLang = new XAttribute(XNamespace.Xml + "lang", "en");
3126	var testString = "2Y 4M 3D";\n        var splitString = testString.Split(' ');\n        var year = int.Parse(splitString[0][0].ToString(CultureInfo.InvariantCulture));\n        var month = int.Parse(splitString[1][0].ToString(CultureInfo.InvariantCulture));\n        var day = int.Parse(splitString[2][0].ToString(CultureInfo.InvariantCulture));\n        var totalSeconds = (DateTime.Now.AddYears(year).AddMonths(month).AddDays(day) - DateTime.Now).TotalSeconds;
3127	foreach (DataRow dr in dt.Rows)\n{\n    lstweeks.Add(\n    {\n         new GetData{week = dr["WK"].ToString()}\n    );\n}
3128	dim ds as new dataset
3129	SPGroupCollection collGroups = SPContext.Current.Web.Groups;\n\n foreach (SPGroup oGroup in collGroups)\n                {\n                    foreach (SPUser oUser in oGroup.Users)\n                    {\n                        Response.Write(oUser.Name);\n\n                    Label l = new Label();\n                    l.Text = oUser.Name;\n\n                    PlaceHolderContents.Controls.Add(l);\n                    PlaceHolderContents.Controls.Add(new LiteralControl("<br/>"));\n                }\n            }
3130	ItemType items = default(ItemType);\nswitch(sortColumn)\n{\n     case "Title":\n     {\n           items = ctxModel.Items\n                    .Where(i => i.ItemID == vId)\n                    .OrderBy( i => i.Title);\n     }\n     break;\n }
3131	Textbox.Text
3132	private static List<HashMap<String, Object>> manipulatePdfBookMarkUtil(SortedMap<Integer, String> pgTtl, Rectangle rct) {\n    List<HashMap<String, Object>> mpBkMrkLst = null;\n    int itrCnt = 0;\n    if (pgTtl != null && !pgTtl.isEmpty()) {\n        mpBkMrkLst = new ArrayList<HashMap<String, Object>>();\n        for (Map.Entry<Integer, String> itrTtlPg : pgTtl.entrySet()) {\n            HashMap<String, Object> retMap = new HashMap<String, Object>();\n            retMap.put("Title", itrTtlPg.getValue());\n            retMap.put("Action", "GoTo");\n            retMap.put("Page", itrTtlPg.getKey() + " FitH " + rct.getTop());\n            mpBkMrkLst.add(itrCnt, retMap);\n            itrCnt++;\n        }\n    }\n    return mpBkMrkLst;\n    }
3133	Num = num - (num % 10);\nlist<int> stuff;\nfor (int i = 0; i == (num /10); i++)\n     stuff.add((i*10));
3134	var query =\n    doc\n        .Root\n        .Descendants("Event")\n        .Select(e =>\n            new XElement(\n                "Course",\n                e.Parent.Element("CourseId"),\n                e.Parent.Element("CourseName"),\n                e.Parent.Element("CourseDesc"),\n                e));
3135	public static IEnumerable<string> SplitString(this string sInput, char search, int maxlength)\n    {\n        var result = new List<string>();\n        var count = 0;\n        var lastSplit = 0;\n\n        foreach (char c in sInput)\n        {\n            if (c == search || count - lastSplit == maxlength)\n            {\n                result.Add(sInput.Substring(lastSplit, count - lastSplit));\n                lastSplit = count;\n            }\n\n            count ++;\n        }\n\n        result.Add(sInput.Substring(lastSplit, count - lastSplit));\n\n        return result;\n    }
3136	static void Main()\n    {\n        // sample data\n        File.WriteAllText("my.data", @"4 6\n1 2 3 4 5 6\n2 5 4 3 21111 101\n3 5 6234 1 2 3\n4 2 33434 4 5 6");\n\n        using (Stream s = new BufferedStream(File.OpenRead("my.data")))\n        {\n            int rows = ReadInt32(s), cols = ReadInt32(s);\n            int[,] arr = new int[rows, cols];\n            for(int y = 0 ; y < rows ; y++)\n                for (int x = 0; x < cols; x++)\n                {\n                    arr[y, x] = ReadInt32(s);\n                }\n        }\n    }\n\n    private static int ReadInt32(Stream s)\n    { // edited to improve handling of multiple spaces etc\n        int b;\n        // skip any preceeding\n        while ((b = s.ReadByte()) >= 0 && (b < '0' || b > '9')) {  }\n        if (b < 0) throw new EndOfStreamException();\n\n        int result = b - '0';\n        while ((b = s.ReadByte()) >= '0' && b <= '9')\n        {\n            result = result * 10 + (b - '0');\n        }\n        return result;\n    }
3137	dgProducts.Columns["Unit Price"].DefaultCellStyle.Format = "c";\ndgProducts.Columns["Unit Price"].DefaultCellStyle.FormatProvider =  new CultureInfo("si-LK");
3138	INetFwRule firewallRule = (INetFwRule)Activator.CreateInstance(\n        Type.GetTypeFromProgID("HNetCfg.FWRule"));\n\n    INetFwPolicy2 firewallPolicy = (INetFwPolicy2)Activator.CreateInstance(\n        Type.GetTypeFromProgID("HNetCfg.FwPolicy2"));\n\n    firewallRule.ApplicationName = "<path to your app>";\n\n    firewallRule.Action = NET_FW_ACTION_.NET_FW_ACTION_ALLOW;\n    firewallRule.Description = " My Windows Firewall Rule";\n    firewallRule.Enabled = true;\n    firewallRule.InterfaceTypes = "All";\n    firewallRule.Name = "<your rule name>";\n\n    // Should really check that rule is not already present before add in\n    firewallPolicy.Rules.Add(firewallRule);
3139	sheet.Range["G3"].IsWrapText = true;
3140	DateTime targetDate = ...;\nlong secondsTilRefresh = Math.Floor((targetDate - DateTime.Now).TotalSeconds);
3141	try\n{\n    command.CommandText = "UPDATE Item SET payment_method_id = @batchID WHERE id in (@itemIDs)";\n    command.Parameters.Add(new SqlParameter("@batchID", 0));\n    command.Parameters.Add(new SqlParameter("@itemIDs", ""));\n\n    foreach (var itemIDs in this.SelectedItemIds)\n    {\n        command.Parameters["@batchID"].Value = batchID;\n        command.Parameters["@itemIDs"].Value = itemIDs;\n        command.ExecuteNonQuery();\n    }\n    transaction.Commit();\n}
3142	public interface IUserRepository : IRepository<User>\n{\n    void Authenticate(Useruser);\n}\n\n// and it's implementation:\n\npublic class UserRepository : BaseRepository<User>, IUserRepository\n{\n    public void Authenticate(User user)\n    {\n        // do some stuff here\n    }\n}
3143	while (true)\n        {\n            parent = current;\n            if (i < current.Data)\n                // you never get in here, so we just loop around in "while (true)"
3144	byte[] binaryData = Convert.FromBase64String(bgImage64);\n\nBitmapImage bi = new BitmapImage;\nbi.BeginInit();\nbi.StreamSource = new MemoryStream(binaryData);\nbi.EndInit();\n\nImage img = new Image();\nimg.Source = bi;
3145	var lastBalance = decimal.MaxValue;\nforeach (DataRow dr in dt.Rows)\n{\n    if (!string.IsNullOrEmpty(dr[1].ToString()))\n    {\n        var currentBalance = Convert.ToDecimal(dr[1]);\n        if (currentBalance < lastBalance)\n        {\n            lastBalance = currentBalance;\n            balances.Add(dr[1].ToString());\n        }\n        else\n        {\n            //TODO: Invalid list\n            //throw ... OR\n            break;\n        }\n    }\n}
3146	try\n{\n    using(SqlConnection connect = new SqlConnection(....))\n    using(SqlCommand command = new SqlCommand(\n        @"SELECT FILE_DATE_PROCESSED, DATE_ENTERED FROM FILE_DATE_PROCESSED", connect))\n    {\n        connect.Open();\n        using(SqlDataReader reader = command.ExecuteReader())\n        {\n           while (reader.Read())\n           {\n                 Console.WriteLine(reader["FILE_DATE_PROCESSED"].ToString());\n                 Console.WriteLine(reader["DATE_ENTERED"].ToString());\n           }\n        }\n   }\n}\ncatch (Exception e)\n{\n   Console.WriteLine(e.ToString());\n}
3147	public class Foo<T>\n{\n    public static string MyMethod()\n    {\n        return "Method: " + typeof(T).ToString();\n    }\n}\n\nclass Program\n{\n    static void Main()\n    {\n        Type myType = typeof(string);\n        var fooType = typeof(Foo<>).MakeGenericType(myType);\n        var myMethod = fooType.GetMethod("MyMethod", BindingFlags.Static | BindingFlags.Public);\n        var result = (string)myMethod.Invoke(null, null);\n        Console.WriteLine(result);\n    }\n}
3148	EmpInfoDS = new DataSet();\ncon.Open(); // My connection name\nstring sqlRecords = "Select * FROM tbl_EmpInfo ORDER BY EmpID";\nEmpInfoDA = new OleDbDataAdapter(sqlRecords, con);\nEmpInfoDA.Fill(EmpInfoDS, "EmpInfo");\ncon.Close();
3149	BULK\nINSERT MyTable\nFROM 'c:\myfile.txt'\nWITH\n(\nFIELDTERMINATOR = ',',\nROWTERMINATOR = '\n'\n)
3150	this.menuMain.Items.Add(new ToolStripSeparator());
3151	var dir = new DirectoryInfo(@"c:\scripts");\nforeach(var file in dir.EnumerateFiles("*.html",SearchOption.AllDirectories))\n{\n\n}
3152	c3 = c1.CombineLatest(c2, (a, b) => a && b).DistinctUntilChanged()
3153	private static void FileCleanup(string directoryName)\n{\n    try\n    {\n        string[] filenames = Directory.GetFiles(directoryName);\n\n        foreach (string filename in filenames)\n        {\n            File.Delete(filename);\n        }\n\n        if (Directory.Exists(directoryName))\n        {\n            Directory.Delete(directoryName);\n        }\n    }\n    catch (Exception ex)\n    {\n       // you might want to log it, or swallow any exceptions here\n    }\n}
3154	ListBox listBox1 = new ListBox();\n\nlistBox1.SetValue(ScrollViewer.HorizontalScrollBarVisibilityProperty,\nScrollBarVisibility.Disabled);\n\nlistBox1.SetValue(ScrollViewer.VerticalScrollBarVisibilityProperty, \nScrollBarVisibility.Disabled);\n\nlistBox1.SetValue(ScrollViewer.CanContentScrollProperty, false);\n\nlistBox1.SetValue(ScrollViewer.IsDeferredScrollingEnabledProperty, true);
3155	var downStream = statusStream\n    .Aggregate<WebsiteStatus, IEnumerable<string>>(new string[0], (down, newStatus) =>\n    {\n        if (newStatus.IsUp)\n            return down.Where(uri => uri != newStatus.Uri);\n        else if (!down.Contains(newStatus.Uri))\n            return down.Concat(new string[] { newStatus.Uri });\n        else\n            return down;\n    });\n\nvar upStream = statusStream\n    .Aggregate<WebsiteStatus, IEnumerable<string>>(new string[0], (up, newStatus) =>\n    {\n        if (!newStatus.IsUp)\n            return up.Where(uri => uri != newStatus.Uri);\n        else if (!up.Contains(newStatus.Uri))\n            return down.Concat(new string[] { newStatus.Uri });\n        else\n            return up;\n    });\n\nvar allDown = upStream.Select(up => !up.Any());
3156	int row = dgvHardware.CurrentCell.RowIndex;
3157	/* add current samples to totals */\n total_u += u_dcbus_pv_act[i];\n total_p += p_dcbus_pv_act[i];\n\n /* every fourth tick, calc average and reset totals */\n if (i % 4 == 0)\n {\n     average_u = total_u / 4;\n     average_p = total_p / 4;\n     total_u = 0;\n     total_p = 0;\n }\n u_dcbus_target = average_u;\n p_dcbus_pv_avg = average_p;\n i++;
3158	var tabBarItem = new UITabBarItem("Item Text", null, 1);\ntabBarItem.SetFinishedImages(UIImage.FromBundle("./Images/addexpense.png"), UIImage.FromBundle("./Images/addexpense.png"));\n\nvar controllerToAdd = new UIViewController()\n{\n    TabBarItem = tabBarItem\n};\n\ntabBarController.SetViewControllers(new UIViewController[]\n{\n controllerToAdd\n};
3159	public int? NullableInt(string str)\n    {\n        int i;\n        if (int.TryParse(str, out i))\n            return i;\n        return null;\n    }
3160	private ManualResetEvent mre = new ManualResetEvent(false);\n\nprivate void OpenForm()\n{\n    if (FormThread == null)\n    {\n        FormThread = new Thread(FormStub);\n        FormThread.SetApartmentState(ApartmentState.STA);\n        FormThread.Start();\n        mre.WaitOne();\n    }\n}\n\nprivate void FormStub()\n{\n    Form = new ConnectorForm();\n    mre.Set();\n    Application.Run(Form);\n}
3161	string selectedItemMouthColumn = listView.SelectedItems[0].SubItems[listView.Columns.IndexOf(MOUTH)].Text;
3162	client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("key", "=" + apiKey);
3163	List<SavedOption> finalSavedOptions = savedOptions.Where(x => \n    itemOptions.Any(y => OptionTextDoesMatch(y, x) && y.SomeID == x.SomeID)\n).ToList();
3164	public NewOne()\n{\n  InitializeComponent();\n\n  LoginWindow login = new LoginWindow();\n  bool? result = login.ShowDialog();\n  if (!result.HasValue || result.Value == false)\n    this.Close();\n}
3165	private void dataGridView2_CellValueChanged(object sender, DataGridViewCellEventArgs e)\n    {\n        if (e.ColumnIndex == 5)\n            textBox9.Text = CellSum().ToString();\n    }\n\n    private double CellSum()\n    {\n        double sum = 0;\n        for (int i = 0; i < dataGridView2.Rows.Count; ++i)\n        {\n            double d = 0;\n            Double.TryParse(dataGridView2.Rows[i].Cells[5].Value.ToString(), out d);\n            sum += d;\n        }\n        return sum;\n    }
3166	txt_netamount.Text = decimalValue.ToString("0.00");
3167	Path path = XamlReader.Load("<Path xmlns='http://schemas.microsoft.com/winfx/2006/xaml/presentation' Stroke='Blue' Data='M 0 0 Q 10 10 20 0'/>") as Path;
3168	for (DateTime date = StartDate.AddDays(nrOfDaysToLoopBy-1); date.Date <= EndDate.Date; date = date.AddDays(nrOfDaysToLoopBy))\n {\n  }
3169	var query = Points\n    .GroupBy(p => new { p.X, p.Y }) // Group points based on (X,Y).\n    .Where(g => g.Count() == 1)     // Take groups with exactly one point.\n    .Select(g => g.Single());       // Select the point in each group.
3170	private static void Main()\n{\n    Regex pattern = new Regex(@"(?<Name>[\w\-_]+)\.+(?<Value>[\w\-_]+)");\n    string sample = @"(123456789..value > 2000) && (987654321.Value < 12)";\n\n    string result = pattern.Replace(sample,\n                                    m =>\n                                    String.Format(\n                                        "ClassName.GetInfo(\"{0}\").Get{1}{2}()",\n                                        m.Groups["Name"].Value,\n                                        Char.ToUpper(m.Groups["Value"].Value[0]),\n                                        m.Groups["Value"].Value.Substring(1))\n        );\n    Console.WriteLine(result);\n}
3171	public class Team\n{\n  private IList<Player> _players\n  ...\n}\n\npublic class Player\n{\n  public string Name {get;set;}\n\n  public abstract Influence { get; }\n}\n\npublic class Forward : Player\n{\n  public override Influence\n  {\n    get { return //calculation }\n  }\n}
3172	panelNew.Style[HtmlTextWriterStyle.Position] = 'absolute';\npanelNew.Style[HtmlTextWriterStyle.ZIndex] = '999';
3173	string s = "His name is Jack. Jack likes to ride a bike";\nint count = 0;\nstring s2 = Regex.Replace(s, "Jack", match => {\n    count++;\n    return count > 1 ? "Jack2" : "Jack1";\n});
3174	using System.Linq;\n\nif (!array2.Except(array1).Any())\n{\n    ...validated!\n}
3175	BitmapImage bimg = new BitmapImage();                        \nbimg.CreateOptions = BitmapCreateOptions.BackgroundCreation \n                     | BitmapCreateOptions.IgnoreImageCache
3176	Graphics.DrawImage
3177	// now filter proptypes to selected Types|\nvar myTAccomtypes = from d in connection.Get<ALocal.proptype>().ToList()\n    // ToList() will evaluate collection, you cannot pass sTypes array of integers to a sql query, at least not in that way\n    where sTypes.Contains(d.proptype_id.ToString())\n    select new { d.proptype_id, d.proptype_name };\n\n    DataTable AcomType = LINQToDataTable(myTAccomtypes);\n\n    StringBuilder sb = new StringBuilder();\n    // Loop over table rows\n    foreach (var row in AcomType.Rows.OfType<DataRow>().Take(19))  // will .Take up to a maximum of x rows from above\n    {\n         sb.Append("<dd>");\n         sb.Append(row["proptype_name"].ToString());\n         sb.Append("</dd>");\n     }\n     HldUserSet.TuAccomtypes = sb.ToString();\n     //HldUserSet.TuAccomtypes = string.Join(",", myTAccomtypes); //Check query content
3178	class Program\n{\n    static void Main(string[] args)\n    {\n        var list = new List<MyObject>(new[]\n        {\n            new MyObject { Name = "ABC", Age = 12 },\n            new MyObject { Name = "BBC", Age = 14 },\n            new MyObject { Name = "ABC", Age = 11 },\n        });\n        var sortedList = from element in list\n                         orderby element.Name\n                         orderby element.Age\n                         select element;\n\n        foreach (var item in sortedList)\n        {\n            Console.WriteLine("{0} {1}", item.Name, item.Age);\n        }\n    }\n}
3179	if (!Page.IsPostBack)\n    {\n        GridView1.DataSourceID = "yourDatasourceID";\n        GridView1.DataBind();\n    }
3180	object HandleEvent(object[] parameters)
3181	SmtpClient mailer = new SmtpClient();\nmailer.Host = "mail.youroutgoingsmtpserver.com";\nmailer.Credentials = new System.Net.NetworkCredential("yourusername", "yourpassword");
3182	private void Populate(object sender, EventArgs e)\n    {   \n        listView1.Items.Add("D");\n        listView1.Items.Add("B");\n        listView1.Items.Add("A");\n        listView1.Items.Add("C");\n    }\n\n    private void SelectFirst(object sender, EventArgs e)\n    {\n        listView1.Items[0].Selected = true;\n        listView1.Select();\n    }\n\n    private void SortAndSelect(object sender, EventArgs e)\n    {\n        listView1.Sorting = SortOrder.Ascending;\n        listView1.Sort();\n\n        listView1.Items[0].Selected = true;\n        listView1.Select();\n    }
3183	if (a != b) {\n    a ^= b;\n    b ^= a;\n    a ^= b;\n}
3184	public ActionResult Create(Job job)\n{\n    if (job.TargetDateSurvey.Value < DateTime.Today)\n    {\n        ModelState.AddModelError("TargetDateSurvey", "Date must be today or later.");\n    }\n\n    if (ModelState.IsValid)\n    ...\n}
3185	GameSchedulingEntities db = new GameSchedulingEntities();\n        Group obj = db.Groups.Find(Id);\n        // or Group obj = db.Groups.FirstOrDefault(g => g.Name == NametextBox.Text);\n        obj.Name = somethingelse;\n        db.SaveChanges();
3186	XNamespace ns = "http://www.ecb.int/vocabulary/2002-08-01/eurofxref";\nvar xdoc = XDocument.Load(@"http://www.ecb.europa.eu/stats/eurofxref/eurofxref-hist-90d.xml");\nvar names = new[] { "USD", "RON", "SMT" };\nvar someCubes =  xdoc.Root.Element(ns + "Cube")\n    .Elements()\n    .Select(x => x.Elements()\n    .Where(y => names.Contains(y.Attribute("currency").Value)))\n    .Select(x => {\n        return x.Select(y => {\n            return new {\n                datum = (DateTime)y.Parent.Attribute("time"),\n                currency = (string)y.Attribute("currency"),\n                rate = (string)y.Attribute("rate")\n            };\n        });\n    });
3187	string input = "[PC(name=\"PC1\", ip=\"192.168.1.2\", subnet=\"255.255.255.0\", gateway=\"192.168.1.1\")]\n[PC(name=\"PC2\", ip=\"192.168.1.3\", subnet=\"255.255.255.0\", gateway=\"192.168.1.1\")]";\n\n       MatchCollection matches = Regex.Matches(input, @"name=""(.*?)"".*ip=""(.*?)"".*subnet=""(.*?)"".*gateway=""(.*?)""");\n\n       object[][] values = matches.OfType<Match>()\n                           .Select(m => new object[] { m.Groups[1], m.Groups[2], m.Groups[3], m.Groups[4] })\n                           .ToArray();
3188	protected void Page_Load(object sender, EventArgs e)\n    {\n      if (!IsPostBack)\n        {\n         InstanceData = (DataSet)(Session["InstanceData"]);\n         id1.DataSource = InstanceData.tables[0];\n         id1.DataTextField = "DB";\n         id1.DataValueField = "DB";\n         id1.DataBind();\n        }\n    }\n\n protected void Button1_Click(object sender, EventArgs e)\n    {\n        string DataBase = id1.SelectedValue;\n    }
3189	var regex = new Regex(@"^E\d\d$");\nvar file = Directory.GetFiles(path, "E??.chk")\n                    .Where(f => regex.IsMatch(File.GetFileNameWithoutExtension(f)))\n                    .OrderBy(f => f)\n                    .FirstOrDefault();
3190	MessageBox.Show("Text", "Text", MessageBoxButtons.OK,\n(MessageBoxIcon)Enum.Parse(typeof(MessageBoxIcon), ComboBox.Text.ToString());
3191	Group Policy Settings Reference for Windows and Windows Server
3192	[OperationContract(Action="*", ReplyAction="*")]\n    System.ServiceModel.Channels.Message ProcessMessage(System.ServiceModel.Channels.Message msg);\n}
3193	myObject.Image = new Binary(imageByteArray);
3194	XNamespace ns = "http://www.example.com/Modules";\n\nvar courses = from e in doc.Descendants(ns + "Module")\n            let lowname = e.Value.ToLowerInvariant()\n            where lowname.Contains("linq")\n            orderby e.Value\n            select e.Value;
3195	????????????????????\n????????????????????\n??     ?          ??\n??     ?          ??\n????????????????????\n????????????????????\n????????????????????\n??          ?     ??\n??          ?     ??\n????????????????????\n????????????????????
3196	using System;\nusing System.IO;\nusing System.Linq;\nusing System.Windows.Media.Imaging;\n\nclass Program\n{\n    static void Main()\n    {\n        using (var stream = File.OpenRead(@"c:\work\some_huge_image.tif"))\n        {\n            var decoder = BitmapDecoder.Create(stream, BitmapCreateOptions.None, BitmapCacheOption.None);\n            var frame = decoder.Frames.First();\n            Console.WriteLine(\n                "width: {0}, height: {1}", \n                frame.PixelWidth, \n                frame.PixelHeight\n            );\n        }\n    }\n}
3197	public class StationProperty<T> : StationProperty\n{\n    public StationProperty()\n    {\n    }\n\n    public StationProperty(int id, T val, string desc = "")\n    {\n        Id = id;\n        Desc = desc;\n        Value = val;\n    }\n\n    public int Id { get; set; }\n    public string Desc { get; set; }\n    public T Value { get; set; }\n\n    object StationProperty.Value\n    {\n        get { return Value; }\n    }\n\n    public Type ValueType\n    {\n        get { return typeof (T); }\n    }\n}\n\npublic interface StationProperty\n{\n    int Id { get; set; }\n    string Desc { get; set; }\n    object Value { get; }\n    Type ValueType { get; }\n}
3198	public class VendorClass\n{\n    public int VendorID {  get; set; }\n\n    private string _vendorName;\n\n    public string VendorName\n    {\n        get { return _vendorName; }\n        set\n        {\n            if (value.Length > 15)\n            {\n                _vendorName = value.Substring(0,15);                    \n            } else { \n                _vendorName = value;\n            }\n        }\n    }\n}
3199	var onlyLetters = new String(fileName.Name.TakeWhile(Char.IsLetter).ToArray());
3200	Keyboard.ClearFocus();
3201	class Program\n{\n\n    private const int CONST_INT = 0x10;\n    static void Main(string[] args)\n    {\n        Console.WriteLine(CONST_INT==16);\n    }\n}
3202	...\nvar rg = new TableRowGroup();\nrg.Rows.Add(row);\nt.RowGroups.Add(rg);\n_doc2.Blocks.Add(t);
3203	#if DEBUG\n        RunMyDEBUGRoutine();\n#else\n        RunMyRELEASERoutine();\n#endif
3204	Excel.Range dataRange= (Excel.Range)excelWorksheet.get_Range("C4", "C4");\ndataRange.Value2 = "This is the first line\n" +\n        "This is the second line\n" +          \n        thirdLineString;
3205	IList<IWebElement> row = date.FindElements(By.TagName("tr"));\n        IList<IWebElement> col = date.FindElements(By.TagName("td"));\n\n        foreach (IWebElement cell in col)\n        {\n            if (cell.Text.Equals("13"))  \n            {\n                cell.Click();\n                break;\n            }    \n        }
3206	using (new NetworkConnection(@"\\server\read", readCredentials))\nusing (new NetworkConnection(@"\\server2\write", writeCredentials)) {\n   File.Copy(@"\\server\read\file", @"\\server2\write\file");\n}
3207	netsh http show urlacl
3208	using(DataShemeDataContext context = new DataShemeDataContext("Data Source=database.sdf"))\n{\n    if (!context.DatabaseExists())\n        context.CreateDatabase();\n}\nConsole.ReadLine();
3209	private void Kill_IE()\n{\n    Process[] ps = Process.GetProcessesByName("IEXPLORE");\n\n    foreach (Process p in ps)\n    {\n        try\n        {\n            if (!p.HasExited)\n            {\n                p.Kill();\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(String.Format("Unable to kill process {0}, exception: {1}", p.ToString(), ex.ToString()));\n        }\n    }\n}
3210	string format = "MM/dd/yyyy h:mm:ss tt";
3211	using (var client = new HttpClient())\n{\n    var resp = await client.PostAsJsonAsync("http://your host/Login.aspx/Login", \n                                             new { username = "", password = "" });\n\n    var str = await resp.Content.ReadAsStringAsync();\n}
3212	private void comboBox1_KeyDown(object sender, KeyEventArgs e)\n    {\n        if (e.Key == Key.Return)\n        {         \n           // do stuff\n        }\n        else\n        {\n\n            // do stuff       \n        }\n    }
3213	InContext inContext = new InContext(cnStr);\n// get first biggest item\nBatchPINDetail entity = inContext.BatchDetailsRecords\n                                 .OrderByDescending(x => x.Number)\n                                 .First();\n// get all biggest items\nBatchPINDetail entities = inContext.BatchDetailsRecords\n                                 .Where(x => x.Number == x.Max(x => x.Number))\n                                 .ToArray();\n\n// and if you just want to get biggest number. \n// but note that if you just change `num` nothing will happen.\nint num = inContext.BatchDetailsRecords.Max(x => x.Number);\n\nentity.Number += 1;\ninContext.SaveChanges();
3214	PrintDialog printDialog = new PrintDialog();\nif (printDialog.ShowDialog().GetValueOrDefault(false))\n{\n    printDialog.PrintVisual(this, this.Title); \n}
3215	//Writing to the SSH channel\nssh.Write( command );\n\n//Reading from the SSH channel\nstring response = ssh.ReadResponse();
3216	string imagepath = Server.MapPath("~/Images/");\n        string[] images =Directory.GetFiles(imagepath,"*.png",SearchOption.TopDirectoryOnly);\n\n        foreach (string filepath in images)\n        {\n\n\n            Image te = new Image();\n\n            string fileurl = Path.GetFileName(filepath.ToString());\n\n            te.ImageUrl = "~/Images/" + fileurl;\n            te.Height = 100;\n            te.Width = 200;\n            te.CssClass = "zoom";\n            //Here myimages is my div in which all images will be added.\n            myimages.Controls.Add(te);\n\n\n\n        }
3217	List<UserData> userData = new List<UserData>();\nEktron.Cms.API.User.User user = new Ektron.Cms.API.User.User();\nlong groupId = Id; //your group id\nforeach (UserData u in user.GetUsers(groupId, "username")) //group id + sort by field\n{\n    userData.Add(user.GetUser(u.Id));\n}\nreturn userData;
3218	List<ContactEvent>
3219	private static void A(Object sender, EventArgs e) {\n  Console.Out.Write('A');\n}\n\nprivate static void B(Object sender, EventArgs e) {\n  Console.Out.Write('B');\n}\n\n...\n\nEventHandler eh = null;\n\neh += A;\neh += A;\neh += B;\neh += A;\neh -= A;\n\neh(null, EventArgs.Empty);
3220	[ForeignKey("VirtualTerminalId")]\npublic VirtualTerminal VirtualTerminal { get; set; }
3221	using (var file = File.OpenWrite(localFileName))
3222	BindingList<T>
3223	public ActionResult Index(int id = 0, string name = "user") { ... }
3224	List<string> logLineElements = line.Split('|').Select(e => e.Trim()).ToList();
3225	//\n// Time-out after 1 minute after receiving last message\n//\nstream.ReadTimeOut = 60 * 1000;\n\nBinaryFormatter deserializer = new BinaryFormatter();\n\ntry\n{\n    while (!interrupted)\n    {\n        System.Diagnostics.Debug.WriteLine("Waiting for the message...");\n        AbstractMessage msg = (AbstractMessage)deserializer.Deserialize(stream);\n        System.Diagnostics.Debug.WriteLine("Message arrived: " + msg.GetType());\n\n        //\n        // Exit while-loop when receiving a "Connection ends"  message.\n        // Adapt this if condition to whatever is appropriate for\n        // your AbstractMessage type.\n        //\n        if (msg == ConnectionEndsMessage) break;\n\n        raiseEvent(msg);\n    }\n}\ncatch (IOException ex)\n{\n    ... handle timeout and other IOExceptions here...\n}
3226	private void Media_Ended(object sender, EventArgs e)\n{\n    media.Position = TimeSpan.Zero;\n    media.Play();\n}
3227	using System;\nusing System.Windows.Forms;\n\nnamespace DelayedShow\n{\n  public partial class Form1 : Form\n  {\n    private bool _canShow = false;\n    private Timer _timer;\n\n    public Form1()\n    {\n      InitializeComponent();\n      _timer = new Timer();\n      _timer.Interval = 5000;\n      _timer.Tick += new EventHandler(timer_Tick);\n      _timer.Enabled = true;\n    }\n\n    void timer_Tick(object sender, EventArgs e)\n    {\n      _canShow = true;\n      Visible = true;\n    }\n\n    protected override void SetVisibleCore(bool value)\n    {\n      if (_canShow)\n      {\n        base.SetVisibleCore(value);\n      }\n      else\n      {\n        base.SetVisibleCore(false);\n      }\n    }\n  }\n}
3228	var checkinNoteFieldValues = new[]\n{\n    new CheckinNoteFieldValue("Custom Note", "some value"),\n    new CheckinNoteFieldValue("Other Note", "other value")\n};\nvar checkinNote = new CheckinNote(checkinNoteFieldValues);\nvar pendingChanges = workspace.GetPendingChanges(); // workspace is Microsoft.TeamFoundation.VersionControl.Client.Workspace\nworkspace.CheckIn(pendingChanges, "comment", checkinNote, null, null); // checkinNote will trigger a new CheckinNoteFieldDefinition
3229	DateTime MyDateTime = ((DateTime) MyDatePicker.Value).Date.Add (((DateTime)MyTimePicker.Value).TimeOfDay);
3230	Template.Find("name of resource")
3231	{\n   "error": {\n      "message": "An access token is required to request this resource.",\n      "type": "OAuthException",\n      "code": 104\n   }\n}
3232	double dist = Math.Sqrt(Math.Pow(x2 - x1, 2) + Math.Pow(y2 - y1, 2));
3233	var firstN = dict.ToDictionary(\n                  kvp => kvp.Key,\n                  kvp => kvp.Value.Take(CONST_MAX).ToList());
3234	foreach (var ctrl in panels.SelectMany (x => x.Cast<Control> ())) {\n     // Work with the control.\n}
3235	System.Collections.Generic.Dictionary<string, string> hashTable = new System.Collections.Generic.Dictionary<string, string>();\n\nstring myString = "Type=\"Category\" Position=\"Top\" Child=\"3\"";\nstring pattern = @"([A-Za-z0-9]+)(\s*)(=)(\s*)("")([^""]*)("")";\n\nSystem.Text.RegularExpressions.MatchCollection matches = System.Text.RegularExpressions.Regex.Matches(myString, pattern);\nforeach (System.Text.RegularExpressions.Match m in matches)\n{\n    string key = m.Groups[1].Value;    // ([A-Za-z0-9]+)\n    string value = m.Groups[6].Value;    // ([^""]*)\n\n    hashTable[key] = value;\n}
3236	if(string.IsNullOrEmpty(sbcId))\n    Parameters.Add(new OleDbParameter("EMPID", DBNull.Value)); \nelse\n    Parameters.Add(new OleDbParameter("EMPID", sbcId));
3237	IEnumerable<KeyValuePair<Filter, string>> DoIt(Dictionary<Filter, string> dict, Filter f)\n    {\n        return dict.Where\n            (d => \n                (f.A == null || d.Key.A == f.A) && \n                (f.B == null || d.Key.B == f.B) && \n                (f.Start == null || f.Start < d.Key.Start) /* && Condition for End */);\n    }
3238	foreach (DataGridViewRow dgRow in dgvPatList.Rows)\n{\n    if (dgRow.Cells[0].Value == null) continue;  //Change if you wish no_results to be shown\n\n    dgRow.Cells["NPOIMG"].Value = dgRow.Cells[0].Value.ToString() == "1" \n         ? Properties.Resources.Tick_Green \n         : Properties.Resources.no_results;\n}
3239	foreach (object item in row.ItemArray)\n{\n     DateTime parsed;\n     if (DateTime.TryParse(item.ToString(), out parsed))\n     {\n          writer.Write(String.Format("{0,-10}", parsed.ToString("MM-dd-yy") + ""));\n     }\n     else \n     {\n          writer.Write(String.Format("{0,-10}", item.ToString() + ""));\n     }\n}\n\n\n\nforeach (DataColumn col in jackTDataSet.Tables[0].Columns)\n{\n     if (col.ColumnName == "Name of date Field ")\n     {\n         writer.Write(String.Format("{0,-10}", ((DateTime)row[col.ColumnName]).ToString("MM-dd-yy") + ""));\n     }\n     else \n     {\n         writer.Write(String.Format("{0,-10}", row[col.ColumnName].ToString() + ""));\n     }\n}
3240	while (panel.Controls.Count > 0)\n  {\n     panel.Controls[0].Dispose();\n  }
3241	Option1:\nIL_0000:  newobj      UserQuery+SomeObjectModel..ctor\nIL_0005:  stloc.0     // TheObjectModel\nIL_0006:  ldloc.0     // TheObjectModel\nIL_0007:  callvirt    UserQuery+SomeObjectModel.SomeMethod\nIL_000C:  ret         \n\nOption2:\nIL_0000:  newobj      UserQuery+SomeObjectModel..ctor\nIL_0005:  call        UserQuery+SomeObjectModel.SomeMethod\nIL_000A:  ret
3242	Query<T> SqlQuery<T>(string query, T sample) {\n    // Ignore the sample parameter\n}\n\nSqlQuery("...", new { Abc = 0, Def = 0 })
3243	btn.Style = Application.Current.Resources["ButtonStyle"] as Style;
3244	points = pixels * 72 / 96
3245	public void processinThreads()\n{\n    for (int i = 0; i < 20; i++)\n    {\n        int local = i;\n        Thread t = new Thread(new ThreadStart(()=>DoSomething(local, processCallback)));\n        t.Start();\n    }\n}
3246	string[] foo = nonLetters.Select(c => c.ToString()).ToArray();
3247	using(System.Transacation.TransactionScope myScope = new TransactionScope()){\n  //all of your sql connections and work in here\n\n  //call this to commit, else everything will rollback\n  myScope.Complete();\n}
3248	string folder = System.Web.HttpContext.Current != null ?\n    System.IO.Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "App_data") :\n    System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location);
3249	Fishes_FulltextSearch("abc")
3250	string format = "#.";\nwhile (list.GroupBy(x => x.ToString(format))\n           .Any(g => g.Count() > 1)\n      ) {\n    format += "#";\n}
3251	{\rtf1\ansi\ansicpg1252\deff0\deflang6153{\fonttbl{\f0\fnil\fcharset0 Calibri;}}\n{\colortbl ;\red255\green0\blue0;}\n{\*\generator Msftedit 5.41.21.2509;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang9\b\f0\fs22 Datetime\b0  - \cf1 Event Type\cf0  - Event Details\par\n}
3252	arg.Name
3253	public bool DetectBall(List<GameObject> Within)\n{\n    foreach(GameObject go in Within)\n    {\n        if(go is Ball) return true;\n    }\n\n    return false;\n}
3254	private DateTime _LastExecution = DateTime.MinValue;\n\npublic void UserControl_KeyDown(object sender, EventArgs ea) {\n    if ( ( DateTime.Now - _LastExecution ).TotalMilliSeconds > 500 ) {\n        /* do you stuff */\n        _LastExecution = DateTime.Now;\n    }\n}
3255	var container = new CompositionContainer(/* your container .ctor here */);\nvar type = typeof (IYourType); // read the type from attribute\nvar export = container.GetExports(type, null, null).FirstOrDefault();\nvar obj = export.Value as YourCostingHere;
3256	public bool GetElectricalStatus(string printName)\n    {\n        List<object> eGoodList = new List<object>();\n        var eGoodCountQuery =\n            from row in singulationOne.Table.AsEnumerable()\n            where row.Field<String>("print") == printName\n            select row.Field<String>("electrical");\n\n        foreach (var eCode in eGoodCountQuery)\n        {\n            if (!string.IsNullOrEmpty(eCode.ToString()))\n            {\n                int? eCodeInt = Convert.ToInt32(eCode);\n                if (eCodeInt != null &&\n                    (eCodeInt >= 100 && eCodeInt <= 135) || eCodeInt == 19)\n                {\n                    eGoodList.Add(eCode);\n                }\n            }\n        }\n        if (eGoodList.Count() > 0)\n        {\n            return false;\n        }\n        else\n        {\n            return true;\n        }\n    }
3257	using namespace SomeNamespace;
3258	public Form1()\n        {\n            InitializeComponent();\n            Rectangle rect = new Rectangle(0, 0, 100, 200);\n            Click += Form1_Click;\n        }\n//associate this method to Click event Form\n     private void Form1_Click(object sender, EventArgs e)\n        {\n            Rectangle rect = new Rectangle(0, 0, 200, 100);\n            Point cursorPos = this.PointToClient(Cursor.Position);\n            //you are in rectangle so message display\n            if (rect.Contains(cursorPos))\n            {                \n                MessageBox.Show("in");\n            }\n\n        }
3259	ToolStripItem[] newItems = {\n                    new ToolStripMenuItem("All", null, DoThis),\n                    new ToolStripMenuItem("Text", null, DoThis)\n                };\n\nthis.contextMenuStrip1.Items.Add(new ToolStripMenuItem("Clear", null, newItems) {Name="Clear"});\n\nvar clearItem = this.contextMenuStrip1.Items["Clear"] as ToolStripMenuItem;
3260	aDict.Clear();
3261	using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.Runtime.InteropServices;\n\n// not here\n\nnamespace WindowsFormsApplication1\n{\n\n    // not here\n\n    public partial class Form1 : Form\n    {\n\n        // put it INSIDE the class\n\n        [DllImport("user32.dll")]\n        public static extern short GetAsyncKeyState(int vKey);\n\n        public Form1()\n        {\n\n            // not inside methods, though\n\n            InitializeComponent();\n        }\n\n    }\n\n}
3262	protected void Page_Load(object sender, EventArgs e)\n{\n\n    if (!IsPostBack)\n    {\n        string frameURL = Request.UrlReferrer.ToString() ?? "NO DATA";\n\n        if ((frameURL != null) && (frameURL != "NO DATA"))\n        {\n\n            Uri frameURI = new Uri(frameURL);\n\n            NameValueCollection queryVars = HttpUtility.ParseQueryString(frameURI.Query);\n\n            //If this is in Orion, we want to change the canceller to standby if it's 97, not 96\n            if (queryVars["NetObject"] == "N:97" || queryVars["NetObject"] == "N%3a97")\n            {\n                SelectCanceller.SelectedValue = "Standby";\n                primaryStandby = false;\n            }\n        }
3263	Child Find(Parent parent, object criteria)\n    {\n        return parent.Childs.Select(        // Loop through the children looking for those that match the following criteria\n            c => c.Match(criteria)          // Does this child match the criteria?\n                ? c                         // If so, just return this child\n                : this.Find(c, criteria)    // If not, try to find it in this child's children\n        ).FirstOrDefault();                 // We're only interested in the first child that matches the criteria or null if none found\n    }
3264	// this is called from any thread\npublic void videoImage(Image image)\n{\n    // are we called from the UI thread?\n    if (this.InvokeRequired)\n    {\n        // no, so call this method again but this\n        // time use the UI thread!\n        // the heavy-lifting for switching to the ui-thread\n        // is done for you\n        this.Invoke(new MethodInvoker(delegate { videoImage(image); }));\n    }\n    // we are now for sure on the UI thread\n    // so update the image\n    this.VideoViewer.Image = image;\n}
3265	myPageViewModel.ColourList = Enum.GetNames(typeof(Colors))\n    .Select(c => new SelectListItem() { Text = c, Value = c })\n    .ToArray();
3266	public class DatabaseConnector<TConnection> where TConnection : DbConnection, new() {
3267	private void textBox1_TextChanged(object sender, EventArgs e)\n{\n    this.textBox2.TextChanged -= textBox2_TextChanged;\n    this.textBox2.Text = "";\n    this.textBox2.TextChanged += textBox2_TextChanged;\n}\n\nprivate void textBox2_TextChanged(object sender, EventArgs e)\n{\n    this.textBox1.TextChanged -= textBox1_TextChanged;\n    this.textBox1.Text = "";\n    this.textBox1.TextChanged += textBox1_TextChanged;\n}
3268	.WithMany().HasForeignKey(..)
3269	var mainWindowInstant = (MainWindow)App.Current.MainWindow;\nmainWindowInstant.Getcanvas.MouseMove += new MouseEventHandler(...);
3270	foreach (var x in attrs)\n{\n    var attributeType = x.GetType();\n    if (attributeType.FullName == "ClassLibrary1.IDAttribute") // also check for attributeType.Assembly == loaded assembly, if needed \n    {\n        var id = (int)attributeType.GetProperty("ID").GetValue(x);\n        Console.WriteLine(id);\n    }\n}
3271	public class Provider<T> where T : ICommonInterface
3272	DELETE FROM Ficheros\nWHERE IDFichero IN (27, 28, ...)\n  AND NOT EXISTS (SELECT 1\n                  FROM ChildTable\n                  WHERE ChildTable.IDFichero = Ficheros.IDFichero)
3273	string site = "page.php";\nwebBrowser1.Navigate("http://www.example.com/" + site);
3274	\s(?=\w+:)
3275	IEnumerable<RunDetail> runDetails = from run in xdocument.Descendants("run")\n                                select new RunDetail\n                                {\n                                    Name = run.Element("name").Value,\n                                    Date = int.Parse(run.Element("date").Value)\n                                };
3276	string[] readText = File.ReadAllLines(path);\n\nfor (int i=0;i<readText.length;i++)\n{\n    readText[i]=readText[i].Trim([',']);\n}\n\nFile.WriteAllLines(path, readText);
3277	using (var textReader = File.OpenText("input.txt"))\nusing (var writer = File.CreateText("output.txt"))\n{\n    do\n    {\n        string line = textReader.ReadLine();\n        writer.WriteLine(line);\n    } while (!textReader.EndOfStream);\n}
3278	public static object SlowFunction()\n{\n    if (ExcelDnaUtil.IsInFunctionWizard()) return "!!! In Function\nWizard";\n\n    // do the real work....\n}
3279	var combined = passed\n    .Concat(failed)\n    .GroupBy(x => x.DataDate)\n    .Select(x => new ReportData {\n        DataDate = x.Key,\n        quantity = x.Sum(rd => rd.quantity),\n        rejected = x.Sum(rd => rd.rejected),\n        cumulativeQuantity = x.Max(rd => rd.cumulativeQuantity), // or Sum\n        cumulativeRejected = x.Max(rd => rd.cumulativeRejected)  // or Sum\n    }).ToList();\n\n// Fill "holes" for dates not present in both lists.\nfor (var i = 1; i < combined.Count; i++)\n{\n    if (combined[i].cumulativeQuantity == 0)\n        combined[i].cumulativeQuantity = combined[i - 1].cumulativeQuantity;\n    if (combined[i].cumulativeRejected == 0)\n        combined[i].cumulativeRejected = combined[i - 1].cumulativeRejected;\n}
3280	private static void SetEncryptedCookie(string name, string value)\n{\n    var encryptName = SomeEncryptionMethod(name);\n    Response.Cookies[encryptName].Value = SomeEncryptionMethod(value);\n    //set other cookie properties here, expiry &c.\n    //Response.Cookies[encryptName].Expires = ...\n}\n\nprivate static string GetEncryptedCookie(string name)\n{\n    //you'll want some checks/exception handling around this\n    return SomeDecryptionMethod(\n               Response.Cookies[SomeDecryptionMethod(name)].Value);\n}
3281	DetachedCriteria.For<User>().AddAlias("Credentials", "Credentials").Add(Expression.Eq("Credentials.UserName", "someuser");
3282	Membership.GetUser().ProviderUserKey
3283	public Dictionary<string, Stream> GetData(string[] paths)\n{\n    Dictionary<string, Stream> data = new Dictionary<string, Stream>();\n    foreach (string path in paths)\n    {\n        data[path] = new FileStream(path, FileMode.Open);       \n    }\n\n    return data;\n}
3284	Encoding.UTF8.GetBytes()
3285	var responseArray = JSON.parse( result.d )\n//responseObject is now a literal javascript array, so you can iterate over it as you would any other array
3286	[DllImport("Cimwin32.dll")]\nstatic extern uint32 SetSpeed(in uint64 sp);\n\nprivate void button1_Click(object sender, EventArgs e)\n{\n           SetSpeed(300);\n}
3287	private void _theCanvas_Tapped(object sender, TappedRoutedEventArgs e)\n    {\n        _pointerDeviceType.Text = e.PointerDeviceType.ToString();\n        var position = e.GetPosition(_root);\n        _x.Text = position.X.ToString();\n        _y.Text = position.Y.ToString();\n    }
3288	var mybtncmd2 = new SqlCommand("SELECT StraightDist FROM StraightLineDistances WHERE FirstCity=@City1 AND SecondCity=@City2;", mybtnconn2);\nmybtncmd2.Parameters.AddWithValue("@City1", "007");\nmybtncmd2.Parameters.AddWithValue("@City2", "017");
3289	Memcached Binary Protocol
3290	btnOK.Text = "OK" + Environment.NewLine + "true";
3291	var result = rank.Cast<ListItem>().ToArray();
3292	'\u001C'
3293	return confirm("Are you sure you want to delete this user?");
3294	foreach (var attribute in node.AttributeLists.SelectMany(al => al.Attributes))\n            {\n                if (csFile.FileSemanticModel.GetTypeInfo(attribute).Type.ToDisplayString() == "Proj.Attributes.ValidationAttribute")\n                {\n                    var arg = attribute.ArgumentList.Arguments.FirstOrDefault(aa => aa.NameEquals.Name.Identifier.Text == "IsJDate");\n                    if (arg != null && arg.Expression.IsKind(SyntaxKind.TrueLiteralExpression))\n                        validationKind = ValidationKind.JDate;\n                }\n            }
3295	int[] maxIP = new int[] { 10, 255, 15, 30 };\n    int[] minIP = new int[] { 10, 100, 12, 21 };\n    char[] sep = new char[] { '.' };\n\n    var ip = "10.100.16.21";\n\n    string[] splitted = ip.Split(sep);\n\n    for (int i = 0; i < splitted.Length; i++)\n    {\n        if (int.Parse(splitted[i]) > maxIP[i])\n        {\n            Console.WriteLine("IP greather than max");\n            break;\n        }\n        else if (int.Parse(splitted[i]) < minIP[i])\n        {\n            Console.WriteLine("IP less than min");\n            break;\n        }\n    }
3296	foreach(var filePath in logpath)\n{\n    var sbRecord = new StringBuilder();\n    using(var reader = new StreamReader(filePath))\n    {\n        do\n        {\n            var line = reader.ReadLine();\n            // check start of the new record lines\n            if (Regex.Match(line, datePattern) && sbRecord.Length > 0)\n            {\n                // your method for log record\n                HandleRecord(sbRecord.ToString());\n                sbRecord.Clear();\n                sbRecord.AppendLine(line);\n            }\n            // if no lines were added or datePattern didn't hit\n            // append info about current record\n            else\n            {\n                sbRecord.AppendLine(line);\n            }\n        } while (!reader.EndOfStream)\n    }\n}
3297	var _menagerMock = new Mock<IManager>();\n        _menagerMock.Setup(x => x.GetOrAdd("stringValue",\n            It.IsAny<Func<Tuple<int>, string>>(), It.IsAny<Tuple<int>>()));
3298	string displayedText;\n        DataRowView drw = null;\n\n        foreach (var item in comboBox1.Items)\n        {\n            drw = item as DataRowView;\n            displayedText = null;\n\n            if (drw != null)\n            {\n                displayedText = drw[comboBox1.DisplayMember].ToString();\n            }\n            else if (item is string)\n            {\n                displayedText = item.ToString();\n            }\n        }
3299	var <%=DateFormat%> = "dd-mm-YYYY";
3300	XElement input = XElement.Load(filename);\nforeach(XElement feedChild in input.Elements("feed"))\n  foreach(XElement linkChild in feedChild.Elements("link"))
3301	row.HeaderCell.Value = String.Format("{0}", row.Index + 1);
3302	IsChecked="True"
3303	MyMap.Style = MapStyle.None;\nHttpMapTileDataSource dataSource = new HttpMapTileDataSource("http://vec02.maps.yandex.net/tiles?l=map&v=2.2.3&x={x}&y={y}&z={zoomlevel}");\nMapTileSource tileSource = new MapTileSource(dataSource);\ntileSource.Layer = MapTileLayer.BackgroundReplacement;\nMyMap.TileSources.Add(tileSource);
3304	var selectList = new SelectList((from s in statList.ToList() where s.Name != "Cancelled" select new { statusId = s.Id, statusName = s.Name }), "statusId", "statusName")
3305	public bool setPrinterToGrayScale(string printerName) \n{\n  short monochroom = 1;\n  dm = this.GetPrinterSettings(printerName);\n  dm.dmColor = monochroom;\n\n  Marshal.StructureToPtr(dm, yDevModeData, true);\n  pinfo.pDevMode = yDevModeData;\n  pinfo.pSecurityDescriptor = IntPtr.Zero;\n\n  Marshal.StructureToPtr(pinfo, ptrPrinterInfo, true);\n  lastError = Marshal.GetLastWin32Error();\n\n  nRet = Convert.ToInt16(SetPrinter(hPrinter, 2, ptrPrinterInfo, 0));\n  if (nRet == 0)\n  {\n    //Unable to set shared printer settings.\n\n    lastError = Marshal.GetLastWin32Error();\n    //string myErrMsg = GetErrorMessage(lastError);\n\n    throw new System.ComponentModel.Win32Exception(Marshal.GetLastWin32Error());\n\n   }\n   if (hPrinter != IntPtr.Zero)\n      ClosePrinter(hPrinter);\n    return Convert.ToBoolean(nRet);\n}
3306	var qOver = _HibSession.QueryOver<MyModel>(() => baseModel)\n    .JoinAlias(() => baseModel.Submodels, () => subModels)\n    .Where(Restrictions.In(subModels.ID,IDsSubModels))\n    .List<MyModel>();
3307	using System.Management.Automation;\npublic class Whatever {\n   public string One { get { return "This is one"; } }\n   public string Two { get { return "This is two"; } }\n   public string Three { get { return "This is three"; } }\n   public string Four { get { return "This is four"; } }\n\n   public static PSObject Get() {\n\n      var w = new Whatever();\n      var pso = new PSObject(w);\n      var display = new PSPropertySet("DefaultDisplayPropertySet",new []{"One","Two"});\n      var mi = new PSMemberSet("PSStandardMembers", new[]{display});\n      pso.Members.Add(mi);\n\n      return pso;\n   }\n}
3308	Plugins.RemoveAll(x => x is PredefinedRoutesFeature);
3309	INSERT INTO Task (Employee_ID, Project_Id, Assigned_Project_Name)\nSELECT e.Employee_Id , p.Project_Id, 'NewTask'\nFROM Employees e INNER JOIN Projects p \nWHERE e.last_name='XYZ' AND e.first_name='ABC' \nAND p.Project_Name='SomeProject';
3310	foreach(int blah in multilistbox.SelectedIndices){\n\n  MessageBox.Show(blah.ToString());\n\n  }
3311	var timeLine = new Timeline();\ntimeLine.MethodTwo();
3312	Image img = Image.FromFile(yourImage);\nBitmap bmp = new Bitmap(img.Width, img.Height);\n\nusing (Graphics G = Graphics.FromImage(bmp) )\nusing (Pen pen = new Pen(Color.DarkBlue, 2f) )\n{\n    G.Clear(Color.Black);\n    for (int x = 6; x  < img.Width; x += 43)\n        G.DrawLine(pen, x, 0, x, img.Height);\n    for (int y = 10; y  < img.Height; y += 43)\n        G.DrawLine(pen, 0, y, img.Width, y);\n}\nbmp.Save(yourGrid);\nbmp.Dispose();\nimg.Dispose();
3313	ContactsModule module = (ContactsModule)outlookObj.ActiveExplorer().NavigationPane.Modules.GetNavigationModule(OlNavigationModuleType.olModuleContacts);\nforeach (NavigationGroup navigationGroup in module.NavigationGroups) {\n     foreach (NavigationFolder navigationFolder in navigationGroup.NavigationFolders) {\n          foreach (var item in navigationFolder.Folder.Items) {\n                     // Found Folders are: Contacts, Suggested Contacts and Shared Contact Folders\n\n\n                     // Import/Read ContactItems\n                     ...\n                }
3314	class A\n{\n   void MethodOne()\n   {\n      //Here you perform your obligatory logic.\n\n      //Then, call the overridable logic.\n      MethodOneCore();\n   }\n\n   virtual void MethodOneCore()\n   {\n      //Here you perform overridable logic.\n   }\n}\n\nclass B: A\n{\n   override void MethodOneCore()\n   {\n      //Here you override the "core" logic, while keeping the obligatory logic intact.\n   }\n}
3315	DataView view = new DataView(ds.Tables[0]);\nDataTable distinctInvoiceNumbers = view.ToTable(true, "invoiceno");\n//clear datagrid rows here\n DataTable dt=new Datatable();\n dt = ds.Tables[0].Clone();\n int index=0;// zero if first is clicked, increase index for each next button click\n foreach(datarow dr in ds.Tables[0].Rows)\n  {\n   if(distinctInvoiceNumbers.Rows[0][index].ToString()==dr[0].ToString())\n    {\n      dt.ImportRow(dr);//add matching rows to datatable\n    }\n  }\n  datagridview1.DataSource=dt;
3316	...\n this.trcResults.DataBinding += this.trcResults_DataBinding;\n this.trcResults.BeforeLayout += this.trcResults_BeforeLayout;\n this.trcResults.DataSource = pcl;\n this.trcResults.DataBind();\n}\n\nvoid trcResults_DataBinding(object sender, EventArgs e)\n{\n var senderChart = (RadChart)sender;\n var pcl = senderChart.DataSource as IEnumerable<PollContainer>;\n\n foreach (var pollContainer in pcl)\n {\n  // prepend a sentinel symbol\n  pollContainer.AnswerText = "x" + pollContainer.AnswerText;\n }\n}\n\n\nvoid trcResults_BeforeLayout(object sender, EventArgs e)\n{\n foreach (var axisItem in this.trcResults.PlotArea.XAxis.Items)\n {\n  // remove the sentinel symbol\n  axisItem.TextBlock.Text = axisItem.TextBlock.Text.Remove(0, 1);\n }\n}
3317	string path = Directory.GetCurrentDirectory();\nstring desktopPath = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);\nif (!path.Equals(desktopPath))\n{\n    Console.WriteLine("file is not at desktop");\n}
3318	Process.WaitForExit()
3319	using (LatestServiceSoapClient proxy = new LatestServiceSoapClient("LatestServiceSoap"))\n{\n    label1.Text = proxy.Welcome();\n}
3320	UPDATE\n    Table\nSET\n    Table.col1 = other_table.col1,\n    Table.col2 = other_table.col2\nFROM\n    Table\nINNER JOIN\n    other_table\nON\n    Table.id = other_table.id
3321	public ActionResult Index()\n{\n    var memoryStream = new MemoryStream();\n\n    using (var zip = new ZipFile())\n    {\n        zip.AddFile("ReadMe.txt");\n        zip.AddFile("7440-N49th.png");\n        zip.AddFile("2008_Annual_Report.pdf"); \n        zip.Save(memoryStream);\n    }\n\n    memoryStream.Seek(0, 0);\n    return File(memoryStream, "application/octet-stream", "archive.zip");\n}
3322	using Windows.Media.Capture;\n\nvar ui = new CameraCaptureUI();\nui.PhotoSettings.CroppedAspectRatio = new Size(4, 3);\nvar file = await ui.CaptureFileAsync(CameraCaptureUIMode.Photo);\n\nif (file != null) \n{\n   var bitmap = new BitmapImage();\n   bitmap.SetSource(await file.OpenAsync(FileAccessMode.Read));\n   Photo.Source = bitmap;\n}
3323	chkBx.InputAttributes.Add("itemname", strtemPath);
3324	Select("name = '" + tbxName.Text + "' AND account = '" +tbx.Account +"'")
3325	var readerSettings = new XmlReaderSettings\n{\n    IgnoreWhitespace = true,\n};\n\nusing (XmlReader reader = XmlReader.Create(new FileStream(archivePath, FileMode.Open), readerSettings))\n{\n    //...\n}
3326	**BackgroundWorker_DoWork event**\nint nTrials = 0; // this method will help you pick any number of trials before launching the applicaion\nbool isRunning = false;\nwhile((isRunning = Process.GetProcessesByName("notepad") == 0)  || nTrials < 2)\n{\n    Thread.Sleep(1000); // w8 1 second before queriying the process name\n    nTrials++;\n} \n\nif ( isRunning ) RunProcess();
3327	...\n\nStream ReceiveStream = myWebResponse.GetResponseStream();\n\n    Encoding encode = System.Text.Encoding.GetEncoding("utf-8");\n\n        // Pipe the stream to a higher level stream reader with the required encoding format. \n     StreamReader readStream = new StreamReader( ReceiveStream, encode );\n     Console.WriteLine("\nResponse stream received");\n     Char[] read = new Char[256];\n\n        // Read 256 charcters at a time.    \n     int count = readStream.Read( read, 0, 256 );\n        Console.WriteLine("HTML...\r\n");\n\n    while (count > 0) \n    {\n            // Dump the 256 characters on a string and display the string onto the console.\n        String str = new String(read, 0, count);\n        Console.Write(str);\n        count = readStream.Read(read, 0, 256);\n    }\n\n...
3328	public void UpdateCell (string subtitle2)\n{\n    //Makes a new NSUrl\n    var callURL = new NSUrl("tel:" + subtitle2);\n\n    call.SetTitle(subtitle2, UIControlState.Normal);\n    call.TouchUpInside += (object sender, EventArgs e) => {\n    if (UIApplication.SharedApplication.CanOpenUrl (callURL)) {\n    //After checking if phone can open NSUrl, it either opens the URL or outputs to the console.\n\n        UIApplication.SharedApplication.OpenUrl(callURL);\n    } else {\n    //OUTPUT to console\n\n    Console.WriteLine("Can't make call");\n    }\n  };          \n}
3329	bool found = host.Hostname.ToLower().Contains(searchBox.Text.ToLower());             \nif (!found)\n{\n  found = host.IP.ToString().Contains(searchBox.Text.ToLower());\n  if (!found)\n  {\n    found = host.Username.ToString().Contains(searchBox.Text.ToLower()); \n  }\n}
3330	class InputManager<T>\n{\n   SortedDictionary<T,Keys> inputList = new SortedDictionary<T,Keys>();  \n\n   public void add(T id, Keys key) {...}  \n   public bool isPressed(T id) {...}    \n}
3331	( BasicEnum )Enum.ToObject( typeof( BasicEnum ), someEnum )
3332	ca.Property(x => x.Code, map =>\n{\n    map.Type(NHibernateUtil.AnsiString);\n    map.Column(/*etc.*/); \n});
3333	var people = entities.People.Where("it.Name LIKE @searchTerm", new ObjectParameter("searchTerm", searchTerm));
3334	Frame1.Navigate(new Page1());
3335	List<FILE_REPORT_TYPES> mySelectedList = new List<FILE_REPORT_TYPES>();\nforeach (Object selectedItem in ListBox.SelectedItems)\n{\n    mySelectedList.Add( ((FILE_REPORT_TYPES)selectedItem) );\n}
3336	DateTime date3 = date1.Date + date2.TimeOfDay;
3337	D.Keys.Sum();
3338	POST /Policy/SomeNamespace.GetSubsetByPolicyNumber\n{ "PolicyNumbers": [ 123, 456, ... ] }
3339	foreach (ListItem  item in cbFilter.Items   )\n            {\n                if (item.Selected)\n                {\n                    Response.Write(item.Attributes.CssStyle["background-color"].ToString());\n                }\n            }
3340	internal static class Program\n{\n    /// <summary>\n    /// The main entry point for the application.\n    /// </summary>\n    [STAThread]            // <= I needed to add this attribute\n    private static void Main()\n    {\n       //...\n    }\n}\n\n\n\n\npublic partial class MainForm : Form () \n{    \n    // you can call this in the InitializeComponents() for instance\n    void someMethodInYourFormIERunningOnTheUIThread()\n    {\n        ScanLib scanLib  = null;\n        var th = new Thread(() =>\n        {\n            scanLib = new ScanLib();\n        });\n        th.SetApartmentState(ApartmentState.MTA); // <== this prevented binding the UI thread for some operations\n        th.Start();\n        th.Join();\n        this.scanLibraryReference = scanLib;\n    }\n    //...\n}
3341	public static bool IsValid(this string XML)\n{\n    try\n    {\n        XElement temp = XElement.Parse(XML);\n    }\n    catch (FormatException)\n    {\n        return false;\n    }\n    catch (XmlException)\n    {\n        return false;\n    }\n    return true;\n}
3342	private void searchbtn_Click(object sender, EventArgs e)\n{\n     SqlCeConnection con = new SqlCeConnection(@"Data Source=C:\Users\hry\Documents\Visual Studio 2010\Projects\Kargozini\Kargozini\khadamat.sdf");\n\n     try\n     {\n         con.Open();\n         string SearchQuerry = "SELECT ID, radif, Name, Type, Description, Price FROM Users WHERE ID = '"+searchtxt.Text+"'" ;\n         SqlCeCommand com = new SqlCeCommand(SearchQuerry,con);\n\n         SqlCeDataReader sqlReader = com.ExecuteReader();\n\n         while (sqlReader.Read())\n        {\n            txtID.text = sqlReader.GetValue(0).ToString();\n            txtRadif.text = sqlReader.GetValue(1).ToString();\n            txtName.text = sqlReader.GetValue(2).ToString();\n        }\n\n        sqlReader.Close();\n        com.Dispose();\n        con.Close();\n     }\n     catch (SqlCeException ex)\n     {\n         MessageBox.Show(ex.Message);\n     }\n}
3343	System.Guid.NewGuid().ToString();
3344	using (var stream = new FileStream(xmlFilePath))\n{\n     var serializer = new XmlSerializer(typeof(body));\n     var body = (body) serializer.Deserialize(stream);\n }
3345	int[] vectorOfIntegers = new int[5];\nvectorOfIntegers[0] = 123;\nvectorOfIntegers[1] = 456;\n.\n:\nint[] outputArray = cls.MyFunctionInClass(vectorOfIntegers);
3346	string givenDate = ("2013-03-05T08:28:18+0000");\nDateTime d = DateTime.Parse(givenDate, System.Globalization.CultureInfo.InvariantCulture);\nstring ouputDate = d.ToUniversalTime().ToString("MMM d, yyyy h:m:s tt",  System.Globalization.CultureInfo.InvariantCulture);
3347	Colors currentValidColors = 0;\ncolorStr.Split(new char[] { ',' })\n.Select(p => EnumHelper.GetEnumFromString<Colors>(p))\n.ToList()\n.ForEach(c => currentValidColors |= c);
3348	string[] file = Directory.GetFiles(myWebsite.physicalPath, "*config");\nif (file != null)\n{\n    XmlDocument doc = new XmlDocument();\n    doc.Load(file[1]);\n    XmlNodeList configurationStrings = doc.SelectNodes("/configuration/connectionStrings/add");\n    configurationStrings[0].Attributes["connectionString"].Value = ".\\SQLEXPRESS;Database=_usr;Integrated Security=true";\n    configurationStrings[1].Attributes["connectionString"].Value = ".\\SQLEXPRESS;Database=_main;Integrated Security=true";\n    configurationStrings[2].Attributes["connectionString"].Value = ".\\SQLEXPRESS;Database=_activity;Integrated Security=true";\n    doc.Save(file[1]);\n}
3349	new Regex("web/[0-9]+/").Replace(youxmlstr, "web2/1/");
3350	MyReportViewer.ServerReport.SetParameters(\n    new ReportParameter("storeSelected", new string[] { "2", "3", "4" }, false)\n);
3351	string jsonString = "{\"status\" : \"true\"}";\ndynamic dyn = JsonConvert.DeserializeObject<dynamic>(jsonString);\nConsole.WriteLine(dyn.status); //prints true
3352	DateTime dateValue = DateTime.Parse("7/28/2011 09:00:03 AM");\nstring formattedString;\nif (dateValue.Minute == 0)\n    formattedString = dateValue.ToString(@"M/d/yyyy Htt");\nelse\n    formattedString = dateValue.ToString(@"M/d/yyyy H:mmtt");
3353	dontAskOptions.SetValue(\n    "IDS_WARN_GENERAL_WINXP_EOL", \n    unchecked((int) 0xffffffff), \n    RegistryValueKind.DWord);
3354	static void Main(string[] args)\n{\n    Console.Write("Your editable text:");\n    SendKeys.SendWait("hello"); //hello text will be editable :)\n    Console.ReadLine();\n}
3355	MsoTriState.msoTrue
3356	times.GroupBy(y => (int)(y.Ticks / TimeSpan.TicksPerMinute / 5))
3357	DateTime ServerDate = Entities.CreateQuery<DateTime>("CurrentDateTime()").AsEnumerable().First();
3358	static async void Main(string[] args)\n{\n    var url = System.Configuration.ConfigurationManager.AppSettings["CentrisURL"];\n\n    if (url == null)\n    {\n        Console.WriteLine("Failed to load API url");\n    }\n\n    var client = new HttpClient();\n    client.BaseAddress = new Uri(url);\n    client.DefaultRequestHeaders.Accept.Clear();\n    client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/xml"));\n\n    await Task.WhenAll(\n        new Task[] {\n            DbRequestHandler.ReadRooms(client),\n            DbRequestHandler.ReadRoomsType(client),\n            DbRequestHandler.ReadCourses(client),\n            DbRequestHandler.ReadTeachers(client),\n        }\n    );\n}
3359	private void button1_Click(object sender, EventArgs e)\n    {\n        ArrayList UserList = new ArrayList();\n        var SkypeClient = new SKYPE4COMLib.Skype();\n        foreach(SKYPE4COMLib.Group Group in SkypeClient.CustomGroups)\n        {\n                if (Group.DisplayName == "<specify the usergroup name here>")\n                {\n                    foreach (SKYPE4COMLib.User User in Group.Users)\n                    {\n                        //Adds the usernames from the specified group in the list.\n                        UserList.Add(User.Handle);\n                    }\n                }\n        }\n\n        //Writing the list in a label\n        string s = "";\n        foreach(string str in UserList)\n        {\n            s = s + str + Environment.NewLine;\n        }\n        label1.Text = s;\n    }
3360	public interface ITypeA<out T> {}\n\npublic class TypeA<T> : ITypeA<T> {}\n\npublic class TypeB<T> {}\n\npublic class TypeC : TypeB<int> {}\n\nclass Program\n{\n    public static void MyMethod<OutputType>(ITypeA<TypeB<OutputType>> Parameter) {}\n\n    static void Main(string[] args)\n    {\n        ITypeA<TypeC> Test = new TypeA<TypeC>();\n        MyMethod<int>(Test);\n    }\n}
3361	Pane.CurveList[ Pane.CurveList.Count - 1  ].Clear();\nzgc.Refresh();
3362	string result = "(" + string.Join(",", textBox.Text.Split(new[] { "\r\n", "\n" }, StringSplitOptions.RemoveEmptyEntries).Select(s => "'" + s + "'")) + ")";
3363	cmd.ExecuteNonQuery();
3364	class FastestRegex\n{\n    public static readonly Regex RE = new Regex("", RegexOptions.Compiled);\n}
3365	foreach (var item in deleteUserActivities)\n{\n     m_WeightScaleEntities.DeleteObject(item);\n}\nAnd then SaveChanges() on the object context.
3366	myWebClient.Headers.Add("Content-Type", "audio/x-flac; rate=16000");
3367	jpegtran -crop WxH+X+Y input_file output_file
3368	using System.DirectoryServices.AccountManagement;\n\npublic static string[] GetGroups(string username)\n{\n    string[] output = null;\n\n    using (var ctx = new PrincipalContext(ContextType.Domain))\n    using (var user = UserPrincipal.FindByIdentity(ctx, username))\n    {\n        if (user != null)\n        {\n            output = user.GetGroups() //this returns a collection of principal objects\n                .Select(x => x.SamAccountName) // select the name.  you may change this to choose the display name or whatever you want\n                .ToArray(); // convert to string array\n        }\n    }\n\n    return output;\n}
3369	class MyClass : IValidatableObject\n{\n   public string EId {get;set;}\n   public string PId {get;set;}\n\n   public IEnumerable<ValidationResult> Validate(ValidationContext vC)\n   {\n      if (string.IsNullOrEmpty(EId) && string.IsNullOrEmpty(PId))\n         yield return new ValidationResult("one of EId or PId must be set!", new []{ "EId", "PId" });\n   }\n\n}
3370	private void boldText_Click(object sender, EventArgs e)\n{\n    textArea.SelectedText = string.Format("<b>{0}</b>", textArea.SelectedText); \n    textArea.SelectionLength = 0;\n}
3371	List<Button> listOfButtons = new List<Button>();\nlistOfButtons.Add(yourButton);
3372	if(userInput % 10 == 0)\n{\n    //valid\n}
3373	if (e.KeyCode == neededLetter as Keys)\n{\n    if ( neededLetter == "n" )\n    {\n        neededLetter = "o";\n    } else if ( neededLetter == "o" ) {\n        neededLetter = "t";\n    } else if ( neededLetter == "t" ) {\n        neededLetter = "e";\n    } else if ( neededLetter == "e" ) {\n        // you now have the full sequence typed, show your app\n    }\n} else { // not sure if this is valid, but it's the idea\n    neededLetter = "n"; // reset the sequence if another letter is typed\n}
3374	// let's assume that you have a simple class:\npublic class PassedData\n{\n   public string Name { get; set; }\n   public int Value { get; set; }\n}\n\n// then you navigate like this:\nFrame.Navigate(typeof(Page1), new PassedData { Name = "my name", Value = 10 });\n\n// and in target Page you retrive the information:\nprotected override void OnNavigatedTo(NavigationEventArgs e)\n{\n    PassedData data = e.Parameter as PassedData;\n}
3375	join t7 in db.Notes.DefaultIfEmpty() on t2.Lead_ID equals t7.Item_ID into notes\nwhere t7.Item_ID == 5
3376	ChartThree.SeriesCollection[3].Type = SeriesType.AreaLine;
3377	(p2.X - p1.X) * (p2.Y - p1.Y)
3378	public Control GetWebBrowserControl()\n{\n    foreach (Control ctl in TabControl1.SelectedTab.Controls) {\n        if (ctl is WebBrowser) {\n            return ctl;\n        }\n    }\n    return null;\n}
3379	PerformanceCounter counter = new PerformanceCounter("Process", "% Processor Time", "ACService", true);
3380	[Dependency]
3381	public delegate int PassH264Stream(byte[] buffer, int len);\npublic PASSH264Stream TestDelegate = {};\n\nTestDelegate += (buffer, len) => Application.Current.Dispatcher.BeginInvoke(new Action(()\n  => ReceiveInUiThread(buffer, len)), DispatcherPriority.Render);
3382	Queue<WorkItem>
3383	public int getSumOfTimes()\n{\n     int sum;\n\n     if (subordinates.Count() == 0)\n     {\n       sum =  getIdealTime();\n     }\n     else\n     {\n       foreach (var prodel in subordinates)\n       {\n         sum += prodel.getSumOfTimes();\n       }\n     }\n     return sum;\n}
3384	int threshold = 5;\n\nforeach (ListViewItem item in listView1.Items)\n{\n    if (item.SubItems.Count > threshold)\n    {\n        if (item.SubItems[5].Text.Contains("Yes"))\n        {\n            // Do your work here\n        }\n    }\n}
3385	if (openFileDialog1.ShowDialog() == DialogResult.OK) \n{ \n    File.Copy(openFileDialog1.FileName, Path.Combine(Path.GetTempPath(), Path.GetFileName(openFileDialog1.FileName)), true); \n}
3386	string remoteImgPath = "https://mysource.com/2012-08-01/Images/front/y/123456789.jpg?api_key=RgTYUSXe7783u45sRR";\nUri remoteImgPathUri = new Uri(remoteImgPath);\nstring remoteImgPathWithoutQuery = remoteImgPathUri.GetLeftPart(UriPartial.Path);\nstring fileName = Path.GetFileName(remoteImgPathWithoutQuery);\nstring localPath = AppDomain.CurrentDomain.BaseDirectory + "LocalFolder\\Images\\Originals\\" + fileName;\nWebClient webClient = new WebClient();\nwebClient.DownloadFile(remoteImgPath, localPath);\nreturn localPath;
3387	DateTime.Parse(myDate).ToString("yyyy-MM-dd");
3388	string byteArrayEncoded = System.Convert.ToBase64String(plainTextBytes, 0, plainTextBytes.Length);\nstring byteArrayUrlEncoded = System.Web.HttpUtility.UrlEncode(byteArrayEncoded);\nbyte[] byteArray = Encoding.UTF8.GetBytes("xmlpost=" + byteArrayUrlEncoded + "&test=1");
3389	//Sample:\n//Assuming you are creating your labels from \n//List<string>\n\n\n\n List<string> labels=new List<string>();\n    labels.Add("If");\n    labels.Add("variable");\n    labels.Add("=");\n    labels.Add("5");\n    for (int i = 0; i < labels.Count; i++)\n    {\n        Label lbl = new Label();\n        lbl.Text = labels[i];\n        flowLayoutPanel1.Controls.Add(lbl);\n    }
3390	var repStr = txtBox.Text;\n\nforeach (var kvp in d)\n{\n    repStr = repStr.Replace(kvp.Key, kvp.Value);\n}\n\ntxtBox2.Text = repStr;
3391	public double[,] Transpose(double[,] matrix)\n{\n    int w = matrix.GetLength(0);\n    int h = matrix.GetLength(1);\n\n    double[,] result = new double[h, w];\n\n    for (int i = 0; i < w; i++)\n    {\n        for (int j = 0; j < h; j++)\n        {\n            result[j, i] = matrix[i, j];\n        }\n    }\n\n    return result;\n}
3392	bool ignoreEvent = false;\nobject lastSelectedItem = null;\n\nvoid comboBox1_SelectedIndexChanged(object sender, EventArgs e) {\n    if (ignoreEvent) return;\n\n    if (CheckForChanges()) {\n        if (MessageBox.Show("Do you want to save changes?", "Save changes", MessageBoxButtons.YesNo) == DialogResult.Yes) {\n            ignoreEvent = true;\n            comboBox1.SelectedItem = lastSelectedItem;\n            ignoreEvent = false;\n        }\n        else {\n            // call CancelEdit() here\n        }          \n    }\n\n    lastSelectedItem = comboBox1.SelectedItem;\n}
3393	public static string GetSelectedItems(this ListBox lbox)\n    {\n        List<string> selectedValues = new List<string>();\n\n        int[] selectedIndeces = lbox.GetSelectedIndices();\n\n        foreach (int i in selectedIndeces)\n            selectedValues.Add(lbox.Items[i].Value);\n\n        return String.Join(",",selectedValues.ToArray());\n    }\n\n    public static void SetSelectedItems(this ListBox lbox, string[] values)\n    {\n        foreach (string value in values)\n        {\n            lbox.Items[lbox.Items.IndexOf(lbox.Items.FindByValue(value))].Selected = true;\n        }\n    }\n\n    public static void AddListItems(this ListBox lbox, string[] values)\n    {\n        foreach (string value in values)\n        {\n            ListItem item = new ListItem(value);\n            lbox.Items.Add(item);\n        }\n    }
3394	Microsoft.Phone.Shell.PhoneApplicationService.Current.ContractActivated +=  Application_ContractActivated;\n\nprivate void Application_ContractActivated(object sender, IActivatedEventArgs e)\n{\n        var filePickerContinuationArgs = e as FileOpenPickerContinuationEventArgs;\n        if (filePickerContinuationArgs != null)\n        {\n        // Handle file here\n        }\n}
3395	using System.Collections;\nusing System.Collections.Generic;\nusing System.ComponentModel.DataAnnotations;\n\npublic class DataAnnotationsValidator\n{\n    public bool TryValidate(object @object, out ICollection<ValidationResult> results)\n    {\n        var context = new ValidationContext(@object, serviceProvider: null, items: null);\n        results = new List<ValidationResult>();\n\n        return Validator.TryValidateObject(\n            @object,\n            context,\n            results,\n            validateAllProperties: true\n        );\n    }\n}
3396	TilesControl.Items.Refresh();
3397	we.Message
3398	public object Convert(object value)\n{ \n   int c;\n   if(value is IBookRepository)\n   {\n      c = (int)((IBookRepository)value).CountAllBooks();\n   }\n   return c;\n}
3399	Date = grp.Where(g => g.CRTI == grp.Max(s => s.CRTI) && g.STATUS == 9).Max(s => s.CRTI)
3400	a2 = a1.Clone() as double[];
3401	OleDbCommand cmd = new OleDbCommand ( "INSERT INTO dirs-arcs (nombre, formato, tamano, path, tags) VALUES (@name, @format, @tamano, @path, @tags)", connection);\n\ncmd.Parameters.Add( "@name", OleDbType.VarChar ).Value = name;\n// add all parameters
3402	for (int k = 0; k < 4; k++)\n        {\n            for (int l = 0; l < 4; l++)\n            {\n                newdata[k][l] = data[k/2][l/2];\n            }\n        }
3403	string filePath = "c:\program files\xyz\cl.exe";\nSystem.Diagnostics.Process.Start(filePath);
3404	public Form1()\n{\n    InitializeComponent();\n\n    private TextBox[] TextBoxes = {textBox1, textBox2, textBox3, textBox4, textBox5, textBox6};\n\n    private List<string> storeItems = new List<string>();\n}\n\nprivate void button1_Click(object sender, EventArgs e)\n{\n    var buffer = new StringBuilder();\n    foreach(var textBox in textBoxes)\n    {\n        if (string.IsNullOrEmpty(textBox.Text))\n        {\n            textBox.BackColor = Color.FromName("LightSalmon");\n            MessageBox.Show("This item cannot be left blank");\n            textBox.Focus();\n            return;\n        }\n        textBox.BackColor = Colors.FromName("Window");\n        buffer.Append(textBox.Text);\n    }\n\n    var result = buffer.ToString();\n    storeItems.Add(result);\n    System.IO.File.AppendAllText(@"C:\Users\v\Desktop\text.txt", Environment.NewLine + result);\n}
3405	c.BindByName = true;
3406	var validationContext = new ValidationContext(movie, null, null);\nvar results = new List<ValidationResult>();\n\n\nif (Validator.TryValidateObject(movie, validationContext, results, true))\n{\n    db.Movies.Add(movie);\n    db.SaveChanges();\n    //Instead of a Redirect here, you need to do something WinForms to display the main form or something like a Dialog Close.\n    //return RedirectToAction("Index");\n} else {\n   //Display validation errors\n   //These are available in your results.       \n}
3407	LedProject project = db.LedProject\n    .Include("ResponsibleUser")\n    .Where(p => p.ProjectId == projectId)\n    .FirstOrDefault();
3408	private void GetWebpage(string url)\n{\n    WebBrowser browser = new WebBrowser();\n    browser.Navigate(url);\n    browser.DocumentCompleted += new WebBrowserDocumentCompletedEventHandler(browser_DocumentCompleted);\n\n}\n\nvoid browser_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e)\n{\n    var browser = (WebBrowser)sender;\n    var client = new WebClient();\n    foreach (var img in browser.Document.Images)\n    {\n        var image = img as HtmlElement;\n        var src = image.GetAttribute("src").TrimEnd('/');\n        if (!Uri.IsWellFormedUriString(src, UriKind.Absolute))\n        {\n            src = string.Concat(browser.Document.Url.AbsoluteUri, "/", src);\n        }\n\n        //Append any path to filename as needed\n        var filename = new string(src.Skip(src.LastIndexOf('/')+1).ToArray());\n        File.WriteAllBytes(filename, client.DownloadData(src));\n    }\n}
3409	string variable = txt.Text;\n        string[] strArr = variable.Split(new char[] { ',' }, StringSplitOptions.RemoveEmptyEntries);\n        if (strArr.Length < 2)\n        {\n\n        }
3410	// Create a new Order object.\nOrder ord = new Order\n{\n    OrderID = 12000,\n    ShipCity = "Seattle",\n    OrderDate = DateTime.Now\n    // ???\n};\n\n// Add the new object to the Orders collection.\ndb.Orders.InsertOnSubmit(ord);\n\n// Submit the change to the database.\ntry\n{\n    db.SubmitChanges();\n}\ncatch (Exception e)\n{\n    Console.WriteLine(e);\n    // Make some adjustments.\n    // ...\n    // Try again.\n    db.SubmitChanges();\n}
3411	public override async Task TokenEndpoint(OAuthTokenEndpointContext context)\n{\n    context.AdditionalResponseParameters.Add("username", "user@mail.com");\n\n    return Task.FromResult<object>(null);\n}
3412	using System.Windows.Forms.DataVisualization.Charting;\nusing System.IO;\n...\n    public void GeneratePlot(IList<DataPoint> series, Stream outputStream) {\n      using (var ch = new Chart()) {\n        ch.ChartAreas.Add(new ChartArea());\n        var s = new Series();\n        foreach (var pnt in series) s.Points.Add(pnt);\n        ch.Series.Add(s);\n        ch.SaveImage(outputStream, ChartImageFormat.Jpeg);\n      }\n    }
3413	System.Threading.Timer
3414	internal interface ICommand\n{\n    // some methods...\n}\n\npublic interface IProject\n{\n    // some other methods...\n}\n\ninternal interface IProjectWithCommands : IProject\n{\n    ICommand Command { get; set; }\n}
3415	int Sec = 1000;  // 1 sec 1000ms\n    int i = 0 ;\n    do{\n       //do application events\n      Application.DoEvents();\n       //sleep for 1 mili second \n      System.Threading.Thread.Sleep(1);\n      i++;  //increase i by 1 milisecond\n\n    }while((Sec*5) > i );
3416	XPath="/newsSection/news[position()>last()-5]
3417	DataRowView rowView = listBox.SelectedItem as DataRowView;\n\nif (null == rowView)\n{\n    return;\n}\n\ndt.Rows.Remove(rowView.Row);
3418	public static IEnumerable<string> GetScriptSection(string file, string section)\n{\n    var startMatch = string.Format("[{0}]", section);\n    var endMatch = string.Format("[/{0}]", section);\n    var lines = file.Split(Environment.NewLine.ToCharArray(), StringSplitOptions.RemoveEmptyEntries).Select(s => s.Trim()).ToList();\n\n    int startIndex = lines.FindIndex(f => f == startMatch) + 1;\n    int endIndex = lines.FindLastIndex(f => f == endMatch);\n\n    if(endIndex == -1)\n    {\n        endIndex = lines.FindIndex(startIndex,  f => f.StartsWith("[") && lines.IndexOf(f) > startIndex);\n        endIndex = endIndex == -1 ? lines.Count : endIndex;\n    }\n\n    return lines.GetRange(startIndex, endIndex - startIndex).Where(l => !string.IsNullOrWhiteSpace(l)).ToList();\n}
3419	int number = int.Parse(textBox1.Text);\nfor (int row = 0; row < number; row++)\n{\n    for (int x = number - row; x > 0; x--)\n    {\n        textBox2.Text = textBox2.Text + "X";\n    }\n    textBox2.Text = textBox2.Text + Environment.NewLine;\n}
3420	Array.Resize
3421	foreach(object control in InformationsGroupControl.Controls)\n{\n    BaseEdit editableControl = control as BaseEdit;\n    if(editableControl != null)\n        editableControl.Properties.ReadOnly = false;\n}
3422	employees\n.Where(emp => emp.Designation.Equals("Executive"))\n.Select(item => item.EmpNo).ToList()
3423	class MyForm : Form\n{\n    MyType data1;\n    MyType data2;\n\n\n    private void button1_click(object sender, EventArgs e)\n    {\n         //generate data1, data2, data3, data4.. <-- here you just set the state of the Form\n    }\n\n\n\n    private void button2_click(object sender, EventArgs e)\n    {\n        //do processing using data1, data2, data3, data4.. <-- here you use the state set by button 1\n    }\n}
3424	XmlAttribute value = xmlDoc.CreateAttribute("value");\nchildNode1.attributes.appendChild(value);
3425	[ImportingConstructor]
3426	string innerString = "Clicking Log Out will clear our cookies and log you out of Stack Overflow on all devices";\nif (innerString.Length > 37)\n{\n    int startvalue = 38;\n    while (startvalue < innerString.Length)\n    {\n        if (innerString[startvalue] == ' ')\n        {\n            innerString = innerString.Insert(startvalue, System.Environment.NewLine).TrimEnd();\n            startvalue = startvalue + 38;\n        }\n        else\n        {\n            int i = innerString.LastIndexOf(" ", startvalue);\n            startvalue = i++;\n            innerString = innerString.Insert(startvalue, System.Environment.NewLine).TrimEnd();\n            startvalue = startvalue + 38;\n        }\n    }\n}
3427	public static string BuildSqlNativeConnStr(string server, string database)\n{\n  return string.Format("Data Source={0};Initial Catalog={1};Integrated Security=True;", server, database);\n}\nprivate void simpleButton1_Click(object sender, EventArgs e)\n{\n  const string query = "Insert Into Employees (RepNumber, HireDate) Values (@RepNumber, @HireDate)";\n  string connStr = BuildSqlNativeConnStr("apex2006sql", "Leather");\n\n  try\n  {\n    using (SqlConnection conn = new SqlConnection(connStr))\n    {\n      conn.Open();\n      using (SqlCommand cmd = new SqlCommand(query, conn))\n      {\n        cmd.Parameters.Add(new SqlParameter("@RepNumber", 50));\n        cmd.Parameters.Add(new SqlParameter("@HireDate", DateTime.Today));\n        cmd.ExecuteNonQuery();\n      }\n    }\n  }\n  catch (SqlException)\n  {\n    System.Diagnostics.Debugger.Break();\n  }\n}
3428	Enumerable.Range(char.MinValue, char.MaxValue - char.MinValue)
3429	string[] addressParts = \n   { location.Street1, location.Street2, location.City, location.PostalCode};\n\nstring inputAddress = string.Join(" ", addressParts.Where(s=> !string.IsNullOrEmpty(s)));\ninputAddress = HttpUtility.UrlEncode(inputAddress);
3430	private void Rectangle_Click(object sender, RoutedEventArgs e)\n{\n    var rec = new Rectangle();\n    rec.Height = 100;\n    rec.Width = 100;\n    rec.Fill = new SolidColorBrush(Colors.Violet);\n\n    rec.ManipulationMode=ManipulationModes.All;\n    rec.ManipulationDelta += rec_ManipulationDelta;\n    rec.RenderTransform=new TranslateTransform(); // Create new TranslateTransform and assign to the rectangle\n    board.Children.Add(rec);\n\n}\n\nvoid rec_ManipulationDelta(object sender, ManipulationDeltaRoutedEventArgs e)\n{\n    Rectangle recSender = (Rectangle) sender; // Get the Rectangle\n    TranslateTransform ttSender = recSender.RenderTransform as TranslateTransform; // Get the Rectangle's RenderTransform (which is a TranslateTransform)\n\n    ttSender.X += e.Delta.Translation.X;\n    ttSender.Y += e.Delta.Translation.Y;\n\n}
3431	new Uri(@"pack://application:,,,/Resources/logo.png")
3432	using System;\nusing System.Runtime.InteropServices;\nusing System.Diagnostics;\n\nclass Program {\n  static void Main(string[] args) {\n    byte[] arr1 = new byte[50 * 1024 * 1024];\n    byte[] arr2 = new byte[50 * 1024 * 1024];\n    var sw = Stopwatch.StartNew();\n    bool equal = memcmp(arr1, arr2, arr1.Length) == 0;\n    sw.Stop();\n    Console.WriteLine(sw.ElapsedMilliseconds);\n    Console.ReadLine();\n  }\n  [DllImport("msvcrt.dll")]\n  private static extern int memcmp(byte[] arr1, byte[] arr2, int cnt);\n}
3433	var timeSpan = TimeSpan.FromMilliseconds(5000);\n\nvar seconds = timeSpan.TotalSeconds;\nvar minutes = timeSpan.TotalMinutes;
3434	using (DataFeedEntities db = new DataFeedEntities())\n{\n    IntradayFuturesTick tick = db.IntradayFuturesTicks\n       .OrderByDescending(x => x.Id)\n       .Take(1)\n       .Single();\n}
3435	myCacheSrc = (CollectionViewSource)FindResource("myCacheSrc");\n        myCacheSrc.Source = new ObservableCollection<MyEFPOCO>();
3436	CultureInfo.CurrentCulture.Calendar.TwoDigitYearMax
3437	var itemsAlreadyAdded = new int[] { 2, 4, 6 };\nvar newIds = new string[] { "2", "3" };\n\nvar itemsToAdd = newIds.Except(itemsAlreadyAdded.Select(iaa => iaa.ToString()));\n\nforeach (var item in itemsToAdd)\n{\n    Console.WriteLine(item);\n}\n\nConsole.ReadLine();
3438	private void button1_Click(object sender, EventArgs e) {\n\n    var cntls = GetAll(this, typeof(RadioButton));\n                    foreach (Control cntrl in cntls)\n                    {\n                        RadioButton _rb = (RadioButton)cntrl;\n                        if (_rb.Checked)\n                        {\n                            _rb.Checked = false;\n\n                        }\n                    }\n\n    }\n\n    public IEnumerable<Control> GetAll(Control control, Type type)\n            {\n                var controls = control.Controls.Cast<Control>();\n                return controls.SelectMany(ctrls => GetAll(ctrls, type)).Concat(controls).Where(c => c.GetType() == type);\n            }
3439	System.Globalization.CultureInfo modCulture = new System.Globalization.CultureInfo("en-US");\n        modCulture.NumberFormat.CurrencyNegativePattern = 1;\n        Thread.CurrentThread.CurrentCulture = modCulture;
3440	var result = from t in conn.TICKETS\n             join dept in conn.DEPARTMENT on t.FK_DEPT_ID equals dept.PK_DEPT_ID\n             select new { DeptName = dept.NAME, Status = t.STATUS }\n             into temp\n             group temp by new { temp.DeptName, temp.Status }\n             into g\n             select new { g.Key.DeptName, g.Key.Status, Count = g.Count()};
3441	XDocument xdoc = XDocument.Load(url); // assuming you're pulling your xml from a service. \n\nif (xdoc != null)\n{\n    var levels =\n        (from l in xdoc.Descendants("Level")\n            select new Level\n            {\n                levelNumber = l.Attribute("levelNumber").Value,\n                startingX = l.Attribute("startingX").Value,\n                startingY = l.Attribute("startingy").Value,\n                cellsList = (from c in l.Descendants("Cell")\n                            select new Cell\n                            {\n                                CellType = c.Attribute("CellType").Value,\n                                PositionX = c.Attribute("PostionX").Value,\n                                PositionY = c.Attribute("PositionY").Value\n                            }).ToList()\n            }\n        ).ToList();\n}
3442	AutoGenerateColumns="True"
3443	string MyPageTitle="MyPageTitle"; // your page title here\nstring myConnectionString = "connectionstring"; //you connectionstring goes here\n\nSqlCommand cmd= new SqlCommand("select Price from Tickets where ConcertName ='" + MyPageTitle.Replace("'","''") + "'" , new SqlConnection(myConnectionString));\ncmd.Connection.Open();\nlabelPrice.Text= cmd.ExecuteScalar().ToString(); // assign to your label\ncmd.Connection.Close();
3444	var query = from doc in query\n            let tagIds = from t in doc.Tags select t.Id\n            where parameters.All(p => tagIds.Contains(p))\n            select doc;
3445	XDocument doc = XDocument.Load(@"W:\Prajwal\FMU_EXTRACT\modelDescription.xml");\nint ScalarVariableCount = doc.Root.Element("ModelVariables")\n                                  .Elements("ScalarVariable").Count();
3446	var dups = collection.GroupBy(x => x)\n                     .Where(g => g.Count() > 1)\n                     .Select(g => g.Key);
3447	foreach (var currentItem in RoleName.SelectedItems)\n            {\n                cmdAdd.Parameters["@UserID"].Value = label1.Text;\n                cmdAdd.Parameters["@RoleName"].Value = currentItem // Or i in your code. \n//RoleName.SelectedItem; selected item is always same.\n                cmdAdd.ExecuteNonQuery();\n            }
3448	string connString = "<your connection string>";\nstring sql = "name of your sp";\n\nusing(SqlConnection conn = new SqlConnection(connString)) \n{\n    try \n    {\n        using(SqlDataAdapter da = new SqlDataAdapter()) \n        {\n            da.SelectCommand = new SqlCommand(sql, conn);\n            da.SelectCommand.CommandType = CommandType.StoredProcedure;\n\n            DataSet ds = new DataSet();   \n            da.Fill(ds, "result_name");\n\n            DataTable dt = ds.Tables["result_name"];\n\n            foreach (DataRow row in dt.Rows) {\n                //manipulate your data\n            }\n        }    \n    } \n    catch(SQLException ex) \n    {\n        Console.WriteLine("SQL Error: " + ex.Message);\n    }\n    catch(Exception e) \n    {\n        Console.WriteLine("Error: " + e.Message);\n    }\n}
3449	protected override void OnMouseClick(MouseEventArgs e)\n{\n    int x = e.X;\n    int y = e.Y;\n\n    //Do your calculation here.\n}
3450	string s1 = "This city is very beautiful";\n        string s2 = "The citi is very beautyful - and its also very big:";\n\n        if (!string.IsNullOrEmpty(s2) && s2.Contains(' '))\n        {\n            string[] partsS1 = s1.Split(' ');\n            string[] partsS2 = s2.Split(' ');\n            int count = partsS1.Length;\n            for (int a = 0; a < count; a++)\n            {\n                if (partsS2.Length > count)\n                {\n                    if (partsS1[a] != partsS2[a])\n                    {\n                        partsS2[a] = partsS1[a];\n                    }\n                }\n            }\n            string final = string.Empty;\n            foreach (string s in partsS2)\n            {\n                final += s + " ";\n            }\n            final = final.TrimEnd(' ');\n            Console.WriteLine(final);\n        }
3451	// Presumes a DataTable named "Orders" that has a column named "Total."\nDataTable table;\ntable = dataSet.Tables["Orders"];\n\n// Declare an object variable.\nobject sumObject;\nsumObject = table.Compute("Sum(Total)", "EmpID = 5");
3452	protected override void OnFileActivated(FileActivatedEventArgs args)\n{\n       // TODO: Handle file activation\n\n       // The number of files received is args.Files.Size\n       // The first file is args.Files[0].Name\n}
3453	IQueryable<Student> q = dbContext.Students.AsQueryable();\n\nif (crit.name != null)\n    q = q.Where(c => c.name == crit.name);\n\nif (crit.age != null)\n    q = q.Where(c => c.age== crit.age);
3454	myString.GetHashCode()
3455	string text = new string('y', 4);
3456	var path = "SampleData/stub.xml";\nvar res = Application.GetResourceStream(new Uri(path, UriKind.Relative))\nxml = new StreamReader(res.Stream).ReadToEnd();
3457	System.IO.File.GetLastWriteTime(Assembly.GetExecutingAssembly().Location)
3458	FileDialog fd = new OpenFileDialog();\nfd.Filter = "*.txt|*.txt";\nfd.ShowDialog();\n\nif (Path.GetExtension(fd.FileName).ToLower() != ".txt")\n    MessageBox.Show("Choose a text file!");
3459	public static Vector3D ToVector3D(Vector3 input)\n{\n   return new Vector3D( (float)input.X, (float)input.Y, (float)input.Z );\n}
3460	BinaryFormatter binaryFormatter = new BinaryFormatter();\nbinaryFormatter.Serialize(streamWriter.BaseStream, Users);
3461	snakeBodyRectangleArray[bodyNumber] = new Rectangle((int)snakeBodyArray[bodyNumber].X, (int)snakeBodyArray[bodyNumber].Y, textureSnakeBody.Width, textureSnakeBody.Height);
3462	string[] linesSplitted = new string[5];\nfor (int i = 0; i < 5; i++)\n{\n    linesSplitted[i] = lines[i].Split(':')[1];\n}
3463	void IPlugin.Reset()\n    {\n        this.number = null;\n        this.state = State.NotReady;\n        Contract.Assume(((IPlugin)this).State == this.state);\n    }
3464	var minYear = dbContext.News.Min(x => x.ArticleDate.Year);\nvar maxYear = dbContext.News.Max(x => x.ArticleDate.Year);
3465	mapping.Join( "Table1Notes", map =>\n{\n    map.KeyColumn( "Table1Id" );\n    map.Map( x => x.Notes ).Nullable().LazyLoad();\n    map.Optional();\n} );
3466	switch(op)\n{\n     case Operator.PLUS:\n     {\n\n     }\n}
3467	List<City> cities = new List<City> ();\n\nforeach (RouteServiceRef.Hawker rp in recommendPlaceList)\n    {\n        hawkername = rp.hawkername;\n        address = rp.address;\n        postal = rp.postal;\n        coordX = rp.xcoord;\n        coordY = rp.ycoord;\n        popularity = rp.popularity;\n        cities.Add(new City(){Name = hawkername, Population = popularity });\n    }
3468	Vector3 rayOrigin = new Vector3(0.5f, 0.5f, 0f); // center of the screen\nfloat rayLength = 500f;\n\n// actual Ray\nRay ray = Camera.main.ViewportPointToRay(rayOrigin);\n\n// debug Ray\nDebug.DrawRay(ray.origin, ray.direction * rayLength, Color.red);\n\nRaycastHit hit;\nif (Physics.Raycast(ray, out hit, rayLength))\n{\n    // our Ray intersected a collider\n}
3469	var dropThis =\n  (from tutorial in xmlDoc.Descendants("Tutorial")\n   select new\n   {\n     Author = (myTutorial.Author = (string)tutorial.Element("Author")),\n     Title = (myTutorial.Title = (string)tutorial.Element("Title")),\n     Date = (myTutorial.Date = (DateTime)tutorial.Element("Date")),\n   }).First();
3470	public class WinAPI {\n    [DllImport("user32.dll")]\n    public static extern IntPtr SetWindowLong(IntPtr hWnd, int nIndex, uint dwNewLong);\n\n    public const int GWL_HWNDPARENT = -8;\n}\n\n\nWinAPI.SetWindowLong(this.Handle, WinAPI.GWL_HWNDPARENT, (uint)this.ObservedHandle);
3471	Bind<IMarketRepository>().To<MarketRepository>().WithConstructorArgument("sessionId", "Session ID here");
3472	foreach (FileInfo fil in files)\n{\n    listView2.Items.Add(\n        new ListViewItem(\n            new string[] {\n                fil.Name,\n                fil.LastWriteTime.ToString(),\n                fil.Length.ToString()\n            }\n        )\n    );\n}
3473	/Library/Frameworks/Mono.framework/Commands/nunit-console4 /my/test/project/Test.dll
3474	System.TimeSpan
3475	try\n        {\n            byte[] xmlContentInBytes = new System.Text.UnicodeEncoding().GetBytes(xmlContent);\n\n            System.Text.UTF8Encoding utf8 = new System.Text.UTF8Encoding(false, true);\n            utf8.GetChars(xmlContentInBytes);\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(ex.Message);\n            return false;\n        }
3476	// Form method for updating progress bar; callable from worker thread\npublic void UpdateProgressBar(double progress)\n{\n    // dispatch the update onto the form's thread\n    Dispatcher.BeginInvoke((Action<double>)((n) =>\n    {\n        // do the update in the form's thread\n        progressBar1.Value = n;\n    }), progress);\n}
3477	// Add some text to the paragraph\nparagraph.AddFormattedText("Hello, World!", TextFormat.Italic);\n\n// Add Bulletlist begin\nStyle style = document.AddStyle("MyBulletList", "Normal");\nstyle.ParagraphFormat.LeftIndent = "0.5cm";\nstring[] items = "Dodge|Nissan|Ford|Chevy".Split('|');\nfor (int idx = 0; idx < items.Length; ++idx)\n{\n  ListInfo listinfo = new ListInfo();\n  listinfo.ContinuePreviousList = idx > 0;\n  listinfo.ListType = ListType.BulletList1;\n  paragraph = section.AddParagraph(items[idx]);\n  paragraph.Style = "MyBulletList";\n  paragraph.Format.ListInfo = listinfo;\n}\n// Add Bulletlist end\n\nreturn document;
3478	private void AddLabelDynamically()\n    {\n        this.LabelGrid.ColumnDefinitions.Clear();\n        this.LabelGrid.RowDefinitions.Clear();\n\n        this.LabelGrid.ColumnDefinitions.Add(new ColumnDefinition());\n        this.LabelGrid.ColumnDefinitions.Add(new ColumnDefinition());\n\n        for (int i = 0; i < 3; i++)\n        {\n            this.LabelGrid.RowDefinitions.Add(new RowDefinition() { Height = GridLength.Auto });\n\n            Label nameLabel = new Label(); nameLabel.Content = "KEY :" + i.ToString();\n            Label dataLabel = new Label(); dataLabel.Content = "VALUE :" + i.ToString();\n\n            Grid.SetRow(nameLabel, i);\n            Grid.SetRow(dataLabel, i);\n\n            Grid.SetColumn(nameLabel, 0);\n            Grid.SetColumn(dataLabel, 1);\n\n            //I want to creatre the Seperate coloum and row to  display KEY\n            // VALUE Pair distinctly\n            this.LabelGrid.Children.Add(nameLabel);\n            this.LabelGrid.Children.Add(dataLabel);\n        }\n    }
3479	public string SpecialFormatDecimal(decimal input)\n{\n    return (input / 100000000).ToString("#,##0.00000000", System.Globalization.CultureInfo.GetCultureInfo("en-US"));\n}
3480	DataTable original;\nDataTable modified;\n\n// your stuff\n\nmodified = modified.AsEnumerable().Zip<DataRow, DataRow, DataRow>(original.AsEnumerable(), (DataRow modif, DataRow orig) =>\n{\n    if (!orig.ItemArray.SequenceEqual<object>(modif.ItemArray))\n    {\n        modif.SetModified();\n    }\n    return modif;\n}).CopyToDataTable<DataRow>();
3481	public static void Main()\n{\n\n    AnimEngine f1 = new AnimEngine();\n    f1.Paint += new PaintEventHandler(f1.draw);\n    Application.Run(f1);\n    f1.Refresh();\n    return;\n}
3482	\\10.10.27.35\folder\subfolder\
3483	IDictionary<string, string> dict = new Dictionary<string, string> { { "Foo", "Bar" } };\ndynamic dobj = dict.ToExpando();\ndobj.Foo = "Baz";
3484	error: function(header, status, exception) {\n    alert(exception.Message);\n}
3485	public class DoubleLookup<TKey, TValue>\n{\n  private IDictionary<TKey, TValue> keys;\n  private IDictionary<TValue, TKey> values;\n\n  //stuff...\n\n  public void Add(TKey key, TValue value)\n  {\n    this.keys.Add(key, value);\n    this.values.Add(value, key);\n  }\n\n  public TKey GetKeyFromValue(TValue value)\n  {\n    return this.values[value];\n  }\n\n  public TValue GetValueFromKey(TKey key)\n  {\n    return this.keys[key];\n  }\n\n\n}
3486	String x;\nchar ch = x[i];\nif ( ch == '+' || ch =='-' || ch =='*' || ch == '/' || ch == '^' )\n{//Here comes the Operators, as for me it works for pushing operators into stack }\nelse\n{//Here comes the Operands, as for me , it works for putting them in another String }
3487	using System;\nusing System.Threading;\n\nclass Program\n{\n    static void Main()\n    {\n        ReaderWriterLockSlim sync = new ReaderWriterLockSlim();\n\n        using (sync.Read())\n        {\n           // etc    \n        }\n    }\n\n\n}\npublic static class ReaderWriterExt\n{\n    sealed class ReadLockToken : IDisposable\n    {\n        private ReaderWriterLockSlim sync;\n        public ReadLockToken(ReaderWriterLockSlim sync)\n        {\n            this.sync = sync;\n            sync.EnterReadLock();\n        }\n        public void Dispose()\n        {\n            if (sync != null)\n            {\n                sync.ExitReadLock();\n                sync = null;\n            }\n        }\n    }\n    public static IDisposable Read(this ReaderWriterLockSlim obj)\n    {\n        return new ReadLockToken(obj);\n    }\n}
3488	Xrm.Page.getControl('yourfieldname').setDisabled(true);
3489	DataTable resultsList = new DataTable();\nresultsList.Columns.Add("Time", typeof(String));\n...\nresultsList.Rows.Add(stat);
3490	var row = Grid.GetRow((Button)sender);\nvar col = Grid.GetColumn((Button)sender);
3491	public interface IWidgetGetter<T> where T : IWidget\n{\n    IEnumerable<T> Widgets { get; }\n}
3492	string commandText = @"Insert INTO MyTable (Column1, Column2, Column3)\n                          SELECT FirstName, LastName, @TBValue\n                          FROM OtherTable where id = @QSValue";\ncmd.CommandText = commandText;\ncmd.Parameters.Add("@TBValue", tb_MyBox.Text);\ncmd.Parameters.Add("@QSValue", Request.QueryString["id"]);
3493	using System.Diagnostics;\n...\nProcessStartInfo startInfo = new ProcessStartInfo();\nstartInfo.UseShellExecute = false; //required to redirect standart input/output\n\n// redirects on your choice\nstartInfo.RedirectStandardOutput = true;\nstartInfo.RedirectStandardOutput = true;\nstartInfo.RedirectStandardError = true;\n\nstartInfo.FileName = ...app path to execute...;\nstartInfo.Arguments = ...argumetns if required...;\n\nProcess process = new Process();\nprocess.StartInfo = startInfo;\nprocess.Start();\n\nprocess.StandardInput.WriteLine(...write whatever you want...);
3494	string input = Math.PI.ToString();\n string decSeparator = System.Threading.Thread.CurrentThread\n                      .CurrentCulture.NumberFormat.NumberGroupSeparator;\n Regex RX = new Regex(@"([0-9]{3})");\n string result  = RX.Replace(input , @"$1" + decSeparator);
3495	using (SqlConnection connection =\n           new SqlConnection(connectionString))\n{\n    SqlCommand command =\n        new SqlCommand(queryString, connection);\n    connection.Open();\n\n    SqlDataReader reader = command.ExecuteReader();\n\n    // Call Read before accessing data.\n    while (reader.Read())\n    {\n       CustomersRow newCustomersRow = Customers.NewCustomersRow();\n\n       newCustomersRow.CustomerID = reader[0].ToString();\n       newCustomersRow.CompanyName = reader[1].ToString();\n       dt.Rows.Add(newCustomersRow);\n    }\n\n    // Call Close when done reading.\n    reader.Close();\n}
3496	Concat()
3497	var doc=new XmlDocument();\ndoc.LoadXml(File.ReadAllText(filePath));\nvar rootElement=doc.DocumentElement;\n\nvar Hilfeartikel=rootElement.GetElementsByTagName("Hilfeartikel")[0].InnerText;\nforeach (XmlElement Element in Hilfeartikel.ChildNodes)\n{\nvar frage=Element.GetElementsByTagName(Frage)[0].InnerText;\n}
3498	var loanItems = chkBoxAssetLoan.Items;\n        if ((cboLoanAssetName.SelectedItem != null)\n        {\n             if (!loanItems.Contains(cboLoanAssetName.SelectedItem))\n            {\n            loanItems.Add(cboLoanAssetName.SelectedItem.ToString(), true);\n            }\n        }
3499	public partial class Form1 : Form\n{\n    string[] values;\n    public Form1()\n    {\n        InitializeComponent();\n        values = setValueArray();\n        numericUpDown1.Maximum = values.Length - 1;\n        numericUpDown1.Minimum = 0;\n    }\n\n    private string[] setValueArray()\n    {\n     return new string[] { "100", "90", "80", "70", "60" };\n    }\n\n    private void numericUpDown1_ValueChanged(object sender, EventArgs e)\n    {\n        label1.Text = values[(int)((NumericUpDown)sender).Value];\n    }\n}
3500	process1.StartInfo.Arguments = "/k copy /b \""+fi.Name+ "\" test.txt"; \nprocess1.StartInfo.FileName = "cmd.exe";
3501	public DataStates DataState { get; private set; }\n\npublic Task UpdateDataStateAsync()\n{\n   // ... Use await as necessary
3502	this.Invoke((MethodInvoker)(() => OutputBox.Items.Add(engineOutput)));
3503	container.ResolveUnregisteredType += (s, e) =>\n{\n    Type type = e.UnregisteredType;\n\n    if (typeof(ISetting).IsAssignableFrom(type))\n    {\n        // If you need raw performance, there is also\n        // an overload that takes in an Expression.\n        e.Register(() =>\n        {\n            // Do something useful here. Example:\n            return Activator.CreateInstance(type);\n        });\n    }\n};
3504	Application.Current.Dispatcher.Invoke(DispatcherPriority.Background, (Action)delegate()\n    {\n    });
3505	var regEx = new Regex(@"^(?=(.*\d))(?=.*[a-z])(?=.*[A-Z])(?!\d).{7,}\D$");
3506	(?<=\<tr.*?(even|odd).*?\>).*?(?=\<)
3507	if (obj is string)\n  Console.WriteLine(obj);\nelse\n    ... use reflection
3508	protected override void OnModelCreating(DbModelBuilder modelBuilder)\n    {\n        modelBuilder.Entity<Match>()\n                    .HasRequired<Team>(i => i.TeamHome)\n                    .WithMany(i => i.Matches)\n                    .WillCascadeOnDelete(false);\n\n        base.OnModelCreating(modelBuilder);\n    }
3509	public int? LongitudinalId { get; set; }\npublic int? ChassisLongitudinalId { get; set; }
3510	var selectedObj = dgGrid.Items.Cast<YourClass>().First(a=> a.ID = txtFilter.Text);\nif(selectedObj != null)\n    dgGrid.SelectedItem =  selectedObj;
3511	zip.AddFile(fileName).FileName = System.IO.Path.GetFileName(fileName);
3512	List<DTO> DTO = new List<DTO>;\nforeach (IGroup ele in Details)\n{\n  DTO request = new DTO();\n  // here you can extract details properties.\n  request.ActiveDirectoryGroupName  = ele.DisplayName;\n  ...\n  ...\n  DTO.Add(request);\n}
3513	public partial class remSolicitudesEnt {\n\n    private List<Solicitud> solicitudesField;\n\n    public List<Solicitud> Solicitudes \n    {\n        get { return this.solicitudesField; }\n        set { this.solicitudesField = value; }\n    }\n}
3514	Using ts As New System.Transactions.TransactionScope()\n  Using sharedConnectionScope As New SubSonic.SharedDbConnectionScope()\n\n' Do your individual saves here\n\n' If all OK\n      ts.Complete()\n\n   End Using\nEnd Using
3515	pagenumber = 1
3516	Func<int, bool> isEven = n => n % 2 == 0;\nFunc<int, bool> isFive = n => n == 5;\nint diff = numbers.Aggregate(0, (sum, next) => isEven(next) ? sum + 1 : isFive(next) ? sum - 1 : sum);
3517	DateTime dob = .....\nDateTime Today = DateTime.Now;\nTimeSpan ts = Today - dob;\nDateTime Age = DateTime.MinValue + ts;\n\n\n// note: MinValue is 1/1/1 so we have to subtract...\nint Years = Age.Year - 1;\nint Months = Age.Month - 1;\nint Days = Age.Day - 1;
3518	BinaryMessageFormatter formatter = new BinaryMessageFormatter();\n   System.Messaging.Message message = new System.Messaging.Message(YourObject, formatter);
3519	List<KeyValuePair<string, object>> GetEnumInfo(string name)\n{\n    var type = Type.GetType(name);\n    return Enum.GetValues(type)\n            .Cast<object>()\n            .Select(v => new KeyValuePair<string, object>(Enum.GetName(type, v), v))\n            .ToList();\n}
3520	System.Drawing.Image image = Image.FromFile(@"Q:\my_image.tif");\nSystem.Drawing.Imaging.ColorPalette palette = image.Palette;\n//...palette.Entries is simply an array of System.Drawing.Color, modify to suit\n\n//crucial step - palette was retrieved as a copy, so\n//it is necessary to store the copy back to the image\nimage.Palette = palette;
3521	Icon="Resources/form1.ico"
3522	public class RestPerformanceInterceptor : IInterceptionBehavior\n{\n    public bool WillExecute { get { return true; } }\n\n    public IEnumerable<Type> GetRequiredInterfaces()\n    {\n        return new[] { typeof(IA) };\n    }\n\n    public IMethodReturn Invoke(IMethodInvocation input, GetNextInterceptionBehaviorDelegate getNext)\n    {\n        var behaviorDelegate = getNext();\n\n        StartInNewTask(behaviorDelegate.Invoke(input, getNext));\n\n        return new Mock<IMethodReturn>();\n    }\n}
3523	Session.Query<Foo>().Customize(x=>x.WaitForNonStaleResults())
3524	public DataGridViewRow FindRow(DataGridView dgv, DateTime searchID)\n    {\n        DataGridViewRow row = dgv.Rows\n            .Cast<DataGridViewRow>()\n            .Where(r => ((DateTime)r.Cells["DateAdded"].Value <= searchID))\n            .Last();\n\n        return row;\n    }
3525	Command cmd = _applicationObject.Commands.Item("Edit.FormatDocument", -1);\nobject dummy = null;\n_applicationObject.Commands.Raise(cmd.Guid, cmd.ID, ref dummy, ref dummy);
3526	protected void CustomersGridView_RowDataBound(Object sender, GridViewRowEventArgs e)\n  {\n    if(e.Row.RowType == DataControlRowType.DataRow)\n    {\n      if (e.Row.Cells[1].Text == "01/01/1754 00:00:00")\n      {\n          e.Row.Cells[1].Text = "Null";\n      }\n    }\n  }
3527	private void InputExpressionRchTxt_KeyDown(object sender, KeyEventArgs e)\n{\n    bool ctrlV = e.Modifiers == Keys.Control && e.KeyCode == Keys.V;\n    bool shiftIns = e.Modifiers == Keys.Shift && e.KeyCode == Keys.Insert;\n    if (ctrlV || shiftIns)\n        if (Clipboard.ContainsImage())\n            e.Handled = true;\n}
3528	public void insertionsort() { \n    int inner, temp; \n\n    for (int outer = 1; outer <= upper; outer++) {  \n        displayElements();                          \n        Console.WriteLine(); \n\n        temp = arr[outer]; \n        inner = outer; \n        while (inner > 0 && arr[inner - 1] >= temp) {  \n            arr[inner] = arr[inner-1]; \n            inner -= 1;\n        } \n\n        arr[inner] = temp; \n    }
3529	[Required]\n[RegularExpression(@"^[^\\/:*;\.\)\(]+$", ErrorMessage = "The characters ':', '.' ';', '*', '/' and '\' are not allowed")]\npublic string Name { get; set; }
3530	private Point[] GetNeighbors(int count)\n{\n    int a, x, y, c = count / 2;\n    Point[] p = new Point[count * count];\n\n    for (a = y = 0; y < count; y++)\n        for (x = 0; x < count; x++)\n            p[a++] = /* Create point here */\n    return p;\n}
3531	var username = txtUserName.Text;\n   var password = txtPassword.Text;// there is available encryption on the web that you can use on. and your code will be like var password=enc.EncryptToString(txtPassword.Text);\n   var isValidUser = from user on UserTable\n                     where user.UserName == txtUserName.Text && user.Password == password && user.Status == 1\n                     select user;  \n   if(isValiduser.Count() > 0)\n   {\n     //OK you can log on\n   }\n   else\n   {\n     //user credential is invalid\n   }
3532	if(IsAllowed)\n{\n   DoSomethingInteresting();\n}
3533	public static void ConvertBlToUi<TBl, TUi>(TBl entitySource, TUi entityTarget)\n    {\n        var blProperties = typeof(TBl).GetProperties().Select(p => new { Name = p.Name.ToLower(), Property = p }).ToArray();\n\n        var uiProperties = typeof(TUi).GetProperties().Select(p => new { Name = p.Name.ToLower(), Property = p });\n\n        foreach (var uiProperty in uiProperties)\n        {\n            var value = blProperty.Property.GetValue(entitySource);\n            var t = Nullable.GetUnderlyingType(uiProperty.Property.PropertyType) ?? uiProperty.Property.PropertyType;\n            var safeValue = (value == null) ? null : Convert.ChangeType(value, t);\n            uiProperty.Property.SetValue(entityTarget, safeValue);\n        }\n    }
3534	public void FillBuf(object sender)\n{\n    var handler = (Socket)sender;\n\n    while (true)\n    {\n        // Note: use local variables here. You really don't want these variables\n        // getting mixed up between threads etc.\n        int received = 0;\n        byte[] bytes = new byte[512];\n\n        while (received < bytes.Length)\n        {\n            int block = handler.Receive(bytes, received, bytes.Length - received,\n                                        SocketFlags.None);\n            received += block;\n        }\n        que.Enqueue(bytes);\n    }\n}
3535	var client = new HttpClient();\n        var uri = new Uri("http://ponify.me/stats.php");\n        Stream respStream = await client.GetStreamAsync(uri);\n        DataContractJsonSerializer ser = new DataContractJsonSerializer(typeof(rootObject));\n        rootObject feed = (rootObject)ser.ReadObject(respStream);\n        System.Diagnostics.Debug.WriteLine(feed.SONGHISTORY[0].TITLE);
3536	private void dg_LoadingRow(object sender, DataGridRowEventArgs e)\n{\n    e.Row.MouseRightButtonDown += new MouseButtonEventHandler(Row_MouseRightButtonDown);\n}\nvoid Row_MouseRightButtonDown(object sender, MouseButtonEventArgs e)\n{\n    dg.SelectedItem = ((sender) as DataGridRow).DataContext;\n}
3537	if (useHashing){\n   key = CryptoJS.MD5(key).toString();\n   var k1 = key.substring(0, 16);\n   key = key + k1;\n}
3538	bool containsParts(string1, string2)\n{\n    count1 = array of 26 0's\n    count2 = array of 26 0's\n\n    // Note: be sure to check for an ignore non-alphabetic characters,\n    // and do case conversion if you want to do it case-insensitively\n    for each character c in string1:\n        count1[c]++\n    for each character c in string2:\n        count2[c]++\n\n    for each character c in 'a'...'z':\n        if count1[c] < count2[c]:\n            return false\n\n    return true\n}
3539	runat="server"
3540	public partial class Character\n{\n    [ResultColumn]\n    public Entity Entity { get; set; }\n}\n\npublic partial class Entity \n{\n    [ResultColumn]\n    public Faction Faction { get; set; }\n}\n\nsql = Sql.Builder\n    .Append("SELECT c.*,e.*,f.*")\n    .Append("FROM [Character] c")\n    .Append("INNER JOIN [Entity] e ON e.Id = c.EntityId")\n    .Append("INNER JOIN [Faction] f ON f.Id = e.FactionId")\n    .Append("WHERE c.UserId = @0", 1);\n\nvar characters = db.Fetch<Character, Entity, Faction, Character>(\n    (c, e, f) => { c.Entity = e; e.Faction = f; return c; }, sql);
3541	XDocument xd = new XDocument(new XDeclaration("1.0", "utf-8", "yes"));\n  xd.Add(new XElement("top"));\n  xd.Save(Console.Out);
3542	private CancellationTokenSource ts = new CancellationTokenSource();\n\npublic void Start()\n{\n    System.Timers.Timer t = new System.Timers.Timer();\n    t.Interval = 200;\n    t.Elapsed += (s, e) =>\n    {\n        if (ts.Token.IsCancellationRequested)\n        {\n            // another thread decided to cancel\n            Debug.WriteLine("task canceled");\n            t.Stop();\n        }\n    }\n    t.Start();\n}\n\npublic void Stop()\n{\n    // Can't wait anymore => cancel this task \n    ts.Cancel();\n}
3543	private void dataGridView1_RowStateChanged(object sender, DataGridViewRowStateChangedEventArgs e) {\n    if (e.StateChanged == DataGridViewElementStates.Selected) {\n        Console.WriteLine("TRUE");\n        dataGridView1.ReadOnly = true;\n    }\n}\n\nprivate void dataGridView1_CellStateChanged(object sender, DataGridViewCellStateChangedEventArgs e) {\n    if (e.StateChanged == DataGridViewElementStates.Selected) {\n        Console.WriteLine("false");\n        dataGridView1.ReadOnly = false;\n    }\n}
3544	//c++/clr\nvoid someCppFunc(){\n    long expected = 2;\n    long actual = 2;\n    Assert::AreEqual<long>(expected, actual, gcnew System::String(L"Some info message"));\n}
3545	public class SumObject\n{\n    public int ID { get; set; }\n    public string Name { get; set; }\n}\n\npublic abstract class AbstractClass\n{\n    protected SumObject SumProperty { get; private set; }\n\n    protected AbstractClass()\n    {\n        SetupSumObjecInAbstractClass();\n        DoWorkInChildClass();\n    }\n\n    protected void SetupSumObjecInAbstractClass()\n    {\n        SumProperty = new SumObject() { ID = 1, Name = "James Dean" };\n    }\n\n    protected abstract void DoWorkInChildClass();\n}\n\npublic class ChildClass : AbstractClass\n{\n    protected override void DoWorkInChildClass()\n    {\n        if (SumProperty == null)\n            throw new Exception("Dang!");\n\n        Console.WriteLine(string.Format("My Name is: {0}"\n                                        , SumProperty.Name));\n        Console.ReadKey();\n    }\n}\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var name = new ChildClass();\n    }\n}
3546	public BitmapImage ImageFromBuffer(Byte[] bytes)\n{\n    MemoryStream stream = new MemoryStream(bytes);\n    BitmapImage image = new BitmapImage();\n    image.BeginInit();\n    image.StreamSource = stream;\n    image.EndInit();\n    return image;\n}\n\npublic Byte[] BufferFromImage(BitmapImage imageSource)\n{\n    Stream stream = imageSource.StreamSource;\n    Byte[] buffer = null;\n    if (stream != null && stream.Length > 0)\n        {\n            using (BinaryReader br = new BinaryReader(stream))\n                {\n                    buffer = br.ReadBytes((Int32)stream.Length);\n                }\n        }\n\n    return buffer;\n}
3547	int key = (int)Registry.GetValue("HKEY_LOCAL_MACHINE\\System\\State\\Hardware", "WiFi", -1);
3548	static IEnumerable<Tuple<string, int>> FindAdjacentItems(IEnumerable<string> list)\n{\n    string previous = null;\n    int count = 0;\n    foreach (string item in list)\n    {\n        if (previous == item)\n        {\n            count++;\n        }\n        else\n        {\n            if (count > 1)\n            {\n                yield return Tuple.Create(previous, count);\n            }\n            count = 1;\n        }\n        previous = item;\n    }\n\n    if (count > 1)\n    {\n        yield return Tuple.Create(previous, count);\n    }\n}
3549	File | Options | Advanced | Developers | Show add-in user interface errors
3550	static void Main(string[] args)\n    {\n        int numFiles = 30;\n\n        for (int fileIndex = 0; fileIndex < numFiles; fileIndex++)\n        {\n            string randomFileName = Path.Combine(@"c:\temp", Path.GetRandomFileName() + ".csv");\n\n            GenerateTestFile(randomFileName, 20, 10);\n        }\n    }\n\n    static void GenerateTestFile(string fileName, int numLines, int numValues)\n    {\n        int[] values = new int[numValues];\n\n        Random random = new Random(DateTime.Now.Millisecond);\n        FileInfo f = new FileInfo(fileName);\n\n        using (TextWriter fs = f.CreateText())\n        {\n            for (int lineIndex = 0; lineIndex < numLines; lineIndex++)\n            {\n                for (int valIndex = 0; valIndex < values.Length; valIndex++)\n                {\n                    values[valIndex] = random.Next(100);\n                }\n\n                fs.WriteLine(string.Join(",", values));\n            }\n        }\n    }
3551	public class Person\n    {\n\n        private string _Nome;\n        private string _Nascimento;\n\n        public string Nome { get { return _Nome; } set { _Nome = value; } }\n        public string Nascimento { get { return _Nascimento; } set { _Nascimento= value; } }\n\n        public Person()\n        {\n\n        }\n\n        public Person(string Nome, DateTime Nascimento)\n        {\n            _Nome = Nome;\n            _Nascimento = Nascimento.ToString();\n        }\n\n    }
3552	WebElement el = (WebElement) ((JavascriptExecutor) driver).executeScript("return window.frameElement");
3553	public static Boolean CheckContents(string ExportDirectory, string DspFleName)\n    {\n        if (DspFleName == "None")\n            return true;\n\n        var DspFle = DspFleName.Split(',');\n        var ActualFiles = Directory.GetFiles(ExportDirectory);\n\n        foreach(var file in DspFle)\n            if (!ActualFiles.Any(x=>Path.GetFileName(x).Equals(file)))\n                return false;\n\n        return true;\n    }
3554	Assembly asm = Assembly.LoadFrom("XXX.YYY.ZZZ.Bin.dll");\nType type = asm.GetType("MyType");\nIMyType obj = Activator.CreateInstance(type) as IMyType;
3555	zero-indexed
3556	public class HomePageActivity : FragmentActivity, Android.Support.V4.View.ViewPager.IOnPageChangeListener\n    {\nprotected override void OnCreate (Bundle bundle)\n        {\n            base.OnCreate (bundle);\n\n            // Create your application here\n            SetContentView(Resource.Layout.home);\nvar viewPager_up = FindViewById<Android.Support.V4.View.ViewPager>(Resource.Id.viewPager_up);\nviewPager_up.AddOnPageChangeListener (this);\n\n}\npublic void OnPageScrollStateChanged (int state)\n        {\n            Console.WriteLine ("OnPageScrollStateChanged "+" "+state);\n        }\n        public void OnPageScrolled (int position, float positionOffset, int positionOffsetPixels){\nConsole.WriteLine ("OnPageScrolled "+" "+position);\n}\n\n        public void OnPageSelected (int position)\n        {\n            Console.WriteLine ("OnPageSelected"+" "+position);\n\n\n        }\n}
3557	try\n{\n    operation1();\n    operation2();\n    ...\n}\nfinally\n{\n    cleanup();\n}\n\npublic void cleanup() {\n    try\n    {\n        finalizer_operation1();\n        finalizer_operation2();\n\n    }\n    finally\n    {\n        very_critical_finalizer_operation_which_should_occurs_at_the_end();\n    }\n}
3558	var result = arrayname.Select((m, index) => new\n            {\n                key = array[index],\n                value = m\n            })\n                .OrderByDescending(m => m.key)\n                .Select(m => m.value)\n                .Take(3);\n\n\n   var textBoxValue = string.Join(" ", result);
3559	using System;\nusing Microsoft.Office.Interop.Word;\n\nnamespace PageSetup\n{\n    class TestPageOrientation\n    {\n        static void Main(string[] args)\n        {\n            var app = new Microsoft.Office.Interop.Word.Application();\n            app.Visible = true;\n\n            //Load Document\n            Document document = app.Documents.Open(@"C:\Temp\myDocument.docx");\n\n            document.PageSetup.Orientation = WdOrientation.wdOrientLandscape;\n        }\n    }\n}
3560	public async Task<List<ObjectId>> GetEntitiesIdsByEmail(IList<string> emails)\n{\n     var regexFilter = "(" + string.Join("|", emails) + ")";\n     var projection = Builders<Entity>.Projection.Include(x => x.Id);\n     var filter = Builders<Entity>.Filter.Regex("Email",\n           new BsonRegularExpression(new Regex(regexFilter, RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace)));\n     var entities = await GetCollection().Find(filter).Project(projection).ToListAsync();\n     return entities.Select(x=>x["_id"].AsObjectId).ToList();\n}
3561	// Create an engine using the templates path as the root location\n    // as well as the shared location\n    var engine = new SparkViewEngine\n        {\n             DefaultPageBaseType = typeof(SparkView).FullName,\n             ViewFolder = viewFolder.Append(new SubViewFolder(viewFolder, "Shared"))\n        };\n\n    SparkView view;\n\n    // compile and instantiate the template\n    view = (SparkView)engine.CreateInstance(\n                          new SparkViewDescriptor()\n                              .AddTemplate(templateName));\n\n    // render the view to stdout\n    using (var writer = new StreamWriter(Console.OpenStandardOutput(), Encoding.UTF8))\n    {\n        view.RenderView(writer);\n    }
3562	(?<=~)[^\s]+
3563	List<GmailItem> lstMail = new List<GmailItem>();\n        for (int i = 0; i < mailCount; i++)\n        {\n            lstMail.Add(client.GetMailItem(i));\n        }\n\n        _bindingMails.DataSource = lstMail;\n        dgMails.DataSource = _bindingMails;
3564	Func<int, int, int> Add = (x, y) => x + y;\n\nFunc<int, int, int> diff = (x, y) => x - y;\n\nFunc<int, int, int> multi = (x, y) => x * y;
3565	Timer r = new System.Timers.Timer(timeout_in_ms);\nr.elapsed += new ElapsedEventHandler(timer_Elapsed);\nr.Enabled = true;\nrunning = true;\nwhile (running) {\n   // do stuff\n}\nr.Enabled = false;\n\nvoid timer_Elapsed(object sender, ElapsedEventArgs e)\n{\n   running = false;\n}
3566	sqlAdapter = new SqlDataAdapter("SELECT * FROM " + saka[listboxselectedindex]+" where stts=@sttsValue", conn);\nsqlAdapter.SelectCommand.Parameters.AddWithValue("@sttsValue",1);\n            dataset = new DataSet();\n            sqlAdapter.Fill(dataset, saka[listboxselectedindex]);\n            datagridview1.DataSource = null;\n            datagridview1.DataSource = dataset.Tables[saka[listboxselectedindex]];
3567	public void btnSubmitClick(object sender, EventArgs e)\n{\n    if (this.txtMultiLine.Text.StartsWith("\r\n"))\n    {\n        this.txtMultiLine.Text = "\r\n" + this.txtMultiLine.Text;\n    }\n}
3568	url = url.Replace("[IMG]", "").Replace("[/IMG]");
3569	RadCaptcha1.Validate();\nPage.Validate();\n\nif(RadCaptcha1.IsValid)\n{\n     //TODO: Add your logic here\n}
3570	var s = string.Join(", ", files.Select(file => Path.GetExtension(file))\n    .Distinct(StringComparer.InvariantCultureIgnoreCase).ToArray());
3571	protected void RowBound(object sender, GridItemEventArgs e)\n{\n   if (e.Item is GridNestedViewItem)\n   {\n      GridNestedViewItem item = e.Item as GridNestedViewItem;\n   }\n}
3572	for (int userIndex = 0; userIndex < addressList.Count-1; userIndex++)\n                {
3573	waitForJavaScript("(typeof Ajax == 'undefined' ? jQuery.active == 0 : Ajax.activeRequestCount == 0)")
3574	var a = "12345";\nvar c = "54321";\nvar e = "0A9B8C7D6E5F4G3H2I1";\n\n// create a mutable copy of e\nvar builder = new StringBuilder(e);\nfor (var i = 0; i < e.Length; ++i) // for each character position in e\n{\n    // look for that character in a\n    var index = a.IndexOf(e[i]);\n    // if we found it, replace the character at that position with the\n    // corresponding character from c\n    if (index >= 0) { builder[i] = c[index]; }\n}\nvar result = builder.ToString(); // 0A9B8C7D6E1F2G3H4I5
3575	rowIndex = this.searchDataGridView.Rows.Add();
3576	var temp = list[1];\nlist[1] = list[3];\nlist[3] = temp;
3577	public class ListWrapper<T>\n{\n    public ListWrapper(INamedEnumerable<T> list)\n    {\n        List = new List<T>(list);\n        Name = list.Name;\n    }\n\n    public List<T> List { get; set; }\n\n    public string Name { get; set; }\n}
3578	message.Formatter = new BinaryMessageFormatter();\nvar reader = new StreamReader(message.BodyStream, Encoding.Unicode);\nvar msgBody = reader.ReadToEnd();
3579	reqFTP.Proxy = GlobalProxySelection.GetEmptyWebProxy();
3580	var roomAmount = dc.Room.Single(r => r.RoomId == myRoomId).RoomCost;\nvar itemAmount = dc.RoomItem.Where(i => i.RoomId == myRoomId).Sum(r => r.ItemCost);\n\ntxtTotalAmount.Text= roomAmount + itemAmount ;
3581	public string this[string key]\n{\n    get\n    {\n        string str = this.QueryString[key];\n        if (str != null)\n        {\n            return str;\n        }\n        str = this.Form[key];\n        if (str != null)\n        {\n            return str;\n        }\n        HttpCookie cookie = this.Cookies[key];\n        if (cookie != null)\n        {\n            return cookie.Value;\n        }\n        str = this.ServerVariables[key];\n        if (str != null)\n        {\n            return str;\n        }\n        return null;\n    }\n}
3582	Intent intent= new Intent(this.ApplicationContext, typeof(AutoLinkActivity));
3583	string ToLatinDigits(string nativeDigits)\n    {\n        int n = nativeDigits.Length;\n        StringBuilder latinDigits = new StringBuilder(capacity: n);\n        for (int i = 0; i < n; ++i)\n        {\n            if (char.IsDigit(nativeDigits, i))\n            {\n                latinDigits.Append(char.GetNumericValue(nativeDigits, i));\n            }\n            else if (nativeDigits[i].Equals('.') || nativeDigits[i].Equals('+') || nativeDigits[i].Equals('-'))\n            {\n                latinDigits.Append(nativeDigits[i]);\n            }\n            else\n            {\n                throw new Exception("Invalid Argument");\n            }\n        }\n        return latinDigits.ToString();\n    }
3584	var srcString = @"foo foo %%match1%%, foo %%match2%%, %%match3%% foo foo";\n\nIEnumberable<string> results = Regex.Matches(srcString, @"\%\%(.*?)\%\%").Cast<Match>().Select(match => match.Value);
3585	string text = "Summary:" + Environment.NewLine + this.richTextBoxSummary.Text;\nClipboard.SetText(text);
3586	BaseAnimal myAnimal;\n\nif (someVar) {\n    var myCat = new cat();\n\n    // Do things with myCat that are cat-specific.\n\n    myAnimal = myCat;\n} else {\n    var myDog = new dog();\n\n    // Do things with myDog that are dog-specific.\n\n    myAnimal = myDog;\n}\n\nallAnimals.add(myAnimal);
3587	MethodInfo GetMethod(Type argType, Type returnType)\n{\n    var enumerableType = typeof(IEnumerable<>).MakeGenericType(new Type[] { argType });\n    Console.WriteLine(enumerableType);\n    var methods = from method in typeof(Enumerable).GetMethods(BindingFlags.Public | BindingFlags.Static)\n      let parameters = method.GetParameters()\n      let genParams = method.GetGenericArguments()\n      where method.Name == "Average" &&\n      method.ContainsGenericParameters &&                              \n      parameters.Length == 2 &&\n      parameters[1].ParameterType.GetGenericTypeDefinition() == typeof(Func<,>) &&\n      parameters[1].ParameterType.GetGenericArguments()[1] == argType &&\n      method.ReturnType == returnType\n      select method;\n\n      return methods.FirstOrDefault();\n}
3588	LinkedList<int> ll;\nll.Find(2).Value = 3;
3589	Test test = new Test() {\n    new Test2() {\n    new Test3() {\n\n    }\n    },\n    new Test() {\n    new Test2() {\n    { new Test(), new Test2() },\n    { new Test(), new Test2() },\n    { new Test(), new Test2() }\n    }\n    }\n};\n\npublic class Test : IEnumerable\n{\n    public void Add(Test a){}\n    public void Add(Test2 a){}\n    public IEnumerator GetEnumerator(){}\n}\n\npublic class Test2 : IEnumerable\n{\n    public void Add(Test a, Test2 b){}\n    public void Add(Test3 a){}\n    public IEnumerator GetEnumerator(){}\n}\n\npublic class Test3 : IEnumerable\n{\n    public void Add(Test a){}\n    public void Add(Test2 a){}\n    public IEnumerator GetEnumerator(){}\n}
3590	protected void lnk_Click(object sender, EventArgs e)\n {\n      LinkButton lnk = sender as LinkButton;\n      Label Label1 = lnk.NamingContainer.FindControl("Label1") as Label;\n\n      if (Label1.Text == "Alert1")\n      {\n          Page.ClientScript.RegisterStartupScript(this.GetType(), "OpenWindow", "window.open('alert1.aspx','_blank');", true);\n      }\n      else if (Label1.Text == "Alert2")\n      {\n          Page.ClientScript.RegisterStartupScript(this.GetType(), "OpenWindow", "window.open('alert2.aspx','_blank');", true);\n      }\n }
3591	netstat -o
3592	string pattern = @"<p\sclass=""([a-zA-Z]*)"">(.*?)</p>";\nRegex r = new Regex(pattern, RegexOptions.None);\nstring s = @"...";\n\nforeach (Match m in r.Matches(s))\n{\n   ...\n}
3593	OrgCollection myYears = Org.RetrieveDistinctYear();\nAcademicYearCollection allYears = AcademicYear.RetrieveAll();\n\nvar items = from y in myYears\n            join ay in allYears\n            on y.Code equals ay.AcademicYearCode\n            select new { ay.Name, ay.Code }
3594	// remove OrderBy if ordering is not important\nvar ordered = dictionary.OrderBy(kv => kv.Key);\nvar half = dictionary.Count/2;\nvar firstHalf = ordered.Take(half).ToDictionary(kv => kv.Key, kv => kv.Value);\nvar secondHalf = ordered.Skip(half).ToDictionary(kv => kv.Key, kv => kv.Value);
3595	IWebElement button = locator to button;\nbutton.getAttribute("disabled");
3596	public static Expression<Func<MyEntity, bool>> HasPrefix(String prefix) \n{ \n    return e => e.RowKey.CompareTo(prefix + '_') > 0 && e.RowKey.CompareTo(prefix + '`') <= 0;\n}\n\nCloudTableQuery<MyEntity> query =\n    (from e in tableServiceContext.CreateQuery<MyEntity>(tableName)\n    where e.PartitionKey == "KnownPartition"\n    select e)\n    .Where(HasPrefix("Prefix"))\n    .AsTableServiceQuery();
3597	byte[] firstArray = new byte[] {0xFF,0xFF,0xFF,0xFF}; \nbyte[] secondArray = [your data here]\nbyte[] result = firstArray.Concat(secondArray).ToArray();
3598	var directoryname = new DirectoryInfo(@"C:\Projects\Test").Name;\n\\The variable directoryname will be Test
3599	List<dynamic>
3600	height = DataGridHeight - Height of all rows except last one
3601	interface ITestInterface\n{\n    void Test();\n    string Test2();\n}\n\npublic class TestBase : ITestInterface\n{\n    #region ITestInterface Members\n\n    public void Test()\n    {\n        System.Console.WriteLine("Feed");\n    }\n\n    public string Test2()\n    {\n        return "Feed";\n    }\n\n    #endregion\n}\n\npublic class TestChild : TestBAse, ITestInterface\n{\n    public void Test()\n    {\n        System.Console.WriteLine("Feed1");\n    }\n}\n\npublic static void Main(){\n    TestChild f = new TestChild();\n    f.Test();\n\n    var i = f as ITestInterface;\n\n    i.Test();\n    i.Test2();//not implemented in child but called from base.\n}
3602	net.tcp://localhost:7996/WPFHost/mex
3603	Process::Start()
3604	int count = costumer.GroupCustomers\n    .SelectMany(gc => gc.Group.GroupEmployees)\n    .Select(ge => ge.EmployeeID)\n    .Distinct()\n    .Count();
3605	mutexName = String.Format("Global\\{{{0}}}", "Application Name");
3606	public Task CreateTask(XmlElement elem)\n{\n    if (elem != null)\n    { \n        try\n        {\n          Assembly a = typeof(Task).Assembly\n          string type = string.Format("{0}.{1}Task",typeof(Task).Namespace,elem.Name);\n\n          //this is only here, so that if that type doesn't exist, this method\n          //throws an exception\n          Type t = a.GetType(type, true, true);\n\n          return a.CreateInstance(type, true) as Task;\n        }\n        catch(System.Exception)\n        {\n          throw new ArgumentException("Invalid Task");\n        }\n    }\n}
3607	using System;\nusing System.Linq;\nusing System.Xml;\n\nstatic class Program {\n\n    static void Main(string[] args) {\n\n        string mixed = @"\nFound two objects:\nObject a\n<object>\n    <name>a</name>\n    <description></description>\n</object>\nObject b\n<object>\n    <name>b</name>\n    <description></description>\n</object>\n";\n        string xml = "<FOO>" + mixed + "</FOO>";\n        XmlDocument doc = new XmlDocument();\n        doc.LoadXml(xml);\n        var xmlFragments = from XmlNode node in doc.FirstChild.ChildNodes \n                           where node.NodeType == XmlNodeType.Element \n                           select node;\n        foreach (var fragment in xmlFragments) {\n            Console.WriteLine(fragment.OuterXml);\n        }\n\n    }\n\n}
3608	private void redballoon_click(object sender, MouseButtonEventArgs e)\n{\n    //react only when baloon is clicked by left mouse button\n    if (e.LeftButton != MouseButtonState.Pressed)\n        return;\n\n    string red_balloon_question = System.Windows.Browser.HtmlPage.Window.Prompt("Question 5X2");\n\n    if (red_balloon_question == "10")\n    {\n        MessageBox.Show("Well done that is correct, you gain 1 point", "Correct Answer", MessageBoxButton.OK);\n        PopBalloonCount++;             \n    }\n    else\n    {\n        MessageBox.Show("Incorrect, you loose 1 point", "Wrong Answer", MessageBoxButton.OK);\n        PopBalloonCount--;\n    }\n\n    score.Content = "Your Score" + " " + Convert.ToString(PopBalloonCount);\n    this.lastBalloonClickColor = "red_balloon"; // register the last click\n\n    //hide baloon\n    redballoon.Visibility = Visibility.Hidden;\n    //or\n    redballoon.Opacity = 0.0;\n}
3609	depends.exe
3610	richTextBox1.SaveFile("Test.txt or your file path",RichTextBoxStreamType.PlainText);
3611	this.TopMost = true;\nthis.Focus();\nthis.BringToFront();\nthis.TopMost = false;
3612	get\n{\n   if (Math.Abs(value) > 1 && this.PayoutType == CutType.Percent)\n   {\n      return _payout /100;\n   }\n   return _payout;\n}\nset{_payout = value;}
3613	Using{}
3614	Mapper.CreateMap<I_NEWS, NewsModel>().ForMember(x => x.DateCreated,\n  opt => opt.MapFrom(src => ((DateTime)src.DateCreated).ToShortDateString()));
3615	public List<Item> GetAll()\n    {\n        var sql =\n            "SELECT * FROM Items;" +\n            "SELECT ItemId, Tags.Title FROM ItemTag left join Tags on ItemTag.TagId = Tags.Id;";\n\n        using (var multipleResults = this.db.QueryMultiple(sql))\n        {\n            var items = multipleResults.Read<Item>().ToList();\n            var tags = multipleResults.Read<Tag>().ToList();\n\n            var tagsByItemId = tags.ToLookup(t => t.ItemId);\n\n            foreach (var item in items)\n            {\n                item.Tags = tagsByItemId[item.Id].ToList();\n            }\n\n            return items;\n        }\n    }
3616	Button btn = new Button();\nbtn.Name = "btn1";\nbtn.Click += btn1_Click;\n\nprivate void btn1_Click(object sender, RoutedEventArgs e)\n{\n    // do something\n}
3617	private Visibility _comboboxvisibility;\n\n   public Visibility comboboxvisibility\n   {\n       get { return _comboboxvisibility; }\n       set { _comboboxvisibility = value; RaisePropertyChanged("comboboxvisibility"); }\n   }\n\n   private XyZListItem _selectedItem;\n\n   public XyZListItem SelectedItem\n   {\n       get { return _selectedItem; }\n       set {\n           comboboxvisibility = Visibility.Collapsed;         \n    }\n   }
3618	[Obsolete]
3619	Path.GetTempPath()+"sdhfuisdhfusdhc";
3620	private void SendData(string value)\n    {\n        byte[] data = Encoding.ASCII.GetBytes(value);\n        try\n        {\n            using (TcpClient client = new TcpClient("31.47.53.12", 2036))\n            {\n                NetworkStream stream = client.GetStream();\n                stream.Write(data, 0, data.Length);\n            }\n        }\n        catch (Exception err)\n        {\n\n        }
3621	Dim months = {1, 2}\nDim query = From row In DataSet.A\n            Where row.Position <> 5 AndAlso months.Contains(row.Date.Month)\n            Group row By name Into eGroup = Group\n            Select New With {\n                Key .Name = name,\n                .Amount = eGroup.Count(Function(row) row.Field(Of Decimal)("Money"))\n            }
3622	VideoCapture cap (0);
3623	int i = 42; // Or whatever index you want to look up\nDateTime date = DATE_YOU_WANT_HERE;\n\nList<double> valuesForDate;\n\nbool foundDate = sortedDict.TryGetValue(date, out valuesForDate);\nif (foundDate)\n{\n    double theValue = valuesForDate[i];\n}\nelse\n{\n    // Whatever you need to do if there is no key for your date\n}
3624	DateTime dt = DateTime.ParseExact("Mar 08 1969 12:00AM","MMM dd yyyy hh:mmtt",CultureInfo.InvariantCulture);
3625	string select = "SELECT * FROM tblEmployee";\n Connection c = new Connection();\n SqlDataAdapter dataAdapter = new SqlDataAdapter(select, c.con); //c.con is the connection string\n\n SqlCommandBuilder commandBuilder = new SqlCommandBuilder(dataAdapter);\n DataSet ds = new DataSet();\n dataAdapter.Fill(ds);\n dataGridView1.ReadOnly = true; \n dataGridView.DataSource = ds.tables[0];
3626	"(.+?)"
3627	private void numericUpDown1_KeyPress(object sender, KeyPressEventArgs e)\n    {\n        if (e.KeyChar.Equals('.') || e.KeyChar.Equals(','))\n        {\n            e.KeyChar = ((System.Globalization.CultureInfo)System.Globalization.CultureInfo.CurrentCulture).NumberFormat.NumberDecimalSeparator.ToCharArray()[0];\n        }\n    }
3628	insert into book ([Book Name],Description)
3629	INSERT INTO DictionaryTest (BinNumber,Letter) VALUES (@NewCode,@NewLetter)
3630	sqrt(re * re + im * im)
3631	string joined = String.Join(sOperators, Operators);
3632	string command;\ndo\n{\n    command = Console.ReadLine();\n}\nwhile(!"3".Equals(command, StringComparison.InvariantCultureIgnoreCase))
3633	public object ReturnValue(string operationName, object returnValue)\n{\n    Type t = returnValue.GetType();\n    return Activator.CreateInstance(t);\n}
3634	HtmlDocument doc = new HtmlDocument();\n        doc.Load(myHtmlFile); // load your file\n\n        // select recursively all A elements declaring an HREF attribute.\n        foreach (HtmlNode node in doc.DocumentNode.SelectNodes("//a[@href]"))\n        {\n            node.ParentNode.ReplaceChild(doc.CreateTextNode(node.InnerText + " <" + node.GetAttributeValue("href", null) + ">"), node);\n        }\n\n        doc.Save(Console.Out); // output the new doc.
3635	private Control GetControl()\n{\n    string dynamicCtrl = CurrentItem.DynamicControl;\n    string path = SomeClass.DynamicControls[dynamicCtrl];\n\n    Control ctrl = LoadControl(path);    \n\n    return ctrl;\n}
3636	protected void GridView1_RowCommand(object sender, GridViewCommandEventArgs e)\n        {\n            switch (e.CommandName)\n            {\n                case "click":\n                    {\n                        // Populate Person Details                        \n                        PersonBL objPersonBL = new PersonBL();\n                        var objPerson = objPersonBL.GetPersonSingleByPersonID(e.CommandArgument.ToString());\n\n                        //Person objPerson = new Person();\n                        if (objPerson.Count != 0)\n                        {\n                            txtPersonID.Text = objPerson[0].PersonID;\n                            txtFirstname.Text = objPerson[0].Firstname;\n                            txtLastname.Text = objPerson[0].Lastname;\n                            break;\n                        }\n                    }\n                default:\n                    break;\n            }\n        }
3637	stripevents(AddressOf Any_Control_ValChanged)\n    stripevents(AddressOf Any_EnterControl)\n    stripevents(AddressOf Any_LeaveControl)\n    stripevents(AddressOf ButtonClick)\n\nSub stripevents(ByVal eh As EventHandler)\n    [Delegate].RemoveAll(eh, eh)\nEnd Sub
3638	myItems = new ObservableCollection<DateTime>(myItems.Distinct());
3639	string Add<T>(object value, T expiration) where T : struct, IMyInterface
3640	public static readonly DependencyProperty GridColumnsProperty = DependencyProperty.Register("GridColumns", typeof(ObservableCollection<DataGridColumn>), typeof(XGrid));\n        public ObservableCollection<DataGridColumn> GridColumns\n        {\n            get { return (ObservableCollection<DataGridColumn>)GetValue(GridColumnsProperty); }\n            set { SetValue(GridColumnsProperty, value); }\n        }\n\n\npublic XGrid()\n{\n        GridColumns = new ObservableCollection<DataGridColumn>();\n        GridColumns.CollectionChanged += (x, y) =>\n            {\n                dataGrid.Columns.Clear();\n                foreach (var column in this.GridColumns)\n                {\n                    dataGrid.Columns.Add(column);\n                }\n            };\n        InitializeComponent();\n    }
3641	Sub BookmarksInTables()\n    Dim aTable As Table\n    Dim aBookmark As Bookmark\n\n    For Each aBookmark In ActiveDocument.Bookmarks\n        For Each aTable In ActiveDocument.Tables\n            'If start of book mark is inside the table range or\n            ' the end of a book mark is inside the table range then YES!\n            If (aBookmark.Range.Start >= aTable.Range.Start _\n                And aBookmark.Range.Start <= aTable.Range.End) _\n            Or (aBookmark.Range.End >= aTable.Range.Start _\n                And aBookmark.Range.End <= aTable.Range.End) Then\n                MsgBox aBookmark.Name + " is inside a table"\n            Else\n                MsgBox aBookmark.Name + " is not inside a table"\n            End If\n        Next\n    Next\nEnd Sub
3642	File -> New -> Project -> C# (Language) -> Console Application
3643	var results = (from c in _customers\n               from ct in _customerTypes \n               where c.TypeId == ct.TypeId \n               select new\n                      {\n                         Customer = c,\n                         TypeName = ct.TypeName\n                      }).ToList();
3644	public class ClassA\n{\n    public virtual string ProcessName { get { return "ClassAProcess"; } }\n} \n\npublic class ClassB : ClassA\n{\n    public override string ProcessName { get { return "MyProcess.exe"; } }\n}
3645	public class MyDynamicObject : DynamicObject {\n    public override bool TryGetMember(GetMemberBinder binder, out Object result){\n        if (binder.Name == "myVar"){\n            result = "xyz";\n            return true;\n        }           \n\n        result = null;\n        return false;\n    }\n}\n\n// Usage\ndynamic x = new MyDynamicObject();\nConsole.WriteLine (x.myVar); // will output "xyz"
3646	public IDataReader ExecuteReaderStoredProcedure(string procName, IUnitOfWork uow, IEnumerable<KeyValuePair<string, object>> parameters)\n    {\n        var command = Sessions[uow].Connection.CreateCommand();\n\n        command.CommandText = procName;\n        command.CommandType = CommandType.StoredProcedure;\n        foreach (var param in parameters)\n        {\n            var parameter = command.CreateParameter();\n            parameter.ParameterName = param.Key;\n            parameter.Value = param.Value;\n            command.Parameters.Add(parameter);\n        }\n\n        Sessions[uow].Transaction.Enlist(command);\n        return command.ExecuteReader();\n    }
3647	string keys = "";\n\n        if ((Keyboard.Modifiers & ModifierKeys.Control) > 0)\n        {\n            keys += "Control + ";\n        }\n\n        if ((Keyboard.Modifiers & ModifierKeys.Alt) > 0)\n        {\n            keys += "Alt + ";\n        }\n\n        if ((Keyboard.Modifiers & ModifierKeys.Shift) > 0)\n        {\n            keys += "Shift + ";\n        }\n\n        keys += e.Key;\n\n        YourTextBox.Text = keys;
3648	// change this in your code\nbody.Text = row["urn:schemas:httpmail:textdescription"].ToString();\n\n// To this\nMicrosoft.Office.Interop.Outlook.MailItem mailItem =\n                             myApp.Session.GetItemFromID(row["EntryID"]);\nbody.Text = mailItem.Body;
3649	void RecursiveLoop(BackGroundWorker worker)\n{\n  // ON entry check if we need to stop\n  if (worker.CancellationPending) return;\n  //\n  // Normal code and the recursion\n  if (morework) RecursiveLoop(worker);\n}
3650	builder.RegisterAssemblyTypes(dataAccess)\n         .Where(t => (typeof(INotifier).IsAssignableFrom(t) && t.IsClass && !t.IsAbstract))\n         .AsSelf()\n         .AsImplementedInterfaces();
3651	// 2000x2000 is VERY large for an Android bitmap - consider using a smaller size?\n// You may see out of memory errors with this size.\nBitmap bitmap = Bitmap.CreateBitmap(2000, 2000, Bitmap.Config.Argb8888);\nCanvas canvas = new Canvas(bitmap);\ncanvas.drawPath(path, paint);\nimageView.setImageBitmap(bitmap);
3652	new DateTime(2011, 10, 1).ToString("MMM \\'yy")
3653	string str = "Fri May 29 2015 00:00:00 GMT-0700 (Pacific Daylight Time)";\n DateTime dt = new DateTime();\n bool b = DateTime.TryParseExact(str.Substring(0,33), "ddd MMMM dd yyyy hh:mm:ss 'GMT'zzz", null, DateTimeStyles.None, out dt);
3654	string expression;\n    expression = "NameColumn = 'John'";\n    DataRow[] foundRows;\n\n    // Use the Select method to find all rows matching the filter.\n    foundRows = table.Select(expression);\n\n    // Print column 0 of each returned row.\n    for(int i = 0; i < foundRows.Length; i ++) {\n        // List out the retreived values.\n        Console.WriteLine(foundRows[i]["ValueColumn"]);\n    }
3655	GeneralTransform transform = yourRect.TransformToVisual(yourCanvas);\nRect bounds = transform.TransformBounds(new Rect(0,0, yourRect.ActualWidth, yourRect.ActualHeight));
3656	var str = "AAAA,12,BBBB,34,CCCCC,56";\n\nvar spl = str.Split(',');\nvar l1 = spl.Where((x, y) => y % 2 == 0).ToList();\nvar l2 = spl.Where((x, y) => y % 2 == 1).ToList();
3657	rng.MoveEnd Microsoft.Office.Interop.Word.WdUnits.wdCharacter, -1\nrng.Select(); // this line is useful to see the range where bookmark will be placed\nrng.Bookmarks.Add("BookmarkName", rng);
3658	XmlAttributeOverrides xmlAttributeOverrides = new XmlAttributeOverrides();\n\n//Add overrides to xmlAttributeOverrides, use sample from internet\n\nXmlSerializer serializer = new XmlSerializer(typeof(Data), XmlAttributeOverrides);
3659	Panel polje1 = new Panel() { Name = "polje1" };\nthis.Controls.Add(polje1);\nif (this.Controls.ContainsKey("polje1")) {\n  this.Controls["polje1"].BackColor = Color.Red;\n}
3660	var details= (from p in repository.Query<Model.ProfileType>()\n             join r in repository.Query<Model.RoleProfile>() on p.Id equals r.ProfileTypeId into g\n             from x in g.DefaultIfEmpty()\n             select new RoleProfileModel{\n                    ProfileType=p.Name,\n                    SecurityLevel=x==null?string.Empty:x.SecurityLevel,\n                    ProfileCode=x==null?string.Empty:x.Code,\n}).ToArray();
3661	Video Source => Demux -> Audio Stream + Video Stream -> MP4Muxer
3662	public static class myGlobalArray\n{\n    public static int[] thisIsMyGlobalArray { get; set; }\n}
3663	Properties p = new Properties();\n        Type tClass = p.GetType();\n        PropertyInfo[] pClass = tClass.GetProperties();\n\n        int value = 0; // or whatever value you want to set\n        foreach (var property in pClass)\n        {\n            property.SetValue(p, value++, null);\n        }
3664	SET NOCOUNT ON;
3665	[HttpPost]\n    public ActionResult Edit(ClientContactViewModel model)\n    {\n        if (ModelState.IsValid)\n        {\n            ClientContact contact = db.ClientPersons.Include("Person")\n                                    .Where(x => x.ClientPersonId == model.ClientPersonId)\n                                    .SingleOrDefault();\n            contact.FirstName = model.FirstName;\n            // etc\n            db.Entry(contact).State = EntityState.Modified;\n            db.SaveChanges();\n            return RedirectToAction("Index");\n        }\n        return View(model);\n    }
3666	BackgroundImage = (Image)Properties.Resources.ResourceManager.GetObject(resourcename));
3667	var bf = new BinaryFormatter();\n object ghost = bf.Deserialize(stream);\n return ghost;
3668	using (var context = new MyEntities())\n        {\n            string lastSectionHeading = "";\n            bool isFirstHeading = true;\n\n            var dynamicPageItems = context.view_dynamicPageItems;\n            foreach (var item in dynamicPageItems)\n            {\n                if (item.IsActive == 1)\n                {\n                    if (!lastSectionHeading.Equals(item.CategoryId))\n                    {\n                        if (!isFirstHeading)\n                            CloseSection();\n                        lastSectionHeading = item.CategoryId;\n                        AddSettingsSection(item.CategoryDescription);\n                        isFirstHeading = false;\n                    }\n                    AddControl( item.DataType );\n                }\n            }\n        }
3669	using System.Reflection;\n\nstatic Program()\n{\n    AppDomain.CurrentDomain.AssemblyResolve += delegate(object sender, ResolveEventArgs e)\n    {\n        AssemblyName requestedName = new AssemblyName(e.Name);\n\n        if (requestedName.Name == "AssemblyNameToRedirect")\n        {\n            // Put code here to load whatever version of the assembly you actually have\n\n            return Assembly.LoadFrom("RedirectedAssembly.DLL");\n        }\n        else\n        {\n            return null;\n        }\n    };\n}
3670	[Column("BudgetItemID")]\n[Key]\npublic int Id { get; set; }
3671	interface IServer \n{\n    ISession Authenticate();\n}\n\ninterface ISession \n{\n    IServer Server{get;}\n    void Post();\n    void Get();\n}
3672	double GetValue(int index)\n{   \n   return double.Parse(System.IO.File.ReadAllLines(your file)[0].Split(' ')[index]);\n}
3673	paragph.Clear();\nforeach (string line in lines)\n    {\n        if (line.IndexOf(searchString, StringComparison.OrdinalIgnoreCase) >= 0)\n        {\n            //MessageBox.Show((counter + 1).ToString() + ": " + line);\n            paragph.Add((counter + 1).ToString());\n            arrparagh = paragph.ToArray();\n            toDisplay = string.Join(",", arrparagh);\n            //MessageBox.Show(toDisplay);\n        }\n        counter++;\n    }\n    yield return filePath;
3674	var filteredProducts = (from p in allProducts\n                            where usersProducts.Contains(p.Id) && p.Type == 1\n                            select p).ToList();
3675	{"param1": {"FirstName":"John","LastName":"Doe"}}
3676	using System.Reflection;\n[assembly: AssemblyVersion("1.0.0.0")]\n[assembly: AssemblyFileVersion("1.0.0.0")]
3677	int[] Ids = folders.Select(f => f.Id).ToArray();
3678	byte[] Encrypt(byte[] plain){\n  using (FileStream keyFile = new FileStream(FileName, FileMode.Open))\n  {\n    keyFile.Seek(-plain.Length, SeekOrigin.End);\n    byte[] key = new byte[plain.Length];\n    keyFile.Read(key, 0, plain.Length);    \n    byte[] encrypted = new byte[plain.Length];\n    for(int i=0;i<plain.Length;i++){\n      encrypted[i] = (byte) (plain[i] ^ key[plain.Length - 1 - i]);\n    } \n    keyFile.SetLength(keyFile.Length - plain.Length);   \n    return encrypted;\n  }      \n}
3679	Thread.Abort
3680	typeof(T).GetProperty(membername).SetValue(obj, o);
3681	var page = query.Take(count)
3682	service.SaveChanges(SaveChangesOptions.Batch);
3683	switch (comboBox1.SelectedItem.ToString())\n        {\n            case "January":\n                label1.Text = "write something about january...";\n                break;\n            case "February":\n                label1.Text = "write something about February..";\n                break;\n\n            // and so on...\n        }
3684	public static bool TryGetTags(string tagsInput, out string[] tags)\n{\n    Regex regex = new Regex(@"^[\w_-]+$");\n\n    tags = tagsInput.Split(',')  // Rule 6\n                    .Select(tag => tag.Trim())\n                    .ToArray();\n\n    if (tags.Last() == "")\n        tags = tags.Take(tags.Length - 1).ToArray();  // Rule 7\n\n    if (tags.Any(tag => tag == ""))  // (no empty tag allowed except last one)\n        return false;\n\n    if (tags.Length > 9)\n        return false;  // Rule 2\n\n    if (tags.Any(tag => tag.Length > 30))\n        return false;  // Rule 4\n\n    if (tags.Distinct().Count() != tags.Length)\n        return false;  // Rule 3\n\n    if (tags.Any(tag => !regex.IsMatch(tag)))\n        return false;  // Rule 5\n\n    return true;\n}
3685	from r in db.entries\nwhere filters.contains (r.word.substring(0,1))
3686	VoucherDate.Date.ToShortDateString();
3687	GameObject result = Array.Find(GOArray, g => g.name == "theoneiwant");
3688	MediaLibrary.Pictures
3689	Page.Title
3690	private FileClient CopyFileClientModel(FileClient fileClient) {\n    return this.CopyFileClientModel(fileClient, c => c.Client);\n}\n\nprivate FileContact CopyFileClientModel(FileContact fileContact) {\n    return this.CopyFileClientModel(fileContact, c => c.Client);\n}\n\nprivate TSource CopyFileClientModel<TSource>(TSource fileClientOrContact, Func<TSource, Contact> contactGetter) {\n    var contact = contactGetter(fileClientOrContact);\n    // Whatever else...\n}
3691	protected void LinkButton1_Click(Object sender, EventArgs   \n {\n         LinkButton button = sender as LinkButton;\n          Apartments apartAdmin = new Apartment();\n           bool deleted = apartAdmin.Delete(int.Parse(button.CommandArgument.ToString()); \n            if (deleted)\n            {\n                radGrid.Rebind();\n            }\n\n }
3692	borrowedBookList.DataSource =\n    from borrower in Borrowers\n    join transaction in Transactions\n        on borrower.BorrowerID equals transaction.BorrowerID\n    join book in Books\n        on transaction.BookID equals book.BookID\n    select new\n    {\n        borrower.BorrowerID,\n        borrower.BorrowerName,\n        book.BookName,\n        transaction.BorrowDate,\n        transaction.ReturnDate,\n    }\n\nborrowedBookList.DataBind();
3693	ElementHost host = new ElementHost();\nInkCanvas ic = new InkCanvas();\nhost.Child = ic;\nControls.Add(host);
3694	from att in context.Attendees\n                          join webUsers in context.WebUsers\non att.web_user_id equals webUsers.id\n                          join invoice in context.Invoice\n                          on att.InvoiceID equals invoice.ID                          \n                          where invoice.SeminarID == seminarId                                       \n                          select new\n                          {\n                              webUsers.FirstName,\n                              att.InvoiceID                                                       \n                          };
3695	Dim data As New Attachment(New MemoryStream(ByteArray), "SomeName")
3696	var ii=i;\ntasks[i] = Task.Factory.StartNew(() =>\n                {\n                    nums.Add(numbers[ii]);\n                }, \n                TaskCreationOptions.None);
3697	int width = sizeof(float);\n\n    int nDataIndex = 0;\n    byte[] data = new byte[myData.Count * width];\n\n        for (int i = 0; i < myData.Count; ++i)\n        {\n            byte[] converted = BitConverter.GetBytes(myData[i]);\n\n            if (BitConverter.IsLittleEndian)\n            {\n                Array.Reverse(converted);\n            }\n\n            for (int j = 0; j < width; ++j)\n            { \n\n                data[nDataIndex+j] = converted[j];          \n            }\n            nDataIndex+=width;\n        }\n\n        client.Send(data, data.Length, remoteEndPoint);
3698	string username = User.Identity.Name;
3699	DataGridViewColumn column = dataGridView1.SortedColumn;\nListSortDirection order;\n\nif (dataGridView1.SortOrder.Equals(SortOrder.Ascending))\n   {\n       order = ListSortDirection.Ascending;\n   }\nelse\n   {\n       order = ListSortDirection.Descending;\n   }\n\ndataGridView1.Sort(column, order);
3700	public static void Savedata()\n{\n    if (HttpContext.Current != null)\n    {\n        Page page = (Page)HttpContext.Current.Handler;\n        TextBox TextBox1 = (TextBox)page.FindControl("TextBox1");\n\n        TextBox TextBox2 = (TextBox)page.FindControl("TextBox2");\n    }\n}
3701	public static void Function([QueueInput] string testqueue)\n    {\n    }
3702	public Func<bool> GenerateCheckIsLocal() {\n\n            var dynamicMethod = new DynamicMethod("CheckIsLocal", typeof(bool), Type.EmptyTypes, true);\n\n            var il = dynamicMethod.GetILGenerator();\n\n            il.Emit(OpCodes.Call, typeof(HttpContext).GetProperty("Current").GetMethod);\n            il.Emit(OpCodes.Call, typeof(HttpContext).GetProperty("Request").GetMethod);\n            il.Emit(OpCodes.Call, typeof(HttpRequest).GetProperty("IsLocal").GetMethod);\n            il.Emit(OpCodes.Ret);\n\n            return dynamicMethod.CreateDelegate(typeof(Func<bool>)) as Func<bool>;\n        }
3703	string findMe = "625 ILCS 5/11-503 - Reckless Driving";\n\nType enumType = typeof(IllinoisNonDisclosureConvictionFormOptions);\nType descriptionAttributeType = typeof(DescriptionAttribute);\n\nforeach (string memberName in Enum.GetNames(enumType))\n{\n    MemberInfo member = enumType.GetMember(memberName).Single();\n\n    string memberDescription = ((DescriptionAttribute)Attribute.GetCustomAttribute(member, descriptionAttributeType)).Description;\n\n    if (findMe.Equals(memberDescription))\n    {\n        Console.WriteLine("Found it!");\n    }\n}
3704	public bool IsV40Installed()\n    {\n        try\n        {\n            System.Reflection.Assembly.Load("System.Data.SqlServerCe, Version=4.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91");\n        }\n        catch (System.IO.FileNotFoundException)\n        {\n            return false;\n        }\n        try\n        {\n            var factory = System.Data.Common.DbProviderFactories.GetFactory("System.Data.SqlServerCe.4.0");\n        }\n        catch (System.Configuration.ConfigurationException)\n        {\n            return false;\n        }\n        catch (System.ArgumentException)\n        {\n            return false;\n        }\n        return true;\n    }
3705	//Note the IDisposable interface\npublic class MultiSqlCommand : IDisposable\n{\n  //DbConnectionType  is a custom enum\n  public MultiSqlCommand(DbConnectionType connType, DbConnection conn)\n  {\n    //initialize members\n    ...\n    switch(connType) \n    {\n      case ADO:\n        _cmd = new SqlCommand(_connection);\n        break;\n      case ODBC:\n        ...\n    }\n  }\n\n  //As param name you pass the undecorated parameter name (no @, ?, etc.)\n  public void AddParameter(string strippedName, object value) \n  {\n    //this should be an internal function which gives you an SqlParameter formatted for your specific DbConnectionType\n    object parameter = GetSqlParam(strippedName, value);\n    _cmd.Parameters.Add(object);\n  }\n}
3706	var colorBrush = new SolidColorBrush(Colors.Transparent);\ntreeNode.Resources.Add(SystemColors.HighlightBrushKey, colorBrush);
3707	customers.ToList().ForEach(g => Console.WriteLine("{0} has {1} customers: {2}",\n    g.Country, \n    g.Customers.Count(), \n    string.Join(", ",\n        g.Customers.Select((x, i) => i + ". " + x.CompanyName).ToArray())));
3708	source.Should().Equal(target, (left, right) => AreEqualApproximately(left, right, 0.01));
3709	string version = Assembly\n                     .GetExecutingAssembly()\n                     .GetReferencedAssemblies()\n                     .Where(x => x.Name == "System.Core").First().Version.ToString();
3710	public static List<string> GetDocuments(Guid id, string documentType)\n{\n   return GetDocuments<Guid>(id, documentType);\n}
3711	// if you want timeout support use \n        // try{var success=Monitor.TryEnter(m_syncObj, 2000);}\n        // finally{Monitor.Exit(m_syncObj)}\n        lock(m_syncObj)\n        {\n            l.LogInformation("Got lock to read/write file-based server state.", (Int32)VipEvent.GotStateLock);\n            using (var fileStream = File.Open(ServerState.PATH, FileMode.OpenOrCreate, FileAccess.ReadWrite, FileShare.None))\n            {\n                // the line below is risky, what will happen if the call to invoke\n                // never returns? \n                result = func.Invoke(fileStream);\n            }\n        }\n\n        l.LogInformation("Released state file lock.", (Int32)VipEvent.ReleasedStateLock);\n        return true;\n\n        // note exceptions may leak out of this method. either handle them here.\n        // or in the calling method. \n        // For example the file access may fail of func.Invoke may fail
3712	var newList = data.Where(s => s.StartsWith(input)).ToList();
3713	protected void Application_AuthenticateRequest(object sender, EventArgs e)\n{\n    if (HttpContext.Current.User != null)\n    {\n        if (HttpContext.Current.User.Identity.IsAuthenticated)\n        { \n        }\n    }\n}
3714	Map(x => x.Factor).Column("FACTOR").CustomSqlType("decimal(p,s)").Not.Nullable();
3715	if (!IsPostBack)
3716	Process.Start("IExplore.exe", "C:\\myPath\\myFile.htm");
3717	var createdEx = Expression.Lambda<Func<TModel, DateTime?>>...
3718	ObservableCollection<string> myCollection = new ObservableCollection<string>;\nmyCollection.Add("One");\nmyCollection.Add("Two");\nmyCollection.Add("Three");\nmyCollection.Add("Four");\nmyCollection.Add("Five");\n\nmyCollection[4] = "Six"; // Replace (i.e. Set)
3719	public static Control DeepFindControl(Control c, string id)\n{\n   if (c.ID == id)\n   { \n     return c;\n   }\n   if (c.HasControls)\n   {\n      Control temp;\n      foreach (var subcontrol in c.Controls)\n      {\n          temp = DeepFindControl(subcontrol, id);\n          if (temp != null)\n          {\n              return temp; \n          }\n      }\n   }\n   return null;\n}
3720	var location = Path.GetDirectoryName(typeof(YourType).Assembly.Location);
3721	System.Data.Common.DbTransaction transaction = null;\n        DBDataContext db = new DBDataContext();\n        db.Connection.Open();\n        transaction = db.Connection.BeginTransaction();\n        db.Transaction = transaction;\n\n        Table1 = new Table1();\n        obj.objName = "some name";\n        db.Table1s.InsertOnSubmit(obj);\n        db.SubmitChanges();\n\n        Table2 obj_info = new Table2();\n        obj_info.Info = "some info";\n        obj_info.Id = obj.Id;\n        db.Table2s.InsertOnSubmit(obj_info);\n        db.SubmitChanges();\n        try\n        {\n            db.SubmitChanges();\n            transaction.Commit();\n        }\n        catch (Exception)\n        {\n            transaction.Rollback();\n        }\n        finally\n        {\n            transaction.Dispose();\n            db.Dispose();\n        }
3722	public DataPool<T>\n{\n        internal class DataStructHelper<T>\n        {\n            public T DataObject { get; private set; }\n            public int Size { get; private set; }\n            public DataStructHelper(T dataObject)\n            {\n                DataObject = dataObject;\n                Size = GetObjectSize(dataObject);\n            }\n\n            private int GetObjectSize(T TestObject)\n            {\n                BinaryFormatter bf = new BinaryFormatter();\n                using (MemoryStream ms = new MemoryStream())\n                {\n                    byte[] Array;\n                    bf.Serialize(ms, TestObject);\n                    return ms.ToArray().Length;\n                }\n            }\n        }\n    }\n// Other code here\n}
3723	SqlCommand sqlcmd = sqlcon.CreateCommand();\nsqlcmd.CommandText = "Select distinct transactionName from dbo.tbl " + \n                     "where terminalId = @id";\n\nsqlCmd.Parameters.AddWithValue("@id",  textBox_cardNumber.Text);\n....
3724	List<string> bids = search_string_full_of_comma_bids.Split(';').ToList();\n        query = query.Where(t => bids.Any(b=> \n                               t.BuildingIDs.StartsWith (b+";") //if it's in the start\n                              || t.BuildingIds.EndsWith (";" + b) //end \n                              || t.BuildngIds.Contains(";" + b + ";") //;id;\n                              ));
3725	ConfigurationManager.RefreshSection("appSettings");
3726	ThankYouMessage  = new XhtmlString("Default thank you message")
3727	using (var sr = new StreamReader("a.csv"))\n{\n    var myArray = sr.ReadToEnd()\n        .Split('\n')\n        .SelectMany(s => s.Split(',')\n            .Select(x => int.Parse(x)))\n        .ToArray<int>();\n\n    foreach(var x in myArray)\n        Console.WriteLine (x);\n}
3728	using (var sr = File.OpenText(path))\n{\n  var line = string.Empty;\n  while ((line = sr.ReadLine()) != null)\n  {\n    var dataPoints = line.Split(',');\n    // Create Your Data Mappings Here\n    // dataPoints[0]...\n  }\n}
3729	var newAuctionsResults = repo.FindAllAuctions()\n                        .Where(a => a.IsActive == true \n                                    || (a.StartTime.Value.Year == todayYear\n                                        && a.StartTime.Value.Month == todayMonth\n                                        && a.StartTime.Value.Day == todayDay))\n                        .ToList();
3730	WebClient wc = new WebClient();\nvar json = (JObject)JsonConvert.DeserializeObject(wc.DownloadString(url));\n\nvar country = json["results"]\n                .SelectMany(x => x["address_components"])\n                .FirstOrDefault(t => t["types"].First().ToString() == "country");\n\nvar name = country!=null ? country["long_name"].ToString() : "";
3731	Stream outStream = File.Open(filename, FileMode.Open);\noutStream.Seek(0x6354C, SeekOrigin.Begin);\noutStream.WriteByte(0xb0);
3732	Json(results)
3733	static int[] long2doubleInt(long a) {\n        int a1 = (int)(a & uint.MaxValue);\n        int a2 = (int)(a >> 32);\n        return new int[] { a1, a2 };\n    }\n\n    static long doubleInt2long(int a1, int a2)\n    {\n        long b = a2;\n        b = b << 32;\n        b = b | (uint)a1;\n        return b;\n    }\n\n\n    static void Main(string[] args)\n    {\n        long a = 12345678910111213;\n        int[] al = long2doubleInt(a);\n        long ap = doubleInt2long(al[0],al[1]);\n        System.Console.WriteLine(ap);\n        System.Console.ReadKey();\n    }
3734	struct MyStruct\n{\n    public List<string> MyList;\n    public int MyInt;\n\n    public MyStruct(int myInt)\n    {\n        MyInt = myInt;\n        MyList = new List<string>();\n    }\n}
3735	var doc = new HtmlAgilityPack.HtmlDocument();\ndoc.LoadHtml(html);\n\nforeach (var img in doc.DocumentNode.Descendants("img"))\n{\n    img.Attributes.Remove("width");\n    img.Attributes.Remove("height");\n}\n\nvar newhtml = doc.DocumentNode.OuterHtml;
3736	public bool OnlyHexInString(string test)\n{\n    // For C-style hex notation (0xFF) you can use @"\A\b(0[xX])?[0-9a-fA-F]+\b\Z"\n    return System.Text.RegularExpressions.Regex.IsMatch(test, @"\A\b[0-9a-fA-F]+\b\Z");\n}
3737	string imageFolder = @"\Shared\ShellContent"; \nstring shareJPEG = "shareImage.jpg"; \n\n...\n\nprivate void CreateLiveTile(TileItem item)  \n{   \n    var title = item.Title.ToString();  \n    string tileParameter = "Param=" + item.Title.ToString();  \n\n    ShellTile Tile = CheckIfTileExist(tileParameter);  // Check if Tile's title has been used               \n\n    if (Tile == null)  \n    {        \n        string filePath = System.IO.Path.Combine(imageFolder, shareJPEG);                \n        background = new Uri(@"isostore" + filePath, UriKind.Absolute);    //this worked\n\n        ...\n\n     }\n}
3738	public class UniqueKeyMaker\n{\n    private int[] keys = new int[8];\n\n    public void Reset()\n    {\n        for (int i = 0; i < keys.Length; i++)\n            keys[i] = 0;\n    }\n\n    public string NextKey()\n    {       \n        string key = getCurrentKey();\n        increment();\n        return key;\n    }\n\n    private void increment()\n    {\n        int i = 7;\n        while (keys[i] == 35)\n        {\n            keys[i] = 0;\n            i--;\n        }\n\n        keys[i]++;\n    }\n\n    private string getCurrentKey()\n    {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < 8; i++)\n        {\n            if (keys[i] < 10)\n                sb.Append((char)(keys[i] + (int)'0'));\n            else\n                sb.Append((char)(keys[i] - 10 + (int)'a'));\n        }\n        return sb.ToString();\n    }\n}
3739	public class HomeController\n{\n   public ActionResult Index()\n   {\n      // Do something with model here, in this example we are creating a new model\n      var model = new Model(); \n\n      // Send the model to the view, this is then available as @Model\n      return View(model);\n   }\n}
3740	public enum DataFormat{ JSON=0, XML=1, PRINTR=2 } \n\npublic ReturnType SomeFunction( DataFormat format )\n{\n    if( DataFormat.JSON == format ) \n        return ....\n    //etc\n}
3741	string s = string.Empty;\nMessageBox.Show(s = string.Format("Hello World"));
3742	armyListing.army.Add(army)
3743	spfieldlookupvalue value=new SpFiledlookupvalue(item["column name"]);\nstring id=value.lookupid;//you can retrieve the text,id\nstring text=value.lookuptext;
3744	string[] data = new[] { \n    postalAddress.Line1, \n    postalAddress.Line2, \n    postalAddress.Line3, \n    postalAddress.Line4, \n    postalAddress.Suburb, \n    postalAddress.StateCode, \n    postalAddress.Pcode \n};\n\nstring address = string.Join(", ", \n                             data.Where(e => !string.IsNullOrWhiteSpace(e));
3745	static public string GetHTML(Control myControl)\n{\n        System.IO.StringWriter sw = new System.IO.StringWriter();\n        HtmlTextWriter myWriter = new HtmlTextWriter(sw);\n        myControl.RenderControl(myWriter);\n        return sw.ToString();\n}
3746	IF {db_column} = 1 THEN false ELSE true
3747	string yourText = Encoding.UTF8.GetString(yourByteArray);
3748	string time = "00";\nint Result = 02;\ntextresult.Text=Result.ToString("D2") + ":" + time;
3749	listView1.Columns.Add("x", 100, HorizontalAlignment.Center)
3750	var products = context.Products\n    .Where(p =>\n        p.Name == "searchString" ||\n        p.OrderDetailList.Any(od => od.Order.orderName == "searchString"))\n    .ToList();
3751	private void textBox1_TextChanged(object sender, EventArgs e)\n    {\n        textBox1.Text = string.Format("{0:#,##0.00}", double.Parse(textBox1.Text));\n    }\n\n    private void textBox1_KeyPress(object sender, KeyPressEventArgs e)\n    {\n        if (!char.IsControl(e.KeyChar) && !char.IsDigit(e.KeyChar) && (e.KeyChar != '.'))\n        {\n            e.Handled = true;\n        }\n\n        // only allow one decimal point\n        if ((e.KeyChar == '.') && ((sender as TextBox).Text.IndexOf('.') > -1))\n        {\n            e.Handled = true;\n        }\n    }
3752	string binary = @"C:\MySQL\MySQL Server 5.0\bin\mysqldump.exe"\nstring arguments = @"-uroot -ppassword sample"\nProcessStartInfo PSI = new System.Diagnostics.ProcessStartInfo(binary, arguments);\nPSI.RedirectStandardInput = true;\nPSI.RedirectStandardOutput = true;\nPSI.RedirectStandardError = true;\nPSI.UseShellExecute = false;\nProcess p = System.Diagnostics.Process.Start(PSI);\nEncoding encoding = p.StandardOutput.CurrentEncoding;\nSystem.IO.StreamWriter SW = new StreamWriter(@"c:\backup.sql", false, encoding);\np.WaitOnExit();\nstring output = p.StandardOutput.ReadToEnd()\nSW.Write(output)\nSW.Close();
3753	. , ; ? !
3754	using (OperationContextScope scope = new OperationContextScope(((IContextChannel) proxy))\n  {\n          // your code to add custom header\n  }
3755	oMsg.Body = TextBox1.text;
3756	int[] ia = new int[] { -4, 10, 11, 12, 13, -1, 9, 8, 7, 6, 5, 4, -2, \n                        6, 15, 32, -5, 6, 19, 22 };\n\nvar result = ia\n             .SkipWhile(i => i != -1)\n             .Skip(1)\n             .TakeWhile(i => i >= 0);
3757	ViewState["questionNumberCounter"]=Convert.ToInt32(ViewState["questionNumberCounter"])+1
3758	protected override void Render(HtmlTextWriter writer)\n    {\n        var sw = new System.IO.StringWriter();\n        var tw = new HtmlTextWriter(sw);\n        base.Render(tw);\n\n        Response.Write(String.Format("{{\"myresponse\": {{  \"id": \"123",\"html\":\"{0}\"}}}}"\n        , Server.HtmlEncode(sw.ToString()).Replace("\n"," "));\n        Response.Flush();\n        Response.End();\n    }
3759	foreach (DataRow row in dt.Rows)\n{\n    try\n    {\n        DataTable newtable = new DataTable();\n        newtable = dt.Clone(); // Use Clone method to copy the table structure (Schema).\n        newtable.ImportRow(row); // Use the ImportRow method to copy from dt table to its clone.\n        UserInfo = GetInfo(newtable);\n\n    catch (Exception exep)\n    {\n        //\n    }\n}
3760	Surface oldDepthBuffer = device.DepthStencilSurface;\nTexture db = new Texture(device, w, w, 1, Usage.DepthStencil, oldDepthBuffer.Description.Format, Pool.Default);\n\nSurface myDepthBuffer = db.GetSurfaceLevel(0);\n\ndevice.SetRenderTarget(0, surface);\ndevice.DepthStencilSurface = myDepthBuffer;\n\n// RENDER to texture\n\ndevice.DepthStencilSurface = oldDepthBuffer;
3761	static string[] GetFiles(string directory, params string[] extensions)\n{\n    var allowed = new HashSet<string>(extensions, StringComparer.CurrentCultureIgnoreCase);\n\n    return Directory.GetFiles(directory)\n                    .Where(f => allowed.Contains(Path.GetExtension(f)))\n                    .ToArray();\n}\n\nstatic void Main(string[] args)\n{\n    string[] files = GetFiles(@"D:\My Documents", ".TXT", ".docx");\n    foreach(var file in files)\n    {\n        Console.WriteLine(file);\n    }\n}
3762	{\n    "container_commands": {\n        "01": {\n            "command": "icacls \"C:/inetpub/wwwroot/AppName_deploy/App_Data/AppFolder\" /grant DefaultAppPool:(OI)(CI)F"\n        }\n    }\n}
3763	private void BuildTree(TreeView treeView, XDocument doc)\n    {\n        TreeNode treeNode = new TreeNode(doc.Root.Name.LocalName);\n        treeView.Nodes.Add(treeNode);\n        BuildNodes(treeNode, doc.Root);\n    }\n\n    private void BuildNodes(TreeNode treeNode, XElement element)\n    {\n        foreach (XNode child in element.Nodes())\n        {\n            switch (child.NodeType)\n            {\n                case XmlNodeType.Element:\n                    XElement childElement = child as XElement;\n                    TreeNode childTreeNode = new TreeNode(childElement.Name.LocalName);\n                    treeNode.Nodes.Add(childTreeNode);\n                    BuildNodes(childTreeNode, childElement);\n                    break;\n                case XmlNodeType.Text:\n                    XText childText = child as XText;\n                    treeNode.Nodes.Add(new TreeNode(childText.Value));\n                    break;\n            }\n        }\n    }\n}
3764	PhantomJSOptions options = new PhantomJSOptions();\noptions.AddAdditionalCapability("phantomjs.page.settings.userAgent", "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:26.0) Gecko/20100101 Firefox/26.0");\nIWebDriver driver = new PhantomJSDriver(options);
3765	private static readonly HashSet<char> _base64Characters = new HashSet<char>() { \n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', \n    'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', \n    'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', \n    'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/', \n    '='\n};\n\npublic static bool IsBase64String(string value)\n{\n    if (string.IsNullOrEmpty(value))\n    {\n        return false;\n    }\n    else if (value.Any(c => !_base64Characters.Contains(c)))\n    {\n        return false;\n    }\n\n    try\n    {\n        Convert.FromBase64String(value);\n        return true;\n    }\n    catch (FormatException)\n    {\n        return false;\n    }\n}
3766	var ordinal = reader.GetOrdinal("kyrname");\nwhile (reader.Read())\n    {\n        result[i] = reader.GetString(ordinal);\n        i++;\n    }
3767	[Test]\n[Category("Category1")\nprivate void DoSomethingForCat1()\n{\n    TestSomeStuff("category1");\n}\n\n[Test]\n[Category("Category2")\nprivate void DoSomethingForCat2()\n{\n    TestSomeStuff("category2");\n}\n\n\nprivate void TestSomeStuff(string category)\n{\n    if(category == "Category1"){\n        (...)\n    }\n    else if(category == "Category2"){\n        (...)\n    }\n}
3768	objectname.abc(3,"SomeSting");
3769	DataRow[] rows = dTable.Select(" user_tb > 5"); // default\nDataRow[] rows1 = dTable.Select(" user_tb > 5", "user_tb ASC"); // with sorting
3770	127.0.0.1       localhost
3771	cblTest.DataSource = "YourDataTableOrDataset";\n        cblTest.DataValueField = "YourIDColumnFromYourTable";\n        cblTest.DataTextField = "YourColumnName";\n        cblTest.RepeatDirection = RepeatDirection.Horizontal;//Option of vertical\n        cblTest.RepeatColumns = 5; //or however many you need i.e how many columns you want to go across before repeating\n        cblTest.CssClass = "YourCSSClass"; //for styling the checkboxlist\n        cblTest.DataBind();
3772	Dictionary<int, int> data = new Dictionary<int, int>();\ndata.Add(1,1);\ndata.Add(2,2);\ndata.Add(5,5);\ndata.Add(6,4);
3773	table.Width = 100;
3774	public int var1 { get;set;}\n\npublic int var2 { get;set;}
3775	transform.GetComponent<Renderer>().material.texture="yourTexture"
3776	struct Example<T>\n{\n    private object obj;\n    public T Obj\n    {\n        get\n        {\n            return (T)obj;\n        }\n        set\n        {\n            this.obj = value;\n        }\n    }\n}
3777	command.CommandTimeout = 60; //The time in seconds to wait for the command to execute. The default is 30 seconds.
3778	Addresses.FirstOrDefault(x => x.paon.Trim() == Regex.Replace(exception.AddressLineOne, "[^0-9]", "") && x.thorofare.Trim() == (Regex.Replace(exception.AddressLineOne, "[^a-zA-Z\\s]", "").Trim()))
3779	using(SqlConnection conn = new SqlConnection("YOUR_CONNECTION_STRING"))\n{\n    conn.Open();\n    using (SqlCommand command = conn.CreateCommand())\n    {\n        command.CommandType = CommandType.StoredProcedure;\n\n        SqlParameter parameter = command.Parameters.Add("@yourParameter", SqlDbType.VarChar, 50);\n        parameter.Direction = ParameterDirection.Output;\n\n        command.CommandText = "YOUR_STORED_PROCEDURE";\n        command.ExecuteNonQuery();\n        return parameter.Value;    \n    }\n}
3780	public class SharedLogger : ILogger\n{\n   public static SharedLogger Instance = new SharedLogger();\n\n   public void Write(string s)\n   {\n      lock (_lock)\n      {\n         _writer.Write(s);\n      }\n   }\n\n   private SharedLogger() \n   { \n      _writer = new LogWriter();\n   }\n\n   private object _lock;\n   private LogWriter _writer;\n}
3781	var specificFields = db.Session.CreateQuery("SELECT t.Name, t.Address FROM MyTable t WHERE t.Name='AName'").List();\n\nvar specificFields = db.Session.CreateQuery("SELECT t.Name, t.Address FROM MyTable t WHERE t.Name='AName'").List<Tuple<string,string>>();
3782	var batchSize = 3;\nvar batched = orig\n    .Select((Value, Index) => new {Value, Index})\n    .GroupBy(p => p.Index/batchSize)\n    .Select(g => g.Select(p => p.Value).ToList());
3783	var lastRow = splitRow.Last();\n        var lastPosition = lastRow.Split(';').First();
3784	string _val = "";\nConsole.Write("Enter your value: ");\nConsoleKeyInfo key;\n\ndo\n{\n    key = Console.ReadKey(true);\n    if (key.Key != ConsoleKey.Backspace)\n    {\n        double val = 0;\n        bool _x = double.TryParse(key.KeyChar.ToString(), out val);\n        if (_x)\n        {\n            _val += key.KeyChar;\n            Console.Write(key.KeyChar);\n        }\n    }\n    else\n    {\n        if (key.Key == ConsoleKey.Backspace && _val.Length > 0)\n        {\n            _val = _val.Substring(0, (_val.Length - 1));\n            Console.Write("\b \b");\n        }\n    }\n}\n// Stops Receving Keys Once Enter is Pressed\nwhile (key.Key != ConsoleKey.Enter);\n\nConsole.WriteLine();\nConsole.WriteLine("The Value You entered is : " + _val);\nConsole.ReadKey();
3785	public class Estandar {\n    public int Id { get; set; }\n}\n\npublic interface IConector {\n    IEnumerable<Estandar> listar(string name, Estandar estandar, object key);   \n}\n\n\n[TestMethod]\npublic void CheckAnonymous() {\n\n    var connector = new Mock<IConector>();\n\n    connector.Setup(cn => cn.listar("FetchEstandar",\n                                    It.IsAny<Estandar>(),\n                                    It.Is<object>(it => MatchKey(it, 1))))\n             .Returns(new List<Estandar> { new Estandar { Id = 1 } });\n\n    var entidad = connector.Object.listar("FetchEstandar", new Estandar(), new { Id = 1 });\n\n    Assert.AreEqual(1, entidad.Count());\n\n}\n\npublic static bool MatchKey(object key, int soughtId) {\n    var ret = false;\n    var prop = key.GetType().GetProperty("Id");\n    if (prop != null) {\n        var id = (int)prop.GetValue(key, null);\n        ret = id == soughtId;\n    }\n    return  ret;\n}
3786	string message1 = "Google.Apis.Requests.RequestError.Entity already exists. "\n                          +"[409]. Errors [. Message[Entity already exists.] Location [ - ] Reason [duplicate] Domain [global] .]";\n        string message2 = "Google.Apis.Requests.RequestError.Domain user limit reached. "\n                          +"[412]. Errors [. Message[Domain user limit reached.] Location [If-Match - header] Reason[limitExceeded] Domain[global] .]";\n\n        string pattern = @"Message\[((\w+\s){2,}(\w+\s?)*)\.\]";\n\n        Regex regex = new Regex(pattern);\n\n        Match m = regex.Match(message1); //or regex.Match(message2)\n        if (m.Success)\n        {\n            Group g = m.Groups[1]; //m.Groups[0] will Match 'Message[.....]'\n            CaptureCollection cc = g.Captures;\n\n            for (int i = 0; i < cc.Count; i++)\n            {\n                Capture c = cc[i];\n                Console.WriteLine("Message: {0}", c);\n            }\n        }\n\n        Console.ReadLine();
3787	var userdateformat = DateTime.ParseExact("20101020", "yyyyMMdd", System.Globalization.CultureInfo.CurrentCulture);
3788	int[] indices = { 0, 2, 4, 9, 10, 11, 13 };\nstring[] strings = { "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q" };\n\nIEnumerable<string> results = indices.Select(s => strings[s]);\n\n// or List<string> results = indices.Select(s => strings[s]).ToList();\n\nforeach (string result in results) // display results\n{\n    Console.WriteLine(result);\n}
3789	final ObjectMapper mapper = new ObjectMapper();\n\nfinal AmazonSNSMessage message \n    = mapper.readValue(yourInput, AmazonSNSMessage.class);
3790	CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewRowPresenter}}, Path=DataContext}"
3791	Console.ReadLine();\n}
3792	for (int i = 0; i < row; i++)\n{\n        for (int j = 0; j < column; j++)\n        {\n            Console.Write("Enter a number: ");\n            var value = Console.ReadLine();\n            int result; \n            if(int.TryParse(value,out result)) arrayFour[i,j] = result;\n            else \n            {\n               Console.WriteLine("Invalid value! try again..");\n               j--;\n            }\n        }\n\n}
3793	public class Animal {\nprotected Animal() { }\n\npublic Animal(string name, string species) {\n_Name = name;\n_Species = species;\n}\n\npublic virtual string Name {\nget { return _Name; }\nset { _Name = value; }\n}\nprivate string _Name;\n\npublic virtual string Species {\nget { return _Species; }\nset { _Species = value; }\n}\nprivate string _Species;\n}\n\npublic sealed class NullAnimal : Animal {\npublic override string Name {\nget { return String.Empty; }\nset { }\n}\npublic override string Species {\nget { return String.Empty; }\nset { }\n}\n}
3794	public class MenuItem\n{\n   public string Text { get; set; }\n   public string NavigateUrl { get; set; }\n   .\n   .\n\n   public List<MenuItem> Children { get; set; }\n\n}
3795	MySqlConnectionStringBuilder connBuilder = new MySqlConnectionStringBuilder();\n// .. set up the rest of your connection\nconnBuilder.IgnorePrepare = false;\n\nMySqlConnection conn = new MySqlConnection(connBuilder.ToString());
3796	Browser _currentBrowser = new IE();\n\nLink myLink = _currentBrowser.Link(Find.ById("navigation-id"));\nmyLink.FireEvent("mouseover");\nmyLink.FireEvent("mousemove");
3797	var currentAssembly = GetType().GetTypeInfo().Assembly;\nvar migrations = currentAssembly.DefinedTypes\n                                .Where( type => type.ImplementedInterfaces\n                                                    .Any(inter => inter == typeof (IMigration)) && !type.IsAbstract )\n                                .OrderBy( type => type.Name );
3798	Stopwatch sw = new Stopwatch();\nsw.Start();\n\nwhile (true)\n{\n    Console.SetCursorPosition(0, 0);\n    Console.Write(sw.Elapsed.ToString("g"));\n\n    if (sw.Elapsed.TotalMinutes > 30)\n        break;\n}
3799	public class Class1<T> : IInterface\nwhere T : Test2\n{\n    public T Test { get; private set; }\n\n    Test2 IInterface.Test\n    {\n        get { ... }\n    }\n}
3800	var reader = new StreamReader(Request.InputStream);\nvar json = reader.ReadToEnd();\ncmupdate u = JsonConvert.DeserializeObject<cmupdate>(json);\n\nstring output = "";\noutput = "ListID: " + u.ListID;\nList<Event> t = u.Events;\noutput += "OldEmailAddress:" + t[0].OldEmailAddress + " EmailAddress:" + t[0].EmailAddress;
3801	fileitem.DropDownItems.Add("New", _\n                           Image.FromFile("C:\\add.png"), _\n                           AddressOf NewFile_click)
3802	using Company.WebServices;\n\nnamespace ST_abcdef.csproj\n{\n    [System.AddIn.AddIn("ScriptMain", Version = "1.0", Publisher = "", Description = "")]\n    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase\n    {\n        public void Main()\n        {\n            WebService1 webService1 = new WebService1();\n            var result = webService1.methodA("param1", "param2");\n            // process result\n        }\n    }\n}
3803	HtmlAgilityPack.HtmlDocument doc = new HtmlAgilityPack.HtmlDocument();\ndoc.LoadHtml(html);\n\nvar table = doc.DocumentNode.SelectNodes("//table/tr")\n               .Select(tr => tr.Elements("td").Select(td => td.InnerText).ToList())\n               .ToList();
3804	private static int runupdates(string arr)\n{\n    updatestatement = "";\n    using (SqlConnection connection = new SqlConnection(SQLConnectionString))\n    {\n        connection.Open();\n        using (SqlCommand command = new SqlCommand(updatestatement, connection))\n        {\n        command.CommandText = updatestatement;\n        int nummmm = command.ExecuteNonQuery();\n        connection.Close();\n        }\n    }\n    return nummmm;\n}
3805	listBox1.DataSource = programasSPTV1.Zip(horasSPTV1, (a,b) => (a + " : " + b)).ToList();
3806	int cnt = 0;\nwhile (cnt < 2) cnt += port.Read(size, cnt, 2 - cnt);
3807	public class YourViewModel \n{\n    public YourViewModel()\n    {\n        AspectRatio.PropertyChanged += AspectRatio_PropertyChanged;\n    }\n\n    void AspectRatio_PropertyChanged(object sender, PropertyChangedEventArgs e)\n    {\n        if (e.PropertyName == "Value")\n            NotifyPropertyChanged("ResolutionList");\n    }        \n}
3808	XDocument doc = XDocument.Parse(someStringContainingXml);\nvar cats = from node in doc.Descendants("Animal")\n           where node.Attribute("Species").Value == "Cat"\n           select node.Attribute("Name").Value;
3809	public class Prices\n{\n    public string category { get; set; }\n    public string price { get; set; }\n}
3810	foreach (var PharosUserItem in ListRef)\n    {\n        ADUser User;\n        try\n        {\n            User = new ADUser(PharosUserItem.UserLoginPharos);\n        }\n        catch (ByTel.DirectoryServices.Exceptions.UserNotFoundException ex)\n        {\n            continue;\n        }\n    }
3811	Assembly.Load("SampleAssembly, Version=1.0.2004.0, Culture=neutral, PublicKeyToken=8744b20f8da049e3");
3812	var result = string.Concat(element.Nodes());
3813	Message Loop
3814	Private Sub Button_Click(ByVal sender As System.Object, ByVal e as RoutedEventArgs) Handles Button.Click\n DirectCast(DataContext, Person).FirstName = "blah blah"\nEnd Sub
3815	class WebServiceClass : Interface1, Interface2\n{\n  public string Method1(int result) { ... }\n  public void Method2(long id, int p3) { ... } \n  public void Method3(long in) { ... } \n\n  string Interface1.Method1(int result) { return Method1(result); }\n  void Interface1.Method2(long id, int p3) { Method2(id, p3); }\n  string Interface2.Method1(int result) { return Method1(result); } \n  void Interface2.Method2(long in) { Method3(in); }\n}
3816	private void B_Say_Click(object sender, EventArgs e) {\n    var customArgs = e as Custom_EventArgs;\n    if (null != customArgs) {\n        // do what you want\n    }\n}
3817	System.Convert.ToUInt16('7')
3818	DetailsDlg.Columns[0].Header = "New column name";
3819	var CategoryItems =\nfrom item in db.Items\njoin rental in db.Rentals on item.itemID equals rental.ItemID\nwhere item.CategoryID == CategoryID && rental.RentedBy == 0\norderby item.ListDate descending\nselect new DisplayItem \n{  \n    AvailableForPurchase = item.AvailableForPurchase,\n    ...\n};
3820	class SyncListView: ListView\n{\n    public SyncListView()\n    {\n    }\n\n    public Control Buddy { get; set; }\n\n    private static bool scrolling;   // In case buddy tries to scroll us\n\n    protected override void WndProc(ref Message m) \n    {\n    base.WndProc(ref m);\n    // Trap WM_VSCROLL message and pass to buddy\n    if ((m.Msg == 0x115 || m.Msg == 0x20a) && !scrolling && Buddy != null && Buddy.IsHandleCreated)\n    {\n        scrolling = true;\n        SendMessage(Buddy.Handle, m.Msg, m.WParam, m.LParam);\n        scrolling = false;\n    }\n}\n\n    [DllImport("user32.dll", CharSet = CharSet.Auto)]\n    private static extern IntPtr SendMessage(IntPtr hWnd, int msg, IntPtr wp, IntPtr lp);\n\n}
3821	Regex("((http://|www\\.)([A-Z0-9.\-:]{1,})\\.[0-9A-Z?;~&#=\\-_\\./]{2,})", RegexOptions.Compiled | RegexOptions.IgnoreCase);
3822	protected void Page_Load(object sender, EventArgs e)\n{\n    if (!Page.IsPostBack)\n    {\n        PutWhatWasBefore();\n    }\n}
3823	ISession.Contains()
3824	public class Sprite\n{\n    static Vector2 WorldOrigo = new Vector2(400, 240); //center of a 800x480 screen\n\n    Texture2D Texture { get; set; }\n    Vector2 Origin { get; set; }\n\n    public Sprite(Texture2D texture)\n    {\n        Texture = texture;\n        Origin = new Vector2(texture.Width / 2, texture.Height / 2);\n    }\n\n    public void Draw(Vector2 position, SpriteBatch spriteBatch)\n    {\n        spriteBatch.Draw(Texture, WorldOrigo + position - Origin, Color.White);\n    }\n}
3825	var sitePath = MapPath(@"~");\nvar relativePath= i.FinalPath.Replace(sitePath, "~");
3826	List<Test>laneConfigs = new List<Test>();//From a class\n            foreach (DataGridViewRow dr in dataGridView1.Rows)\n            {\n                int bbbBorder = 0;\n                Int32.TryParse(dr.Cells["BBor"].Value.ToString(), out bbbBorder );\n                int eeee= 0;\n                Int32.TryParse(dr.Cells["EBor"].Value.ToString(), out eee);\n\n                LaneConfig laneConfig = new LaneConfig(\n                    dr.Cells["ID"].Value.ToString(),\n                    (TrafficLaneType)Enum.Parse(typeof(TrafficLaneType), dr.Cells["Type"].Value.ToString()),\n                    new ValueWithUnit<int>(bbbBorder, "mm"),\n                    new ValueWithUnit<int>(eee, "mm"));\n\n                laneConfigs.Add(llaneConfig);\n            }
3827	dynamic wrkCacheTableObject = wrkTablePropInfo.GetValue(wrkGSD, null);\n//--- get the row using dynamic\ndynamic wrkRow = wrkCacheTableObject[(long)varAJR.rowID];\n//--- put the row back\nwrkCacheTableObject[(long)varAJR.rowID]= wrkRow;
3828	string section = "connectionStrings";\n\nConfiguration config = WebConfigurationManager.OpenWebConfiguration(Request.ApplicationPath);\nConfigurationSection configSection = config.GetSection(section);\n\nif (configSection.SectionInformation.IsProtected)\n{\n     configSect.SectionInformation.UnprotectSection();\n     config.Save();\n}
3829	var filterdFiles = files\n                   .Where(x=> \n                          mappings.Any(m=>x.filename.contains(m.Value)))
3830	private BitmapImage LoadImage(string myImageFile)\n        {\n            BitmapImage myRetVal = null;\n            if (myImageFile != null)\n            {\n                BitmapImage image = new BitmapImage();\n                using (FileStream stream = File.OpenRead(myImageFile))\n                {\n                    image.BeginInit();\n                    image.CacheOption = BitmapCacheOption.OnLoad;\n                    image.StreamSource = stream;\n                    image.EndInit();\n                }\n                myRetVal = image;\n            }\n            return myRetVal;\n        }
3831	XDocument doc = XDocument.Load("test.xml");\nforeach (var id in doc.Descendants("Delta").Attributes("id"))\n{\n    id.SetValue((int) id + 1);\n}\ndoc.Save("test.xml");
3832	this.TheTextBoxName.Text
3833	Type mytype = typeof (int);\n\n    Type listGenericType = typeof (List<>);\n\n    Type list = listGenericType.MakeGenericType(mytype);\n\n    ConstructorInfo ci = list.GetConstructor(new Type[] {});\n\n    List<int> listInt = (List<int>)ci.Invoke(new object[] {});
3834	Refactor -> Rename...
3835	string fullPath = @"C:\User\Documents\Test\Folder2\test.pdf";\nstring partialPath = @"C:\User\Documents\";\nstring resultingPath = fullPath.Substring(partialPath.Length);
3836	X509Certificate2Collection certCollection = new X509Certificate2Collection();\ncertCollection.Import(@"C:\test_public_cert.p7b");\nX509Store store = new X509Store(StoreName.AddressBook, StoreLocation.LocalMachine);\nstore.Open(OpenFlags.ReadWrite);\nstore.AddRange(certCollection);
3837	public static bool IsStringInFile(string fileName, string searchString)\n{\n    return File.ReadAllText(fileName).Contains(searchString);\n}
3838	.TableDock\n        {\n            overflow-x: auto;\n            overflow-y: auto;\n            //Remove the width and height completely\n            padding: 0 0 17px 0;\n        }
3839	isolated storage application settings
3840	rm = new ResourceManager("Images", this.GetType().Assembly); \npictureBox1.Image = (System.Drawing.Image)rm.GetObject("flag");
3841	INSERT INTO #AuditData (AuditDataId)\nEXEC usp_AuditSave
3842	DropDownList ddlRole = sender as DropDownList;
3843	public int X {get; set;}
3844	string path = @"c:\temp\MyTest.txt";\n    // This text is added only once to the file.\n    if (!File.Exists(path)) \n    {\n        // Create a file to write to.\n        using (StreamWriter sw = File.CreateText(path)) \n        {\n            sw.WriteLine("Hello");\n            sw.WriteLine("And");\n            sw.WriteLine("Welcome");\n        }   \n    }\n\n    // This text is always added, making the file longer over time\n    // if it is not deleted.\n    using (StreamWriter sw = File.AppendText(path)) \n    {\n        sw.WriteLine("This");\n        sw.WriteLine("is Extra");\n        sw.WriteLine("Text");\n    }
3845	var recipients = json["recipients"];\n       var subject = (string)json["emailSubject"];\n       var blurb = (string)json["emailBlurb"];
3846	ICollectionView RefineList()\n    {\n        DataSourceProvider provider = (DataSourceProvider)this.FindResource("Article");\n        return CollectionViewSource.GetDefaultView(provider.Data);\n    }\n\n        private void Unread_Click(object sender, RoutedEventArgs e)\n    {\n        ICollectionView view = RefineList();\n         if (view.Filter == null)\n        {\n            view.Filter = delegate(object item)\n            {\n                return\n                int.Parse(((XmlElement)item).Attributes["read"].Value) == 0;\n            };\n        }\n        else\n        {\n            view.Filter = null;\n        }   \n    }
3847	private void MenuItemPrint()\n{\n   if (!FileName.Trim().Equals(""))\n   {                        \n     using(PrintDocument pd = new PrintDocument())\n     {\n        using(PrintDialog printDialog=new PrintDialog())\n        {\n          if(printDialog.ShowDialog()==DialogResult.Yes)\n          {\n          pd.PrintPage += new PrintPageEventHandler(pd_PrintPage);                        \n          pd.Print();\n          }\n         }\n      }\n    }\n }\nprivate void pd_PrintPage(object sender, PrintPageEventArgs ev)\n{\n  ev.Graphics.DrawString(FileName, new Font("Arial", 10), Brushes.Black,\n                       ev.MarginBounds.Left, 0, new StringFormat());\n }
3848	var formatedDate = date.getFullYear() + '/' + date.getDate() + '/' date.getDay();\n// Output is '2015/5/25'
3849	mockContext.Setup(m=> m.Products.First(Moq.It.IsAny<int>())).Returns(the product you want returned);
3850	app.Use(async (context, next) =>\n        {\n            var user = context.Authentication.User;\n            if (user == null || user.Identity == null || !user.Identity.IsAuthenticated)\n            {\n                context.Authentication.Challenge();\n                return;\n            }\n            await next();\n        });
3851	void GoogleGeoCode(string address)\n{\n    string url = "http://maps.googleapis.com/maps/api/geocode/json?sensor=true&address=";\n\n    dynamic googleResults = new Uri(url + address).GetDynamicJsonObject();\n    foreach (var result in googleResults.results)\n    {\n        Console.WriteLine("[" + result.geometry.location.lat + "," + result.geometry.location.lng + "] " + result.formatted_address);\n    }\n}
3852	string[] drives = Environment.GetLogicalDrives();\nforeach (string drive in drives)\n{\n    try\n    {\n        DriveInfo di = new DriveInfo(drive);\n        if (di.VolumeLabel == "STAR-LIGHT")\n        {\n            // code\n        }\n    }\n    catch\n    {\n        // ...\n    }\n}
3853	[TableName("Projects")]\n[PrimaryKey("Id", autoIncrement = true)] // This was missing\npublic class Project\n{\n    [PrimaryKeyColumn(AutoIncrement=true)]\n    public int Id { get; set; }\n\n    [Required]\n    public string Name { get; set; }\n}\n\n\n[TableName("Students")]\n[PrimaryKey("Id", autoIncrement = true)] // this was missing\n//, but only affected class with foreign key\npublic class Student\n{\n    [PrimaryKeyColumn(AutoIncrement=true)]\n    public int Id { get; set; }\n\n    [Required]\n    public string Name { get; set; }\n\n    [ForeignKey(typeof(Project))]\n    public int ProjectId { get; set; }\n}
3854	while (true) {\n    acceptConnectionOnNormalPort()\n    connectToTargetPort()\n    startThreadCopyingDataFromAcceptedPortToTargetPort()\n    startThreadCopyingDataFromTargetPortToAcceptedPort()\n}
3855	[WebGet(ResponseFormat = WebMessageFormat.Json)]\npublic bool ConfigurationChanged(string jsonStr)\n{\n    try\n    {\n        MyObject obj = new JavaScriptSerializer().Deserialize<MyObject>(jsonStr);\n\n        // ... do something with MyObject\n    }\n    catch (Exception)\n    {\n        throw;\n    }\n}
3856	[HttpPost]\npublic ActionResult studentWeights(FormCollection formCollection)\n{\n    foreach (string _formData in formCollection)\n    {\n        var x = formCollection[_formData];\n    }\n\n}
3857	Console.Read();
3858	image = e.Row.FindControl("Logo") as Image;
3859	class Worker\n{\n    private Thread _thread;\n\n    // Un-paused by default.\n    private ManualResetEvent _notToBePaused = new ManualResetEvent(true);\n\n    public Worker()\n    {\n        _thread = new Thread(Run)\n            {\n                IsBackground = true\n            };\n    }\n\n    /// <summary>\n    /// Thread function.\n    /// </summary>\n    private void Run()\n    {\n        while (true)\n        {\n            // Would block if paused!\n            _notToBePaused.WaitOne();\n\n            // Process some stuff here.\n        }\n    }\n\n    public void Start()\n    {\n        _thread.Start();\n    }\n\n    public void Pause()\n    {\n        _notToBePaused.Reset();\n    }\n\n    public void UnPause()\n    {\n        _notToBePaused.Set();\n    }\n}
3860	// This will return a "union ALL" of the two select lists...\nreturn new SelectList(newSelectList.Concat(oldSelectList), "Value", "Text");\n\n//this will return a union of distinct values of the two selects,\n//PROVIDED that SelectListItem is IEquatable\nreturn new SelectList(newSelectList.Union(oldSelectList), "Value", "Text");\n\n//this will return a union of distinct values of the two selects,\n//given an implementation of an IEqualityComparer<SelectListItem> equalityComparer\n//that will semantically compare two SelectListItems\nreturn new SelectList(newSelectList.Union(oldSelectList, equalityComparer), "Value", "Text");
3861	thisDate1.ToString("MMMM dd, yyyy");
3862	public class B\n{\n    private const A.myEnum alias_1 = A.myEnum.value_1;\n    private const A.myEnum alias_2 = A.myEnum.value_2;\n\n    private A.myEnum[] tab = {alias_1, alias_2};\n}
3863	object _priceStruct = new PriceStruct(); //Box first\n    type = typeof(PriceStruct);\n    info = type.GetProperty("Value");\n    info.SetValue(_priceStruct, 32, null);\n    Console.WriteLine(((PriceStruct)_priceStruct).Value); //now unbox and get value\n\n    Debugger.Break();
3864	.csproject
3865	class MyClass\n{\n\n    static int instanceCount = 0;\n\n    public MyClass()\n    {\n        instanceCount++;\n    }\n\n}
3866	var yourObject =  JsonConvert.DeserializeObject<Root>(jsonstring);\n\n\npublic class Root\n{\n    public Profile[] Profile;\n}\n\npublic class Profile\n{\n    public string Name { get; set; }\n    public string Last { get; set; }\n    public Client Client { get; set; }\n    public DateTime Date { get; set; }\n}\n\npublic class Client\n{\n    public int ClientId;\n    public string Product;\n    public string Message;\n}
3867	StartCoroutine(DownloadAndPlay("http://myserver.com/audio/test.ogg"));  \n\nIEnumerator DownloadAndPlay(string url)\n{\n    WWW www = new WWW(url);\n    yield return www;\n\n    AudioSource audio = GetComponent<AudioSource>();\n    audio.clip = www.GetAudioClip(false, false);\n    audio.Play();\n}
3868	var qas = questions.Descendants("qa");\nint qaCount = qas.Count();\nh = qas.ElementAt(rnd.Next(0, qaCount - 1)).Element("q").Value;
3869	public SomeReturnType MyHelper(UrlHelper url, // your other parameters)\n{\n   // Your other code\n\n   var myUrl =  url.Action("action", "controller");\n\n  // code that consumes your url\n}
3870	var autoCompleteData = new AutoCompleteStringCollection();\nautoCompleteData.add("SomeString1"); // Can be strings retrieved from database\nautoCompleteData.add("SomeString2"); // Can be strings retrieved from database\n\ntextBox.AutoCompleteMode = AutoCompleteMode.SuggestAppend;\ntextBox.AutoCompleteSource = AutoCompleteSource.CustomSource;\ntextBox.AutoCompleteCustomSource = autoCompleteData;
3871	static string GetText2(ToolStripMenuItem c)\n{\n    string s = c.OwnerItem.Text + @"==>" + c.Text + Environment.NewLine;\n    foreach (ToolStripMenuItem c2 in c.DropDownItems)\n    {\n        s += GetText2(c2);\n    }\n    return s;\n}
3872	float min = float.MaxValue; //set 'min' to the maximum value of a float\nint minI, minJ;  //use if you want to track indices of the min value\n\nfor (int i = 0; i <= DistanceArray.GetUpperBound(0); i++)\n{\n    for (int j = 0; j <= DistanceArray.GetUpperBound(1); i++)\n    {\n        if (DistanceArray[i, j] <= min) //changed to '<= min' to which means if\n        {                               //there are multiple minimum values the\n            min = DistanceArray[i, j];  //one with the higher indices will be used\n            minI = i;\n            minJ = j;\n        }\n    }\n}
3873	string s = "abc";\n        byte[] data = Encoding.Unicode.GetBytes(s);\n        SHA1 algorithm = SHA1.Create();\n        byte[] hash = algorithm.ComputeHash(data);\n        string base64 = Convert.ToBase64String(hash);
3874	> Common Properties\n  > Debug Source Files
3875	foreach(KeyValuePair<int, string> pair in dic)\n{\n  if(pair.Key==count)\n    Console.WriteLine(pair.Value); \n}
3876	var xPathDocument = new XPathDocument("myfile.xml");\nvar query = XPathExpression.Compile(@"/abc/foo[contains(text(),""testing"")]");\n\nvar navigator = xpathDocument.CreateNavigator();\nvar iterator = navigator.Select(query);\n\nwhile(iterator.MoveNext())\n{\n    Console.WriteLine(iterator.Current.Name);    \n    Console.WriteLine(iterator.Current.Value);    \n}
3877	e.Row.Attributes["onclick"] = "__doPostBack('" + this.UniqueID + "$" + gvUserList.ID + "', 'Select$" + e.Row.RowIndex + "')";
3878	public interface ICommented\n{\n    string Comment { get; set; }\n}\n\npublic class MyClass : ICommented\n{\n    public string Comment { get; set; }\n}\n\npublic partial class CommentEntry : Form\n{\n    public CommentEntry(Control pControl, ICommented commented)\n    {\n        InitializeComponent();\n        control = pControl;\n\n        // ***** Need a way for this to store the reference not the value. *****\n        _commented = commented;\n    }\n\n\n    private ICommented _commented;\n\n    private void CommentEntry_Closing(object sender, CancelEventArgs e)\n    {\n        _commented.Comment = tbCommentText.Text.Trim();\n    }\n}
3879	DirectoryInfo directoryInfo = new DirectoryInfo(@"C:\myDir");\n\nFileInfo[] files = directoryInfo.GetFiles();\n\nforeach(FileInfo fileInfo in files)\n  {\n  ListViewItem newItem = new ListViewItem();\n  newItem.Text = fileInfo.Name;\n  newItem.SubItems.Add(fileInfo.Length); //Must have a group added to the ListView (called File Size in this example)\n  listView1.Items.Add(newItem);\n  }
3880	Dictionary<String,Tuple<int,int,DateTime>> store = new Dictionary<String, Tuple<int, int, DateTime>>();\n\nfor (int i = 0; i < 500; i++)\n{\n    int n1 = rnd.Next(1,50);\n    int n2 = rnd.Next(1,50);\n    DateTime dt = RandomDay();\n\n   String key = n1.ToString() + n2.ToString() + dt.ToString();\n\n    while (store.ContainsKey(key)) {\n        n1 = rnd.Next(1,50);\n        n2 = rnd.Next(1,50);\n        dt = RandomDay();\n\n        key = n1.ToString() + n2.ToString() + dt.ToString();\n    }\n\n    store.Add(key, new Tuple(n1, n2, dt));\n}
3881	HtmlAgilityPack.HtmlNode.ElementsFlags.Remove("form"); \nHtmlDocument html = new HtmlDocument();\nhtml.OptionAutoCloseOnEnd = true;
3882	private void dataGridView1_CellPainting(object sender, DataGridViewCellPaintingEventArgs e)\n{\n    if (e.Value == null)\n        return;\n    var s = e.Graphics.MeasureString(e.Value.ToString(), dataGridView1.Font);\n    if (s.Width > dataGridView1.Columns[e.ColumnIndex].Width)\n    {\n        using (\n  Brush gridBrush = new SolidBrush(this.dataGridView1.GridColor),\n  backColorBrush = new SolidBrush(e.CellStyle.BackColor))\n        {\n            e.Graphics.FillRectangle(backColorBrush, e.CellBounds);\n            e.Graphics.DrawString(e.Value.ToString(), dataGridView1.Font, Brushes.Black, e.CellBounds,StringFormat.GenericDefault);\n            dataGridView1.Rows[e.RowIndex].Height = (int)(s.Height * Math.Ceiling( s.Width / dataGridView1.Columns[e.ColumnIndex].Width)) ;\n            e.Handled = true;\n        }\n    }\n}
3883	Context.DbSet.find(MyGuid);
3884	protected void Page_Load(object sender, EventArgs e)\n{\n    if (this.IsCookieDisabled())\n      errorMsgLabel.Text = Resources.Resource.BrowserDontSupportCookies;\n\n}\n\n\nprivate bool IsCookieDisabled()\n{\n string currentUrl = Request.RawUrl;\n\n if (Request.QueryString["cookieCheck"] == null)\n {\n     try\n     {\n            HttpCookie c = new HttpCookie("SupportCookies", "true");\n            Response.Cookies.Add(c);\n\n            if (currentUrl.IndexOf("?") > 0)\n                currentUrl = currentUrl + "&cookieCheck=true";\n            else\n                currentUrl = currentUrl + "?cookieCheck=true";\n\n            Response.Redirect(currentUrl);\n       }\n       catch(Exception ex)\n       {\n          return false;\n       }\n }\n\n if (!Request.Browser.Cookies || Request.Cookies["SupportCookies"] == null)\n      return true;\n\nreturn false;\n}
3885	protected void btnGuess_Click(object sender, EventArgs e)\n{\n        int randomNum = Convert.ToInt32(HttpContext.Current.Session["RANDOM"]);\n        int guessedNum = Convert.ToInt32(txtGuess.Text);\n\n        if (guessedNum < randomNum)\n        {\n            MessageBox.Show("No. Low.");\n            txtGuess.Text = "";\n        }\n        else if (guessedNum > randomNum)\n        {\n            MessageBox.Show("No. High.");\n            txtGuess.Text = "";\n        }\n        else\n        {\n            MessageBox.Show("Yes");\n            txtGuess.Text = "";\n        }\n    }\n\nprotected void Page_Load(object sender, EventArgs e)\n{\n    if (Page.IsPostBack == false) //the code only runs once when the form is loaded.\n    {\n        Random myGenerator = new Random();\n        myGenerator = new Random();\n       int randomNum = myGenerator.Next(1, 50);\n       HttpContext.Current.Session["RANDOM"] = randomNum;\n    }\n}
3886	int limit = richcars.GetLength(0)\n for (int i = 0; i < limit ; i++)\n {\n    Random random = new Random();\n\n    int randomNumber = random.Next(0, limit);\n    if (lstBoxGarage.FindStringExact(richcars[randomNumber, 0]) == -1)\n       lstBoxGarage.Items.Add(richcars[randomNumber , 0]);\n    else\n        i--;\n }
3887	dataGridView1.Rows[0].Cells[0].Value = "some value";
3888	try {\n    // code\n}\ncatch(Exception e) {\n    var d = new ThreadExceptionDialog(e);\n    d.ShowDialog();\n}
3889	var foo = from type in assembly.GetTypes()\n          where type.GetCustomAttributes(false).OfType<ServiceContractAttribute>().Any()\n          from method in type.GetMethods()\n          where method.GetCustomAttributes(false).OfType<OperationContractAttribute>().Any()\n          select method;
3890	while (i < myDT.Rows.Count)\n{\n    while (j < myDT.Columns.Count)\n    {\n        Row newRow = table.Rows.Add(20, Font.Helvetica, 12);\n        newRow.Cells.Add(myDT.Rows[i][j].ToString());//need a default row here or way to add directly to the table\n        j++;\n    }\n    j = 0;\n    i++;\n}
3891	ScrollBar vScrollBar1 = new VScrollBar();\nvScrollBar1.Dock = DockStyle.Right;\nvScrollBar1.Scroll += (sender, e) => { panel1.VerticalScroll.Value = vScrollBar1.Value; };\npanel1.Controls.Add(vScrollBar1);
3892	CompilerParameters parms = new CompilerParameters\n                                           {\n                                               GenerateExecutable = false,\n                                               GenerateInMemory = true,\n                                               IncludeDebugInformation = false\n                                           };\n\n            parms.ReferencedAssemblies.Add("System.dll");\n            parms.ReferencedAssemblies.Add("System.Data.dll");\n            CodeDomProvider compiler = CSharpCodeProvider.CreateProvider("CSharp"); \n\n            return compiler.CompileAssemblyFromSource(parms, source);
3893	.NET   Min Visual\n       Studio version\n\n1.0    2002 (7.0)\n1.1    2003 (7.1)\n2.0    2005 (8.0)\n3.0    2005 (8.0)\n3.5    2008 (9.0)\n4.0    2010 (10.0)\n4.5    2012 (11.0)\n4.5.1  2012 (11.0)\n4.5.2  2012 (11.0)\n4.6    2015 (14.0)
3894	private void btnUpsidedownEx_Click(object sender, EventArgs e)\n    {\n        txtAnswer.Text = txtAnswer.Text + "??";\n        txtAnswer.Focus();\n    }
3895	Array.Resize(ref myArray, 1024);
3896	var folder = await Windows.ApplicationModel.Package.Current.InstalledLocation.GetFolderAsync("MyFolder");\nvar file = await folder.GetFileAsync("MyFile.txt");\n\nif (file != null)\n{\n    var content = await FileIO.ReadTextAsync(file);\n}
3897	public class RejectService\n{\n    Dictionary<RejectInformation, Action<RejectInformation>> pendingNotifications = new Dictionary<RejectInformation, Action<RejectInformation>>();\n\n    public void SubmitNewRejectInfo(RejectInformation rejectInformation)\n    {\n       OnSubmitNewRejectInfo(new RejectInfoArgs(rejectInformation));\n       pendingNotifications.Add(rejectInformation, info => callback.RejectCallback(info));\n    }\n\n    public void SendRejectCallback(RejectInformation rejectInformation)\n    {\n       Action<RejectInformation> action;\n       if (pendingNotifications.TryGetValue(rejectInformation, out action))\n       {\n          acion(rejectInformation);\n          pendingNotifications.Remove(rejectInformation);\n       }\n    }\n}
3898	//qualityNames/*[local-name()=local-name(//qualities/*[text() = '4'])]
3899	string valueOfFirstQueryStringParameter = "";\nstring nameOfFirstQueryStringParameter = "";\nNameValueCollection n = Request.QueryString;\nif (n.HasKeys())\n{\n    nameOfFirstQueryStringParameter = n.GetKey(0);\n    valueOfFirstQueryStringParameter = n.Get(0);\n}
3900	...\nSqlDataReader reader = command.ExecuteReader();\nif (reader.Read())\n{\n    string[] tokens = reader.GetString(0).Split(';');\n    for(int i = 0; i < tokens.Length; i++)\n    {\n        textBoxes[i].Text = tokens[i];\n    }\n}\n...
3901	gridView.DataSource = null;\n...stuff happens...\n\nobject[] source = dataSet; //of 2000 items\nforeach (object item in source) {  //this foreach blocks\n    dataProvider.Add(item);\n}\n\ngridView.DataSource = dataProvider;
3902	ajax.params()
3903	public static class SudokuCache\n{\n    private static Sudoku _game;\n    private static DateTime _timestamp;\n\n    public static Sudoku Game\n    {\n        get {\n            if (_timestamp.AddMinutes(20) < DateTime.Now) {\n                _game = new Sudoku();\n                _timestamp = new DateTime.Now;\n            }\n            return _game;\n        }\n}\n}\n\npublic class Sudoku { }
3904	string s = "a,b, b, c";\nstring[] values = s.Split(',');\nfor(int i = 0; i < values.Length; i++)\n{\n   values[i] = values[i].Trim();\n}
3905	class BaseContext : ApplicationContext
3906	PERMISSION_SET = UNSAFE
3907	// mStaff: the MusicStaff object\n// mNote: the MusicNote object\nmStaff.Children.Add(mNote);
3908	! CISDFCRC16\n<crc>          // 4 digit hex CRC.  Enter 0000 to turn off CRC check.\n<filename>     // file name with extension.  8.3 filenames only.\n<size>         // eight digit hex file size in bytes.\n<checksum>     // four digit hex checksum.  Enter 0000 to turn off checksum validation.\n<data>         // Binary data to store
3909	Request.QueryString["parametername"]
3910	public void Start(int bbm)\n{\n    _timer.Interval = new TimeSpan(0, 0, 0, 0, 500);\n    _timer.Start();\n}\npublic void Stop()\n{\n    _timer.Stop();\n}
3911	var orderedMovies =\n    movies.OrderBy(movie => \n                    String.Join(",", movie.Directors\n                                             .OrderBy(dir => dir.Name)\n                                             .Select(dir => dir.Name)\n                    )\n    );
3912	ex.ToString()
3913	myUserControl.Controls.Add(new LiteralControl(myHTMLstring));
3914	Dispatcher.BeginInvoke
3915	protected override void SaveApsXml(System.Xml.XmlNode node)\n{\n    base.SaveApsXml(node);            \n    node.AppendNewChild("EventTime").SetElementText(this.EventTime.ToString(ApsMessage.DateTimeFormat));\n    var track = node.AppendNewChild("Track");\n    track.SetAttribute("name", this.Track);\n    this.SequenceCar.SaveApsXml(track.AppendNewChild("Car"));\n}
3916	NotifyPropertyChanged(m => m.RateTableDataView);
3917	public void CreateMySqlDataReader(string mySelectQuery, MySqlConnection myConnection) \n {\n    MySqlCommand myCommand = new MySqlCommand(mySelectQuery, myConnection);\n    myConnection.Open();\n    MySqlDataReader myReader;\n    myReader = myCommand.ExecuteReader();\n    try\n    {\n      while(myReader.Read()) \n      {\n        Console.WriteLine(myReader.GetString(0));\n      }\n    }\n    finally\n    {\n      myReader.Close();\n      myConnection.Close();\n    }\n }
3918	dateTimePicker1.Value.Date
3919	var accounts = new Dictionary<string, double>();\n\n// Initialise to zero...\n\naccounts["Fred"] = 0;\naccounts["George"] = 0;\naccounts["Fred"] = 0;\n\n// Add cash.\naccounts["Fred"] += 4.56;\naccounts["George"] += 1.00;\naccounts["Fred"] += 1.00;\n\nConsole.WriteLine("Fred owes me ${0}", accounts["Fred"]);
3920	// You have a list of Data elements List<Data> gridData that is the data \n// source of your DataGrid\ndouble[] periods = gridData.Select(x => x.Period).ToArray();
3921	ctorDefaultIL.Emit(OpCodes.Ldc_I8, dateVal.Ticks);\nctorDefaultIL.Emit(OpCodes.Newobj, \n  typeof(DateTime).GetConstructor(new[] { typeof(long) }));
3922	WorkItemStore store = new WorkItemStore(collection);\nChangeset changeset = service.GetChangeset(123, true, true);\n\nWorkItem item = new WorkItem(project.WorkItemTypes["CustomItem"]);     \nitem.Links.Add(new ExternalLink(store.RegisteredLinkTypes[ArtifactLinkIds.Changeset], changeset.ArtifactUri.AbsoluteUri));       \nitem.Fields["CustomField1"].Value = someValue;\nitem.Fields["CustomField2"].Value = someValue;\nitem.Fields["CustomField3"].Value = someValue;\nitem.Validate();\nitem.Save();
3923	var topShifts = from s in shifts.GroupBy(s => s.CompanyId)\n                        from a in s.GroupBy(b => b.TimeSlot)\n                        select a.OrderBy(p => p.Priority).First();
3924	string connection = ConfigurationManager.ConnectionStrings["ADConnection"].ToString();\n\nDirectorySearcher dssearch = new DirectorySearcher(connection);\ndssearch.Filter = "(&(objectCategory=Person))";\ndssearch.Filter = "(sAMAccountName=" + current_User + ")";\n\nSearchResultCollection searchResult = dssearch.FindAll();\n\nforeach (SearchResult srUSers in searchResult)\n{\n    DirectoryEntry de = srUsers.GetDirectoryEntry();\n    dropDownList1.Items.Add(de.Name.ToString());\n}
3925	private void UpdateStatus(String message)\n{\n    if (this.InvokeRequired)\n        this.Invoke((MethodInvoker)delegate\n        {\n            UpdateStatus(message);\n        });\n    else\n        label1.Text = message;\n}
3926	for (int ix = 0; ix < listView.Columns.Count; ix++)\n{\n  ColumnHeader columnHeader = listView.Columns[ix];\n  int displayIndex = Settings.GetSettingInt("List", columnHeader.Text + "Index");\n  columnHeader.DisplayIndex = displayIndex;\n}
3927	var methods = typeof(Service1).GetMethods()\n                              .Where(meth => meth.GetCustomAttributes(true)\n                                                 .Where(attr => attr is OperationContractAttribute)\n                                                 .Count() > 0);
3928	void ScrollToBottom()\n{\n   txtLogEntries.SelectionStart = txtLogEntries.Text.Length;\n   txtLogEntries.ScrollToCaret();\n}
3929	Hyperlink GetHyperlinkAtSelection()\n{\n  var selectedPointer = rtb.Selection.GetNextInsertionPosition(forward)\n\n  if(sp == null)\n    return;\n\n  var para = sp.Paragraph;\n\n  var hyperlink = para.Inlines.FirstOrDefault(x => \n    x.ContentStart.CompareTo(sp) == -1 && x.ContentEnd.CompareTo(sp) == 1);\n\n  return hyperlink as Hyperlink;\n}
3930	// Nearby location to use as a query hint.\nBasicGeoposition queryHint = new BasicGeoposition();\n    // DALLAS\nqueryHint.Latitude = 32.7758;\nqueryHint.Longitude = -96.7967;\n\nGeopoint hintPoint = new Geopoint(queryHint);\n\nMapLocationFinderResult result = await MapLocationFinder.FindLocationsAsync(\n                        "street, city, state zip",\n                        hintPoint,\n                        3);\n\nif (result.Status == MapLocationFinderStatus.Success)\n{\n    if (result.Locations != null && result.Locations.Count > 0)\n    {\n        Uri uri = new Uri("ms-drive-to:?destination.latitude=" + result.Locations[0].Point.Position.Latitude.ToString() +\n            "&destination.longitude=" + result.Locations[0].Point.Position.Longitude.ToString() + "&destination.name=" + "myhome");\n\n        var success = await Windows.System.Launcher.LaunchUriAsync(uri);\n    }\n}
3931	partial class TimedModalForm : Form\n{\n    private Timer timer;\n\n    public TimedModalForm()\n    {\n        InitializeComponent();\n\n        timer = new Timer();\n        timer.Interval = 3000;\n        timer.Tick += CloseForm;\n        timer.Start();\n    }\n\n    private void CloseForm(object sender, EventArgs e)\n    {\n        timer.Stop();\n        timer.Dispose();\n        this.DialogResult = DialogResult.OK;\n    }\n}
3932	protected void RadGrid1_NeedDataSource(object sender, GridNeedDataSourceEventArgs e)\n        {\n            string PhoneID = RadComboBox1.SelectedItem.Value;\n            RadGrid1.DataSource = GetDataTable(string.Format("SELECT * FROM [Products] WHERE ([ProductID] = {0})", PhoneID));\n        }
3933	ExcelLibrary.DataSetHelper.CreateWorkbook(String filePath, DataSet dataset) +644
3934	var engine = VsaEngine.CreateEngine();\nEval.JScriptEvaluate(mySum, engine);
3935	var myQuery = from movie in myContext.Movies\n          where movie.genre.Any(g=>g.Id == ((Genre)listBox.SelectedItem).Id)\n          select movie;
3936	protected void Page_Load(object sender, EventArgs e)\n{\n    if(!Page.IsPostBack)\n    {\n        visitDateCal.SelectedDate = DateTime.Today; //defaults to today's date\n    }\n}
3937	right click --> Update Model from Database
3938	OPOSPOSPrinter.Open "MyPrinter"    ' LDN of your printer   \nOPOSPOSPrinter.Claim 500           ' Timeout   \nOPOSPOSPrinter.DeviceEnabled = True  \n\n'- Print   \nOPOSPOSPrinter.PrintNormal 2, "Hello world"  \n\n'- Close the printer   \nIf OPOSPOSPrinter.Claimed then   \n   OPOSPOSPrinter.Release   \nEnd If  \nOPOSPOSPrinter.Close
3939	Html.renderpartial("othercase")
3940	System.IO.StringWriter htmlStringWriter = new System.IO.StringWriter();\nServer.Execute("Page.aspx", htmlStringWriter);\nstring htmlOutput = htmlStringWriter.GetStringBuilder().ToString();
3941	IEnumerable<MyMeasure> interList = \n    MyMeasure.Distinct(new MyMeasure.NameComparer())\n             .Where(cmo => cmo.CompanyMeasureName\n                              .ToLower()\n                              .Contains(term.ToLower())).Select(m => m.CompanyMeasure);
3942	.{y}(.{x}).*
3943	routes.MapRoute(\n                    name: "haber2",\n                    url: "{noFollow*}-{id}.html",\n                    defaults: new { controller = "Anasayfa", action = "HaberID" },\n                    constraints: new {id = "\\d+"}\n                );
3944	static bool rotate;
3945	column.Bound(c => c.AchievedPercentage).Format("{0} %").HtmlAttributes(new { style = "text-align: center;" }).HeaderHtmlAttributes(new { style = "text-align: center;", title = "Assessment Progress" }).ClientFooterTemplate("Overall: #= kendo.toString(average, '0') #%");
3946	foreach (UIElement child in canvas.Children)\n{\n    // ...\n}\n// Or: \nint index = 0;\nvar childByIndex = canvas.Children[index];
3947	.TopMost = true
3948	"%windir%\Microsoft.NET\Framework\"YOUR .NET VERSION"\aspnet_regiis.exe" -i
3949	delegate void Work();\n\nprivate void Button_Click(object sender, RoutedEventArgs e)\n{\n    new Work(WorkOne).BeginInvoke(null, null);\n}\n\nprivate void WorkOne()\n{\n    int x = 0;\n    while (r == false)\n    {\n        listBox.Dispatcher.Invoke(new Action(() =>{ listBox.Items.Add(x++); }));\n        System.Threading.Thread.Sleep(x);\n    }\n}\n\nprivate void btnStop_Click(object sender, RoutedEventArgs e)\n{\n        r = true;\n}
3950	var command = new SqlCommand("SELECT TOP 1 age FROM example_table");\nvar ageValue = command.ExecuteScalar() as int?;
3951	web.config
3952	var lines = new string[10][];\n\nvar csv = string.Join("\r\n", lines.Select(words =>\n              string.Join(",", words.Select(word =>\n                  "\"" + word.Replace("\"", "\"\"") + "\"")))));\n\nFile.WriteAllText("file.csv", csv);
3953	public class MyTokenHandler : SessionSecurityTokenHandler\n{\n    public override void WriteToken(XmlWriter writer, SecurityToken token)\n    {\n        SessionSecurityToken sessionSecurityToken = token as SessionSecurityToken;\n        sessionSecurityToken.IsReferenceMode = true;\n        string ns = "http://schemas.xmlsoap.org/ws/2005/02/sc";\n        string localName = "SecurityContextToken";\n        string localName2 = "Identifier";\n\n        XmlDictionaryWriter xmlDictionaryWriter;\n\n        if (writer is XmlDictionaryWriter)\n        {\n            xmlDictionaryWriter = (XmlDictionaryWriter)writer;\n        }\n        else\n        {\n            xmlDictionaryWriter = XmlDictionaryWriter.CreateDictionaryWriter(writer);\n        }\n\n        xmlDictionaryWriter.WriteStartElement(localName, ns);\n        xmlDictionaryWriter.WriteElementString(localName2, ns, sessionSecurityToken.ContextId.ToString());\n        xmlDictionaryWriter.WriteEndElement();\n        xmlDictionaryWriter.Flush();\n    }\n}
3954	[Designer("System.Windows.Forms.Design.ParentControlDesigner, System.Design", typeof(IDesigner))]\npublic partial class barFloorsGrouping : Bar\n{\n...\n}
3955	Integrated Security=true
3956	framerControl.Open(@"C:\SomeDocument.doc");
3957	XslCompiledTransform xslTransform = new XslCompiledTransform();\n        StringWriter writer = new StringWriter();          \n        xslTransform.Load("xslt/RenderDestinationTabXML.xslt");\n        xslTransform.Transform(doc.CreateNavigator(),null, writer);\n        return writer.ToString();
3958	Page.DrawRectangle
3959	private int Counter;\n\nprivate void cmdGo_Click(object sender, EventArgs e)\n{\n    System.Windows.Forms.Timer t = new System.Windows.Forms.Timer();\n    t.Interval = 60000; // specify interval time - 1 minute\n    t.Tick += new EventHandler(timer_Tick);\n    t.Start();\n}\n\n// Every 1 min this timer fires...\nvoid timer_Tick(object sender, EventArgs e)\n{\n    // If it has been 16 minutes then run RunMethod1\n    if (++Counter >= 16)\n    {\n        Counter = 0;\n        RunMethod1();         \n        return;\n    }\n\n    // Not yet been 16 minutes so just run RunMethod2\n    RunMethod2();\n}
3960	var icon = Icon.ExtractAssociatedIcon(Application.ExecutablePath);
3961	var entity = new UDetails()\n{\n    // ...\n\n    Email = User.Identity.Name,\n    RegesterDate = DateTime.Now,\n    UDetailsId = User.Identity.GetUserId()      \n\n    // ...\n};
3962	LoadSourceDetail obj = FillLoadSourceDetail ();// fill from source or somewhere\n\n     // check for null before\n    ReportingEntity = obj.ReportingEntity\n                     .Select(x => new ReportingEntityViewModel() \n                        { \n                           ReportingEntityCode  = x.ReportingEntityCode,\n                           ReportingEntityDesc  x.ReportingEntityDesc\n                         })\n                     .ToList(); // here is  'x' is of type ReportingEntityDetail
3963	try\n            {\n                // The next four lines probe for the update server.\n                // If the update server cannot be reached, an exception will be thrown by the GetResponse method.\n                string testURL = ApplicationDeployment.CurrentDeployment.UpdateLocation.ToString();\n                HttpWebRequest webRequest = WebRequest.Create(testURL) as HttpWebRequest;\n                webRequest.Proxy.Credentials = CredentialCache.DefaultCredentials;\n                HttpWebResponse webResponse = webRequest.GetResponse() as HttpWebResponse;\n\n                // I discard the webResponse and go on to do a programmatic update here - YMMV\n            }\n            catch (WebException ex)\n            {\n                // handle the exception\n            }
3964	myList.RemoveAll(x => x.BeginsWith("#"));
3965	if (result)\n{\n    return RedirectToAction("GetSettings");\n}
3966	var pi = new ProcessStartInfo(@"c:\wkhtmltopdf\wkhtmltopdf.exe");\npi.CreateNoWindow = true;\npi.UseShellExecute = false;\npi.WorkingDirectory = @"c:\wkhtmltopdf\";\npi.Arguments = "http://www.google.com gogl.pdf";\n\nusing (var process = Process.Start(pi))\n{\n    process.WaitForExit(99999);\n    Debug.WriteLine(process.ExitCode);\n}
3967	var result = g.GroupBy(x => x.City, (key, group) => new {\n                           city = key,\n                           employees = group.Select(emp => new {\n                               fullname = emp.FirstName + " " + emp.LastName,\n                               title = emp.Title\n                           })\n                       });
3968	using System;\n            using System.Windows.Forms;\n            namespace WindowsFormsApplication6\n            {\nstatic class Program\n{\n    /// <summary>\n    /// The main entry point for the application.\n    /// </summary>\n    [STAThread]\n    static void Main()\n    {\n        using (Form form = new Form())\n        {\n            form.ContextMenuStrip = new ContextMenuStrip();\n            ToolStripItem addMenuItem = form.ContextMenuStrip.Items.Add("Add");\n            ToolStripItem deleteMenuItem = form.ContextMenuStrip.Items.Add("Delete");\n\n            form.ContextMenuStrip.ItemClicked += (sender, e) =>\n          {\n              if (e.ClickedItem == addMenuItem)\n              {\n                  MessageBox.Show("Add Menu Item Clicked.");\n              }\n              if (e.ClickedItem == deleteMenuItem)\n              {\n                  MessageBox.Show("Delete Menu Item Clicked.");\n              }\n          };\n            Application.Run(form);\n        }\n    }\n}
3969	using System;\nusing System.Windows;\nusing System.Windows.Media;\nusing System.Windows.Media.Imaging;\n\nvoid DrawBitmapGreyscale(DrawingContext dc, string filename, int x, int y, int width, int height)\n{\n    // Load the bitmap into a bitmap image object\n    BitmapImage bitmap = new BitmapImage();\n    bitmap.BeginInit();\n    bitmap.CacheOption = BitmapCacheOption.OnLoad;\n    bitmap.UriSource = new Uri(filename);\n    bitmap.EndInit();\n\n    // Convert the bitmap to greyscale, and draw it.\n    FormatConvertedBitmap bitmapGreyscale = new FormatConvertedBitmap(bitmap, PixelFormats.Gray8, BitmapPalettes.Gray256, 0.0);\n    dc.DrawImage(bitmapGreyscale, new Rect(x, y, width, height));\n}
3970	public class OtherClass<T> where T : IBaseline\n{\n    public T GenericInstance { get; private set;}\n\n    public OtherClass(T genericInstance)\n    {\n        this.GenericInstance = genericInstance;\n    }\n}
3971	protected override void WndProc(ref Message m) {\n    switch (m.Msg) {\n    case 0x84: // this is WM_NCHITTEST\n        base.WndProc(ref m);\n        if ((/*m.LParam.ToInt32() >> 16 and m.LParam.ToInt32() & 0xffff fit in your transparen region*/) \n          && m.Result.ToInt32() == 1) {\n            m.Result = new IntPtr(2);   // HTCAPTION\n        }\n        break;\n    default:\n        base.WndProc(ref m);\n        break;\n    }\n}
3972	events.OrderBy(ev => ev.Appointments.Min(app => app.StartTime)).First().StartTime;
3973	var selected = MultiSelectList.Items\n  .Cast<IDName>()\n  .Where(x => MultiSelectList.SelectedItems.Contains(x.Name));
3974	HtmlWeb web = new HtmlWeb();\nHtmlDocument doc = web.Load("http://jsbin.com/owobe3");\nHtmlNode rateNode = doc.DocumentNode.SelectSingleNode("//div[@id='rate']");\nstring rate = rateNode.InnerText;
3975	using System.Net.NetworkInformation;\n  public bool IsNetworkLikelyAvailable() \n  {\n  return NetworkInterface\n  .GetAllNetworkInterfaces()\n  .Any(x => x.OperationalStatus == OperationalStatus.Up);\n    }
3976	using (var stream = await request.GetRequestStreamAsync())\n{\n    stream.Write(dataBytes, 0, dataBytes.Length);\n}
3977	var alerts = driver.FindElements(By.CssSelector("div.alert.alert-dismissable.alert-info"));\nAssert.IsTrue(alerts.Any(element => element.Text.Contains("Good morning")));
3978	int bufSize = 12;\n\n        IntPtr ptr = (IntPtr) (0xffff *16U + 5);                  \n\n        byte[] data = new byte[bufSize];\n        Marshal.Copy(ptr, data, 0, bufSize);
3979	DispatcherTimer autosaveTimer = new DispatcherTimer(TimeSpan.FromSeconds(autosaveInterval), DispatcherPriority.Background, new EventHandler(DoAutoSave), Application.Current.Dispatcher);\n\n    private void DoAutoSave(object sender, EventArgs e)\n    {\n        // Enter save logic here...\n    }
3980	[Trace(AttributePriority = 2)]\n[HandleError(AttributePriority = 1)]\npublic void MyMethod()\n{\n\n}
3981	con.Open();\ncmd = new SqlCommand("SELECT Emp_FName,Emp_LName,T_Subject from Employee where Emp_Position = 'Teacher'", con);\nrdr = cmd.ExecuteReader();\n\ntxtTeacher.Items.Clear;\n    while (rdr.Read())\n    {\n        string sub = rdr["T_Subject"].ToString();\n        string fname = rdr["Emp_FName"].ToString();\n        string lname = rdr["Emp_LName"].ToString();\n        string fulname = fname + ' ' + lname;\n\n    if (ComboSubDep.Text == sub)\n    {\n        txtTeacher.Items.Add(fulname);\n    }\n}
3982	Nullable<int> or int?
3983	var bytesFromFile = System.IO.File.ReadAllBytes(@"My file here");\nConsole.WriteLine(Encoding.UTF8.GetString(bytesFromFile));\nConsole.ReadKey();
3984	datagridview_CellValidating(object sender, DataGridViewCellValidatingEventArgs e)\n{\n  if(e.FormattedValue == (theOldValue))\n  {\n      changed = false; \n      currentIndexRow= e.RowIndex; \n      currentIndexColumn= e.ColumnIndex; \n      e.cancel = true; \n\n  }\n}\ndatagridview_SelectionChanged(object sender, EventArgs e)\n{\n   if(!changed)\n    datagridview.CurrentCell = datagridview.Rows[currentIndexRow].Cells[currentIndexColumn];\n}
3985	XElement element = item.Element("enclosure"); //new element\n\n        int length = (int)element.Attribute("length"); //seprate attributes\n        string type = (string)element.Attribute("type");\n        string url = (string)element.Attribute("url");\n\n        rssItem.FeedUrl = url; // use the result
3986	string s = list.Aggregate<int, string>(String.Empty, (x, y) => (x.Length > 0 ? x + "^" : x) + y.ToString());
3987	string caseType = null;\n        if (!String.IsNullOrEmpty(viewModel.CaseTypeValue))\n        {\n            caseType = HttpUtility.UrlEncode(viewModel.CaseTypeValue, System.Text.Encoding.Default);\n        }
3988	var replacements = new Dictionary<string,string>();\n//populate the dictionary\nstring file = System.IO.File.ReadAllText("filepath");\nfile = Regex.Replace(file, @"\$\((?<key>[^)]+)\)", new MatchEvaluator(m => replacements.ContainsKey(m.Groups["key"].Value) ? replacements[m.Groups["key"].Value] : m.Value));
3989	public object Convert(object value, Type targetType, object parameter, CultureInfo culture)\n{\n  var mp = parameter as MetadataParameters;\n  var modelPropertyInfo = mp.ModelType.GetProperty(mp.ModelProperty);\n  var attribute = modelPropertyInfo\n      .GetCustomAttributes(true)\n      .Cast<Attribute>()\n      .FirstOrDefault(memberInfo => memberInfo.GetType() == mp.AttributeType);\n\n  // We have to call the GetXXX methods on the attribute to get a localised result.\n  //return ((DisplayAttribute)attribute).GetName();\n  var result = attribute\n    .GetType()\n    .InvokeMember(\n      "Get" + mp.AttributeProperty,\n      BindingFlags.InvokeMethod | BindingFlags.Instance | BindingFlags.Public,\n      null,\n      attribute,\n      new object[0]); \n  return result;\n}
3990	foreach (TabelRow row in Table1.Rows)\n{\n    if(row.Cells.Count > 0)\n    {\n        if (row.Cells[1].Controls.Count > 0 && row.Cells[1].Controls[0].GetType() ==  typeof(DropDownList))\n        {\n            Response.Write(a.SelectedValue); \n        }\n    }\n}
3991	System.IO.Path.GetFileName("//houtestserver/common/file1.pdf");
3992	public interface IDependency\n{\n    void DoSomeStuff();\n}\n\npublic class ClassUnderTest\n{\n    private IDependency _dependency;\n\n    public ClassUnderTest(IDependency dependency)\n    {\n        _dependency = dependency;\n    }\n\n    public ClassUnderTest() : this(new Dependency())\n    {}\n\n    public void ImportantStuff()\n    {\n        _dependency.DoSomeStuff();\n    }\n}
3993	public void AddValue(string newGuid)\n        {\n            Guid g  =  new Guid(newGuid);\n            m_TheValues.Add(g); \n        }
3994	OdbcCommand cmd = new OdbcCommand("INSERT INTO User (Email, FirstName, SecondName, DOB, Location, Aboutme) VALUES ("+ email +","+ firstname+","+SecondName+","+DOB+","+Location+","+Aboutme+")",cn);
3995	Child child = GetChildFromSomewhere();\nParent parent = GetParentFromSomewhere();\n\n// Don't do this\nchild.ParentId = parent.ParentId;\n\n// Use this instead\nchild.Parent = parent;
3996	XDocument.Parse(@"...").Descendants().Where(n => n.Elements().Any()).Select(n => n.Name).Distinct().Count();
3997	DataRow[] rows;\nrows=dataTable.Select("userCity = 'Munich'");\nforeach(DataRow r in rows)\nr.Delete();
3998	...\nusing FirebirdSql.Data.Firebird;\n...\n\nFbConnectionStringBuilder builder = new FbConnectionStringBuilder();\nbuilder.DataSource = "COMPUTER_WITH_DATABASE";\nbuilder.UserID = "SYSDBA";\nbuilder.Password = "m*******y";\nbuilder.Database = @"c:\database.fdb";\nbuilder.ServerType = FbServerType.Default;\n\nFbConnection.CreateDatabase(builder.ConnectionString);
3999	var html = new WebClient()\n               .DownloadString("the facebook account url goes here");
4000	container.Width = Unit.Percentage(100);
4001	chart1.ChartAreas[0].AxisX.Minimum = 7;\nchart1.ChartAreas[0].AxisX.Maximum = 12;
4002	Request.CreateResponse<Response>(HttpStatusCode.OK, new Response() { responseCode = Response.ResponseCodes.ItemNotFound })
4003	int[, ,] a = new int[2, 2, 3]{\n        { {1,2,3}, {4,5,6} },\n        { {7,8,9}, {10,11,12}  }\n};\nint x = (int)a.GetValue(0,1,2); // this returns 6\n\nint[] nArray = new int[] { 1, 1, 0 };\nx = (int)a.GetValue(nArray); // this returns 10
4004	{ get; set; }
4005	protected override PageStatePersister PageStatePersister\n{\n    get\n    {\n        return new HiddenFieldPageStatePersister(this);\n    }\n}
4006	public List<Checklist> Provide()\n{\n  List<Checklist> checklists = new List<Checklist>();\n  using (var reader = ExcelReaderFactory.CreateOpenXmlReader(m_Stream))\n   {\n                while (reader.Read())\n                {\n                    Checklist checklist = new Checklist();\n\n                     checklist.Description = reader.GetString(1);\n                     checklist.View = reader.GetString(2);\n                     checklist.Organ = reader.GetString(3);\n                     checklists.Add(checklist);\n                 }\n                return checklists; \n    }\n}
4007	object dobVal = null;\nwhile ((dobVal= reader.Read()) != null)\n{\n  var storedDob = Convert.ToDateTime(dobVal.ToString());\n\n  if(storedDob.Month == DateTime.Now.Month && \n     storedDob.Day == DateTime.Now.Day)\n  {\n    Session["Birthday"] = "Happy Birthday";\n  }\n}
4008	private void button1_Click(object sender, RoutedEventArgs e)\n{\n    Grid x = (sender as Button).Parent as Grid;\n}
4009	Marshal.FinalReleaseComObject(xlWorkSheet);\nxlWorkBook.Close(false);\nMarshal.FinalReleaseComObject(xlWorkBook);\nxlApp.Quit();\nMarshal.FinalReleaseComObject(xlApp)
4010	var results = from t1 in Table1\n   from t2 in Table2\n   where t1.ID = t2.AnotherID\n   join t3 in Table3 on t1.ID equals t3.AnotherID into joined\n   from j in joined.DefaultIfEmpty()\n   select new {t1, t2, t3 = j}
4011	protected void OnRowDataBound(object sender, GridViewRowEventArgs e)\n    {\n        // this will apply the action in the lambda expression to all controls or sub-controls of the row matching type LinkButton  \n        // (you may have a different control type and you may want to alter your lambda expression to check that the control matched is really the control you want to manipulate)\n        SearchControls<LinkButton>(e.Row, button => button.OnClientClick = "alert('here');");\n    }\n\n    // recursive Control search function\n    private void SearchControls<T>(Control start, Action<T> itemMatch)\n    {\n        foreach (var c in start.Controls.OfType<T>())\n            itemMatch(c);\n\n        foreach (var c in start.Controls.OfType<Control>())\n            SearchControls<T>(c, itemMatch);\n    }
4012	foreach (var dataItem in listOfData)\n{\n    DataRow row = dataTable.NewRow();\n\n    for (int i = 0; i < props.Length; i++)\n    {\n       row[i] = props[i].GetValue(dataItem);\n    }\n\n    dataTable.Rows.Add(row);\n}
4013	string clickedElement = ((System.Windows.FrameworkElement)(sender)).Tag;
4014	bvlsFortran.BV
4015	.Yield()
4016	public class BrunoTabControl : TabControl\n{\n    protected override void OnDrawItem(System.Windows.Forms.DrawItemEventArgs e)\n    {\n        if (ImageList == null) return;\n        int imageIndex = TabPages[e.Index].ImageIndex;\n        if (imageIndex >= 0) ImageList.Draw(e.Graphics, 0, 0, imageIndex);\n    }\n}
4017	using System.Threading;\n\nforeach(..) { } // your for or foreach or any code you want\n\nThread.Sleep(5000); // pause the current thread on x milliseconds\n\nforeach(..) { }\n\nThread.Sleep(3000);\n\nforeach(..) { }
4018	int l=0; \n        string s; \n        Console.WriteLine("Enter Paragraph: "); \n        s = Console.ReadLine(); \n\n        l = s.Replace(" ", String.Empty).Length; \n        Console.WriteLine("Your Paragraph Length is: " + l); \n        Console.ReadLine();
4019	if (button1.Text.Length > Your button text length to be checked)\n{\n    System.Windows.Forms.ToolTip ToolTip1 = new System.Windows.Forms.ToolTip();\n    ToolTip1.SetToolTip(this.button1, this.button1.Text);\n}
4020	foreach (var cell in wsRow)\n{\n    // code to get the header cell\n    var header = ws.Cell(1, cell.Column);\n\n    // rest of your code here\n    // ...\n}
4021	cbActive.CheckedChanged += SelectCheckBox_OnCheckedChanged
4022	// ... code from above\ndouble averageMaximumX = query.Average(t => double.Parse(t.XMax)); \ndouble varianceMaximumX = query.Sum(t => \n                Math.Pow(double.Parse(t.XMax) - averageMaximumX, 2)));\n\ndouble stdDevMaximumX = Math.Sqrt(varianceMaximumX);\nvarianceMaximumX /= query.Count();
4023	ddEquipmentName.SelectedIndex = ddEquipmentName.Items.IndexOf(ddEquipmentName.Items.FindByText(selectRow.Cells[2].Text));
4024	DateTime parsed = DateTime.ParseExact("18/04/2011 4:57:20 PM", \n                                      "dd/MM/yyyy h:mm:ss tt", \n                                      CultureInfo.InvariantCulture);
4025	var OuterBrackets_List= lst.Where(s => s.StartsWith("[") && s.EndsWith("]");\nvar AlphaNumeric_List = lst.Except(OuterBrackets_List);
4026	ServerManager iisManager = new ServerManager()\n                        site = iisManager.Sites.FirstOrDefault(a => a.Name.Contains("Default"));\n                        site.VirtualDirectoryDefaults.Password = tbImpersonatorPassword.Text;\n                        site.VirtualDirectoryDefaults.UserName = tbImpersonatorUser.Text;
4027	For your MsiShortcutProperty table, add the following values to the table:\n\nColumns/values:\nMsiShortcutProperty/AppIDProperty\nShortcut_/MyShortcut.<guid>\nPropertyKey/System.AppUserModel.ID\nPropVariantValue/<YourCompanyName.ProductName.SubProduct.VersionInformation>
4028	[Required(ErrorMessageResourceName= "FullNameRequired", ErrorMessageResourceType = typeof(MyResource)]
4029	private DataSet CreateCommand(string procedureName, string[,] parameters)\n{\n    SqlCommand cmd = new SqlCommand();\n    cmd.CommandText = "EXECUTE " + procedureName;\n\n    for (int i = 0; i < parameters.Length; i++)\n    {\n        cmd.CommandText += " " + parameters[i, 0] + " = @" + parameters[i, 0];\n        cmd.Parameters.AddWithValue("@" + parameters[i, 0], parameters[i, 1]);\n    }\n\n    SqlDataAdapter da = new SqlDataAdapter();\n    DataSet ds = new DataSet();\n\n    da.SelectCommand = cmd;\n    da.Fill(ds);\n\n    return ds;\n}
4030	string[] splittedText1 = textBox2.Text.Split(' ');\nstring[] splittedText2 = textBox1.Text.Split(' ');\nstring[] splittedText3 = textBox3.Text.Split(' ');\n\nstring _sql = "Insert into [sales] ([productname], productquantity, productprice) VALUES (?,?,?)";\nOleDbCommand CmdSql = new OleDbCommand();\nCmdSql.Connection = Cnn;\n\nCmdSql.Parameters.Add("@productname", OleDbType.VarChar);\nCmdSql.Parameters.Add("@productquantity", OleDbType.VarChar);\nCmdSql.Parameters.Add("@productprice", OleDbType.VarChar);\n\ndecimal dQty = 0m;\ndecimal dPrice = 0m;\nfor (int i = 0; i < splittedText1.Length; i++)\n{\n    Decimal.TryParse(splittedText2[i], out dQty);\n    Decimal.TryParse(splittedText3[i], out dPrice);\n    CmdSql.Parameters["@productname"].Value = splittedText1[i];\n    CmdSql.Parameters["@productquantity"].Value = dQty;\n    CmdSql.Parameters["@productprice"].Value = dPrice;\n    CmdSql.ExecuteNonQuery();\n}
4031	decimal d = 12.45600m;\nd.ToString("0.#####");
4032	var p = new Process();\np.StartInfo.FileName = @"c:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe";\np.StartInfo.Arguments = @"c:\aa\Test.cs";\np.Start();
4033	foreach (CancelEventHandler subHandler in handler.GetInvocationList())\n{\n     // treat individually\n}
4034	aspnet_regiis.exe
4035	from a in tableA\nfrom b in tableB\nwhere a >= b.minX && a <= b.maxX\nselect a;
4036	public class RoleApiController : ApiController\n{\n    private RoleService _roleService = new RoleService();\n\n    public RoleUser GetRoleUser(int sectionID)\n    {\n        if (sectionID != null)\n        {\n            return _roleService.GetUsers(sectionID);\n        }\n        throw new HttpResponseException(HttpStatusCode.NotFound);\n    }\n}
4037	private int width;\nprivate int height;\nprivate int length;\nprivate bool constrained;\n...\n\npublic int Width\n{\n    get { return width; }\n    set\n    {\n        width = value;\n        if (constrained)\n        {\n            height = value;\n            length = value;\n        }\n    }\n}
4038	treeView1.SelectedNode.Name
4039	Windows.UI.Text.ITextSelection selection = richEditBox.Document.Selection;\n selection.StartPosition = 0;\n selection.EndPosition = n;
4040	string path = AppDomain.CurrentDomain.BaseDirectory;\nString dir = Path.GetDirectoryName(path);\ndir += "\\Emp_data";\nstring filename = dir+"\\Json_data.json";\nif (!Directory.Exists(dir))\n    Directory.CreateDirectory(dir); // inside the if statement\nFileStream fs = File.Open(filename,FileMode.OpenOrCreate, FileAccess.ReadWrite);\nStreamReader reader = new StreamReader(fs);
4041	List<string> answervalue=new List<string>;\nanswervalue.ADD("firstthing")\nanswervalue.ADD("secondthing")????\n\nif(answervalue.contains(/*the message value being send it*/)\n{\n//do some thing\n}
4042	using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Xsl;\nusing System.Xml.XPath;\n\npublic class TransformXML\n{\n    //This will transform xml document using xslt and produce result xml document\n    //and display it\n\n    public static void Main(string[] args)\n    {\n        try\n        {\n            XPathDocument myXPathDocument = new XPathDocument(sourceDoc);\n            XslTransform myXslTransform = new XslTransform();\n            XmlTextWriter writer = new XmlTextWriter(resultDoc, null);\n            myXslTransform.Load(xsltDoc);\n            myXslTransform.Transform(myXPathDocument, null, writer);\n            writer.Close();\n            StreamReader stream = new StreamReader (resultDoc);\n            Console.Write("**This is result document**\n\n");\n            Console.Write(stream.ReadToEnd());\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine ("Exception: {0}", e.ToString());\n        }\n    }\n}
4043	myComboBox.IsEditable = false; // enables or disables editing of the text in text box of the ComboBox\nmyComboBox.IsHitTestVisible = false; // whether this element can possibly be returned as a hit test result from some portion of its rendered content.\nmyComboBox.Focusable = false; // indicates whether the element can receive focus.
4044	EXEC GetFilmsInCategory 'SF'
4045	public IEnumerable<string> GetAllFiles(string rootDirectory)\n{\n    foreach(var directory in Directory.GetDirectories(\n                                            rootDirectory, \n                                            "*", \n                                            SearchOption.AllDirectories))\n    {\n        foreach(var file in Directory.GetFiles(directory))\n        {\n            yield return file;\n        }\n    }\n}
4046	folderWatcher.Renamed += FolderWatcherOnRenamed;\n\nprivate static void FolderWatcherOnRenamed(object sender, RenamedEventArgs e)\n{\n\n    var attr = File.GetAttributes(e.FullPath);\n\n    if (attr == FileAttributes.Directory && e.OldName == "New Folder")\n    {\n\n        StartMonitoringDir(e.FullPath)\n    }\n}
4047	public IEnumerable<ImportField> CreateFields(HttpPostedFileBase file)\n    {\n        if (file == null) throw new ArgumentNullException("file");\n\n        return ExtractFromFile(file);\n    }\n\n    private IEnumerable<ImportField> ExtractFromFile(HttpPostedFileBase file)\n    {\n        using (var reader = new StreamReader(file.InputStream))\n        {\n            var firstLine = reader.ReadLine();\n            var columns = firstLine.Split(new[] { ',' });\n\n            for (var i = 0; i < columns.Length; i++)\n            {\n                yield return new ImportField(columns[i], i);\n            }\n        }\n    }
4048	string[] times = { "07:00", "07:15", "07:30", "07:45", "08:00", "08:15", "08:30", "09:00", "09:15", "09:30", "09:45", "10:00", "10:15", "10:30", "11:15" };\n\n    private void Form1_Load(object sender, EventArgs e)\n    {\n        DateTime prevDt = new DateTime(1);\n        string prevString = "";\n\n        StringBuilder output = new StringBuilder("UserXyz Deleted ");\n        foreach (string time in times)\n        {\n\n            DateTime dt = DateTime.ParseExact(time,"hh:mm", CultureInfo.InvariantCulture);\n            if (dt.Subtract(prevDt).TotalMinutes > 15)\n            {\n                if (prevString != "")\n                    output.Append(" " + prevString + ",");\n                output.Append(" " + time + " -");\n            }\n            prevString = time;\n            prevDt = dt;\n        }\n        output.Remove(output.Length - 1, 1);\n        MessageBox.Show(output.ToString());\n    }
4049	class Song\n{\n  prop IsSelected\n  {\n    get { return this.selected; }\n    set { this.selected = value; PropertyChanged("IsSelected"); }\n  }\n}
4050	var IE = new SHDocVw.InternetExplorer();\nobject URL = "http://www.northwindtraders.com";\n\nIE.ToolBar = 0;\nIE.StatusBar = false;\nIE.MenuBar = false;\nIE.Width = 622;\nIE.Height = 582;\nIE.Visible = true;\n\nIE.Navigate2(ref URL);
4051	byte[] buf = Encoding.UTF8.GetBytes(xml);\n\nrequest.Method = "POST";\nrequest.ContentType = "text/xml";\nrequest.ContentLength = buf.Length;\nrequest.GetRequestStream().Write(buf, 0, buf.Length);\n\nvar HttpWebResponse = (HttpWebResponse)request.GetResponse();
4052	StorageFile storageFile =\n      await Windows.Storage.StorageFile.GetFileFromApplicationUriAsync(uri);\n\n    var randomAccessStream = await storageFile.OpenReadAsync();\n    Stream stream = randomAccessStream.AsStreamForRead();
4053	Button.Text = "?";
4054	using System;\nusing System.Reflection;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        public Int32 Add(Int32 a, Int32 b) { return a + b; }\n        static void Main(string[] args)\n        {\n            Program obj = new Program();\n\n            MethodInfo m = obj.GetType().GetMethod("Add");\n            Int32 result = (Int32)m.Invoke(obj, new Object[] { 1, 2 });\n        }\n    }\n}
4055	var entry = "<key n=1>xzsd:test <sk id=1 hi=1>test <tag1>.............</tag1> <tag2>.............</tag2> ................ </sk> <sk id=2>test2 <tag1>.............</tag1> <tag2>.............</tag2> ................ </sk> </key>";\n\n        string pattern = "<key .*?>(.*)</key>";\n        Match match = Regex.Match(entry, pattern);\n        while (match.Success)\n        {\n            Console.WriteLine("Found: {0}",\n                              match.Groups[1].Value); //find only what is in (.*)\n            match = match.NextMatch();\n        }
4056	var data = List.SelectedItem as SongData;\nif (data != null)\n    ...
4057	using System;\nusing System.Collections.Generic;\nusing System.Linq.Expressions;\n\npublic Type GetExpressionType(string expression, IDictionary<string, Type> variables)\n{\n  var types = new List<ParameterExpression>();\n  foreach (var varType in variables)\n    types.Add(Expression.Parameter(varType.Value, varType.Key));\n  var lamda = System.Linq.Dynamic.DynamicExpression.ParseLambda(types.ToArray(), null, expression);\n  return lamda.ReturnType;\n}
4058	string s = "http://www.s3.locabal.com/whatever/bucket/folder/guid";\n\n// Uri\nnew Uri(s).Segments.Last();\n\n// string\ns.Substring(s.LastIndexOf("/") + 1);\n\n// RegExp\nRegex.Match(s, ".*/([^/]+*)$").Groups[1];
4059	Label1.Text=(Excel.Worksheet1.Cells[1,1].value ?? "Some_Str";\nLabel2.Text=(Excel.Worksheet1.Cells[1,2].value ?? "Some_Str";\nLabel3.Text=(Excel.Worksheet1.Cells[1,3].value ?? "Some_Str";\nLabel4.Text=(Excel.Worksheet1.Cells[1,4].value ?? "Some_Str";
4060	chart1.Series["Default"].ChartType = SeriesChartType.Polar;\nchart1.Series[0]["PolarDrawingStyle"] = "Line";\n// setup the X grid\nchart1.ChartAreas["Default"].AxisX.MajorGrid.Enabled = true;\nchart1.ChartAreas["Default"].AxisX.MajorGrid.IntervalType = DateTimeIntervalType.Hours;\nchart1.ChartAreas["Default"].AxisX.MajorGrid.Interval = 1;\nchart1.ChartAreas["Default"].AxisX.Crossing = 0;\n// setupthe Y grid\nchart1.ChartAreas["Default"].AxisY.MajorGrid.Enabled = true;
4061	Console.WriteLine( \n   ((ICollection<KeyValuePair<object, object>) d2).\n      Remove(new KeyValuePair<object, object>("1", 2)));
4062	var point = DbGeography.FromText(string.Format("POINT({1} {0})", latitude, longitude), 4326);\n  var query = from person in persons\n              let region = point.Buffer(radius)\n              where SqlSpatialFunctions.Filter(person.Location, region) == true\n              select person;
4063	svcutil.exe /language:cs /out:GeneratedProxy.cs /config:app.config net.tcp://localhost:8000/ http://localhost:8005
4064	INSERT INTO SpatialTable (GeogCol1)\nVALUES (geography::STGeomFromText('POINT(122 47)', 4121));
4065	decimal longitude = 0;\ndecimal latitude = 0;\nvar precision = BitConverter.GetBytes(decimal.GetBits(argument)[3])[2];
4066	global::
4067	List<IEntity>
4068	SoapObject request = new SoapObject(NAMESPACE, METHOD_NAME);\nrequest.addProperty("source", bmpArray);\nSoapSerializationEnvelope envelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);\nnew MarshalBase64().register(envelope);\nenvelope.dotNet = true;\nenvelope.setOutputSoapObject(request);\nHttpTransportSE androidHttpTransport = new HttpTransportSE(URL, 300000);
4069	using(MemoryStream stream = new MemoryStream( data ))\n{\n  BitmapImage image = new BitmapImage( );\n  image.SetSource( stream );\n}
4070	Win32 API
4071	private void dataGridView1_Sorted(object sender, System.EventArgs e)\n    {\n        foreach (DataGridViewRow dataGridViewRow in\n                                 dataGridView1.Rows.Cast<DataGridViewRow>())\n        {\n            dataGridViewRow.Cells["Order"].Value = dataGridViewRow.Index + 1;\n        }\n    }
4072	SmtpClient smtpClient = new SmtpClient();\nsmtpClient.UseDefaultCredentials = true;\nsmtpClient.Send(mailMessage);
4073	public HttpResponseMessage Get()\n{\n    var resp = new HttpResponseMessage()\n    {\n        Content = new StringContent("{json here...}")\n    };\n    resp.Content.Headers.ContentType = \n                  new MediaTypeHeaderValue("application/json");\n    return resp;\n}
4074	XmlDocument document = new XmlDocument();\ndocument.Load("Resources/DefaultConfig.xml");
4075	using(var cnx = DbFactory.CreateConnection(Global.ConnectionString))\n            {\n                using (var multi = cnx.QueryMultiple("mySchema.myStoredProc", new { communityId, categoryId }, commandType: CommandType.StoredProcedure))\n                {\n                    var projectMembers = multi.Read<ProjectMember>().ToList();\n                    var projects = multi.Read<Project>().ToList();\n                    BindProjectMembers(projects, projectMembers);\n\n                    return projects;\n                }\n            }
4076	Stack<ParseTreeNode> stack = new Stack { yourRootTreeNode };\nwhile(!stack.Empty)\n{\n   var current = stack.Pop();\n   if(current.ChildNodes != null)\n   {\n     if(current.ChildNodes.Contains(yourChildNode))\n        return current; /*parent of yourChildNode */\n\n     foreach(var child in current.ChildNodes)\n       stack.Push(child);\n\n   }\n}
4077	...\nvar request = WebRequest.Create(uri);\nrequest.Method = "HEAD";\n...
4078	var groupedRows1 = from row in enumerableRowCollection\n                            group row by new { Network = row["NETWORK"], Week = row["Week"] };
4079	public property MyProperty As Nullable(Of Integer)
4080	frame.Button(Find.ByName("go")).ClickNoWait();\n\nSystem.Diagnostics.Stopwatch stopwatch = new System.Diagnostics.Stopwatch();\nstopwatch.Start();\n\nwhile (stopwatch.Elapsed.TotalMilliseconds < 3000d)\n{\n    if (alertDialogHandler.Exists())\n    {\n        // Do whatever I want to do when there is an alert box.\n        alertDialogHandler.OKButton.Click();\n        break;\n    }\n}
4081	[XmlArray("dependencies"), XmlArrayItem("dependency")]\n    public List<string> Dependencies { get; set; }\n    public bool ShouldSerializeDependencies()\n    {\n        if (Dependencies != null && Dependencies.Count > 0)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }
4082	FileStream.SetLength()
4083	return File(fs, "application/vnd.ms-word", "documentfile.doc");
4084	int someNumber = (from a in TableA.col1 \n                   where a.DateUTC != null \n                   group a by a.DateUTC.Value.ToLocalTime().Date into g \n                   where TableA.col2 = Emp\n                   select g).Count();
4085	XmlDocument doc = new XmlDocument();\ndoc.Load(spath);\nXmlNode snippet = doc.CreateNode(XmlNodeType.Element, "Snippet", null);\n\nXmlAttribute att = doc.CreateAttribute("name");\natt.Value = name.Text;\nsnippet.Attributes.Append(att);\n\nXmlNode snippetCode = doc.CreateNode(XmlNodeType.Element, "SnippetCode", null);\nsnippetCode.InnerText = code.Text;\n\nsnippet.AppendChild(snippetCode);\n\ndoc.SelectSingleNode("//Snippets").AppendChild(snippet);
4086	makecert -n "CN=root signing authority" -cy authority -r -sv root.pvk root.cer
4087	/// <summary>\n/// Get list of all categories except current one as well as all it's child categories\n/// </summary>\n/// <param name="id">Current category id</param>\n/// <param name="categories">List of categories</param>\n/// <returns>List of categories</returns>\npublic static List<Category> CategoriesWithoutChildren(int id, List<Category> categories)\n{\n    var currentCategory = categories.Single(x => x.Id == id);\n    categories.Remove(currentCategory);\n\n    if (currentCategory.ChildCategories.Count > 0)\n    {\n        currentCategory.ChildCategories.ToList().ForEach(x =>\n        {\n            categories = CategoriesWithoutChildren(x.Id, categories);\n        });\n    }\n\n    return categories;\n}
4088	var value = root?.InnerObject2?.InnerObject2?.InnerObject3?.value;\nif(value != null)\n    stringBuilder.Append(value);
4089	public DateTimeOffset Calculate(DateTimeOffset dateTime) {\n    // etc..\n}
4090	string[] selectedList = selected.Split(',');\nvar q = from a in dt.AsEnumerable()\n        where a.Field<string>("Period") == "Jan 2014" && \n        selectedList.Contains(a.Field<string>("Division")) \n        select a;\n\nGridView1.DataSource = q.CopyToDataTable();\nGridView1.DataBind();
4091	private void Form1_Load(object sender, EventArgs e)\n    {\n        Timer MyTimer = new Timer();\n        MyTimer.Interval = (45 * 60 * 1000); // 45 mins\n        MyTimer.Tick += new EventHandler(MyTimer_Tick);\n        MyTimer.Start();\n    }\n\n    private void MyTimer_Tick(object sender, EventArgs e)\n    {\n        MessageBox.Show("The form will now be closed.", "Time Elapsed");\n        this.Close();\n    }
4092	byte[,,] threeD = new byte[X,Y,Z];\nbyte[] res = new byte[X*Y*Z];\nint pos = 0;\nfor (int x = 0 ; x != X ; x++)\n    for (int y = 0 ; y != Y ; y++)\n        for (int z = 0 ; z != Z ; z++)\n            res[pos++] = threeD[x,y,z];
4093	interface IPerson\n{\n    string FirstName { get; set; }\n    string LastName { get; set; }\n}\n\ninterface IAddress\n{\n    string AddressLine1 { get; set; }\n    string AddressLine2 { get; set; }\n    string City { get; set; }\n    string Province { get; set; }\n    string Country { get; set; }\n}\n\nclass CustomerRecord : IPerson, IAddress // ActiveRecord object map to table...\n{  \n    // IPerson members...\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n\n    // IAddress members...\n    public string AddressLine1 { get; set; }\n    public string AddressLine2 { get; set; }\n    public string City { get; set; }\n    public string Province { get; set; }\n    public string Country { get; set; }\n}
4094	GlobalConfiguration.Configuration.Filters.Add(new MyAttribute());
4095	photoFilename = @"" + i.ToString() + p.Name.Substring(p.Name.LastIndexOf('.'));\nif (storage.FileExists(_photoPath + @"\" + _photoFilename))\n{\n    storage.DeleteFile(_photoPath + @"\" + _photoFilename);\n}\nusing (IsolatedStorageFileStream file = storage.CreateFile(_photoPath + @"\" + _photoFilename))\n    p.GetImage().CopyTo(file);
4096	var bytes = File.ReadAllBytes(@"file.wav");\nstring base64 = Convert.ToBase64String(bytes);
4097	if (InvokeRequired) \n    Invoke(new Action(MDIParent.MDIParentRef.BaseClose));\nelse\n    MDIParent.MDIParentRef.BaseClose();
4098	System.Drawing.Image image = System.Drawing.Image.FromStream( \n    new System.IO.MemoryStream((byte[]) SqlReader["img_data"]) \n);\n\nint width = image.Width;\nint height = image.Height;
4099	XmlNamespaceManager mgr = new XmlNamespaceManager(m_xml.NameTable);\nmgr.AddNamespace("amzn", "http://s3.amazonaws.com/doc/2006-03-01/");\n\nXmlNodeList nodes = xmlDoc.SelectNodes("//amzn:Contents", mgr);
4100	[RegularExpression("([1-9][0-9]*)", ErrorMessage = "Count must be a natural number")]\npublic int Count { get; set; }
4101	ContentPresenter contentPresenter = FindVisualChild<ContentPresenter>(myListBox);\n\nDataTemplate yourDataTemplate = contentPresenter.ContentTemplate;\n\nTextBox txtName= yourDataTemplate.FindName("vidList", contentPresenter) \nas TextBox ;\nif (txtName!= null)\n{\n    // Do something with txtNamehere\n}
4102	img1.Attributes["src"] = "imageout.ashx?PageID=" + PageID.ToString() + "&DIImageID=" + DIImageID.ToString();
4103	private bool isCtrlHPressed;\n\nprivate void txt_callerName_KeyDown(object sender, KeyEventArgs e)\n{\n    if (isCtrlHPressed && e.KeyCode == Keys.T && e.Modifiers == Keys.Control)\n        Console.WriteLine("^");\n\n    isCtrlHPressed = (e.KeyCode == Keys.H && e.Modifiers == Keys.Control);\n}
4104	EventEntry myEntry = new EventEntry();\nmyEntry.Title.Text = "Hello recurring Event!";\n// Set a location for the event.\nWhere eventLocation = new Where();\neventLocation.ValueString = "here and there";\nentry.Locations.Add(eventLocation);\n\n// Any other event properties\n\n// Recurring event:\nString recurData =\n  "DTSTART;VALUE=DATE:20070501\r\n" +\n  "DTEND;VALUE=DATE:20070502\r\n" +\n  "RRULE:FREQ=WEEKLY;BYDAY=Tu;UNTIL=20070904\r\n";\n\nRecurrence recurrence = new Recurrence();\nrecurrence.Value = recurData;\nmyEntry.Recurrence = recurrence;
4105	public class YourDataClass {\n        public string RequestDate { get; set; }\n        public string NotifDate { get; set; }\n        .\n        .\n        .\n    }\n\n    public class Sorter<T> where T : YourDataClass {\n        private Dictionary<string, Func<T, T, int>> actions =\n            new Dictionary<string, Func<T, T, int>> {\n                {"reqDate", (x, y) => String.Compare(x.RequestDate, y.RequestDate)},\n                {"notifDate", (x, y) => String.Compare(x.NotifDate, y.NotifDate)}\n            };\n\n        public IEnumerable<T> Sort(IEnumerable<T> list, string howTo) {\n            var items = list.ToArray();\n            Array.Sort(items, (x, y) => actions[howTo](x, y));\n            return items;\n        }\n    }\n\n    public void Sample() {\n        var list = new List<YourDataClass>();\n        var sorter = new Sorter<YourDataClass>();\n        var sortedItems = sorter.Sort(list, "reqDate");\n    }
4106	string sSQL = @"UPDATE [MyTable1]\nSET AT09 = GETDATE()\n,AT80 = 'IP'\n,AT83 = 'CO'\n,AT34 = (CASE WHEN AT34 IS NULL THEN GETDATE() ELSE AT34 END)\n,AT84 = '" + sU + "' WHERE AS = 0";
4107	var dateTimeStr = "17:10:03";\nvar user_time = DateTime.Parse( dateTimeStr );\nvar time_now = DateTime.Now;\n\nif( time_now > user_time )\n{\n  // your code...\n}
4108	ArraySegment<T>
4109	Worksheet sheet = (Worksheet)workBookIn.Sheets[sheetName];\nRange r =\n    sheet.get_range("B2", "B" + sheet.Cells.SpecialCells(XlCellType.xlCellTypeLastCell).Row);\nArray vals = pitch.Cells.Value;
4110	ArrayList list = new ArrayList();\nlist.AddRange( mApples );\nlist.AddRange( mBananas );\nlist.AddRange( mOranges );\n\nforeach( Fruit item in list )\n{\n    item.Slice();\n}
4111	public Form1()\n{\n    InitializeComponent();\n\n    panel1.MouseMove += panel1_MouseMove;\n}\n\nvoid panel1_MouseMove(object sender, MouseEventArgs e)\n{\n    lbl.Location = e.Location;\n}
4112	private int MatchFeeID(DataTable Dt)\n{\n  DataTable mainDt = bl.GetDataSet("Select * From FeeMaster"); //assume this is a function that will return all the fee structures from database.\n\n  var fids = (from row in mainDt.AsEnumerable().Distinct()\n            group row by row.Field<string>("fid") into rowGroup\n            select new\n            {\n              fid = rowGroup.Key\n            });\n\n  foreach (var fid in fids)\n  {\n    string id = fid.fid;\n\n    DataTable t1 = new DataTable();\n    DataTable t2 = new DataTable();\n\n    DataRow[] dr1 = mainDt.Select(String.Format("fid = '{0}'", id));\n\n    t1 = dr1.CopyToDataTable();\n    t2 = Dt;\n\n    bool res = TablesEqual(t1, t2, 0, 1);\n    if (res) return Convert.ToInt32(id);\n  }\n\n  return -1;\n}
4113	TextOptions.TextFormattingMode="Display"
4114	protected void Button1_Click(object sender, EventArgs e)\n{\n    this.gvw1.Columns[0].HeaderText = "The new header";\n}
4115	private void button5_Click(object sender, EventArgs e)\n    {\n        var htmldoc = (HTMLDocument)webBrowser1.Document.DomDocument;\n        HTMLFormElement fm = (HTMLFormElement)htmldoc.forms.item(0);\n        foreach (IHTMLElement item in (IHTMLElementCollection)fm.all)\n        {\n            var textbox = item as IHTMLInputElement;\n            if (textbox != null)\n            {\n                textbox.value = "your text";\n            }\n        }\n    }
4116	this.DoSomething(tests.FirstOrDefault(x=>x.Name=="What I need to pass"))
4117	ISite site = (ISite)SiteHandler.Instance.CurrentSite;\nICategory category = EPiServerMailModule.Instance.GetSiteCategory(site);
4118	static void Application_ThreadException(object sender, System.Threading.ThreadExceptionEventArgs e)\n{\n     string b = null;\n     int i = b.Length;\n}
4119	var format = "dd/MM/yyyy hh:mm:ss";
4120	cmd.Parameters.Add("Return_Value", OracleDbType.Int16,\n        ParameterDirection.ReturnValue);
4121	/// <exception cref="SomeException">Some explanation</exception>
4122	if (Request.Browser.Type.Contains("IE")) // replace with your check\n{\n    ...\n} \nelse if (Request.Browser.Type.ToUpper().Contains("Chrome")) // replace with your check\n{\n    if (Request.Browser.MajorVersion  < v1)\n    { \n        DoSomething(); \n    }\n    ...\n}\nelse { }
4123	string myQuery = "Select [shoeSize] AS 'Shoe Size', [shoeBrand] AS 'Shoe Brand' FROM [myTable] "\n                 + "WHERE [customerName] = @customerName AND [customerPin] = @customerID"\n\n sqlCmd = new SqlCommand(myQuery, conn);\n sqlCmd.Connection.Open();\n sqlCmd.Parameters.AddWithValue("@customerName", customerName);\n sqlCmd.Parameters.AddWithValue("@customerID", customerID");\n --rest stays the same as before
4124	public partial class DemoService : ServiceBase\n{\n    static void Main(string[] args)\n    {\n        DemoService service = new DemoService();\n\n        if (Environment.UserInteractive)\n        {\n            service.OnStart(args);\n            Console.WriteLine("Press any key to stop program");\n            Console.Read();\n            service.OnStop();\n        }\n        else\n        {\n            ServiceBase.Run(service);\n        }\n    }
4125	for (int i = 0; i < lbSrc.Items.Count; i++)\n{\n    if (lbSrc.Items[i].Selected == true)\n    {\n        lbSrc.Items.RemoveAt(lbSrc.SelectedIndex);\n    }\n}
4126	MessageBox.Show()
4127	...\n// set temporary the ID as a text\ncol.Text = item.OID.ToString();\nYourGrid.ItemDataBound += OnYourGridItemBound;\n...\nprivate static void OnYourGridItemBound(object sender, Telerik.Web.UI.GridItemEventArgs e)\n{\n    GridDataItem dataBoundItem = e.Item as GridDataItem;\n    if (dataBoundItem != null)\n    {\n        foreach (TableCell cell in dataBoundItem.Cells)\n        {\n            if (cell.Controls.Count > 0)\n            {\n                var link = cell.Controls[0] as HyperLink;\n                if (link != null)\n                {\n                    var dataItem = dataBoundItem.DataItem as MyClass;\n                    var id = link.Text;\n                    link.Text =                                     \n                       dataItem.AnotherObject[id].Person.FormattedName;\n                }\n            }\n        }\n    }\n}
4128	protected void UpdateButton_Click(object sender, EventArgs e)\n{\n    if (e.CommandName == "Cancel")\n    {\n        ListViewDataItem lvd = (ListViewDataItem)((Control)e.CommandSource).NamingContainer;\n\n        //Same two lines for each value\n        Label ID = lvd.FindControl("idLabel") as Label;\n        string id = id.ToString();\n    }\n\n}
4129	class Program\n    {\n        static void Main(string[] args)\n        {\n            char testChar = '&';\n            string test1 = "&";\n            string test2 = "&&&&&&&&&&";\n            string test3 = "&&&&&&&u&&&&&&&";\n\n            Console.WriteLine(checkIfOnly(testChar, test1)); // true\n            Console.WriteLine(checkIfOnly(testChar, test2)); // true\n            Console.WriteLine(checkIfOnly(testChar, test3)); // false\n            Console.WriteLine(checkIfOnly('u', test3));      // false\n            Console.WriteLine(checkIfOnly('u', "u"));      // true\n            Console.WriteLine(checkIfOnly('u', "uuuu"));      // true\n\n\n        }\n\n        static bool checkIfOnly(char testChar, string s)\n        {\n            foreach (char c in s)\n            {\n                if (c != testChar) return false;\n            }\n            return true;\n        }\n\n    }
4130	To use it with DataGridView create a ToolTip (HtmlToolTip) and add this after the InitalizeComponent() in your form to replace the default tooltip:\n\nSystem.Reflection.FieldInfo toolTipControlFieldInfo=\ntypeof(DataGridView).GetField("toolTipControl", System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.NonPublic);\n\nSystem.Reflection.FieldInfo toolTipFieldInfo=\ntoolTipControlFieldInfo.FieldType.GetField("toolTip", System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.NonPublic);\n\nobject toolTipControlInstance =\ntoolTipControlFieldInfo.GetValue(myDataGridView);\n\ntoolTipFieldInfo.SetValue(toolTipControlInstance, myToolTip);
4131	(.*)courses\/(\w{4}\d{3})(?!\/)
4132	public void MakeVisible(Control control)\n{\n    if(control.HasChildren)\n    {\n        foreach (Control child in control.Controls)\n        {\n            MakeVisible(child);\n        }\n    }\n    control.Visible = true;\n}
4133	var appender = log4net.LogManager.GetRepository()\n                                 .GetAppenders()\n                                 .OfType<FileAppender>()\n                                 .SingleOrDefault();\n\nif (appender != null)\n{\n     appender.LockingModel = new FileAppender.MinimalLock();\n}
4134	private double[] _PatchSpectrum = new double[49]\n\npublic double[] GetPatchSpectrum\n{\n    get { return _PatchSpectrum; }\n}\n\npublic double this[int index]\n{\n    set { this._PatchSpectrum[index] = value; }\n}
4135	public class ObservableHashSet<T> : ObservableCollection<T>  \n{ \n    protected override void InsertItem(int index, T item) \n    { \n        if (Contains(item)) \n        {\n            throw new ItemExistsException(item); \n        }\n        base.InsertItem(index, item); \n    } \n\n    protected override void SetItem(int index, T item) \n    { \n        int i = IndexOf(item); \n        if (i >= 0 && i != index)\n        {\n             throw new ItemExistsException(item); \n        }       \n        base.SetItem(index, item); \n    } \n}
4136	svn info
4137	public Interface IHidable\n{\n    bool hidden;\n}\n\npublic class MyModel : IHidable , ...\n{\n\n}\n\nprivate Collection<MyModel> realCoollection;  //use this for anything else\npublic Collection<IHidable > viewCollection  //Bind this in your WPF\n{\n  get {\n     Collection<IHidable>  resCollection = new Collection<IHidable>();\n     foreach (MyModel item in realCoollection)\n     {            \n        if (!item.hidden) res.Add((IHidable)item)\n     }\n     return resCollection;\n   }\n}
4138	var result = Regex.Matches(input, @"\"".+?\""")\n             .Cast<Match>()\n             .Select(m => m.Value)\n             .ToArray();
4139	cmdText = @"select PKG_RAP.add_resource(:projectView, :projectId, :workerId, :roleId) from dual";\nusing (var cmd = new OracleCommand(cmdText, conn))\nusing (cmd.Parameters.Add(":projectView", projectView))\nusing (cmd.Parameters.Add(":projectId", id))\nusing (cmd.Parameters.Add(":workerId", record["WORKERID"]))\nusing (cmd.Parameters.Add(":roleId", record["ROLEID"]))\nusing (var tx = conn.BeginTransaction()) {\n    try {\n        // resource ID\n        var resourceId = Convert.ToInt32(cmd.ExecuteScalar());\n        tx.Commit();\n        return resourceId;\n    } catch {\n        tx.Rollback();\n        throw;\n    }\n}
4140	using (var connection = new SqlConnection("Your connection string"))\n{\n    int orderID;    \n    using (var command = new SqlCommand("INSERT INTO Orders (Created,OrderTotal) VALUES (GetDate(),@OrderTotal); SELECT CONVERT(int, SCOPE_IDENTITY()) as OrderID;", connection))\n    {\n        command.Parameters.AddWithValue("@OrderTotal", 10.0f);\n        connection.Open();\n        orderID = (int)command.ExecuteScalar();\n    }\n    //... now you can use orderID in your next query to insert an OrderLine\n}
4141	var sb = from p in ent.people .........\nvar serializer = new JavaScriptSerializer();\nstring json = serializer.Serialize(sb);
4142	bool isRoot = new Uri("http://www.example.com").AbsolutePath == "/";
4143	private static BitmapImage LoadImage(byte[] imageData)\n    {\n        if (imageData == null || imageData.Length == 0) return null;\n        var image = new BitmapImage();\n        using (var mem = new MemoryStream(imageData))\n        {\n            mem.Position = 0;\n            image.BeginInit();\n            image.CreateOptions = BitmapCreateOptions.PreservePixelFormat;\n            image.CacheOption = BitmapCacheOption.OnLoad;\n            image.UriSource = null;\n            image.StreamSource = mem;\n            image.EndInit();\n        }\n        image.Freeze();\n        return image;\n    }
4144	[HttpGet]\npublic int GetTotalItemsInArray([FromUri]int[] listOfIds)\n{\n       return listOfIds.Length;\n}
4145	string sql = "UPDATE SalesAssistant SET " \n+ "Name=@Name,IsEnabled=@IsEnabled,Role=@Role,LastModifiedDate=@LastModifiedDate,IsAdministrator=@IsAdministrator,PIN=@PIN,IsDeleted=@IsDeleted" + \n " WHERE SalesAssistantID=@SalesAssistantID";
4146	if ((int)this["myproperty"] < 0 )\n{\n     return 0;\n}\n\nif ((int)this["myproperty"] > 999 )\n{\n     return 999;\n}\n\nreturn (int)this["myproperty"]
4147	// assuming that the array is in row-major order...\npublic static bool IsInBorder(this BoardCell[,] board, int x, int y) {\n    return x == board.GetLowerBound(1) || x == board.GetUpperBound(1) ||\n           y == board.GetLowerBound(0) || y == board.GetUpperBound(0);\n}
4148	IList<IWebElement> all = driver.FindElements(By.ClassName("comments"));\n\nString[] allText = new String[all.Count];\nint i = 0;\nforeach (IWebElement element in all)\n{\n    allText[i++] = element.Text;\n}
4149	foreach (var item in collection2.Take(20)) // grab replacement range\n{\n    int index;\n    if ((index = collection1.FindIndex(x => \n                                  x.Name == item.Name && \n                                  x.Description == item.Description)) > -1)\n    {\n        collection1[index] = item;\n    }\n}\ncollection1.AddRange(collection2.Skip(20)); // append the rest
4150	view.Category = ctx.Categories.Select(x => CategoryMap.IndustryPage(x, industryID)).ToList();
4151	[DllImport(@"GLZO.dll", CallingConvention = CallingConvention.Cdecl)]
4152	var engine = new Jurassic.ScriptEngine();\nConsole.WriteLine(engine.Evaluate("5 * 10 + 2"));
4153	datagrid1.Columns[0].DefaultCellStyle.Format = "d";
4154	MapLayer layer1 = new MapLayer();\nPushpin pushpin1 = new Pushpin();\npushpin1.GeoCoordinate = MyGeoPosition;\npushpin1.Content = "Content";\nMapOverlay overlay1 = new MapOverlay();\noverlay1.Content = pushpin1;\noverlay1.GeoCoordinate = MyGeoPosition;\nlayer1.Add(overlay1);\nmyMap.Layers.Add(layer1);
4155	string conStr = @"Driver={Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb)};"+\n@"DBQ=|DataDirectory|\q.xlsx;ReadOnly=0;";
4156	var xml = XElement.Parse("your xml");\nvar q = from m in xml.Descendants("MIMIC")\n        where (int)m.Attribute("ID") == 1\n        from s in m.Descendants("SECTION")\n        select (string)s.Attribute("NAME");\n\nforeach ( var name in q ) {\n    Console.WriteLine(name);\n}
4157	Random r = new Random();\nint rInt = r.Next(0, 100); //for ints\nint range = 100;\ndouble rDouble = r.NextDouble()* range; //for doubles
4158	string hostName = "myComputer";\n        //get machine\n        using (DirectoryEntry machine = new DirectoryEntry("WinNT://" + hostName))\n        {\n            //get local admin group\n            using (DirectoryEntry group = machine.Children.Find("Administrators", "Group"))\n            {\n                //get all members of local admin group\n                object members = group.Invoke("Members", null);\n                foreach (object member in (IEnumerable)members)\n                {\n                    //get account name\n                    string accountName = new DirectoryEntry(member).Name;\n                    //DO SOMETHING...\n                }\n            }        \n        }
4159	#include <mmddk.h>
4160	style="background-image:url(imagePathFromVarible)"
4161	public enum eDeviceIntErrCodes \n    {\n        /// eDEVICEINT_ERR_FATAL -> 0x10001\n        eDEVICEINT_ERR_FATAL = 65537,\n    }
4162	Dictionary<string, int> ips = new Dictionary<string, int>();\n\n// ...\n\nforeach (var info in tcpConnections)\n{\n    string list = info.LocalEndPoint.Address.ToString() + ":" + info.LocalEndPoint.Port.ToString();\n    string remote = info.RemoteEndPoint.Address.ToString() + ":" + info.RemoteEndPoint.Port.ToString();\n    if (list == serverMonitor)\n    {\n        if (ips.ContainsKey(remote))\n            ips[remote]++;\n        else \n            ips.Add(remote, 1);\n    }\n}\n\nforeach (var entry in ips)\n{\n    Console.WriteLine("{0} ({1})", entry.Key, entry.Value);\n}
4163	using System.Xml;\n\npublic static void Main(String args[])\n{\n    XmlDocument foo = new XmlDocument();\n\n    //Let's assume that the IP of the target player is in args[1]\n    //This allows us to parameterize the Load method to reflect the IP address\n    //of the user per the OP's request\n    foo.Load( String.Format("http://freegeoip.net/xml/{0}",args[1])); \n\n    XmlNode root = foo.DocumentElement;\n\n    // you might need to tweak the XPath query below\n    XmlNode countryNameNode = root.SelectSingleNode("/Response/CountryName");\n\n    Console.WriteLine(countryNameNode.InnerText);\n}
4164	Char.IsWhiteSpace(myString[length - 1])
4165	DataRowView dr = checkedListBoxUnits.CheckedItems[0] as DataRowView;\nstring Name = dr["Unit"].ToString();
4166	public static async dbObj Login(String username, String password)\n    {\n        dbObj ret = new dbObj();\n        String rawWebReturn = "";\n        ret.propBag.Add(_BAGTYPE, returnTypes.Login.ToString());\n        DateTime date = DateTime.Now;\n        WebClient wc = new WebClient();\n        try\n        {\n            var result = await wc.DownloadStringTaskAsync(new Uri(baseLoginURI + "uname=" + username + "&pword=" + password + "&date=" + date.ToString()));\n            return parseWebReturn(result, ret);\n        }\n        catch (Exception e)\n        {\n            return parseWebReturn(e.Message, ret);\n        }\n    }
4167	private string CountOfMales(XDocument doc, string locationToFilter)\n{\n  var selection = from customer in doc.Descendants("Customer")\n                 .Where(c => c.Attribute("Location").Value == locationToFilter)\n                 select new\n                 {\n                    MaleValue = customer.Element("Name").Attribute("Value").Value\n                 };\n\n                 return selection.FirstOrDefault().MaleValue;\n}
4168	private void button1_Click(object sender, EventArgs e)\n    {\n        listBox1.Items.Clear();\n        DirectoryInfo dinfo = new DirectoryInfo(@"C:\cake");\n        FileInfo[] Files = dinfo.GetFiles("*.jpeg");\n        listBox1.Items.AddRange(Files);\n        listBox1.DisplayMember = "FileName";\n    }\n\n    private void listBox1_SelectedIndexChanged(object sender, EventArgs e)\n    {\n        if (listBox1.SelectedIndex != -1)\n        {\n            FileInfo fi = (FileInfo)listBox1.SelectedItem;\n            pictureBox1.ImageLocation = fi.FullName;\n        }\n    }
4169	DECLARE @StartDate DATETIME ,\n    @EndDate DATETIME\n\nSELECT  @StartDate = '01 Jan 2010' ,\n        @EndDate = '15 Mar 2010'\n\nSELECT  [Products].pName AS ItemName,\n        SalesLog.[Price] AS Price ,\n        COUNT(*)AS Quantity ,\n        SUM(SalesLog.[Price]) AS Total\nFROM    SalesLog\n        JOIN [Products] ON [Products].pCode = SalesLog.ProductCode /*Check this join - I'm not sure what your relationship is*/\nWHERE   BillDate >= @StartDate\n        AND BillDate < @EndDate + 1\nGROUP BY [Products].pName ,\n        SalesLog.[Price]
4170	private void  Form1_Load() \n    {\n       if(condition)\n       { \n          DisableControls();\n       }\n    }\n\n   private void DisableControls()\n   {\n        foreach(Control c in this.Controls)\n        { \n            // your disable code here.\n        }\n    }
4171	public static class DCHelper\n{\n  public static MyDataContext Create()\n  {\n     return new MyDataContext(ConfigurationManager.ConnectionStrings["CS"].ConnectionString);\n  }\n}
4172	public ModelView(Model model) : this()\n{\n    var closure = new AnonymousClass { _this = this, model = model };\n\n    Loaded += closure.Loaded;\n}\n\nprivate class AnonymousClass\n{\n    public ModelView _this;\n    public Model model;\n\n    public void Loaded(object sender, RoutedEventArgs e)\n    {\n        _this.DataContext = model;\n    }\n}
4173	var colors = new List<string> { "red", "green", "blue" };\nvar sentence = "The first car I saw was color, the second car was color and the third car was color";\nint i = 0;\nRegex.Replace(sentence, @"\bcolor\b", (m) => { return colors[i++ % colors.Count]; })
4174	RegisterGeneric(typeof(EFGenRepo<,>)).As(typeof(IGenRepo<,>));
4175	RemoteFieldValue v = new RemoteFieldValue\n{\n     id = "fixVersions",\n     values = new String[] { wi.Fields[29].Value.ToString() }\n};\nList<RemoteFieldValue> actionParams = new List<RemoteFieldValue>();\nactionParams.Add(v);\njiraSoapServiceService.updateIssue(token, key, actionParams.ToArray());
4176	z=s.Except(y).ToList();
4177	var oldList = new List<ORDERS>();\nvar newList= new List<ORDERS>();\n\nvar IdsToRemove = oldList.Select(t => t.link_id).Except(newList.Select(t => t.link_id));\nvar IdsToAdd = newList.Select(t => t.link_id).Except(oldList.Select(t => t.link_id));\nvar IdsToUpdate =  newList.Select(t => t.link_id).Intersect(oldList.Select(t => t.link_id));\n\n//remove\nbdd.orders.where(x => IdsToRemove.Contains(x.link_id)).ForEach(x => bdd.Remove(x));\n//add\nforeach(var order in newList.Where(x -> IdsToAdd.Contains(x.link_id))\n{\n   bdd.Orders.Attach(order);\n   bdd.Entries(order).EntityState = EntityState.Added;\n}\n//update\nforeach(var order in newList.Where(x -> IdsToUpdate .Contains(x.link_id))\n{\n   bdd.Orders.Attach(order);\n   bdd.Entries(order).EntityState = EntityState.Modified;\n}\n\nbdd.SaveChanges();
4178	SqlCommand cmd = new SqlCommand("SELECT c.CompanyName, o.Freight FROM Customers c INNER JOIN Orders o ON c.CustomerID = o.CustomerID WHERE c.CompanyName LIKE @recherche", cnn);\ncmd.Parameters.AddWithValue("@recherche", "%" + textBox1.Text + "%");
4179	flowDocument1.Blocks.Paragraph.Text = "Here"
4180	String term = "Gemini Oil";\nString input = "Gemini Sunflower Oil.";\nString result = Regex.Replace( input, String.Join("|", term.Split(' ')), @"<b>$&</b>");\nConsole.Out.WriteLine(result);\n\n\n<b>Gemini</b> Sunflower <b>Oil</b>.
4181	using (SqlConnection cn = new SqlConnection(connectionString))\n{\n  using (SqlCommand cm = new SqlCommand(commandString, cn))\n  {\n     using (SqlDataReader dr = cm.ExecuteReader();\n     {\n        // use dr to read values.\n     }\n  }\n}
4182	using (var zip = new ZipFile())\n{\n    zip.Password= "VerySecret!!";\n    zip.AddFile("test.txt");\n    zip.Save("Archive.zip"); \n}
4183	List<string> list = new List<string>()\n{\n    "Test 0 Length 32 [41 - 73]",\n    "Test 1 Length 22 [81 - 103]"\n};\n\nvar numbers = \n   list.SelectMany(\n          s => Regex.Matches(s, @"\[(\d+)[ -]+(\d+)\]")\n               .Cast<Match>()\n               .Select(m => m.Groups.Cast<Group>().Skip(1).Select(x=>x.Value)\n                                                          .ToArray())\n               .Select(x => new {start=int.Parse(x[0]), end=int.Parse(x[1]) })\n               .SelectMany(x => Enumerable.Range(x.start, x.end- x.start + 1))\n        )\n       .ToList();
4184	using (MyDbContext db = new MyDbContext())\n        {\n            foreach (var market in marketsList)\n            {\n                var existingMarket =\n                    db.Markets.FirstOrDefault(x => x.ProjectID == market.ProjectID && x.Year == market.Year);\n                if (existingMarket != null)\n                {\n                    //Set properties for existing market\n                     existingMarket.Year == market.Year\n                     //etc\n                }\n                else\n                {\n\n                    db.Markets.Add(market);\n                }\n                db.SaveChanges();\n            }\n        }
4185	List<string> lstResult= (from table in dt.AsEnumerable()\n                                          where table.Field<int>("Id") == id\n                                          select table.Field<string>("status")).ToList();
4186	modelBuilder.Conventions.Remove<PluralizingTableNameConvention>();
4187	public delegate void ObjectCreated(object sender, EventArgs args);\npublic delegate void ObjectDeleted(object sender, EventArgs args);\n\npublic event ObjectCreated ObjectWasCreated\n{\n    add\n    {\n        m_ObjectCreatedSubscribers.Add(value.Invoke);\n    }\n    remove\n    {\n        m_ObjectCreatedSubscribers.RemoveAll(e => e.Target.Equals(value));\n    }\n}\npublic event ObjectDeleted ObjectWasDeleted\n{\n    add\n    {\n        m_ObjectDeletedSubscribers.Add(value.Invoke);\n    }\n    remove\n    {\n        m_ObjectDeletedSubscribers.RemoveAll(e => e.Target.Equals(value));\n    }\n}\n\nprivate List<Action<object, EventArgs>> m_ObjectCreatedSubscribers = new List<Action<object, EventArgs>>();\nprivate List<Action<object, EventArgs>> m_ObjectDeletedSubscribers = new List<Action<object, EventArgs>>();\n\nvoid DispatchEvent(List<Action<object, EventArgs>> subscribers, object sender, EventArgs args)\n{\n    foreach (var subscriber in subscribers)\n        subscriber(sender, args);\n}
4188	Task task = new Task(() => { try { obj.Ping(); } catch {} });\ntask.Start();\nif(!task.Wait(1000)) throw new TimeoutException();\n// handle other task exceptions etc
4189	using System.Runtime.InteropServices; // DllImport\npublic class Win32 {\n  [DllImport("User32.Dll")]\n  public static extern void SetWindowText(int h, String s);\n}
4190	string sql = "SELECT empSalary from employee where salary = @salary";\n SqlConnection connection = new SqlConnection(/* connection info */);\n SqlCommand command = new SqlCommand(sql, connection);\n\n command.Parameters.AddWithValue("salary", txtSalary.Text);
4191	async:false
4192	IEnumerable<FieldList> properties = from p in typeof(T).GetProperties()\n                                where (from a in p.GetCustomAttributes(false)\n                                where a is EdmScalarPropertyAttribute\n                                select true).FirstOrDefault()\n                                select new FieldList\n                                {\n                                   FieldName = p.Name,\n                                   FieldType = p.PropertyType,\n                                   FieldPK = p.GetCustomAttributes(false).Where(a => a is EdmScalarPropertyAttribute && ((EdmScalarPropertyAttribute)a).EntityKeyProperty).Count() > 0\n                                 };
4193	public static List<someclass> OrderAsc(\n    List<someclass> object, \n    specific_field_by_someone )\n{\n    var data_table = new Dictionary<string, Func<someclass,object>>() \n    {\n        {"id", x => x.id },\n        {"name", x => x.name }\n    }\n\n    return object.OrderBy(data_dable["name"]);\n}
4194	public T DefinitionPopulate<T, TD, DontCare>(IDataReader dr)\n    where T: class, new()\n    where TD: IEntityDefinition<T, DontCare>, new()
4195	btn.SetBackgroundColor(Android.Graphics.Color.Yellow);
4196	public static Match Match(string input, string pattern)\n{\n  return new Regex(pattern, RegexOptions.None, true).Match(input);\n}\n\npublic static Match Match(string input, string pattern, RegexOptions options)\n{\n  return new Regex(pattern, options, true).Match(input);\n}
4197	elem.Attributes().FirstOrDefault(a=>a.Name.LocalName == "from");
4198	public void OnChangeClicked(object sender, RoutedEventArgs e)\n{\n    XmlDataProvider ds = Resources["testDS1"] as XmlDataProvider;\n    string xml = "<root><item>1</item></root>";\n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(xml);\n    using(ds.DeferRefresh())\n    {\n       ds.Document = doc;\n       ds.XmlNamespaceManager = new XmlNamespaceManager(doc.NameTable);\n    }\n}
4199	for (int i = 0; i < dt.Rows.Count; i++)\n{\nfor (int j = 0; j < dt.Columns.Count; j++)\n{\n    dt.Rows[i][j] = decrypted(dt.Rows[i][j].ToString());\n}\n}
4200	string path = Server.MapPath("~");
4201	double[][] array = \n   doc.Root.Elements("Month")\n      .Select(month => month.Elements().Select(x => (double)x).ToArray())\n      .ToArray();\n\nforeach(var innerArray in array)\n    Console.WriteLine(innerArray.Length); // you can get length of inner array
4202	static string ROT13(string input)\n{\n    return !string.IsNullOrEmpty(input) ? new string (input.ToCharArray().Select(s =>  { return (char)(( s >= 97 && s <= 122 ) ? ( (s + 13 > 122 ) ? s - 13 : s + 13) : ( s >= 65 && s <= 90 ? (s + 13 > 90 ? s - 13 : s + 13) : s )); }).ToArray() ) : input;            \n}
4203	private void mcAI_Open(ref bool Cancel)\n{\n    Cancel = true;\n}
4204	interface IStudent {\n   string Name { get; set; }\n   List<Subjects> Marks  { get; set; }\n   int RollNumber  { get; set; }\n}\n\nclass EntityViewModel: IStudent {\n   IStudent FromExcel;  \n   IStudent FromDB;\n   public string Name {\n     get { return Choose("Name").Name; }\n     set { Choose("Name").Name = value; }\n   }\n   public string RollNumber{\n     get { return Choose("RollNumber").RollNumber; }\n     set { Choose("RollNumber").RollNumber = value; }\n   }\n   internal IStudent Choose(string propertyName){\n     if(IsOveridable(propertyName))\n        return this.FromExcel;\n     else \n        return this.FromDB  \n   }\n}\nclass ViewModel{\n   ObservableCollection<EntityViewModel> Entities;\n}
4205	string sIn = "%1111_?2222_?3333_";\nstring sOut = string.Join("_", sIn.Split('_').Where((x, index) => index != 1));
4206	valuesCombined.Split(',').Select(s => s.Trim().Substring(1, s.Length - 2)).ToArray();
4207	var routeDate = config.Routes.GetRouteData(request);
4208	public class Setup : MvxWpfSetup\n{\n    public Setup(Dispatcher dispatcher, IMvxWpfViewPresenter presenter)\n        : base(dispatcher, presenter)\n    {\n    }
4209	[global::System.Reflection.Obfuscation(Exclude=true, Feature="renaming")]
4210	... .ToString("#,##0.00")
4211	string ServersToPing = "localhost:80 localhost:443";\nstring[] ServerArrays = ServersToPing.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n\nforeach (string server in ServerArrays)\n{\n    string host = server.Substring(0, server.IndexOf(':'));\n    Ping pingreq = new Ping();\n    PingReply pingrep = pingreq.Send(host, 30 * 1000);\n    Console.WriteLine("{0}:time={1}ms", pingrep.Address.ToString(), pingrep.RoundtripTime.ToString());\n}\n\nConsole.ReadLine();
4212	DoEvents()
4213	private void txtSearch_TextChanged(object sender, EventArgs e)\n{\n    StringBuilder sb = new StringBuilder();\n\n    foreach (DataColumn column in dv.Table.Columns)\n    {\n        sb.AppendFormat("{0} Like '%{1}%' OR ", column.ColumnName, txtSearch.Text);\n    }\n\n    sb.Remove(sb.Length - 3, 3);\n    dv.RowFilter = sb.ToString();\n    dgClientMaster.DataSource = dv;\n}
4214	viewer.ShowLastPage();\n        string TotalPage = viewer.GetCurrentPageNumber().ToString();\n        viewer.ShowFirstPage(); \n        pageNo.Text = viewer.GetCurrentPageNumber() + " of " + TotalPage;
4215	switch(choice)\n{\n   case 1: ...\n      .\n      .\n      .\n   case -1: Console.WriteLine("Put in your own saying: ");\n            phrase = " " + Console.ReadLine();\n            break;\n}
4216	public void Main()\n{\n    Target sometarget = new Target();\n    IKernel kernel = new StandardKernel(new Bindings());\n    //var weapon = kernel.Get<IWeapon>();\n    var character = kernel.Get<Character>();\n    character.Attack(sometarget);\n}
4217	public class MySplitter\n{\n     public MySplitter(string split)\n     {\n         var results = string.Split(',');\n         NamedPartA = results[0];\n         NamedpartB = results[1];\n     }\n\n     public string NamedPartA { get; private set; }\n     public string NamedPartB { get; private set; }\n}
4218	SerialPort port;\nstring myReceivedLines;\n\n   protected override void SolveInstance(IGH_DataAccess DA)\n  {\n\n    string gcode = default(string);\n    DA.GetData(0, ref gcode);\n\n    port = new SerialPort(selectedportname, selectedbaudrate, Parity.None, 8, StopBits.One);\n    port.DtrEnable = true;   \n    port.Open();            \n    port.DataReceived += this.portdatareceived;\n\n    if (gcode == null)\n    {\n        AddRuntimeMessage(GH_RuntimeMessageLevel.Warning, "Specify a valid GCode");\n        return;\n    }\n    else\n    {\n        DA.SetDataList(0,  myReceivedLines);\n        port.WriteLine(gcode);\n    }    \n              }\n\n    private void portdatareceived(object sender, System.IO.Ports.SerialDataReceivedEventArgs e)\n    {\n        myReceivedLines = port.ReadExisting();\n    }
4219	var obj = new MyRecord();\nvar json = new JavaScriptSerializer().Serialize(obj);
4220	String xmlDateString = XmlConvert.ToString(DateTime.UtcNow,XmlDateTimeSerializationMode.Local);
4221	[XmlArray(ElementName = "Products")]\n[XmlArrayItem("Product")]\n    public MyProduct[] Products;
4222	public class PeopleRepository {\n    public PeopleRepository(ISession session) {\n        // store session\n    }\n}
4223	public void testGetCrystallographicOrthogonalisation() {\n\n    double[] len = { 10.0, 11.0, 12.0 };\n    double[] ang = { 80.0, 90.0, 100.0 }; // degrees!\n    RealSquareMatrix m = RealSquareMatrix\n.getCrystallographicOrthogonalisation(len, ang);\n    RealSquareMatrix mm = new RealSquareMatrix(3, new double[] {\n9.843316493307713, 0.0, 0.0, -1.7632698070846495,\n10.832885283134289, 0.0, 0.0, 1.9101299543362344, 12.0 });\n    MatrixTest.assertEquals("orthogonalise", mm, m, 0.000000000001);\n}
4224	using System.IO;\n\nnamespace MySQLCEApplication\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            // Call the File class Delete method to delete the database.\n            File.Delete("Test.sdf");\n        }\n    }\n}
4225	using HtmlAgilityPack;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var doc = new HtmlDocument();\n        doc.Load("log.txt");\n        var dt = new DataTable();\n        bool hasColumns = false;\n        foreach (HtmlNode row in doc\n            .DocumentNode\n            .SelectNodes("//mainelement"))\n        {\n            if (!hasColumns)\n            {\n                hasColumns = true;\n                foreach (var column in row.ChildNodes\n                    .Where(node => node.GetType() == typeof(HtmlNode)))\n                {\n                    dt.Columns.Add(column.Name);\n                }\n            }\n            dt.Rows.Add(row.ChildNodes\n                .Where(node => node.GetType() == typeof(HtmlNode))\n                .Select(node => node.InnerText).ToArray());\n        }\n    }\n}
4226	DashboardEntities dashboardDB = new DashboardEntities();\n\nvar sites = dashboardDB.Instances\n    .Select(attr => new SiteModel\n        {\n            url = attr.url,\n            server = attr.server,\n            pool = attr.pool,\n            version = attr.version,\n            client = attr.url\n        })\n    .ToList();\n\nsites.ForEach(attr => attr.client = Regex.Replace(attr.client, @"\.[a-z-./]+", "").Replace("formation-", ""));
4227	if (Session["CurrCatId"] != null)\n{\n    CurrCatId = (int)(Session["CurrCatId"]);\n\n    // if the dictionary isn't even in Session yet then add it\n    if (Session["itemColl"] == null)\n    {\n        Session["itemColl"] = new Dictionary<int, int>();\n    }\n\n    // now we can safely pull it out every time\n    itemColl = (Dictionary<int, int>)Session["itemColl"];\n\n    // if the CurrCatId doesn't have a key yet, let's add it\n    // but with an initial value of zero\n    if (!itemColl.ContainsKey(CurrCatId))\n    {\n        itemColl.Add(CurrCatId, 0);\n    }\n\n    // now we can safely increment it\n    itemColl[CurrCatId]++;\n}
4228	DateTime dt = new DateTime(2000,1,1);\nDateTime dtEnd = dt.AddDays(9999);\nConsole.WriteLine("Maximum date available:" + dtEnd.ToShortDateString());\n\ndtEnd = new DateTime(2013,7,25);\nTimeSpan ts = dtEnd - dt;\nConsole.WriteLine("Today Day number from base: " + ts.TotalDays);
4229	string StartTime = ((TextBox)TestDV.FindControl("txtBST")).Text.ToString();\nDateTime dt = new DateTime();\ntry { dt = Convert.ToDateTime(StartTime); } \ncatch(FormatException) { dt = Convert.ToDateTime("12:00 AM"); }\nStartTime = dt.ToString("HH:mm");
4230	-I/Users/bill/Desktop/libdvbcsa-master/src/dvbcsa
4231	drivers.Select((d,i) => new { Index = i, Driver = d })\n       .ToList()\n       .ForEach(entry => car[entry.Index].AssignDriver(entry.Driver));
4232	enum MyEnum \n{ \n    [Description("This is black")] \n    Black, \n    [Description("This is white")] \n    White \n}
4233	NotesEmbeddedObject.ExtractFile
4234	System.TimeSpan ts = (i.joinDt - DateTime.Now.Date).Value;
4235	private void ChercheStextBox_TextChanged(object sender, EventArgs e)\n    {\n        var bd = (BindingSource)dataGridView3.DataSource;\n        var dt = (DataTable)bd.DataSource;\n        dt.DefaultView.RowFilter = string.Format("LibService like '%{0}%'", ChercheStextBox.Text.Trim().Replace("'", "''"));    \n        dataGridView3.Refresh();\n\n\n    }
4236	myxml.WriteStartElement("site");\nmyxml.WriteAttributeString("isTrue", "false");\nmyxml.WriteString("http://www.example.com");
4237	public class Blobs : BlobCollection {}
4238	StartActivity (typeof (MainActivity)); };
4239	wsdl.exe
4240	Person[] people= new Person[4];\nusing(var file = System.IO.File.OpenText(_LstFilename))\n{\n   int j=0;\n while (!file.EndOfStream)\n    {\n        String line = file.ReadLine();\n\n        // ignore empty lines\n        if (line.Length > 0)\n        {    \n\n            string[] words = line.Split(' ');\n             Person per= new Person(words[0], words[1], words[2], Convert.ToInt32(words[3]));\n\n             people[j]=per;\n             j++\n\n        }\n\n}
4241	public void CreateControl(IntPtr hParentWnd)\n  {\n    _userControl = new MyWPFUserControl();\n\n    var parameters = \n      new HwndSourceParameters("", _initialWidth, _initialHeight)\n      {\n        ParentWindow = (IntPtr)hwndParent,\n        WindowStyle = ...,          // Win32 style bits\n        ExtendedWindowStyle = ...,  // Win32 ex style bits\n      })\n\n    _hwndSource = \n      new HwndSource(parameters) { RootVisual = _userControl };\n  }\n\n  public void DestroyControl()\n  {\n    _hwndSource.Destroy();\n  }
4242	cmdReader = new MySqlCommand(query, conn);\nmyReader = cmdReader.ExecuteReader();\n\nfor(int index=0; index < reader.FieldCount; index++)\n{\n   c.Items.Add(myReader.GetName(index));\n}
4243	byte[] twoBytes = new byte[2];\nint bytesRead = fs.Read(twoBytes, 0, twoBytes.Length);
4244	Public Function MembersOfGroup(ByVal GroupName As String) As List(Of DirectoryEntry)\n    Dim members As New List(Of DirectoryEntry)\n    Try\n        Using search As New DirectoryEntry("WinNT://./" & GroupName & ",group")\n            For Each member As Object In DirectCast(search.Invoke("Members"), IEnumerable)\n                Dim memberEntry As New DirectoryEntry(member)\n                members.Add(memberEntry)\n            Next\n        End Using\n    Catch ex As Exception\n        MessageBox.Show(ex.ToString)\n    End Try\n    Return members\nEnd Function
4245	if (configurationCondition)\n{\n    routes.MapRoute("Hijaack",\n        url: "controllerA/{*theRest}",\n        defaults: new { controller = "controllerB", action = "Index" });\n}
4246	private void FillItems()\n{\n    allItems = GetAllItems();\n    availableItems = new BindingList<string>(allItems);\n    selectedItems = new BindingList<string>();\n\n    itemsListBox.DataSource = availableItems;\n    selectedItemsListBox.DataSource = selectedItems;\n}\n\nprivate void addItemButton_Click(object sender, EventArgs e)\n{\n    object itemsToAdd = itemsListBox.SelectedItems;\n    foreach (string item in itemsToAdd) {\n        availableItems.Remove(item);\n        selectedItems.Add(item);\n    }\n}
4247	public static void main(final String[] args) {\n    ArrayList<String> list = new ArrayList<>();\n    list.add("1");\n    list.add("2");\n    list.add("3");\n    list.add("4");\n    list.add("5");\n    List<String> result = getCombinations(list, 2);\n    System.out.println(result.size());\n    System.out.println(result);\n}\n\nprivate static List<String> getCombinations(final List<String> list, final int length) {\n    if (length >= 1) {\n        return removeUntilLength(list, length, 0);\n    }\n    return new ArrayList<>();\n}\n\nprivate static List<String> removeUntilLength(final List<String> list, final int length, final int lastIdx) {\n    List<String> ret = new ArrayList<>();\n    if (list.size() == length) {\n        ret.add(list.toString());\n    } else {\n        for (int i = lastIdx; i < list.size(); i++) {\n            List<String> tmp = new ArrayList<>(list);\n            tmp.remove(i);\n            ret.addAll(removeUntilLength(tmp, length, Math.max(i, 0)));\n        }\n    }\n    return ret;\n}
4248	public void SaveScore(ScoreInfo scoreInfo)\n    {\n        var listOfScoreInfo = this.GetListOrDefault<ScoreInfo>(App.SCORE);\n        bool isAdd = true;\n        foreach (var info in listOfScoreInfo)\n        {\n            if (info.Name == scoreInfo.Name && info.Score == scoreInfo.Score)\n                isAdd = false;\n        }\n        if(isAdd)\n            listOfScoreInfo.Add(scoreInfo);\n        listOfScoreInfo.Sort(scoreInfo.Compare);\n\n        if (listOfScoreInfo.Count > 15)\n        {\n            listOfScoreInfo.RemoveAt(15);\n        }\n\n        this.AddOrUpdateValue(App.SCORE, listOfScoreInfo);\n        this.Save();\n    }
4249	public Customer GetCustomer(int customerID)\n   {\n         return DataLayer.GetCustomer(customerID);\n   }
4250	protected void ChangePassword1_ChangedPassword(object sender, EventArgs e)\n    {\n\n        if (ChangePassword1.CurrentPassword == ChangePassword1.NewPassword)\n        {\n            Response.Redirect("ChangePassword.aspx");\n\n        }\n        //Label1.Text = "current and new passwords should not match";        \n        Label1.Visible = false;\n    }
4251	var plainText = "This will be encrypted.";\nvar aesAlg = new RijndaelManaged();\naesAlg.Key = new byte[32] { 118, 123, 23, 17, 161, 152, 35, 68, 126, 213, 16, 115, 68, 217, 58, 108, 56, 218, 5, 78, 28, 128, 113, 208, 61, 56, 10, 87, 187, 162, 233, 38 };\naesAlg.IV = new byte[16] { 33, 241, 14, 16, 103, 18, 14, 248, 4, 54, 18, 5, 60, 76, 16, 191};\nICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\n\nmsEncrypt = new MemoryStream();\nusing (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write)) {\n    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt)) {\n        swEncrypt.Write(plainText);\n    }\n}\n\nreturn msEncrypt.ToArray();
4252	Math.Round(n * 8) / 8.0
4253	IList<Person> people = session\n    .CreateQuery("from Person p where p.Name like :name")\n    .SetParameter("name", "%???%")\n    .List<Person>();
4254	private void Form1_Load(object sender, EventArgs e)\n    {\n        dataGridView1.CellContentClick += new DataGridViewCellEventHandler(dataGridView1_CellContentClick);\n\n        DataGridViewButtonColumn select = new DataGridViewButtonColumn();\n        select.Text = "Details";\n        select.HeaderText = "Details";\n        select.Name = "Select";\n        dataGridView1.Columns.Add(select);\n    }\n\n    private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)\n    {\n        if (e.ColumnIndex == dataGridView1.Columns["Select"].Index)\n        {\n            MessageBox.Show(String.Format("Clicked! Row: {0}", e.RowIndex));\n        }\n    }
4255	var aPlusses = string.Empty;\nfor(var i = 0; i < numA; i++)\n{\n    aPlusses += "+";\n}
4256	public static void PrintSource(Uri address)
4257	private void dataGridView1_KeyDown(object sender, KeyEventArgs e)\n {\n    if (e.KeyData == (Keys.Alt | Keys.S))\n    {\n         //put your code to validate i.e. what u are trying in button click event\n    }\n }
4258	var bRows = dataset.TableB.Where(r => r.RowState != DataRowState.Delete);\nvar results = (from rowA in dataset.TableA\n               join rowB in bRows\n                    on rowA.ID equals rowB.ID\n               join rowC in dataset.TableC\n                    on rowB.ID equals rowC.ID\n               select new { rowB.ColA, rowC.ColA });
4259	try\n  {\n  X509Certificate theSigner = X509Certificate.CreateFromSignedFile("c:\\r\\1.dll");\n  Console.Write("certificate info :"+ theSigner.GetCertHashString());\n  }\n  catch (Exception ex)\n  {\n         Console.WriteLine("No digital signature ");\n\n\n  }
4260	deque<string>
4261	//Create a reminder\nReminder myReminder = new Reminder("buy milk");\nmyReminder.Title = "Buy Milk";\nmyReminder.Content = "Don't forget to buy milk!";\nmyReminder.BeginTime = DateTime.Now.AddSeconds(10);\nmyReminder.ExpirationTime = DateTime.Now.AddSeconds(15);\nmyReminder.RecurrenceType = RecurrenceInterval.None;\nmyReminder.NavigationUri = new Uri("/MainPage.xaml?fromReminder=1",         UriKind.Relative);\n\n//Add the reminder to the ScheduledActionService\nScheduledActionService.Add(myReminder);
4262	IEquatable<T>
4263	var BDATE = "08/12/2014";\nstring[] strArr = BDATE.Split('/');\n\nfields.SetField("txt_Date_Of_Birth", \n    string.Format("{0}-{1}-XXXX", strArr[0], strArr[1]));
4264	ManagementScope scope;\n SelectQuery query;\n\n scope = new ManagementScope("root\\WMI");\n query = new SelectQuery("SELECT * FROM WmiMonitorBrightness");\n\n using (ManagementObjectSearcher searcher = new ManagementObjectSearcher(scope, query))\n {\n    using (ManagementObjectCollection objectCollection = searcher.Get())\n    {\n      foreach (ManagementObject mObj in objectCollection)\n      {\n        Console.WriteLine(mObj.ClassPath);\n        foreach (var item in mObj.Properties)\n        {\n          Console.WriteLine(item.Name + " " +item.Value.ToString());\n          if(item.Name =="CurrentBrightness")\n            //Do something with CurrentBrightness\n        }\n      }\n    }\n  }
4265	double low_med = 17; // was 30\ndouble med_hi = 92;  // was 70\n\n// Set Y axis custom labels\naxisY.CustomLabels.Add(0, low_med, "Low");\naxisY.CustomLabels.Add(low_med, med_hi, "Medium");\naxisY.CustomLabels.Add(med_hi, 100, "High");\n\nStripLine stripLow = new StripLine();\nstripLow.IntervalOffset = 0;\nstripLow.StripWidth = low_med;\nstripLow.BackColor = Color.FromArgb(64, Color.Green);\n\nStripLine stripMed = new StripLine();\nstripMed.IntervalOffset = low_med;\nstripMed.StripWidth = med_hi - low_med;\nstripMed.BackColor = Color.FromArgb(64, Color.Orange);\n\nStripLine stripHigh = new StripLine();\nstripHigh.IntervalOffset = med_hi;\nstripHigh.StripWidth = 100 - med_hi;\nstripHigh.BackColor = Color.FromArgb(64, Color.Red);\n\naxisY.StripLines.Add(stripLow);\naxisY.StripLines.Add(stripMed);\naxisY.StripLines.Add(stripHigh);
4266	BoundField.DataField
4267	if (wb != null)\n{\n    if (e.NewValue != null)\n        wb.NavigateToString(e.NewValue as string);\n    else\n        wb.Navigate("about:blank");\n}
4268	public void button1_Click(object sender)\n{\n    List<string> files = listBoxFiles.Items.OfType<string>().ToList();\n    string key = textBoxFileToSearch.Text;\n    backgroundWorkerSearch.RunWorkerAsync(new Tupple<List<string>,string>(files, key));\n}\n\nvoid backgroundWorkerSearch_DoWork(object sender, DoWorkEventArgs e)\n{\n     var state = e.Argument as Tupple<List<string>,string>;\n     List<string> files = state.Item1;\n     string key = state.Item2;\n     // You can now access the needed data.\n     List<string> searchResult = new List<string>();\n     // ...\n     e.Result = searchResult;\n}\n\nvoid backgroundWorkerSearch_RunWorkerCompleted(RunWorkerCompletedEventArgs e)\n{\n     List<string> searchResult = e.Result;\n     // Show result in the UI thread.\n}
4269	// i = 0\nIL_0001: ldc.i4.0                  // Load integer value 0 to stack\nIL_0002: stloc.0   // i            // Store stack value in local variable 0\n\n// goto loop-condition\nIL_0003: br.s      IL_0009         // Jump to IL_0009\n\n// loop-start:\n// i = i + 1\nIL_0005: ldloc.0   // i            // Load variable 0 to stack\nIL_0006: ldc.i4.1                  // Load integer `1` to stack\nIL_0007: add                       // Add top two stack values\nIL_0008: stloc.0   // i            // Store result in local variable 0\n\n// loop-condition:\n// if (i < 10) { goto loop-start }\nIL_0009: ldloc.0   // i            // Load variable 0 to stack\nIL_000A: ldc.i4.s  0A              // Load integer `10` to stack\nIL_000C: clt                       // Compare top two stack values\nIL_000E: stloc.1   // CS$4$0000    // Store stack value in local variable 1\nIL_000F: ldloc.1   // CS$4$0000    // Load variable 1 to stack\nIL_0010: brtrue.s  IL_0005         // Jump to IL_0005 if stack value is true
4270	TimeSpan timeSpan = new TimeSpan(0, value, 0);\n   return XmlConvert.ToString(timeSpan);
4271	DateTime dt = DateTime.ParseExact("1122010".PadLeft(8, '0'), "MMddyyyy", System.Globalization.CultureInfo.CurrentCulture);
4272	SqlDataAdapter da = new SqlDataAdapter("SELECT ItemName FROM TBItemList", oSqlConn);\nDataTable dt = new DataTable();\nda.Fill(dt);\ncbxparameter.DataSource = dt;\ncbxparameter.DisplayMember = "ItemName";\ncbxparameter.ValueMember = "ItemName";
4273	public class AccountController : Controller\n{\n   private IRepository<Account> _accountRepository;\n\n   public AccountController(IRepository<Account> accountRepository)\n   {\n      this._accountRepository = accountRepository;\n   }\n}
4274	var client = new SmtpClient("smtp.gmail.com", 587)\n        {\n            Credentials = new NetworkCredential("username", "password"),\n            EnableSsl =true\n        };\n\n        client.Send(message);
4275	namespace ConsoleApplication1\n{\n    class Program\n    {\n        static int[] Item; //Fixed int Item[] to int[] Item\n        static void Main(string[] args)\n        {\n            Add(3);\n            Add(4);\n            Add(6);\n        }\n\n\n     public static void Add(int x){\n\n         if (Item == null)  // First time need to initialize your variable\n         {\n             Item = new int[1];\n         }\n         else\n         {\n             Array.Resize<int>(ref Item, Item.Length + 1);\n         }\n         Item[Item.Length-1] = x; //fixed Item.Length -> Item.Length-1\n     }\n\n    }\n}
4276	FileUpload[] uploads = { FileUpload1, FileUpload2, ... };
4277	SlidePart slidePart = presentationPart.GetPartById(slideRelId) as SlidePart;
4278	{\rtf1\ansi\ansicpg1252\deff0\deflang1030{\fonttbl{\f0\fswiss\fcharset0 Arial;}}\n{\*\generator Msftedit 5.41.21.2509;}\viewkind4\uc1\pard\f0\fs20 Hello,\par\n\b world\b0 !\par\n}
4279	string temp = @"\\h\\k";\ntemp = temp.Replace(@"\\", @"\");
4280	var properties = typeof(Setting);\nforeach (var prop in properties)\n{\n    // here you can access the name of the property using prop.Name\n    // if you want to access the value you could use the prop.GetValue method\n}
4281	public const byte CONNECT = 100;
4282	rtx_report.AppendText(lclFileInfo.pathOnly + "\r");
4283	var output = from mt in MemberTanks\n             group by {mt.Tier, mt.Class, mt.TankName} into g\n             select new { g.Key.Tier, \n                          g.Key.Class, \n                          g.Key.TankName, \n                          Fights = g.Sum(mt => mt.Battles), \n                          Wins = g.Sum(mt=> mt.Victories\n                        };
4284	public class CustomListAdapter: BaseAdapter {\n    public CustomListAdapter(Context context, EventHandler buttonClickHandler) {\n        _context = context;\n        _buttonClickHandler = buttonClickHandler;\n    }\n\n    public View GetView(int position, View convertView, View parent) {\n        var itemView = convertView;\n\n        if(itemView == null) {\n            var layoutInflater = (LayoutInflater)_context.GetSystemService(Context.LayoutInflaterService);\n            itemView = layoutInflater(Resource.Layout.ItemView);\n        }\n\n        var button = itemView.FindViewById<Button>(Resource.Id.MyButton);\n        button.Click += _buttonClickHandler;\n    }\n\n    // ... Rest of the code omitted for simplicity.\n}
4285	var index = tabcontrolname.GetActiveTabIndex();
4286	dimension.DataSource = provider.DimensionList.Select(d=>new {Id=d.Id,Text=d.ToString()}).ToList();\ndimension.DataValueField = "Id";\ndimension.DataTextField = "Text";\ndimension.DataBind();
4287	List<string> list1 = new List<string>() { "item1", "item2" };\nlist1 = list1.SelectMany(x => x == "item2" ? new[] { "item3", "item4" } \n                                            : new[] { x })\n             .ToList();
4288	class MockGetRightsProxy : IGetRightsProxy\n{\n    public void GetRights(EventHandler<GetRightsCompletedEventArgs> callback)\n    {\n        // Create some args here\n        GetRightsCompletedEventArgs args = new GetRightsCompletedEventArgs(\n            new object[] { new ObservableCollection<Right>() }, null, false, null);\n\n        callback(null, args);\n    }\n\n}
4289	string s = @"<z:row ID=""1""\n   Author=""2;#Bruce, Banner""\n   Editor=""1;#Bruce, Banner""\n   FileRef=""1;#Reports/Pipeline Tracker Report.xltm"" \n   FileDirRef=""1;#Reports"" \n   Last_x0020_Modified=""1;#2014-04-04 12:05:56"" \n   Created_x0020_Date=""1;#2014-04-04 11:36:21"" \n   File_x0020_Size=""1;#311815""\n    />";\n\nstring result = Regex.Replace(s,"\"([0-9];#)","");
4290	return new string(str.Where(char.IsDigit).ToArray());
4291	public static bool IsOrdered<T>(this IEnumerable<T> source)\n{\n  var comparer = Comparer<T>.Default;\n  T previous = default(T);\n  bool first = true;\n\n  foreach (T element in source)\n  {\n      if (!first && comparer.Compare(previous, element) > 0)\n      {\n          return false;\n      }\n      first = false;\n      previous = element;\n  }\n  return true;\n}
4292	DataGridView.DisplayedRowCount()
4293	levelManager.LoadLevel (SceneName)
4294	/// Has a close relation to the <see cref="Get(string)"/>  \n/// and <see cref="Get(int)" /> methods.
4295	var rotationCenter = new Vector3(0.5f, 0.5f, 0.5f);\n\nMatrix transformation = Matrix.CreateTranslation(-rotationCenter)\n    * Matrix.CreateScale(scaling) \n    * Matrix.CreateRotationY(rotation) \n    * Matrix.CreateTranslation(position);
4296	grd.TotalRow = Janus.Windows.GridEX.InheritableBoolean.True;\ngrd.RootTable.Columns[10].AggregateFunction = Janus.Windows.GridEX.AggregateFunction.Sum;
4297	try \n{\n  // create objects, set properties ...\n  PersonalInfo myRecipient = new PersonalInfo();\n  myRecipient.FirstName = id_firstName.ToString(); // CHECK if value is valid (correct max length, ..)\n  // and so on ..\n\n  // set reference from Entity Department to Recipient\n  myDepartment.PersonalInfo = myRecipient;\n\n  myDB.AddToPersonalInfoes(myRecipient);\n  myDB.AddToDepartments(myDepartment);\n  myDB.SaveChanges();\n} \ncatch (Exception ex)\n{\n  Debug.WriteLine(ex.Message);\n  if (ex.InnerException!=null)\n    Debug.WriteLine(ex.InnerException.Message);\n}
4298	PowerShell ps = PowerShell.Create();\n\n        PSCommand cmd1 = new PSCommand();\n        cmd1.AddCommand("Import-Module");\n        cmd1.AddParameter("activedirectory");\n        ps.Commands = cmd1;\n        ps.Invoke();\n\n        cmd1.AddCommand("Add-PSSnapin");\n        cmd1.AddParameter("Name", "Quest.ActiveRoles.ADManagement");\n        ps.Commands = cmd1;\n        ps.Invoke();\n\n        cmd1.AddCommand("Get-QADMemberOf");\n        cmd1.AddParameter("identity", "rpimentel");\n        cmd1.AddCommand("where-object");\n        ScriptBlock filter = ScriptBlock.Create("$_.Name -ne 'Domain Users'");\n        cmd1.AddParameter("FilterScript", filter);\n        cmd1.AddCommand("Add-QADGroupmember");\n        cmd1.AddParameter("Member", "ktest");\n        ps.Commands = cmd1;\n        ps.Invoke();
4299	class student\n{\n   int rollnol;\n   string name;\n\n   [BsonIgnore]\n   string fees;\n}
4300	using(var writer = \n    new StreamWriter(fileName, new Encoding.UnicodeEncoding(true,true,true))\n{\n   writer.Write(editorTextString);\n}
4301	if(str.StartsWith("Cal") || str.Contains(" Cal")){\n    //do something\n}
4302	var filter = (someBooleanExpressionHere)\n   ? new Func<Something, bool>(x => x.SomeProp < 5)\n   : x => x.SomeProp >= 5;
4303	protected void DisplayPayOut(object sender, EventArgs e)\n{\n    Label Payout = FormView1.FindControl("PayoutLabel") as Label;\n    object dataItem = DataBinder.GetDataItem(FormView1);\n    Payout.Text = DataBinder.Eval(dataItem, "field1NameHere").ToString() + DataBinder.Eval(dataItem, "field2Namehere").ToString();\n}
4304	OfType<T>
4305	var entries = NavigationContext.QueryString.Select\n      (x => Uri.EscapeDataString(x.Key) + "=" + Uri.EscapeDataString(x.Value));\n\nstring joined = string.Join("&", entries.ToArray());
4306	if(! Regex.IsMatch(myString, @"^\s*\d(\d|\s)*$")) { ... }
4307	Color colFromHex = System.Drawing.ColorTranslator.FromHtml("#B7DEE8");\nws.Cells["A1:B1"].Style.Fill.BackgroundColor.SetColor(colFromHex);
4308	//Put these two lines to where you want to check the connection\nThread checkConnection = new Thread(() => checkConn());\ncheckConnection.Start();\n\n//Then create a method like below\npublic void checkConn()\n{\n     //Call the check connection method here\n     if(!miconexion(ip, user, pass))\n     {\n         //Handle failure here, please use Invoke if you want to control the UI thread.\n     }\n     //For best resource usage, join the thread after using it.\n     Thead.Join();\n}
4309	foreach (Process p in Process.GetProcessesByName("explorer"))\n{\n   p.Kill();\n}
4310	private void Form1_FormClosing(object sender, FormClosingEventArgs e)\n{\n   Properties.Settings.Default.Size = this.Size;\n   Properties.Settings.Default.Location = this.Location;\n   Properties.Settings.Default.Save();\n}\n\nprivate void Form1_Load(object sender, EventArgs e)\n{\n   this.Size = Properties.Settings.Default.Size;\n   this.Location = Properties.Settings.Default.Location;\n}
4311	\\host\file
4312	public static double[] GenerateRandomOrderedNumbers(double lowerBoundInclusive, double upperBoundExclusive, int count, Random random = null)\n{\n    random = random ?? new Random();\n    return Enumerable.Range(0, count)\n        .Select(i => random.NextDouble() * (upperBoundExclusive - lowerBoundInclusive) + lowerBoundInclusive)\n        .OrderBy(d => d)\n        .ToArray();\n}
4313	string testXML =\n        @"<p><entry>\n          <author>TestAuthor1</author>\n          <msg>TestMsg1</msg>  \n          </entry></p>\n        ";\n\nXElement xmlDoc = XElement.Parse(testXML);\n\nvar query = from entry in xmlDoc.Descendants("entry")\n            select new MergeEntry\n            {\n                author = entry.Element("author").Value,\n                message = entry.Element("msg").Value,\n            }; //You were missing the ";" in your post, I am assuming that was a typo.\n\n//I first binded to a List, that worked fine. I then changed it to use a BindingList\n//to support two-way binding.\nvar queryAsList = new BindingList<MergeEntry>(query.ToList());\n\nbindingSource1.DataSource = queryAsList;\ndataGridView1.DataSource = bindingSource1;
4314	public string MiniButtonText\n{\n   get\n   {\n       return GameInfo.IsMiniInserted == Visibility.Visible ? "Remove Mini" : "Insert Mini";\n   }\n}
4315	ScrollViewer.PanningMode
4316	p.x = index / 3;\np.y = index % 3;
4317	ISession dummy = factory.OpenSession();\n\nusing (ISession session = factory.OpenSession(dummy.Connection))\n{\n// my stuff here. the connection will remain the same across multiple query executions\n}
4318	protected void gvData_PreRender(object sender, EventArgs e)\n{\n    if (this.gvData.EditIndex != -1)\n    {\n        TextBox tb = new TextBox();\n\n        for (int i = 0; i < gvData.Rows[gvData.EditIndex].Cells.Count; i++)\n            try\n            {\n                tb = (TextBox)\n                    gvData.Rows[gvData.EditIndex].Cells[i].Controls[0];\n\n                if (tb.Text.Length >= 30)\n                {\n                    tb.TextMode = TextBoxMode.MultiLine;\n                }\n            }\n            catch { }\n    }\n}
4319	ContextMenu cm = ItemList.Resources["listBoxItemContextMenu"] as ContextMenu;\nMenuItem mi = cm.Items[0] as MenuItem;\nTextBox tb = mi.Items[0] as TextBox;
4320	if (y' > (y * x') / x)\n{\n    // center triangle\n}\nelse\n{\n    // right triangle\n}
4321	finalMatrix = finalMatrix * Matrix.Reflection(new Plane(0,-1,0, 0));
4322	private IEnumerable<string> GetAllNames(string json)\n{\n    JObject jo = JObject.Parse(json);\n    return jo["students"].Select(s => s["name"].ToString());\n}
4323	TextEditor->C#->Formatting->Advanced
4324	private readonly CrystalReportViewer reportViewer = new CrystalReportViewer();\n...\n    crystalReport.Load(this.reportViewer.ReportSource.ToString());\n\n    crystalReport.SetParameterValue("customerId", customerId);\n    crystalReport.SetParameterValue("isCurrent", isCurrent);\n    crystalReport.SetParameterValue("TotalSales", totalSales);
4325	word-wrap: break-word
4326	var json = File.ReadAllText(filename);\nvar stats = JsonConvert.DeserializeObject<Dictionary<string, dynamic>>(json);
4327	var doc = XDocument.Parse(xml); //use XDocument.Load if you have path to a file\n\nstring minSell = doc.Descendants("sell")\n                    .First()\n                    .Element("min")\n                    .Value;\n\nConsole.WriteLine(minSell); //prints 166.22
4328	lock(StaticObject) // Create a static object so there is only one value defined for this routine\n{\n    if(_getDataTask == null)\n    {\n         // Get data code here\n    }\n    return _getDataTask\n}
4329	accessRule.IdentityReference.Translate(typeof(SecurityIdentifier)) == serviceUserAccount.Translate(typeof(SecurityIdentifier))
4330	context.Windows.Local.SingleOrDefault(w => w.Id == idWindow);
4331	var query = db.TableAs.Where( a => a.TableBs.Count() > 0 )\n                      .Select( a => new { A = a, SumXY = a.X + a.Y } )\n                      .OrderBy( a => a.SumXY )\n                      .Take( 10 );
4332	IIS://hostname/W3SVC/1/root
4333	(?<TM>\w*(\?\?\w*)+)
4334	String^ postData = "username=" + UsernameInput->Text + "&password=" + PasswordInput->Text;\narray<Byte>^byteArray = Encoding::UTF8->GetBytes(postData);
4335	IEnumerator<String> iter = list.GetEnumerator();\nbool bHasMore = iter.MoveNext();\nwhile (bHasMore) {\n  try {\n    ...\n    bHasMore = Iter.MoveNext();\n  }\n  catch ...\n}
4336	var str = "get directions from Sydney to Melbourne";\n\nvar parts = str.Split(new string[] { "from", "to" }, StringSplitOptions.None); // split it up\nvar from = parts[1]; // index 1 is from\nvar to = parts[2];   // index 2 is to\n\nConsole.WriteLine(from); // "Sydney"\nConsole.WriteLine(to);   // "Melbourne"
4337	foreach (DictionaryEntry de in infopathFields)\n        {        \n            string fieldName = de.Key as string;         \n                if (workflowProperties.Item.Fields.ContainsField(fieldName))        \n                {           \n                    workflowProperties.Item[fieldName] = infopathFields[fieldName];        \n                }    \n        }    \n\n        workflowProperties.Item.Update();
4338	using(SqlConnection conn = new SqlConnection(stringconection))\n{\n    conn.Open();\n    SqlCommand comando = new SqlCommand(/*my query update/delete/insert/select o execute sp*/,conn);\n    comando.Parameters.Add("@parameter1","value1");\n    comando.Parameters.Add("@parameter2","value2");\n    comando.Parameters.Add("@parameterN","valueN");\n    comando.ExecuteNonQuery();\n}
4339	NetworkInterface networkInterface = NetworkInterface.GetAllNetworkInterfaces().Where(ipProp => ipProp.GetIPProperties().UnicastAddresses.FirstOrDefault(ip => ip.Address.ToString().Equals("YOUR_IP")) != null).FirstOrDefault();\nif (networkInterface != null)\n{\n    Console.WriteLine(networkInterface.GetPhysicalAddress());\n}
4340	public abstract class MyAbstractNetCommand {   \n\n     public abstract void ExecuteCommand();\n} \n\npublic class ConcreteCommand : MyAbstractNetCommand {\n\n    /*Here additional ConcreteCommand specific methods and state members*/\n\n    public override ExecuteCommand() {\n       // concrete iplementation\n    }\n}
4341	public class receipt\n{\n    public string original_purchase_date_pst { get; set; }\n    public string original_transaction_id { get; set; }\n    public string original_purchase_date_ms { get; set; }\n    public string transaction_id { get; set; }\n    public string quantity { get; set; }\n    public string product_id { get; set; }\n    public string bvrs { get; set; }\n    public string purchase_date_ms { get; set; }\n    public string purchase_date { get; set; }\n    public string original_purchase_date { get; set; }\n    public string purchase_date_pst { get; set; }\n    public string bid { get; set; }\n    public string item_id { get; set; }\n}
4342	var readQueue = string.Empty;\n\nprivate void port_DataReceived_1(object sender, SerialDataReceivedEventArgs e)\n{\n    readQueue += port.ReadExisting();\n\n    while (readQueue.Substring(1).Contains(@"\"))\n    {\n        var slashPos = readQueue.IndexOf(@"\",1);\n\n        var completeEntry = readQueue.Substring(0, slashPos);\n\n        Console.WriteLine(completeEntry);\n\n        readQueue = readQueue.Substring(slashPos);\n    }\n\n}
4343	public void SaveOrder(Order order)     \n{         \n  using (var repository = new StoreEntities())         \n  {             \n    // Add order - calling add object marks Order and all entities in its \n    // object graph as Added - they will be inserted to database             \n    repository.Orders.AddObject(order);              \n\n    // You don't need to add order items because they should be added together \n    // with order\n\n    // But you don't want to insert Products again, do you?\n    // So you have to say that Products are not Added but Unchanged             \n    foreach (var orderItem in order.OrderItems)             \n    {                 \n      // Not sure how to do it with your repository but with ObjectContext \n      // you can do\n      // context.ObjectStateManager.ChangeObjectState(orderItem.Product, \n      //   EntityState.Unchanged);  \n    }     \n  }\n}
4344	var result = \nfrom stu in SyStudent\njoin schsta in syschoolstatus on stu.syschoolstatusid equals schsta.syschoolstatusid //inner\njoin systa in SyStatus on schsta.SyStatusId equals systa.SyStatusId //innner\nfrom pic in cmstudentpicture.Where(x => x.systudentid = stu.systudentid).DefaultIfEmpty() //outer \nwhere stu.sycampusid = 6\nselect new{\n    stu,\n    schsta,\n    systa,\n    pic\n};
4345	int i = 0;\n\n        string[] words = textBox1.Text.Split('#');\n\n        foreach (string word in words)\n        {\n            if (word.StartsWith("CAT_DOG_") && (!word.EndsWith(i.ToString())) )\n            {\n                //process here\n                MessageBox.Show("match is: " + word);\n            }\n        }
4346	public static IList<DomainClass> GetAllDomains()\n{\n    using (var con = new SqlConnection(Properties.Settings.Default.YourConnection))\n    {\n        const String sql = "Select sex, Id, Name  From ATest ORDER BY Name ASC;";\n        con.Open();\n        IList<DomainClass> domains = con.Query<DomainClass>(sql).ToList();\n        return domains;\n    }\n}
4347	var xml = XElement.Load("test.xml");\n\n    foreach (var bookEl in xml.Elements("book"))\n    {\n        Console.WriteLine("Genre: " + bookEl.Attribute("genre").Value\n            + " " + "Publication: " + bookEl.Attribute("publicationdate").Value\n            + " " + "ISBN: " + bookEl.Attribute("ISBN").Value);\n        Console.WriteLine("Title: " + bookEl.Element("title").Value);\n        Console.WriteLine("Author: " + bookEl.Element("author").Element("first-name").Value \n            + " " + bookEl.Element("author").Element("last-name").Value);\n        Console.WriteLine("Price: " + bookEl.Element("price").Value);\n    }
4348	val = "my value";\ncnn.Execute("insert Table(val) values(@val)", new {val});\n\ncnn.Execute("update Table set val = @val where Id = @id", new {val, id = 1});
4349	Form2 userF = new Form2(this); // pass this to the constructor\nuserF.Show();
4350	private void ProcessTimerEvent(object obj)\n{\n    if (this.InvokeRequired)\n    {\n        this.Invoke(new Action<object>(this.ProcessTimerEvent), obj);\n    }\n    else\n    {\n         this.Show();\n    }\n}
4351	private async void BeginProcessingAsync(Data d)\n{\n    //Show to user that task is running\n    this.IsLoading = true; // Show a loading icon or something.\n\n    //Execute the long running task asynchronously\n    await Task.Run(() =>  LongRunningMethod(d));\n\n    //Anything after the await line will be executed only after the task is finished.\n    this.IsLoading = false;\n    DoSomethingWithFinishedData(d);\n}
4352	String s=String.Join(",",doc.Descendants("fruit")\n                            .Elements()\n                            .Select(x=>x.Attribute("data").Value));
4353	var factory = DbProviderFactories.GetFactory("System.Data.OracleClient");\nDbConnection connection = factory.CreateConnection();
4354	msbuild myApp.csproj
4355	public class Dice\n{\n    public static int Roll()\n    {\n        // Your Code\n    }\n}
4356	var baseMock = new Mock<AbstractBase>();\nvar inpcMock = baseMock.As<INotifyPropertyChanged>();\n\n// ...setup event...\n\npropertyChangedMapper.Subscribe(inpcMock.Object);\n\n// ... assertions ...
4357	public void Foo(Base b)\n{\n    b.VirtualMethod();\n}
4358	using System.Collections.ObjectModel;\nusing System.Management.Automation;\nusing System.Management.Automation.Runspaces;\n\nprivate bool VerifyPowerShellScriptSignature()\n{\n    using (var runspaceInvoke = new RunspaceInvoke())\n    {\n        string path = "C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\" +\n                      "Modules\\PSDiagnostics\\PSDiagnostics.psm1";\n        Collection<PSObject> results =\n            runspaceInvoke.Invoke("Get-AuthenticodeSignature " + path);\n        Signature signature = results[0].BaseObject as Signature;\n        return signature == null ? false : \n                                  (signature.Status == SignatureStatus.Valid);\n    }\n}
4359	ddlPaperDate.DataTextFormatString = "d";
4360	bc.BatchSize = 10000;\nbc.BulkCopyTimeout = 0;
4361	ProcessStartInfo processStartInfo = new ProcessStartInfo("path", "args");\nprocessStartInfo.Verb = "runas";\n\nusing (Process process = new Process())\n{\n   process.StartInfo = processStartInfo;\n   process.Start();\n   process.WaitForExit();\n}
4362	(10).GetNegative()
4363	//Copy the properties\n                foreach ( PropertyInfo oPropertyInfo in oCostDept.GetType().GetProperties() )\n                {\n                    //Check the method is not static\n                    if ( !oPropertyInfo.GetGetMethod().IsStatic )\n                    {\n                        //Check this property can write\n                        if ( this.GetType().GetProperty( oPropertyInfo.Name ).CanWrite )\n                        {\n                            //Check the supplied property can read\n                            if ( oPropertyInfo.CanRead )\n                            {\n                                //Update the properties on this object\n                                this.GetType().GetProperty( oPropertyInfo.Name ).SetValue( this, oPropertyInfo.GetValue( oCostDept, null ), null );\n                            }\n                        }\n                    }\n                }
4364	public ActionResult Index(string caller_id, int id = 0)
4365	private void button1_Click(object sender, EventArgs e)\n    {\n        comboBox1.DroppedDown = true;\n    }
4366	private void seznamSporocil_MouseDoubleClick(object sender, MouseButtonEventArgs e)\n    {\n        var listBox = sender as ListBox;\n        var item = listBox.SelectedItem as ListBoxItem;\n\n        var newWindow = new Window1();\n        newWindow.Title = item.Content.ToString();\n        newWindow.Show();\n    }
4367	class MovieCollection {\n        public IEnumerable<Movie> movies { get; set; }\n}\n\nclass Movie {\n        public string title { get; set; }\n}\n\nclass Program {\n        static void Main(string[] args)\n        {\n                string jsonString = @"{""movies"":[{""id"":""1"",""title"":""Sherlock""},{""id"":""2"",""title"":""The Matrix""}]}";\n                JavaScriptSerializer serializer = new JavaScriptSerializer();\n                MovieCollection collection = serializer.Deserialize<MovieCollection>(jsonString);\n        }\n}
4368	[DllImport("kernel32.dll")] \npublic static extern bool SetConsoleTextAttribute(\n                            IntPtr hConsoleOutput, int wAttributes);
4369	screen.Items.deleteSelected();
4370	class WebClientWithCookies: WebClient\n{\n    private CookieContainer _container = new CookieContainer();\n\n    protected override WebRequest GetWebRequest(Uri address) \n    {\n        HttpWebRequest request = base.GetWebRequest(address) as HttpWebRequest; \n\n        if (request != null) \n        { \n            request.Method = "Post";\n            request.CookieContainer = _container; \n        } \n\n        return request;\n    }\n}
4371	UITableViewController _parent;\n\npublic RootTableSource (IEnumerable<VendorDetails> items, UITableViewController parent)\n{\n    tableItems = items.ToList (); \n    _parent = parent;\n}\n\n\npublic override void RowSelected (UITableView tableView, NSIndexPath indexPath)\n{\n    tableView.DeselectRow (indexPath, true); \n\n    _parent.NavigationController.PushViewController(...);\n}
4372	public CustomException(dynamic json) : base(HumanReadable(json)) {}\nprivate static string HumanReadable(dynamic json) {\n    return whatever you need to;\n}
4373	List<T>
4374	public static void Parse()\n{\n    string htmlFragment =\n        @"\n    I want to match  the word 'highlight' in a string. But I don't want to match\n    highlight when it is contained in an HTML anchor element. The expression\n    should not match highlight in the following text: <a href='#'>highlight</a> more\n    ";\n    HtmlDocument htmlDocument = new HtmlAgilityPack.HtmlDocument();\n    htmlDocument.LoadHtml(htmlFragment);\n    foreach (HtmlNode node in htmlDocument.DocumentNode.SelectNodes("//.").Where(FilterTextNodes()))\n    {\n        Console.WriteLine(node.OuterHtml);\n    }\n}\n\nprivate static Func<HtmlNode, bool> FilterTextNodes()\n{\n    return node => node.NodeType == HtmlNodeType.Text && node.ParentNode != null && node.ParentNode.Name != "a" && node.OuterHtml.Contains("highlight");\n}
4375	Form.Controls.Add()
4376	AutoItX3Lib.AutoItX3 au3 = new AutoItX3Lib.AutoItX3();\nau3.WinWait("Select file to upload");\nau3.WinActivate("Select file to upload");\nau3.Send("C:\\Documents and Settings\\user\\Desktop\\area51.png");\nau3.Send("{ENTER}");
4377	gridControl1.DataMember = "YourDataTableName";
4378	RestRequst.AddFile()
4379	var aggregateArgs = new AggregateArgs();\n                aggregateArgs.Pipeline = new[]    \n                {\n                    new BsonDocument("$match", new BsonDocument("$and",\n                        new BsonArray().Add(new BsonDocument("Users.UserId", new BsonDocument("$all", \n                            new BsonArray().Add(paginationData.UserId).Add(paginationData.Id)))))),          \n                    new BsonDocument("$unwind", "$Posts"), \n                    new BsonDocument("$group", new BsonDocument\n                        {\n                            {"_id", "$_id"},                \n                            {"Posts", new BsonDocument("$push", "$Posts")},\n                        }),\n                    new BsonDocument("$sort", new BsonDocument("Posts.CreatedOn", -1)), \n                    new BsonDocument("$skip", paginationData.StartIndex - 1),\n                    new BsonDocument("$limit", paginationData.PageSize)\n                };
4380	public static object GetValue(string propertyName)\n{\n    var property = typeof(Names).GetField(propertyName);\n    return property.GetValue(null);\n}\n\nprivate static void Main(string[] args)\n{\n    string res = GetValue("One") as string;   // "Value of One"\n\n    Console.Read();\n}
4381	static void Main(string[] args)\n{\n  SvnHookArguments ha;\n  if (!SvnHookArguments.ParseHookArguments(args, SvnHookType.PostCommit, false, out ha))\n  {\n    Console.Error.WriteLine("Invalid arguments");\n    Environment.Exit(1);\n  }\n\n  using (SvnLookClient cl = new SvnLookClient())\n  {\n    SvnChangeInfoEventArgs ci;\n    cl.GetChangeInfo(ha.LookOrigin, out ci);\n\n    // ci contains information on the commit e.g.\n    Console.WriteLine(ci.LogMessage); // Has log message\n\n    foreach(SvnChangeItem i in ci.ChangedPaths)\n    {\n       //\n    }\n  }\n}
4382	using (var context = new YourDatabaseEntities())\n{\n    var elements = (from c in context.YourTable where c.TaskId == taskId select c);\n}
4383	event_name = null;
4384	YourApp.vshost.exe.manifest
4385	public delegate Lambda Lambda()
4386	System.TimeZoneInfo.GetSystemTimeZones()
4387	var xml = XDocument.Load("input.xml");\nvar node = (from file in xml.Descendants("File")\n           where (string)file.Element("FileName") == "logfile1.log"\n           select file).Single();
4388	public static void deleteRow(string table, string columnName, string IDNumber)\n    {\n    try\n    {\n    using (SqlConnection con = new SqlConnection(Global.connectionString))\n    {\n         con.Open();\n         using (SqlCommand command = new SqlCommand("DELETE FROM " + table + " WHERE " + columnName + " = '" + IDNumber+"'", con))\n         {\n               command.ExecuteNonQuery();\n         }\n         con.Close();\n    }\n    }\n    catch (SystemException ex)\n       {\n       MessageBox.Show(string.Format("An error occurred: {0}", ex.Message));\n       }\n    }\n }
4389	cordova.exec(win, fain, "Plugin", "method", [JSON.stringify(data)]);
4390	select\n    c.Id,\n    c.TelephoneNumber,\n    (select top 1 \n         Scale \n\n         from Rate r \n\n         where c.TelephoneNumber like r.Prefix + '%' order by Scale desc\n    ) as Scale\n\nfrom Call c
4391	private void btnSubmit_Click(object sender, EventArgs e)\n{\n    var postData = Encoding.Default.GetBytes("Fullname=Test");\n    webBrowser1.Navigate(\n        "http://www.url.com/Default.aspx", \n        null, \n        postData, \n        "Content-Type: application/x-www-form-urlencoded" + Environment.NewLine\n    );\n}
4392	public virtual Item Parent {get;set;}
4393	var e = db.Entry(new User() {Id =1, Name = "test"});\nvar property = e.CurrentValues.PropertyNames.FirstOrDefault(p => p == colName);\ne.CurrentValues[property] = colValue;
4394	[Test]\npublic void RegionFactoryDelegatesToRegionGenerator()\n{\n    var mockGenerator = new Mock<IMapRegiongenerator>();\n    var factory = new MapRegionFactory(mockGenerator.Object);\n\n    var expectedRegion = new Region();\n    var regionSize = CreateRandomRegionSize();\n    mockGenerator.Setup(g=>g.GenerateRegion(regionSize)).Returns(expectedRegion);\n\n    factory.SetRegionSize(regionSize);\n    Assert.That(factory.GetRegion(), Is.SameAs(expectedRegion));\n}
4395	public struct msg_next_match \n{\n    public int tatami;\n    public int category;\n    public int match;\n    public int minutes;\n    public int match_time;\n    public int gs_time;\n    public int rep_time;\n    public int rest_time;\n    public char pin_time_ippon;\n    public char pin_time_wazaari;\n    public char pin_time_yuko;\n    public char pin_time_koka;\n    public fixed char cat_1[32];\n    public fixed char blue_1[64];\n    public fixed char white_1[64];\n    public fixed char cat_2[32];\n    public fixed char blue_2[64];\n    public fixed char white_2[64];\n    public int  flags;\n};
4396	var process = Process.Start(...);\nprocess.WaitForExit();
4397	RelayCommand _saveCommand;\npublic ICommand SaveCommand\n{\n    get\n    {\n        if (_saveCommand == null)\n        {\n            _saveCommand = new RelayCommand(param => this.Save(),\n                param => this.CanSave );\n        }\n        return _saveCommand;\n    }\n}
4398	Mapper.CreateMap(typeof(Customer), typeof(CustomerViewItem)).ForMember("Id", opt => opt.Ignore());
4399	String FileName = "File.zip";\n            String FilePath = "C:/Test/" + FileName; //Replace this\n            System.Web.HttpResponse response = System.Web.HttpContext.Current.Response;\n            response.ClearContent();\n            response.Clear();\n            response.ContentType = "text/plain";\n            response.AddHeader("Content-Disposition", "attachment; filename=" + FileName + ";");\n            response.TransmitFile(FilePath);\n            response.Flush();\n            response.End();
4400	if (navProperty.FromEndMember.RelationshipMultiplicity == RelationshipMultiplicity.Many &&\n    navProperty.ToEndMember.RelationshipMultiplicity == RelationshipMultiplicity.Many)\n{\n    // deal with many to many link collections here...\n}
4401	DateTime?today?=?DateTime.Today;\nDateTime?firstDayInMonth?=?new?DateTime(today.Year,?today.Month,?1);\nDateTime?lastDayInMonth?=?new?DateTime(today.Year,?today.Month,?DateTime.DaysInMonth(today.Year,?today.Month));
4402	abstract class OuterBase<TInnerItem>\n{\n}\n\nclass Outer<TInner, TInnerItem> : OuterBase<TInnerItem> where TInner : Inner<TInnerItem>\n{\n    public void Add(TInner item)\n    {\n        item.Outer = this; // Compiles\n    }\n}\n\nclass Inner<TInnerItem> : ICollection<TInnerItem>\n{\n    OuterBase<TInnerItem> _outer;\n\n    public OuterBase<TInnerItem> Outer\n    {\n        set { _outer = value; }\n    }\n}
4403	.DataSource
4404	string source = "#if [Customer.OrderQuantity] > 5 #then 1000 #if [Customer.OrderQuantity] < 5 #then 500 #else 100";\n\nstring[] result = Regex.Split(source, @"\s*(?=#(?:if|else))");\n\nforeach (string a in result) {\n    Console.WriteLine(a);\n}
4405	if (!String.IsNullOrEmpty(HttpRuntime.AppDomainAppVirtualPath))\n    //ASP.Net\nelse \n    //Non-ASP.Net
4406	string session_string="";\nSqlConnection cn = new SqlConnection(YOUR_CONNECTION_STRING);\ncn.open();\nSqlCommand cmd = new SqlCommand();\ncmd.Connection=cn;\ncmd.CommandType=CommandType.Text;\ncmd.CommandText="select name_of_pages from permission where username='YOUR_USERNAME'";\nSqlDataReader rdr = cmd.ExecuteReader();\nif(rdr.hasRows==true){\n    while(rdr.Read()){\n        session_string=rdr["name_of_pages"] + ",";//You need to declare this variable globally before\n        session_string=session_string + rdr["name_of_pages"] + ","; //USE THIS LINE , NOT PREVIOUS ONE\n    }\n}\nrdr.close();//DONT FORGET THIS ALSO\ncn.close();//DONT FORGET THIS\n    Session["pages"]=session_string;\n    //Now to check\n    if(Session["pages"].Contains("Index.aspx")){\n        //PERFORM SOMETHING POSITIVE\n\n    }\n    else\n    {\n        //PERFORM SOMETHING NEGATIVE\n    }
4407	String data = "12:00pm";\nString time = data.substring(0, 5);\nString ampm = data.substring(5, 2);
4408	Namespace.GetItemFromID
4409	public event EventHandler MyNewEvent;
4410	Image.FromStream
4411	string sql2 = "UPDATE student SET moneyspent = moneyspent + @spent WHERE id=@id";\nSqlCommand myCommand2 = new SqlCommand(sql2, conn);\nmyCommand2.Parameters.AddWithValue("@spent", 50 )\nmyCommand2.Parameters.AddWithValue("@id", 1 )
4412	grd.DataSource = DT\n\n    'set autosize mode\n    grd.Columns(0).AutoSizeMode = DataGridViewAutoSizeColumnMode.AllCells\n    grd.Columns(1).AutoSizeMode = DataGridViewAutoSizeColumnMode.AllCells\n    grd.Columns(2).AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill\n\n    'datagrid has calculated it's widths so we can store them\n    For i = 0 To grd.Columns.Count - 1\n        'store autosized widths\n        Dim colw As Integer = grd.Columns(i).Width\n        'remove autosizing\n        grd.Columns(i).AutoSizeMode = DataGridViewAutoSizeColumnMode.None\n        'set width to calculated by autosize\n        grd.Columns(i).Width = colw\n    Next
4413	Process p = new Process();\np.StartInfo = startInfo;\np.WaitForExit();
4414	DoubleAnimation anim = new DoubleAnimation(0, 1, (Duration)TimeSpan.FromSeconds(1.2));\nScaleTransform st = new ScaleTransform();\nst.ScaleX = 0;\nst.ScaleY = 0;      \nIMAGE.RenderTransform = st;\nst.BeginAnimation(ScaleTransform.ScaleXProperty, anim);\nst.BeginAnimation(ScaleTransform.ScaleYProperty, anim);
4415	private async void  Button_Click_1(object sender, RoutedEventArgs e)\n    {\n        // load file from document library. Note: select document library in capabilities and declare .png file type\n        string filename = "Logo.png";\n        Windows.Storage.StorageFile sampleFile = await Windows.Storage.KnownFolders.DocumentsLibrary.GetFileAsync(filename);\n        // load file from a local folder\n        //Windows.Storage.StorageFile sampleFile = sampleFile = await Windows.ApplicationModel.Package.Current.InstalledLocation.GetFileAsync("Assets\\Logo.png");\n\n        BitmapImage img = new BitmapImage();\n        img = await LoadImage(sampleFile);\n        myImage.Source = img;\n    }\n\n    private static async Task<BitmapImage> LoadImage(StorageFile file)\n    {\n        BitmapImage bitmapImage = new BitmapImage();\n        FileRandomAccessStream stream = (FileRandomAccessStream)await file.OpenAsync(FileAccessMode.Read);\n\n        bitmapImage.SetSource(stream);\n\n        return bitmapImage;\n\n    }
4416	schema.name = "schemaName";\nschema.tables = new Tables[10];\nschema.tables[0].name = "tables1";
4417	NormalizeString()
4418	for (int i = 1; i <= 10; i++)\n        {\n            DropDownList drp = (DropDownList)panel1.FindControl("ddlxx" + i.ToString());//panel1 is your panel which contain dropdown ddlxx1,ddlxx2,ddlxx3...\n            drp.DataSource = Prod.GetComponents();\n            drp.DataTextField = "ComponentID";\n            drp.DataValueField = "ComponentName";\n            drp.DataBind();\n        }
4419	/p:VisualStudioVersion=14.0
4420	velocity /= 2f;
4421	panel1.ContextMenu = null;
4422	plus.Click += delegate\n    {\n        counttext.Text = string.Format("{0}", ++count);\n    };  \n    minus.Click += delegate\n    {\n        counttext.Text = string.Format("{0}", count > 0 ? --count : 0);\n    };
4423	//Put operators in order of 'complexity'. Since >= contains > and =, comes before them\nstring[] operators = new string[] {">=", "!=", ">", "="};\nstring expression = "(3>=4)!=(3>4)";\n\nforeach (string operator in operators)\n{\n    //Perform logic of creating expression tree here\n}
4424	richTextBox1.Text = Clipboard.GetText(TextDataFormat.Rtf);
4425	protected override void OnNavigatedTo(NavigationEventArgs e)\n    {\n                AddInfo();\n                ReadHistoryList_Loaded();\n    }
4426	XDocument doc = XDocument.Load(@"test.xml");\nXNamespace serv = "http://www.webex.com/schemas/2002/06/service";\nvar result = doc.Descendants(serv + "result").First().Value;
4427	TextBox1.Text = string.Format("{0}/{1}",\n    Path.GetDirectoryName(fileData),openFileDialog1.FileName);
4428	private void mnuDatabase1_Click(object sender, ...)\n{\n    ToolStripMenuItem MyMenuItem = (ToolStripMenuItem)sender;\n    ToolStripMenuItem parent = (ToolStripMenuItem)MyMenuItem.OwnerItem;\n    if (parent.Name == "mnuAdd")\n        //Add Menu\n    else if (parent.Name == "mnuEdit")\n        //Edit Menu\n    if (parent.Name == "mnuDelete")\n        //Delete Menu\n}
4429	static class Extensions\n{\n    public static IList<T> Clone<T>(this IList<T> listToClone) where T: ICloneable\n    {\n        return listToClone.Select(item => (T)item.Clone()).ToList();\n    }\n}
4430	private void dataGridView1_SortCompare(object sender, DataGridViewSortCompareEventArgs e)\n{\n    if (e.Column.Index == 0)\n    {\n        if (double.Parse(e.CellValue1.ToString()) > double.Parse(e.CellValue2.ToString()))\n        {\n            e.SortResult = 1;\n        }\n        else if (double.Parse(e.CellValue1.ToString()) < double.Parse(e.CellValue2.ToString()))\n        {\n            e.SortResult = -1;\n        }             \n        else\n        {\n            e.SortResult = 0;\n        }\n        e.Handled = true;\n   }\n}
4431	window.location = "/home";
4432	DateTime dt = Convert.ToDateTime(reader["date"]);\nint year = dt.Year;\nint month = dt.Month;\nint day = dt.Day;
4433	while (this.NavigationService.BackStack.Any())\n {\n          this.NavigationService.RemoveBackEntry();\n }
4434	string pattern = "\"([^\"]+)\"";\nvalue = Regex.Match(textToSearch, pattern).Value;\n\nstring[] removalCharacters = {",",";"}; //or any other characters\nforeach (string character in removalCharacters)\n{\n    value = value.Replace(character, "");\n}
4435	public JsonResult ActionName(){\nJsonObjectWhatEver value = new JsonObjectWhatEver();\nreturn Json(value,JsonBehaviour.AllowGet);   /// check the name is it JsonBehaviour or some thing simillar\n}
4436	Button1.Attributes.Add("OnClick", "clicked('" +\n     HttpUtility.HtmlDecode("R&#233;cup&#233;ration de frigorig&#232;ne" + "')");
4437	dataGridView1.CellClick += new DataGridViewCellEventHandler(dataGridView1_CellClick);\n\n    void dataGridView1_CellClick(object sender, DataGridViewCellEventArgs e)\n    {\n        dataGridView1[e.ColumnIndex, e.RowIndex].Style.BackColor = Color.White;\n    }
4438	DateTime dt = new DateTime(2012, 01, 01);\n TimeSpan ts = new TimeSpan(1, 0, 0, 0, 0);\n dt = dt + ts;
4439	Thread.CurrentPrincipal = new GenericPrincipal(new GenericIdentity(""), new string[0]);
4440	XDocument doc;\n\nusing (StreamReader reader = File.OpenText(filename))\n{\n  doc = XDocument.Load(reader);\n  doc.Root.Add(entry);\n}\n\ndoc.Save(filename);
4441	public class Person\n{\n    public string Name { get; protected set; }   \n}
4442	ApplicationLanguages.PrimaryLanguageOverride
4443	ShoppingList sitem = LLS.SelectedItem as ShoppingList;\nstring item = string.empty;\nif ( sitem != null )\n{\n item = sitem. (property where you text is stored)\n}
4444	var query = from e in db.MyTable\n            where e.AsOfDate <= DateTime.Now.Date\n            select e;
4445	try\n        {\n            connection.Open();\n            cmd = connection.CreateCommand();\n            cmd.CommandText = "INSERT INTO BOOK(ISBN, title, author, publisher,imgPath, catalogID) VALUES ('" + isbn + "','" + title + "','" + author + "','" + publisher + "','" + localPath + "','" + catalogid + "')";\n            int a= cmd.ExecuteNonQuery();\n             if(a>0)\n               //updated.\n             else\n              //Not updated.\n        }\ncatch (Exception)\n        {\n           //Not updated.\n        }
4446	Console.WriteLine("??");
4447	public ActionResult Index()\n{\n    var products = _db.Products.ToArray() // force loading the results from database \n                                           // and close the datareader\n\n    var viewModel = products.Select(product => GetMedicalProductViewModel(product));\n\n    return View(viewModel);\n}
4448	string year = idNumber.Substring(0, 2);\nstring month = idNumber.Substring(2, 2);\nstring day = idNumber.Substring(4, 2);
4449	foreach(PropertyInfo prop in o.GetType().GetProperties()) \n{\n    if(prop.PropertyType == typeof(int))\n        prop.SetValue(o, newValue, null);\n}
4450	Menu mainmenu = new Menu();\n        MenuItem NavigationMenu = new MenuItem();\n        NavigationMenu.Text = "This is a text";\n        NavigationMenu.NavigateUrl = "../somepage.aspx";\n        mainmenu.Items.Add(NavigationMenu);
4451	// Get employee from Session\nEmployee employee = (Employee)Session["Employee"];\n\n// Check if employee exists\nif(employee != null)\n{\n    RenderMenu(employee);\n}\n\n// Method to render list\nprivate void RenderMenu(Employee employee)\n{\n    StringBuilder _menu = new StringBuilder();\n    _menu.Append("<ul>");\n\n    // Property boolean that indicates if the employee is an admin\n    if(employee.IsAdmin)\n    {\n        //Add items for admin\n    } \n\n    _menu.Append("</ul>");\n\n    // Panel on the aspx page where you add the menu control\n    this.pnlMenu.Controls.Add(new LiteralControl() { Text = _menu.ToString() });\n}
4452	the timer can't handle the async part
4453	static private void WithCatch(Action f)\n{\n    try\n    {\n        f();\n    }\n    catch (System.TimeoutException ex)\n    {\n        Console.WriteLine("System.TimeoutException");\n    }\n    catch (System.Exception ex)\n    {\n        Console.WriteLine("System.Exception");\n    }\n}\nstatic public void Main(string[] args)\n{\n    WithCatch(() => {\n        for (int i = 0; i < 10; i++)\n           ONE_IndependentProcess(i);\n    });\n    // You could also do this inside the for loop for each one if you want\n    // to attempt all 10 even if one fails:\n    //for (int i = 0; i < 10; i++)\n    //    WithCatch(() => {ONE_IndependentProcess(i);});\n\n    WithCatch(() => {TWO_IndependentProcess();});\n    WithCatch(() => {THR_IndependentProcess();});\n}
4454	private static HashSet<String> s_StopWords = \n  new HashSet<String>(StringComparer.OrdinalIgnoreCase) {\n    "is", "am", "are", "were", "was", "do", "does", "to", "from", // etc.\n};\n\nprivate static Char[] s_Separators = new Char[] {\n  '\r', '\n', ' ', '\t', '.', ',', '!', '?', '"', //TODO: check this list \n};\n\n...\n\nString source = "I go to school";\n\n// ["I", "go", "school"] - "to" being a stop word is removed\nString[] words = source\n  .Split(s_Separators, StringSplitOptions.RemoveEmptyEntries)\n  .Where(word => !s_StopWords.Contains(word))\n  .ToArray();\n\n// Combine back: "I go school"\nString result = String.Join(" ", words);
4455	Process[] process = Process.GetProcesses();\nforeach (var p in process)\n{\n    selectedProgram = listView1.SelectedItems.ToString();\n}
4456	stream.WriteLine("<name>" + txtName.Text + "</name>");\nstream.WriteLine("<email>" + txtName.Text + "</email>");\nstream.WriteLine("<age>" + txtName.Text + "</age>");
4457	message CsvFile {\n    repeated CsvHeader header = 1;\n    repeated CsvRow row = 2;\n}\n\nmessage CsvHeader {\n    require string name = 1;\n    require ColumnType type = 2;\n}\n\nenum ColumnType {\n    DECIMAL = 1;\n    STRING = 2;\n}\n\nmessage CsvRow {\n    repeated CsvValue value = 1;\n}\n\n// Note that the column is implicit based on position within row    \nmessage CsvValue {\n    optional string string_value = 1;\n    optional Decimal decimal_value = 2;\n}\n\nmessage Decimal {\n    // However you want to represent it (there are various options here)\n}
4458	public void CreateNewAuthor(List<Author> newAuthors)\n{\n    foreach (Author newAuthor in newAuthors)\n    {\n        publishContext.AddToAuthors(newAuthor);\n    }\n}
4459	public class Contacts_GetCount: AbstractIndexCreationTask<ClientContactsModel, Contacts_GetCount.ContactResult>\n{\n    public class ContactResult\n    {\n        public Guid ClientId { get; set; }\n        public int Total { get; set; }\n    }\n\n    public Contacts_GetCount()\n    {\n        Map = contacts => from contact in contacts\n            select new {\n                ClientId = contact.ClientId,\n                Total = contact.Contacts.Count\n            };\n\n        Reduce = results => from result in results\n            group result by result.ClientId\n            into g\n            select new {\n                ClientId = g.Key,\n                Total = g.Sum(x=>x.Total)\n            };\n    }\n}
4460	TextBox tb;\nstatic int i = 0;\nprotected void addnewtext_Click(object sender, EventArgs e)\n{\n        i++;\n    for(j=0;j<=i;j++)\n    {\n    tb = new TextBox();\n    tb.ID = j.ToString();\n\n    PlaceHolder1.Controls.Add(tb);\n    }\n\n}
4461	// get the registry-key\nRegistryKey wp = Registry.CurrentUser.OpenSubKey("Control Panel\\Desktop", false);\n\n// get the wallpaper filename\nstring sFileName = (string)wp.GetValue("Wallpaper");\n\n// finally load the image into picture box\npictureBox1.Image = Image.FromFile(sFileName);
4462	Put Blob
4463	accountRepository\n    .Expect(r => r.InsertAccount(account))\n    .Callback(() => account.ID = 1);
4464	var Office = profile[PropertyConstants.Office] != null ? profile[PropertyConstants.Office].Value : String.Empty;
4465	DataLoadOptions dlo = new DataLoadOptions();\ndlo.LoadWith<Department>(d => d.Employees);\nusing (var dba = new MyDataContext())\n{\n  dba.LoadOptions = dlo;\n  var result = from d in dba.Department\n      select d;\n}
4466	private void dataGridView1_CellClick(object sender, DataGridViewCellEventArgs e)
4467	string command = @"C:\My Dir\MyFile.exe";\nstring args = "MyParam1 MyParam2";\n\nProcess process = new Process(); \nprocess.StartInfo.FileName = command; \nprocess.StartInfo.Arguments = args;\nprocess.Start();
4468	List<Control> lst_controls = new List<Control>();\n        public void btnClick()\n        {\n             RetrieveAllControls(this.Page);\n             foreach(Control contrl in lst_controls)\n             {\n                     // all controls \n             }\n        }\n        public static void RetrieveAllControls(Control control)\n        {\n            foreach (Control ctr in control.Controls)\n            {\n                if (ctr != null)\n                {\n\n                    lst_controls.add(ctr);             \n                    if (ctr.HasControls())\n                    {\n                        RetrieveAllControls(ctr, strID);\n\n                    }\n                }\n            }\n            return null;\n        }
4469	/// <summary>\n/// The test class for our example.\n/// </summary>\nclass TestObject\n{\n    public string Code { get; set; }\n    public string Text { get; set; }\n}\n\nvoid PopulateGrid()\n{\n    TestObject test1 = new TestObject()\n    {\n    Code = "code 1",\n    Text = "text 1"\n    };\n    TestObject test2 = new TestObject()\n    {\n    Code = "code 2",\n    Text = "text 2"\n    };\n    List<TestObject> list = new List<TestObject>();\n    list.Add(test1);\n    list.Add(test2);\n\n    dataGridView1.DataSource = list;\n}
4470	Random r = new Random();\nint nextValue = r.Next(0, 100); // Returns a random number from 0-99
4471	BindingList<T>
4472	(object[,])Array.CreateInstance(typeof(object), new int[] { 1, 1 }, new int[] { 1, 1 });
4473	public static IEnumerable<SelectListItem> ToSelectListItems(\n     this IEnumerable<T> items, \n     Func<T,string> nameSelector, \n     Func<T,string> valueSelector, \n     Func<T,bool> selected)\n{\n     return items.OrderBy(item => nameSelector(item))\n            .Select(item =>\n                    new SelectListItem\n                    {\n                        Selected = selected(item),\n                        Text = nameSelector(item),\n                        Value = valueSelector(item)\n                    });\n}
4474	[TestInitialize]
4475	static void Main()\n    {\n        var strList1 = new[] { "TDC1ABF", "TDC1ABI", "TDC1ABO" };\n        var strList2 = new[] { "TDC2ABF", "TDC2ABI", "TDC2ABO" };\n        var strList3 = new[] { "TDC3ABF", "TDC3ABO", "TDC3ABI" };\n\n        var allItems = strList1.Concat(strList2).Concat(strList3);\n\n        var abfItems = allItems.Where(item => item.ToUpper().EndsWith("ABF"))\n            .OrderBy(item => item);\n        var abiItems = allItems.Where(item => item.ToUpper().EndsWith("ABI"))\n            .OrderBy(item => item);\n        var aboItems = allItems.Where(item => item.ToUpper().EndsWith("ABO"))\n            .OrderBy(item => item);\n    }
4476	names.ForEach(x=> Console.WriteLine(x));
4477	private void cbalpha_SelectedIndexChanged(object sender, EventArgs e)\n    {\n\n        bool isEnabled = string.Compare(StringtDataChoiceorSelect.SelectedItem.ToString(),"(Initiate)",StringComparison.OrdinalIgnoreCase) == 0;\n        foreach (Control cb in this.Controls)\n            cb.Enabled = !isEnabled ;\n\n    }
4478	foreach (PermStart p1 in wordD.MainDocumentPart.Document.Body.Descendants<PermStart>())\n                {\n                    p1.Parent.RemoveChild<PermStart>(p1);\n                }\n\n                foreach (PermEnd p2 in wordD.MainDocumentPart.Document.Body.Descendants<PermEnd>())\n                {\n                    p2.Parent.RemoveChild<PermEnd>(p2);\n                }\n                wordD.MainDocumentPart.Document.Save();
4479	Task.Factory.StartNew(() => Data.Common.Documents.Regenerate());
4480	Web_Reference_Folder.Lists listService = new Web_Reference_Folder.Lists();\nlistService.Credentials = System.Net.CredentialCache.DefaultCredentials;\nstring fileCheckout = "http://Server_Name/sites/Subsite/Shared Documents/MyFile.txt";\nbool myResults = listService.CheckOutFile(fileCheckout, "true", "20 Jun 2006 12:00:00 GMT");
4481	private JsonResult CompletedLogic(object param)\n{ ... }\n\npublic JsonResult FooCompleted(object result)\n{return CompletedLogic(result);}\n\npublic JsonResult BooCompleted(object result)\n{return CompletedLogic(result);}
4482	public int Sum \n{\n    get\n    {\n        return A+B;\n    }\n    set\n    {\n        throw new NotImplementedException("Can't serialize this direction.");\n    }\n}
4483	O(logn)
4484	if (dReader.HasRows) {\n    while (dReader.Read()) {\n\n        if ( dReader["gameweekID"].ToString() == currentWeekId ) \n        {    \n            gameweekList.Text += "<div class=\"somethingSpecial\"><h4>Gameweek " + \n            (dReader["gameweekID"].ToString()) + "</h4></div>";\n        } \n        else \n        {\n            gameweekList.Text += "<div class=\"item\"><h4>Gameweek " + \n            (dReader["gameweekID"].ToString()) + "</h4></div>";\n        }\n    }\n} else {\n    gameweekList.Text = "Error Finding Gameweeks";\n}\ndReader.Close();\nconn.Close();
4485	namespace EnumTest\n{\n    public enum enumRole : byte { projMgr = 2, docAdmin = 3, dataAdmin = 4, sysAdmin = 9, userAdmin = 5 };\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            enumRole myrole = enumRole.docAdmin;\n            if (myrole == enumRole.docAdmin) Console.WriteLine("I am docAdmin");\n            // i use the key to save to SQL and restore  \n            // in SQL have a fk table to match the enum\n            Console.WriteLine((byte)myrole);\n            myrole = (enumRole)9;\n            Console.WriteLine(myrole.ToString() + " " + ((byte)myrole).ToString());\n            Console.ReadLine();\n        }\n    }\n}
4486	private Bitmap getBlankBitmap(int width, int height) {\n  Bitmap b = new Bitmap(width, height);\n  using (Graphics g = Graphics.FromImage(b)) {\n    g.Clear(Color.Red);\n  }\n  return b;\n}
4487	public Form1()\n    {\n        InitializeComponent();\n        numericUpDown1.MouseWheel += new System.Windows.Forms.MouseEventHandler(this.numericUpDown1_MouseWheel);\n    }\n\n    private void numericUpDown1_MouseWheel(object sender, System.Windows.Forms.MouseEventArgs e)\n    {\n        MessageBox.Show("hello");\n    }
4488	WebRequest.RegisterPrefix
4489	IEnumerable<User> users =\n    model\n        .Select(u => new User\n        {\n                Username = u.Username,\n                EmailAddress = u.EmailAddress,\n                Federations =\n                    u.FederatedUsername == null\n                    ? new List<Federation>() :\n                    (new []\n                        {\n                            new Federation()\n                            {\n                                FederatedUsername = u.FederatedUsername\n                            },\n                        }).ToList(),\n        });
4490	string fileContent = Resource.text;\nusing (var reader = new StringReader(fileContent))\n{\n    string line;\n    while ((line = reader.ReadLine()) != null)\n    {\n        string[] split = line.Split('|');\n        string name = split[0];\n        string lastname = split[1];\n    }\n}
4491	ClientScript.RegisterClientScriptBlock(GetType(), "save", Utils.MakeScriptBlock("self.close();"));
4492	DataContext.GetCommand Method
4493	var eastern = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");\nvar local = TimeZoneInfo.Local; // PDT for me\nConsole.WriteLine(DateTime.Now.Add(eastern.BaseUtcOffset - local.BaseUtcOffset));
4494	[assembly: InternalsVisibleTo("LINQPadQuery")]
4495	Page.ClientScript.RegisterStartupScript(Page.GetType(), \n             "message", \n             "window.alert("\'" + myString + "\'");",\n             true);
4496	ProcessStartInfo psi = new ProcessStartInfo(myPath);\npsi.UserName = username;\n\nSecureString ss = new SecureString();\nforeach (char c in password)\n{\n ss.AppendChar(c);\n}\n\npsi.Password = ss;\npsi.UseShellExecute = false;\nProcess.Start(psi);
4497	var httpClient = new HttpClient();\nvar response = await httpClient.GetAsync(url);\n\nif (response.IsSuccessStatusCode)\n{\n    var file = await response.Content.ReadAsByteArrayAsync();\n    StorageFile destinationFile \n        = await KnownFolders.SavedPictures.CreateFileAsync("file.mp4",\n            CreationCollisionOption.ReplaceExisting);\n\n    Windows.Storage.Streams.IRandomAccessStream stream = await destinationFile.OpenAsync(FileAccessMode.ReadWrite);\n    IOutputStream output = stream.GetOutputStreamAt(0);\n\n    DataWriter writer = new DataWriter(output);\n    writer.WriteBytes(file);\n    await writer.StoreAsync();\n    await output.FlushAsync();\n}
4498	CREATE PROCEDURE b\nAS\nSELECT  di.DocID, \n        di.DocName, \n        di.Uploadfile, \n        dt.DocType,\n        d.DepType, \n        at.ApproveType\nFROM    DocumentInfo di\n    JOIN\n        DocType dt ON dt.DocTypeID = di.DocTypeID\n    JOIN \n        Department d ON d.DepID = di.DepID\n    LEFT OUTER JOIN\n        Approval a ON a.DocID = di.DocID\n    JOIN\n        ApproveType at ON at.ApproveID = ISNULL(a.Approveid, 3)
4499	Launcher.LaunchUriAsync(new Uri("podcast:www.example.com/podcast.rss"));
4500	XElement e = document.Element("myElement");\nif (e != null)\n{\n    var myValue = e.Value; \n}
4501	var range = worksheet.get_Range("A1", System.Type.Missing).CurrentRegion;
4502	Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}"
4503	using System.IO;\n...\nforeach (string file in Directory.EnumerateFiles(folderPath, "*.*"))\n{\n    string contents = File.ReadAllText(file);\n}
4504	var startColor = Color.FromArgb(241, 245, 251);\nvar endColor = Color.FromArgb(204, 217, 234);\n\nusing (var brGradient = new LinearGradientBrush(panel1.ClientRectangle, startColor, endColor, LinearGradientMode.Vertical))\n{\n    brGradient.Blend = new Blend\n            {\n                Factors = new[] { 1.0f, 0.1f, 0.0f },\n                Positions = new[] { 0.0f, 0.1f, 1.0f }\n            };\n    e.Graphics.FillRectangle(brGradient, panel1.ClientRectangle);\n}
4505	Regex.Matches( input,  "true" ).Count
4506	Application.Run
4507	if (this.Context is Outlook.Inspector)\n{\n    Outlook.Inspector oInsp = this.Context as Outlook.Inspector;\n    if (oInsp.CurrentItem is Outlook.MailItem)\n    {\n        Outlook.MailItem oMail = oInsp.CurrentItem as Outlook.MailItem;\n        ((Outlook._MailItem)oMail).Send();\n    }\n}
4508	Html.LabelForBootstrap
4509	SqlCommand command = new SqlCommand(@"SELECT StaffID, Name, sum(IsStaff), \n                                              sum(case when IsStaff = 1 then 0 else 1 end) \n                                               From TableName \n                                             WHERE Cast([Time] AS DATE) > @Time \n                                                 AND CAST([Time] AS DATE) < @Time2 \n                                             GROUP BY StaffID, Name\n                                             ORDER BY Time Desc", conn);
4510	var cl = new List<CancellationList>();\nvar dataTable = new DataTable();\nvar toObject = cl.Select(c => new object[] {c.SchemeId, c.EffectiveDate, c.TransactionDate, c.ExpiryDate});\ndataTable.Columns.Add("SchemeId", typeof (int));\ndataTable.Columns.Add("EffectiveDate", typeof (DateTime));\ndataTable.Columns.Add("TransactionDate", typeof(DateTime));\ndataTable.Columns.Add("ExpiryDate", typeof(DateTime));\nforeach (var data in toObject)\n{\n    dataTable.Rows.Add(data);\n}
4511	private void richTextBox1_SelectionChanged(object sender, EventArgs e)\n{\n   LastCursorPosition = CurrentCursorPosition;\n   CurrentCursorPosition = richTextBox1.SelectionStart;\n   CursorsDifferences = CurrentCursorPosition - LastCursorPosition;\n\n}
4512	public T ParentOfType<T>(DependencyObject element) where T : DependencyObject\n{\n    if (element == null)\n    return default (T);\n    else\n    return Enumerable.FirstOrDefault<T>(Enumerable.OfType<T>((IEnumerable) GetParents(element)));\n}\n\npublic IEnumerable<DependencyObject> GetParents( DependencyObject element)\n{\n    if (element == null)\n        throw new ArgumentNullException("element");\n    while ((element = GetParent(element)) != null)\n        yield return element;\n}\n\nprivate DependencyObject GetParent(DependencyObject element)\n{\n    DependencyObject parent = VisualTreeHelper.GetParent(element);\n    if (parent == null)\n    {\n        FrameworkElement frameworkElement = element as FrameworkElement;\n        if (frameworkElement != null)\n            parent = frameworkElement.Parent;\n    }\n    return parent;\n}
4513	uint dummy = 0;\n    byte[] inOptionValues = new byte[Marshal.SizeOf(dummy) * 3];\n    //set keepalive on\n    BitConverter.GetBytes((uint)1).CopyTo(inOptionValues, 0); \n    //interval time between last operation on socket and first checking. example:5000ms=5s\n    BitConverter.GetBytes((uint)5000).CopyTo(inOptionValues, Marshal.SizeOf(dummy));\n    //after first checking, socket will check serval times by 1000ms.\n    BitConverter.GetBytes((uint)1000).CopyTo(inOptionValues, Marshal.SizeOf(dummy) * 2);\n\n    Socket socket = __Client.Client;\n    socket.IOControl(IOControlCode.KeepAliveValues, inOptionValues, null);
4514	public void Validate( object obj )\n {\n       foreach (var property in obj.GetType().GetProperties())\n       {\n            var attribute = property.GetCustomAttributes(typeof(ValidationAttribute), false);\n            var validator = ValidationFactory.GetValidator( attribute );\n            validator.Validate( property.GetValue( obj, null ) );\n       }\n }
4515	#if(DEBUG)\n[assembly:InternalsVisibleTo("SomeAssembly")]\n#endif
4516	return RedirectToAction("Edit", new { failed = true });
4517	GCHandle gcHandle = GCHandle.Alloc(yourObject,GCHandleType.WeakTrackResurrection);\nIntPtr thePointer = GCHandle.ToIntPtr(gcHandle);
4518	>>> from xml.etree import ElementTree as etree\n>>> corpus = '''<category1>\n...       <subcategory>\n...         entry1\n...         entry2\n...       </subcategory>\n... </category1>\n... '''\n>>> doc = etree.fromstring(corpus)\n>>> for subcategory in doc.getchildren():\n...     for entry in filter(bool,\n...                         map(str.strip,\n...                             subcategory.text.split('\n'))):\n...         print "entry output: (%s)" % entry\n...     print "subcategory output (%s)" % subcategory.tag\n... \nentry output: (entry1)\nentry output: (entry2)\nsubcategory output (subcategory)\n>>>
4519	create or replace\nPROCEDURE  SP_GET_TBL (o_rc OUT sys_refcursor) AS\n   open o_rc for\n        select Col1, Col2, Col3 from Tbl;\nEND SP_GET_TBL;
4520	using (FolderBrowserDialog dialog = new FolderBrowserDialog())\n{\n    if (dialog.ShowDialog() == DialogResult.OK)\n    {\n        string path = dialog.SelectedPath;\n    }\n}
4521	NpgsqlConnection Conn = new NpgsqlConnection(getPostgresConnString());\nConn.Open();\nNpgsqlCopyIn copyIn = new NpgsqlCopyIn("COPY table  (col1,col2,col2)   FROM STDIN;", Conn);\ncopyIn.Start();\nNpgsqlCopySerializer cs1 = new NpgsqlCopySerializer(pConn2);\ncs1.AddString(System.IO.File.ReadAllText("C:\\test\\Web.config"));\n[...]\ncs1.EndRow();\ncs1.Close();\ncopyIn.End();
4522	Albums.SelectMany(a=>a.Songs).FirstOrDefault(song => song.Id == id)
4523	(new URI(System.Web.HttpServerUtility.UrlDecode(url))).Host
4524	Bitmap  image =BitmapFactory.decodeStream(response.getEntity().getContent())
4525	[XmlAttribute("Name")]\npublic string Name {get;set;}\n\n[XmlElement("Name")]\npublic string NameAlt {\n    get { return Name; }\n    set { Name = value; }\n}\n// to prevent serialization (doesn't affect deserialization)\npublic bool ShouldSerializeNameAlt() { return false; }
4526	void OnStart(string[] args)
4527	section.ReplaceWith(XElement.Parse(replacementString);
4528	foreach (ListItem listItem in listItems)\n   {\n     textBox1.Text += listItem.FieldValues["File_x0020_Type"].ToString();\n   }
4529	XDocument X_DOC = XDocument.Load(Application.StartupPath + "\\Sample.xml");\n        X_DOC.Root.Elements("Child").Remove();\n        X_DOC.Save(Application.StartupPath + "\\Sample.xml");
4530	DispatcherTimer idleTimer;\n    DateTime timeNow;\n    public ChildWindow1()\n    {\n        InitializeComponent();\n\n        idleTimer = new DispatcherTimer();\n        idleTimer.Start();\n        idleTimer.Interval = TimeSpan.FromSeconds(1);\n\n        idleTimer.Tick += new EventHandler(idleTimer_Tick);\n        timeNow= DateTime.Now;\n        // Initialise last activity time\n    }\n\n    private void OKButton_Click(object sender, RoutedEventArgs e)\n    {\n        this.DialogResult = true;\n    }\n\n    private void CancelButton_Click(object sender, RoutedEventArgs e)\n    {\n        this.DialogResult = false;\n    }\n    private void idleTimer_Tick(object sender, EventArgs e)\n    {\n        if (DateTime.Now > timeNow.AddSeconds(30))\n        {\n            this.Close();\n        }\n    }
4531	public partial class MyForm : Form\n{\n    public MyForm()\n    {\n        InitializeComponent();\n\n        // set width to 1/2 of screen\n        Rectangle screenBounds = Screen.PrimaryScreen.Bounds;\n        screenBounds.Width = screenBounds.Width / 2;            \n        this.MaximizedBounds = screenBounds;\n\n        // maximize\n        this.WindowState = FormWindowState.Maximized;\n    }\n}
4532	var sets = testResult\n.Select(x => new { Key = x.Key, Set = new HashSet<int>(x.Value.Concat(new[] { x.Key })) })\n.ToList();\nvar res = sets.Where(s => sets.Any(x => x.Set.IsSupersetOf(s.Set) && x.Key != s.Key));\nvar keysToRemove = res.Select(x => x.Key);
4533	Html.Kendo().ComboBoxFor(m => m.ObjectID)\n                    //start autocompleting only after 3 char\n                    .MinLength(3)
4534	class ContainingClass\n{\n    int randomNumber;\n    int randomNumber2;\n\n    public void generateNumbers()\n    {\n        Random rand = new Random();\n        randomNumber = rand.Next(1, 11);\n        randomNumber2 = rand.Next(1, 11);\n        Console.WriteLine("Number1: " + randomNumber);\n        Console.WriteLine("Number2: " + randomNumber2);\n    }\n\n    public int findSum()\n    {\n        return randomNumber + randomNumber2; //gets sum from the method generateNumbers()\n    }\n}
4535	[ComVisible(true)]\n[ComDefaultInterface(typeof(IBackStageInfo))]
4536	Process.Start("edit.reg")
4537	FlagImage.Source = new BitmapImage(new Uri("/images/sky.jpg", UriKind.Relative));
4538	NavigationService.Navigate(new Uri("/Page.xaml?object1="+obj+"&object2="+obj2, UriKind.Relative));
4539	public string [] getBlendShapeNames (GameObject obj)\n{\n    SkinnedMeshRenderer head = obj.GetComponent<SkinnedMeshRenderer>();\n    Mesh m = head.sharedMesh;\n    string[] arr;\n    arr = new string [m.blendShapeCount];\n    for (int i= 0; i < m.blendShapeCount; i++)\n    {\n      string s = m.GetBlendShapeName(i);\n      print("Blend Shape: " + i + " " + s);\n      arr[i] = s;\n    }\n    return arr;\n}
4540	namespace XXX.YYY.ZZZ\n{\n    /* your types that go in that namespace */\n}
4541	public IEnumerable<UserProperty> GetSearches(int userId)\n{\n    return userRepository.Where(x => x.Id == userId).Select(x => x.Properties.Where(p => p.IsActive)).Single(); //I assumed userId is unique\n}
4542	D0 CF 11 E0 A1 B1 1A E1
4543	public void DoSomethingUsingExpressionWithArgument(Expression<Func<SomeClass, bool>> expressionWithArgument)\n{\n    var thisExpr = Expression.Constant(this);\n    var pExpr = Expression.Property(thisExpr, "SomeProperty");\n    var invokeExpr = Expression.Invoke(expressionWithArgument, pExpr);\n    Expression<Func<bool>> expressionWithoutArgument = Expression.Lambda<Func<bool>>(invokeExpr);\n    DoSomethingUsingExpressionWithoutArgument(expressionWithoutArgument);\n}
4544	private void treeView1_NodeMouseClick(object sender, TreeNodeMouseClickEventArgs e) {\n    if (e.Button == MouseButtons.Right) {\n        treeView1.SelectedNode = e.Node;\n        contextMenuStrip1.Show(treeView1, e.Location);\n    }\n}
4545	foreach (XElement cookie in appDataXml.Elements())\n{\n    ViewModels.Cookie tempCookie = new ViewModels.Cookie();\n    tempCookie.Name = cookie.Element("Name").Value;\n\n    _cookieList.Add(tempCookie);\n}
4546	if (txtdol.Text == null || txtdol.Text == string.Empty)\n                        {\n                            cmd.Parameters.Add("@leaving_date", SqlDbType.DateTime).Value = DBNull.Value;\n                        }\n                        else\n                        {\n                            cmd.Parameters.Add("@leaving_date", SqlDbType.DateTime).Value = Convert.ToDateTime(txtdol.Text);\n                        }
4547	DataGridView.FirstDisplayedScrollingRowIndex
4548	var before = "http://abc/abc_UAT/CustomerDetail.aspx?r=1";\nvar wantedString = before.Split('?')[0];
4549	protected void Page_Load(object sender, EventArgs e)\n{\n    if (!IsPostBack)\n    {\n        using (var context = new CustomersContext())\n        {\n            customer = context.Logins.First();\n        }\n\n        CustomerDetailsView.DataSource = new List<Customer>() { customer };\n        CustomerDetailsView.DataBind();\n    }\n}
4550	protected void Validate(string propertyName, string propertyValue, List<ValidRule> validRules) {\n      string temp = propertyValue.ToString();\n      this.RemoveError(propertyName);\n      if(propertyName.Equals("Description")) {\n           foreach(ValidRule validRule in validRules) {\n                if(!Regex.IsMatch(propertyValue, validRule.Rule) && !String.IsNullOrWhiteSpace(propertyValue)) {\n                     this.AddError(propertyName, validRule.ErrorMessage);\n                     break;\n                }\n           }\n      }\n }
4551	_questionService.GetData().Where(x => x.text != null);
4552	string[] Array1 = new string[3];   \n\n                for (int i = 0; i < dataGridView1.Rows.Count; i +=1)\n                {\n                    Array1 [0] = dataGridView1.Rows[i].Cells[0].Value.ToString();\n                    Array1 [1] = dataGridView1.Rows[i].Cells[1].Value.ToString();\n                    Array1 [2] = dataGridView1.Rows[i].Cells[2].Value.ToString();\n                }
4553	string[] substrings = inputString.Split("#$%");
4554	public ActionResult Index()\n{    \n  return View(_repository.ListAll().OrderByDescending(s => s.Name));\n}
4555	else\n    {\n        sBO.Client_id = System.Data.SqlTypes.SqlInt32.Null;\n    }
4556	var xd = XDocument.Parse(xml);\n        var modemResponse = xd.Element("controls").Element("ModemResponse").Value;\n        string address = string.Empty, netmask = string.Empty;\n        var tokens = modemResponse.Split(new[] { ' ', '=' }, StringSplitOptions.RemoveEmptyEntries);\n        for (int i = 0; i < tokens.Length; i++)\n        {\n            var token = tokens[i];\n            switch (token)\n            {\n                case "address":\n                    if (i + 1 < token.Length)\n                        address = tokens[i + 1];\n                    break;\n                case "netmask":\n                    if (i+1 < tokens.Length)\n                        netmask = tokens[i+1];\n                    break;\n            }\n        }\n\n        Console.WriteLine("address: {0}, netmask: {1}", address, netmask);
4557	XElement root = XElement.Load(file); // or .Parse(string)\nvar lines = root.Descendants("LINE")\n    .Select(line =>\n        new\n        {\n            Id = (string)line.Element("ID"),\n            Points = line.Elements("POINT")\n                .Select(p => new PointF\n                {\n                    X = (float)p.Attribute("X"),\n                    Y = (float)p.Attribute("Y")\n                }).ToArray()\n        }).ToArray();
4558	Process myProcess;\n\nprivate void btnViewErrorLogFile_Click(object sender, EventArgs e)\n{\n    myProcess.Start(AppVars.ErrorLogFilePath);\n}\n\nprivate void doSomething()\n{\n    if (!myProcess.HasExited)\n    {\n      myProcess.CloseMainWindow();\n      myProcess.Close();\n    }\n\n    // Do whatever you need with the file\n}
4559	DbCommand.ExecuteNonQuery
4560	var sumEur = yourtable.compute("sum(Price)",CurrencyCode='GBP');\nvar sumGBP = yourtable.compute("sum(Price)",CurrencyCode='EUR');\nvar sumUSD = yourtable.compute("sum(Price)",CurrencyCode='USD');
4561	private void RegexTest()\n    {\n        String input = "foo[]=1&foo[]=5&foo[]=2";\n        String pattern = @"foo\[\]=(\d+)";\n\n        Regex regex = new Regex(pattern);\n\n        foreach (Match match in regex.Matches(input))\n        {\n            Console.Out.WriteLine(match.Groups[1]);\n        }\n    }
4562	System.IO.DirectoryInfo()
4563	using (DbCommand command = oledbConn.CreateCommand())\n{\n    command.CommandText = "INSERT INTO [Sheet2$] (custid, Fullname, Salutation) VALUES (" + CustID + ",\"John Smith\",\"John\")";\n\n    //connection.Open();\n\n    command.ExecuteNonQuery();\n}
4564	StringBuilder sb =new StringBuilder();\n        while (true) {\n            char ch = Convert.ToChar(Console.Read());\n            sb.Append(ch);\n            if (ch=='\n') {\n                break;\n            }\n        }
4565	JSRequest.EnsureSetup();\nvar sfield = JSRequest.QueryString["cs"];\nvar tbSearch = JSRequest.QueryString["tb"];\n\ndocument.getElementById('sfield').value = sfield;\ndocument.getElementById('tbSearch').value = tbSearch;
4566	int count = 0;\n\n    var mock = MockRepository.GenerateStub<ICell>();\n    mock.Stub(p => p.Value).WhenCalled(a => a.ReturnValue = count).Return(42);\n    mock.Stub(p => p.IncrementValue()).WhenCalled(a => {\n        count = (int)count+1; \n    });
4567	classes = classes\n    .Select(c => {\n        c.code = new string('X', c.code.Length - 4) + c.code.Substring(c.code.length - 4);\n        return c;\n    })\n    .ToList();
4568	void aTimer_Elapsed(object sender, System.Timers.ElapsedEventArgs e)\n    {\n        var context = GlobalHost.ConnectionManager.GetHubContext<Chat>();\n        context.Clients.All.addMessage("Hello");      \n    }
4569	CommandBar CommandBarObject = new CommandBar();\n AppBarButton FirstBtn = new AppBarButton() { Icon = new BitmapIcon() { UriSource = new Uri("ms-appx:///Assets/first.png") } };\n FirstBtn.Label = "First";\n FirstBtn.Click += FirstBtn_Click;\n FirstBtn.IsEnabled = true;\n\n AppBarButton secondaryCommand = new AppBarButton() { Label = "Second", IsEnabled = true } };\n secondaryCommand.Click += FirstBtn_Click;\n\n CommandBarObject.PrimaryCommands.Add(FirstBtn);\n CommandBarObject.SecondaryCommands.Add(secondaryCommand);
4570	DateTime temp;\n// try to parse the provided string in order to convert it to datetime\n// if the conversion succeeds, then build the dateFilter\nif(DateTime.TryParse(TrystartDate.Text, out temp))\n{\n    string dateFilter = temp.ToString("dd/MM/yyyy");\n    var filteredList = images.Where(item => item.Date == dateFilter);\n    var filterSource = new BindingSource();\n    filterSource.DataSource = filteredList;\n    navigationGrid.DataSource = filterSource;\n}
4571	.\Dev\DataFeed
4572	private void buttonSend_Click(object sender, EventArgs e)\n{\n    // send text\n    byte[] outStream = System.Text.Encoding.ASCII.GetBytes(textSend.Text + "$");\n    serverStream.Write(outStream, 0, outStream.Length);\n    serverStream.Flush();\n\n    // clear textbox\n    textSend.Text = "";\n}
4573	if (Power.Count == 60)\n    Power.RemoveAt(0);\n\nPower.Add(new KeyValuePair<double, double>(i, SolarCellPower ));
4574	//*[local-name()='SoftwareName']\n   /*[local-name()='Settings']\n   /*[local-name()='FormPassword']
4575	ApplicationContext threadContext;\n\n    private void startLoop() {\n        threadContext = new ApplicationContext();\n        var messageLoop = new Thread(() => Application.Run(threadContext));\n        messageLoop.Start();\n    }\n\n    private void stopLoop() {\n        threadContext.ExitThread();\n        threadContext = null;\n    }
4576	Regex rgx = new Regex("[^a-zA-Z -]");\nstr = rgx.Replace(str, " ");
4577	%SystemRoot%\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe "D:\test_2\MsBuild\MsBuild\BuildScript\MsBuild.csproj" /t:SecondTarget
4578	public string CombinedProperty\n{\n    get\n    {\n        return String.Format("{0}\n{1}\n{2}", leadTag, content, EndTag);\n    }\n}
4579	inkPicture1.InkEnabled = false;\ninkPicture1.Ink = new Microsoft.Ink.Ink();\ninkPicture1.InkEnabled = true;\ninkPicture1.Invalidate();
4580	public EditForm(Point location, GridColumnCollection columns, object dataSource, BindingContext context)\n            : this() {\n            StartPosition = FormStartPosition.Manual;\n            Location = location;\n            BindingContext = context;  // <<<<<<\n            allowTrackValueChanges = false;\n            this.dataSource = dataSource;\n...\n}
4581	string parameter="<HostName>Arasanalu</HostName><AdminUserName>Administrator</AdminUserName><AdminPassword>A1234</AdminPassword><PlaceNumber>38</PlaceNumber>";\nXmlDocument doc = new XmlDocument(); \\ndoc.LoadXml("<root>" + parameter + "</root>"); // this adds a root element and makes it Valid
4582	protected void Page_Init(object sender, EventArgs e)\n    {\n        HtmlLink css = new HtmlLink();\n        css.Href = "css/fancyforms.css";\n        css.Attributes["rel"] = "stylesheet";\n        css.Attributes["type"] = "text/css";\n        css.Attributes["media"] = "all";\n        Page.Header.Controls.Add(css);\n    }
4583	using (var con = new SqlConnection(cs))
4584	protected void OnPropertyChanged(string propertyName)\n{\n    PropertyChangedEventHandler handler;\n    lock (propertyChangedLock)\n    {\n        handler = propertyChanged;\n    }\n    handler(this, new PropertyChangedEventArgs(propertyName));\n}
4585	public class Request\n{\n    public string request { get; set; }\n    public IDictionary<string,string> parameters { get; set; }\n    public string pid { get; set; }\n}\n\n\nvar request = JsonConvert.DeserializeObject<Request>(data);
4586	flush()
4587	private IEnumerable<DataPoint> GetHistorianDatapoints(IEnumerable<DataPoint> fileDatapoints, IEnumerable<Tagname> historianTagnames)\n{\n    var tagNameDictionary = historianTagnames.ToDictionary(t => t.DataLoggerTagname, StringComparer.OrdinalIgnoreCase);\n\n    foreach (var fileDatapoint in fileDatapoints)\n    {                \n        if (tagNameDictionary.ContainsKey(fileDatapoint.Name))\n        {\n            var historianTagname = tagNameDictionary[fileDatapoint.Name];\n            var historianDatapoint = new DataPoint();\n\n            historianDatapoint.Name = historianTagname.HistorianTagname;\n            historianDatapoint.Date = fileDatapoint.Date;\n            historianDatapoint.Value = fileDatapoint.Value;\n\n            yield return historianDatapoint;\n        }\n    }\n}
4588	private void comboboxA_SelectionChanged(object sender, SelectionChangedEventArgs e)\n{\n    for (int i = 0; i <= comboboxB.Items.Count -1; i++)\n    {\n        if (((ComboBoxItem)(comboboxB.Items[i])).Content.ToString() == ((ComboBoxItem)comboboxA.SelectedItem).Content.ToString())\n        {\n            ((ComboBoxItem)(comboboxB.Items[i])).Visibility = System.Windows.Visibility.Collapsed;\n        }\n        else\n            ((ComboBoxItem)(comboboxB.Items[i])).Visibility = System.Windows.Visibility.Visible;\n    }\n}
4589	foreach (SmtpRequestContent email in emails)\n{\n    YourValidateMethod(email);\n}
4590	using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.UI;\nusing System.Web.UI.HtmlControls;\nusing System.Web.UI.WebControls;\n\npublic partial class _Default : System.Web.UI.Page\n{\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        for (int i = 1; i < 11; i++)\n        {\n            LinkButton linkButton = new LinkButton();\n            linkButton.Text = "Lnk" + i;\n            linkButton.Click += linkButton_Click;\n            form1.Controls.Add(linkButton);\n\n            HtmlGenericControl p = new HtmlGenericControl("p");\n            p.InnerText = "Separator";\n            form1.Controls.Add(p);\n        }\n    }\n\n    void linkButton_Click(object sender, EventArgs e)\n    {\n        Response.Redirect("http://www.stackoverflow.com");\n    }\n}
4591	var email = Email\n            .From("john@email.com")\n            .To("bob@email.com", "bob")\n            .Subject("hows it going bob")\n            .UsingTemplate(@"C:\Emailer\TransactionTemplate.htm")\n            .Replace("<%CurrentDate%>", DateTime.Now.ToShortDateString())\n            .Replace("<%FullName%>", fullName)\n            .Replace("<%SaleDate%>", saleDate)
4592	Map(x => ((ICategorizedEntity)x).Category);
4593	string delimiterString = numbers.Substring(2, 1);\nchar delimiter = delimiterString[0];\nstring resultSource = numbers.Remove(0, 5);\nstring[] result = resultSource.Split(delimiter);
4594	public MainWindow() {\n        InitializeComponent();\n        this.WindowState = System.Windows.WindowState.Maximized;\n        this.ResizeMode = System.Windows.ResizeMode.NoResize;\n    }
4595	public Result Execute(ExternalCommandData cmdData, ref string message, ElementSet elements)\n{\n    UIDocument uiDoc = cmdData.Application.OpenAndActivateDocument(@"c:\project.rvt");\n    // do stuff with uiDoc\n\n    return Result.Succeeded;\n}
4596	string Input = "june 2014";\nDateTime dt;\nDateTime.TryParseExact(Input.ToString(), "MMMM yyyy",\n                       CultureInfo.InvariantCulture, DateTimeStyles.None, out dt);\nConsole.WriteLine(dt.ToString("yyyy-MM"));
4597	public delegate void QueuedMethod();\n\nstatic void Main(string[] args)\n{\n    methodQueue(delegate(){methodOne( 1, 2 );});\n    methodQueue(delegate(){methodTwo( 3, 4 );});\n}\n\nstatic void methodOne (int x, int y)\n{\n\n}\n\nstatic void methodQueue (QueuedMethod parameter)\n{\n    parameter(); //run the method\n    //...wait\n    //...execute the parameter statement\n}
4598	MemoryStream ms = new MemoryStream(fileContentResult.FileContents); \n// Create an in-memory System.IO.Stream\n\nContentType ct = new ContentType(fileContentResult.ContentType);\n\nAttachment a = new Attachment(ms, ct);
4599	XElement books = XElement.Load(@"Friends.xml");\nstring yourDate = "27";\nstring yourMonth = "05";\n\nvar titles =\n   from book in books.Elements("Friend")\n   where (string)book.Element("Date") == yourDate  && (string)book.Element("Month") == yourMonth\n   select book.Element("Name");\n\nforeach (var title in titles)\n   Console.WriteLine(title.Value);
4600	var myValue = MyEnum.Value3;\n\n    var stringRepresentation = myValue.ToString();\n    var intRepresentation = (int)myValue;\n\n    Console.WriteLine("String-Value: \"{0}\"", stringRepresentation);\n    Console.WriteLine("Int-Value: {0}", intRepresentation);\n\n    var parsedFromString = (MyEnum)Enum.Parse(typeof(MyEnum), stringRepresentation);\n    var parsedFromInt = (MyEnum)Enum.Parse(typeof(MyEnum), intRepresentation.ToString());\n\n    Console.WriteLine("Parsed from string: {0}", parsedFromString);\n    Console.WriteLine("Parsed from int: {0}", parsedFromInt);
4601	[DllImport("user32.dll", EntryPoint = "FindWindowEx")]\npublic static extern IntPtr FindWindowEx(IntPtr hwndParent, IntPtr hwndChildAfter, string lpszClass, string lpszWindow);\n\n[DllImport("User32.dll")]\npublic static extern int SendMessage(IntPtr hWnd, int uMsg, int wParam, string lParam);\n\nprivate static void DoSendMessage(string message)\n{\n    Process notepad = Process.Start(new ProcessStartInfo("notepad.exe"));\n    notepad.WaitForInputIdle();\n\n    if (notepad != null)\n    {\n        IntPtr child = FindWindowEx(notepad.MainWindowHandle, new IntPtr(0), "Edit", null);\n        SendMessage(child, 0x000C, 0, message);\n    }\n}
4602	Parameter parameter = new Parameter("MyParam", TypeCode.String,\n    Page.User.ProviderUserKey);\nMyDataSource.SelectParameters.Add(parameter);
4603	// run in LINQpad\nprivate const int GWL_STYLE = -16;\nprivate const int WS_SIZEBOX = 0x040000;\n[DllImport("user32.dll", SetLastError = true)]\nprivate static extern int GetWindowLong(IntPtr hWnd, int nIndex);\n[DllImport("user32.dll")]\nprivate static extern int SetWindowLong(IntPtr hWnd, int nIndex, int dwNewLong);\nvoid Main()\n{\n    var form = new Form();\n    form.ControlBox = false;\n    form.FormBorderStyle = FormBorderStyle.FixedDialog;\n    form.Show();\n    SetWindowLong(form.Handle, GWL_STYLE, GetWindowLong(form.Handle, GWL_STYLE) | WS_SIZEBOX);\n}
4604	class Program\n{\n    [STAThread]\n    public static void Main(string[] args)\n    {\n        if (runNormally(args))\n        {\n            MainWindow mainWindow = new MainWindow();\n            var app = new Application();\n            app.Run(mainWindow);\n        }\n        else\n        {\n            MyFunction(args);\n        }\n    }\n}
4605	Public Function AfterReceiveRequest(ByRef request As System.ServiceModel.Channels.Message, ByVal channel As System.ServiceModel.IClientChannel, ByVal instanceContext As System.ServiceModel.InstanceContext) As Object Implements System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest\n    'Output the request message to immediate window\n    System.Diagnostics.Debug.WriteLine("*** SERVER - RECEIVED REQUEST ***")\n    System.Diagnostics.Debug.WriteLine(request.ToString())\n\n    Return Nothing\nEnd Function
4606	while (infile.Peek() >= 0) \n {\n     string[] values = infile.ReadLine().Split(' ');\n     fill_in[int.Parse(values[0]), int.Parse(values[1])] = true;\n }
4607	public class RandomWife : Wife // implementing the Wife interface\n\n    {\n        private RandomHusband husband;\n        public Husband darling { get { return husband; } set { husband = value; } }\n        public Man  Wife.darling { get { return husband; } set { /* can't set anything */ } }\n\n    }
4608	using System.Linq;    \n\nFunc<double[], double[]> oldFunc = this.Gradient;\nthis.Gradient = (x) => oldFunc(x).Select( y => -y).ToArray();
4609	var c = (BaseClass)Activator.CreateInstance(dict["type1"]);
4610	string antcbatchpath = string.Format(@"""C:\Work\{0}\release\SASE Lab Tools\ANT Builds\antc.bat""", buildStream);
4611	Rectangle method:\n\n      Document document = new Document(new Rectangle(200f, 300f)); \nPageSize method: \n      Document document = new Document(PageSize.A4, 20f, 20f, 20f, 20f);\n\nPdfWriter.GetInstance(document, new FileStream(filename, FileMode.Create));\n\n    document.Open();\n    document.Add(new Paragraph("Welcome to dotnetfox"));\n    document.Close();
4612	dynamic data = CanvasContext.Current.SignedRequest.Data\nif (data.page.liked) {\n // has liked\n} else {\n // Not liked\n}
4613	class SendMessage\n{\n[DllImport("user32.dll")]\npublic static extern IntPtr PostMessage(IntPtr hWnd, uint Msg, IntPtr wParam, IntPtr lParam);\n\npublic static void sendKeystroke()\n{\n    const uint WM_KEYDOWN = 0x100;\n    const uint WM_KEYUP = 0x0101;\n\n    IntPtr hWnd;\n    string processName = "putty";\n    Process[] processList = Process.GetProcesses();\n\n    foreach (Process P in processList)\n    {\n        if (P.ProcessName.Equals(processName))\n        {\n            IntPtr edit = P.MainWindowHandle;\n            PostMessage(edit, WM_KEYDOWN, (IntPtr)(Keys.Control), IntPtr.Zero);\n            PostMessage(edit, WM_KEYDOWN, (IntPtr)(Keys.A), IntPtr.Zero);\n            PostMessage(edit, WM_KEYUP, (IntPtr)(Keys.Control), IntPtr.Zero);\n        }\n    }                           \n}\n\n}
4614	var snippet = //your text here.\n var rawXml = "<text>" + snippet + "</text>"; // Wrap to make valid XML.\n XmlDocument xmlDoc = new XmlDocument();\n xmlDoc.LoadXml(rawXml);\n var mergedText = xmlDoc.InnerText;\n int start = mergedText.IndexOf(startMarker);\n int end = mergedText.IndexOf(endMarker) - start;\n mergedText.Substring(start, end);
4615	new PropertyMetadata(new List<UIElement>()
4616	foo-001.jpeg',
4617	System.Web
4618	var output = from p in input\n             group p by p.Id into g\n             select new Pallet\n             {\n                 Id = g.Key,\n                 Locations = (from l in g.SelectMany(x => x.Locations)\n                              group l by l.Id into gl\n                              select new Location { Id = gl.Key }).ToList()\n             };
4619	from i in collectiona\nfrom j in collectionb\nwhere Regex.IsMatch(i.name, j.jokered_name)\nselect ...
4620	An object reference is required for the non-static field, method, or property
4621	var userRoles = new List<Roles>();\n\nforeach(var role in listRoles.Split(";"))\n{\n   userRoles.Add(listRoles.First(x => x.RoleName == role))\n}
4622	string x = nastavenia.adresa_servera().Replace("\\", "\");
4623	routes.RouteExistingFiles = true;\nroutes.MapPageRoute("Route1", "Pages/{page}.aspx", "~/404.aspx");\nroutes.MapPageRoute("Route2", "Pages/{folder}/{page}.aspx", "~/404.aspx");
4624	// This line is picked up from designer file for reference\n  DataGridViewComboBoxColumn CustomerColumn; \n\n  DataTable _customersDataTable = GetCustomers();\n\n  CustomerColumn.DataSource = _customersDataTable;\n  CustomerColumn.DisplayMember = Customer_Name;\n  CustomerColumn.ValueMember = ID;\n\n  var graphics = CreateGraphics();\n\n  // Set width of the drop down list based on the largest item in the list\n  CustomerColumn.DropDownWidth = (from width in\n                         (from DataRow item in _customersDataTable.Rows\n                          select Convert.ToInt32(graphics.MeasureString(item[Customer_Name].ToString(), Font).Width))\n                       select width).Max();
4625	Dictionary<string, List<string>> dict = new Dictionary<string, List<string>>();\nforeach (XmlNode items in diagramTables)\n{\n  string pkTable = items["PKTABLE_NAME"].InnerText.Replace("_",@"\_");\n  string fkTable = items["FKTABLE_NAME"].InnerText.Replace("_",@"\_");\n  if (!dict.ContainsKey(pkTable))\n  {\n    dict.Add(pkTable, new List<string>());\n  }\n  if (!dict[pkTable].Contains(fkTable))\n  {\n      dict[pkTable].Add(fkTable);\n  }\n}\nsb.Append("========================================================="); // making it easier for you\nforeach(KeyValuePair<string, List<string>> kvp in dict)\n{\n  sb.Append(kvp.Key);\n  sb.Append(" got ");\n  sb.AppendLine(String.Join("|", kvp.Value.ToArray()));\n}\nsb.Append("========================================================="); // making it easier for you
4626	var offers = ov.Offers.Where(o => o.OfferType == composedOffer)\n    .Concat(ov.Offers.Where(o => o.OfferType == simpleOffer))\n    .Concat(ov.ComposedOfferList.Offers)\n    .Concat(ov.SimpleOfferList.Offers)\n    .GroupBy(offer => offer.Product)\n    .Select(group => group.First())\n    .ToList();\n\nvar products = offers.Select(offer => offer.Product).ToList();
4627	[HttpGet]\n    public ActionResult GetOldEntries()\n    {\n        var data = db.Entries.Where(e => e.Date.Month != DateTime.Now.Month);\n        return Json(data, JsonRequestBehavior.AllowGet); \n    }
4628	using System;\nusing System.Diagnostics;\n\nnamespace Lynx.Dumper\n{\n  public class Dampler\n  {\n      public void fdksfjh()\n      {\n          var url = "http://www.google.com";\n\n          var p = new Process();\n\n          p.StartInfo = new ProcessStartInfo("c:/tools/lynx_w32/lynx.exe", "-dump -nolist " + url)\n          {\n              WorkingDirectory = "c:/tools/lynx_w32/",\n              UseShellExecute = false,\n              RedirectStandardOutput = true,\n              RedirectStandardError = true,\n              WindowStyle = ProcessWindowStyle.Hidden,\n              CreateNoWindow = true\n          };\n\n          p.Start();\n          p.WaitForExit();\n\n          //grab the text rendered by Lynx\n          var text = p.StandardOutput.ReadToEnd();\n\n          Console.WriteLine(text);\n      }\n  }\n}
4629	var fileAcontents = File.ReadAllLines(fileA);\nvar fileBcontents = File.ReadAllLines(fileB);\n\nHashSet<string> hashSet = new HashSet<string>(fileAcontents);\nforeach (string i in fileBList)\n{\n    if (hashSet.Contains(i))\n    {\n        // <- DO SOMETHING :)\n    }\n}
4630	ConfigurationManager.ConnectionStrings["Excels"].ConnectionString.Replace("[Today'sDate]", DateTime.Today.ToString("fmt"))
4631	public class FakeUserRepository : IUserRepository {\n          public IQueryable<SelectListItem> GetRecords(int userid) {\n                    // fake_table is a list\n                    return (from a in fake_table select\n                    new SelectListItem {\n                        Value = a.ID.ToString(),\n                        Text = a.Name\n                    }).AsQueryable<SelectListItem>;\n          }\n    }
4632	protected void ASPxGridView2_CustomColumnDisplayText(object sender,\n    DevExpress.Web.ASPxGridViewColumnDisplayTextEventArgs e) {\n    if (e.Column.FieldName != "FormatType") return;\n    e.DisplayText = WebApp.Helpers.CodebooksHelper.GetItemData(1).First(item => item.ItemID == (int)e.Value).Title;\n}\n\nsettings.CustomColumnDisplayText += (sender, e) => {\n        if (e.Column.FieldName != "FormatType") return;\n        e.DisplayText = WebApp.Helpers.CodebooksHelper.GetItemData(1).First(item => item.ItemID == (int)e.Value).Title;\n}
4633	class ListBoxItem\n{\n    public string Name { get; private set; }\n    public string Email { get; private set: }\n\n    public ListBoxItem(string name, string email)\n    {\n        Name = name;\n        Email = email;\n    }\n\n    public override string ToString()\n    {\n        return string.Format("Name: {0} | E-mail: {1}", Name, Email);\n    }\n}\n\n(somewhere you have a List<ListBoxItem> and do something like listBox1.Items.AddRange(itemList))\n\nprivate void listBox1_DoubleClick(object sender, EventArgs e)\n{\n    ListBoxItem item = (ListBoxItem)listBox1.SelectedItem;\n\n    // use item.Name and item.Email to initialize TextBox values\n}
4634	XDocument.Parse
4635	String value = MBRHISTDETLDt.Rows[r].ItemArray[0].ToString(); \nvalue  = Regex.Replace(value.TrimStart('0'), @"^(\d{3})(\d{2})(\d{3})(\d*)$", "$1-$2-$3.$4");\ndataGridView1.Rows[r].Cells[2].Value = value;
4636	public class Item\n{\n[ScriptIgnore]\npublic Item ParentItem { get; set; }\n}
4637	static System.Windows.Threading.DispatcherTimer myTimer = new System.Windows.Threading.DispatcherTimer();\n\npublic void DoInquiry()\n{\n   // do your inquiry stuff\n   ////////////////////////\n\n   // Set Timer Interval\n   myTimer.Interval = = new TimeSpan(0,5,0); // 5 Minutes\n   // Set Timer Event\n   myTimer.Tick += new EventHandler(TimerEventProcessor);\n\n   // Start timer\n   myTimer.Start();\n\n}\n\nprivate static void TimerEventProcessor(Object myObject, EventArgs myEventArgs) {\n   ShowMessage("Please check on the status");  \n}\n\nprotected void ShowMessage(string Message)\n{\n   System.Windows.MessageBox.Show(Message);\n}
4638	public class Person {\n  private String _personName;\n  public String PersonName { \n    get { return _personName; }\n    set { _personName = value; }\n  }\n\n  public String SayHello(String toName ) {\n    return String.Format("Hi {0}, I am {1}", toName, PersonName);\n  }\n\n}
4639	protected override bool ShowWithoutActivation {\n        get { return true; }\n    }
4640	Process process = new Process();\nprocess.StartInfo.UseShellExecute = false;\nprocess.StartInfo.RedirectStandardOutput = true;\nprocess.StartInfo.FileName = "sd.exe";\nprocess.StartInfo.Arguments = string.Format("describe {0}", newChangelist);\nprocess.Start();\n\n// read strings from process.StandardOutput here\n\nprocess.WaitForExit();
4641	public string TextInABox(By by)\n  {\n    string valueInBox = string.Empty;\n    for (int second = 0;; second++) {\n      if (second >= 60) Assert.Fail("timeout");\n      try\n      {\n        valueInBox = driver.FindElement(by).value;\n        if (string.IsNullOrEmpty(valueInBox) break;\n      }\n      catch (WebDriverException)\n      {}\n      Thread.Sleep(1000);\n    }\n    return valueInBox;\n  }
4642	public override void OnApplyTemplate()\n        {\n            base.OnApplyTemplate();\n            _elementName = Template.FindName("PART_ElementName", this) as TextBlock;\n            _elementText = Template.FindName("PART_ElementText", this) as TextBlock;\n\n            if (_elementName != null) _elementName.MouseLeftButtonDown += (sender, args) => SelectControl();\n            if (_elementText != null) _elementText.MouseLeftButtonDown += (sender, args) => SelectControl();\n        }
4643	abstract class A { \n public virtual string Print() {} \n\n  public static string DoPrint(A a) { \n     a.Print(); // <-- This WILL call eg. A3.Print(), not A.Print() \n  } \n} \n\nclass A1 : A\n{\n    public override string Print() {}\n}\n\nclass A2 : A\n{\n    public override string Print() {}\n}\nclass A3 : A\n{\n    public override string Print() {}\n}
4644	public static object GetDefault(this Type t)\n{\n    return t.IsValueType ? Activator.CreateInstance(t) : null;\n}\n\npublic static T GetDefault<T>()\n{\n    var t = typeof(T);\n    return (T) GetDefault(t);\n}\n\npublic static bool IsDefault<T>(T other)\n{\n    T defaultValue = GetDefault<T>();\n    if (other == null) return defaultValue == null;\n    return other.Equals(defaultValue);\n}
4645	string[] lines = File.ReadAllLines("filename.txt");\n        int count = 0;\n        int line = 0;\n\n        for (; line < lines.Length; line++)\n        {\n            count += lines[line].Length;\n            if (count >= 1500)\n            {\n                // previous line is < 1500\n                Console.WriteLine("Character count < 1500 on line {0}", line - 1);\n                Console.WriteLine("Line {0}: {1}", line - 1, lines[line - 1]);\n                break;\n            }\n        }
4646	[DllImport("remoteApi.dll", CallingConvention = CallingConvention.Cdecl)]\npublic static extern int simxGetObjects(\n    int clientID, \n    int objectType, \n    out int objectCount, \n    out IntPtr objectHandles, \n    int operationMode\n);\n\nint objectCount;\nIntPtr objectHandles;\n\nint result = simxGetObjects( clientID, \n                             objectType, \n                         out objectCount, \n                         out objectHandles, \n                             operationMode );\nif( result == 0 && objectHandles != IntPtr.Zero )\n{\n    for( int index = 0; index < objectCount; index++ )\n    {\n        IntPtr handle = (IntPtr)((int)objectHandles + index*4);\n\n        // do something with handle            \n    }\n}
4647	double d = 2.0;\n\nvar invariantString = Convert.ToString(d, CultureInfo.InvariantCulture);\n\nvar d2 = Convert.ToDouble(invariantString, CultureInfo.InvariantCulture);
4648	var tabControl = e.Source as TabControl;\nvar oldTabItem = e.RemovedItems[0] as TabItem;\nvar oldIndex = tabControl.Items.IndexOf(oldTabItem);
4649	CultureInfo.CreateSpecificCulture("nl-NL");
4650	var sReg;\n@foreach (var userid in db.Query(selectUser)) \n{\n    sReg = userid.userdisplayname;\n    var sAns = userid.usersign;\n    var smail = userid.usermail;\n}
4651	// get the bounding area of the screen containing (0,0)\n// remember in a multidisplay environment you don't know which display holds this point\nDrawing.Rectangle bounds = Forms.Screen.GetBounds(System.Drawing.Point.Empty);\n\n// create the bitmap to copy the screen shot to\nDrawing.Bitmap bitmap = new Drawing.Bitmap(bounds.Width, bounds.Height);\n\n// now copy the screen image to the graphics device from the bitmap\nusing (Drawing.Graphics gr = Drawing.Graphics.FromImage(bitmap))\n{\n    gr.CopyFromScreen(Drawing.Point.Empty, Drawing.Point.Empty, bounds.Size);\n}
4652	btnLink.OnClientClick =\n    "window.parent.openlink('http://www.google.co.uk', 'test', 300, 300);return false;";
4653	protected void Page_Load(object sender, EventArgs e)\n{\n     TextBox1.Attributes.Add("readonly", "readonly");\n}
4654	public string GenerateNumber(string input)\n{\n    if (string.IsNullOrWhiteSpace(input))\n    {\n        throw new ArgumentNullException("input");\n    }\n\n    Random rand = new Random();\n    StringBuilder builder = new StringBuilder();\n\n    for (int i = 0; i < input.Length; i++)\n    {\n        if (input[i] == '-')\n        {\n            builder.Append("-");\n        }\n        else\n        {\n            builder.Append(rand.Next(0, 9).ToString());\n        }\n    }\n\n    return builder.ToString();\n}
4655	WebClient.DownloadData()
4656	// creates a Podio.API.Client used to communicate with the Podio API\nvar client = Podio.API.Client.ConnectAsUser(client_id, client_secret, username, password);\n\nint AppId = 9999;\nstring requestUrl = Podio.API.Constants.PODIOAPI_BASEURL + "/tag/app/" + AppId + "/";\n\n// request the api\nPodio.API.Utils.PodioRestHelper.PodioResponse response = Podio.API.Utils.PodioRestHelper.Request(requestUrl, client.AuthInfo.access_token);
4657	[XmlElement("password")]\npublic string Password { get; set; }\n\n[XmlElement("password_confirmation")]\npublic string PasswordConfirmation{ get { return Password;} set; }
4658	Bitmap canvas = new Bitmap(600, 480);\nGraphics graph = Graphics.FromImage(canvas);
4659	private void lbz_SelectionChanged(object sender, SelectionChangedEventArgs e)\n{\n    if( lbz.SelectedItem != null ){\n        if(File.Exist(lbz.SelectedItem.ToString())){\n            tb1.Text = File.ReadAllText(lbz.SelectedItem.ToString());\n        }\n        else\n        {\n            tb1.Text = "File is not exist in the selected Path";\n        }\n    } else {\n        tb1.Text = "No File Selected";\n    }\n}
4660	GridImport.DataSource = dtTemSec.AsEnumerable()\n                                .Where(x => x.Field<string>("Status") != "D")\n                                .CopyToDataTable();\nGridImport.DataBind();
4661	string strType = null;
4662	dotnetfx35.exe /q /norestart
4663	public ActionResult ProfessorStatus(string schoolType) {\n  Expresison<Func<Professor, bool>> filter;\n  switch (schoolType) {\n    case "Engineering":\n      filter= a => a.Engineering.Value == true;\n      break;\n    default:\n      throw new Exception("Unknown SchoolType - " + schoolType);\n  }\n  var activeProfessors = (from p in prof.ProfessorTable.Where(filter)\n     group p by p.ProfessorID into g\n     select g.Key).ToList();\n  return View(activeProfessors);\n}
4664	{1} _{0};\ninternal {1} {0}\n{{\n    get {{ return _{0}; }}\n    set\n    {{\n        _{0} = value;\n        UpdateRowValue(myObj, "{0}", value);\n    }}\n\n}}\ninternal void SetNull{0}()\n{{\n    UpdateRowValue(myObj, "{0}", DBNull.Value);\n}}
4665	private void treeView1_NodeMouseClick(object sender, TreeNodeMouseClickEventArgs e) {\n        Console.WriteLine(e.Node.Text);\n    }
4666	contentCorrected = contentCorrected.Replace(@"\", "");
4667	using ZMQ;\n\nnamespace TestConsole \n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            // ZMQ Context and client socket\n            using (Context context = new Context())\n            using (Socket client = context.Socket(SocketType.PUSH))\n            {\n                client.Connect("tcp://127.0.0.1:2202");\n\n                string request = "Hello";\n                for (int requestNum = 0; requestNum < 10; requestNum++)\n                {\n                    Console.WriteLine("Sending request {0}...", requestNum);\n                    client.Send(request, Encoding.Unicode);\n\n                    string reply = client.Recv(Encoding.Unicode);\n                    Console.WriteLine("Received reply {0}: {1}", requestNum, reply);\n                }\n            }\n        }\n    }\n}
4668	public static PdfPCell MakeHeader(string text, iTextSharp.text.Font Htitle) {\n    PdfPCell HeadCell = new PdfPCell(new Paragraph(text, Htitle));\n    HeadCell.BackgroundColor = iTextSharp.text.Color.LIGHT_GRAY;\n\n    return HeadCell;\n}\n\nPdfPCell HeadCell0 = MakeHeader("FullName", Htitle);
4669	public static void ConfigureMappings()\n{\n  Mapper.CreateMap<TreeNodeDto, Taxonomy>()\n  .AfterMap((s, d) =>\n  {  \n     //WCF service calls to get parent and children\n     d.Children =  Mapper.Map<TreeNodeDto[], TreeNode[]>(client.GetTreeChildren(s)).ToList();\n    foreach( var child in d.Children)\n    {\n       child.Parent = d;\n    }\n}
4670	var sb = new StringBuilder();\n  var settings = new XmlWriterSettings {\n    OmitXmlDeclaration = true,\n    Indent = true,\n    IndentChars = "  ",\n  };\n  using (var writer = XmlWriter.Create(sb, settings)) {\n    writer.WriteStartElement("X");\n    writer.WriteAttributeString("A", "1");\n    writer.Flush();\n    sb.Append("\r\n");\n    writer.WriteAttributeString("B", "2");\n    writer.Flush();\n    sb.Append("\r\n");\n    writer.WriteAttributeString("C", "3");\n    writer.WriteEndElement();\n  }\n  Console.WriteLine(sb.ToString());
4671	List<Bar> bar = new List<Bar>() \n    { \n        new Bar() { Id = 1, Name = "John Smith" }, \n        new Bar() { Id = 2, Name = "Jane Doe" }, \n        new Bar() { Id = 3, Name = "Joe Johnson" } \n    };\n\n//query the bar list and select the name \nstring name = bar.Where(x => x.Id == 2).Select(x => x.Name).FirstOrDefault();
4672	Int32 h = picture.Height;\nInt32 w = picture.Width;\nif (e.X < w && e.Y < h)\n{\n    Int32 R = picture.GetPixel(e.X, e.Y).R;\n    Int32 G = picture.GetPixel(e.X, e.Y).G;\n    Int32 B = picture.GetPixel(e.X, e.Y).B;\n    lbPixelValue.Text = "R:" + R + " G:" + G + " B:" + B;\n    lbCoordinates.Text = String.Format("X: {0}; Y: {1}", e.X, e.Y);\n}\nelse\n{\n    lbPixelValue.Text = "";\n    lbCoordinates.Text = "";\n}
4673	using(SqlConnection cnn = new SqlConnection(....here the connection string ....))\nusing(SqlCommand cmd = new SqlCommand("uspRetMostCommonScreenRes", cnn))\n{\n    cnn.Open();\n    cmd.CommandType = CommandType.StoredProcedure;\n    string result = cmd.ExecuteScalar().ToString();\n}
4674	Login UserLogin = new Login();\n   UserLogin.Username = textBox1.Text;\n   UserLogin.Password = textBox2.Text;\n   if(objServiceClientobjService.UserLogin(UserLogin))\n         {\n               Response.Redirect("Home.html"); // your page to go after valid user login\n         }\n     else\n         {\n             // show error code\n         }
4675	EmailMessage message = new EmailMessage();\n Recipient myrecipient = new Recipient("Gmail", "MyMail@gmail.com");\n message.To.Add(myrecipient);\n //Adding more To address\n message.To.Add(myrecipient2);\n message.To.Add(myrecipient3);\n //Adding more CC address\n message.Cc.Add(myrecipient4);\n message.Cc.Add(myrecipient5);\n //Adding more Bcc address\n message.Bcc.Add(myrecipient6);\n message.Bcc.Add(myrecipient7);\n message.Subject = "test from Windows-Mobile";                          \n message.BodyText = "this is the test from Windows-Mobile";        \n //Adding attachments\n message.Attachments.Add("TextFilePath");\n message.Send("Gmail");                                                \n MessagingApplication.Synchronize("Gmail");                     \n SetForegroundWindow(this.Handle);
4676	static IEnumerable<string> GetSubdirectoriesContainingOnlyFiles(string path)\n{\n  return from subdirectory in Directory.GetDirectories(path, "*", SearchOption.AllDirectories)\n         where Directory.GetDirectories(subdirectory).Length == 0\n        select subdirectory;\n}
4677	SQLiteConnection dbConnection = new SQLiteConnection("Data Source=mydb.db3;Version=3;", true);
4678	BoundField boundfield = new BoundField();\nboundfield.DataField = "Last Name";\nboundfield.HeaderText = "Last Name";\nboundfield.SortExpression= "LastName";\nGridView1.Columns.Add(boundfield);
4679	var distinctOnes = a.Distinct();
4680	private void chechTreeViewItems(List<int> remID)\n{\n    foreach (System.Windows.Forms.TreeNode item in this.tvRemark.Nodes[0].Nodes)\n    {\n        for (int i = 0; i < remID.Count; i++)\n        {\n            if (Convert.ToInt16(item.Tag) == remID[i])\n            {\n                item.Checked = true;\n            }\n        }\n    }\n}
4681	if (doc.SelectSingleNode("/Schedule/Date[text()='" + monthCalander1.SelectionStart.ToString() + "']") != null){\n   // already exists, do something here\n}
4682	ServiceRequest.PropertyMetada.CreatedDate.DefaultValue
4683	TabControl.ItemContainerStyle
4684	Session["confirmBooking"] = "confirm";\nSession["totalBooking"] = calculateTextBox.Text;\nResponse.Redirect("RoomBookingMain.aspx");
4685	private void Application_Activated(object sender, ActivatedEventArgs e)\n{\n     // Determine whether it is returning from being dormant or tombstoned.\n     // If it is false, return from tombstoned.\n     if (e.IsApplicationInstancePreserved == false)\n         //TODO\n     else\n         //TODO\n }
4686	var negList = rms.NegativeResponse.Where(d => d.RLMSTimeStamp != null && d.RLMSTimeStamp > new DateTime(2012, 02, 22)).toList();\nvar posList = rms.PositiveResponse.Where(d => d.RLMSTimeStamp != null && d.RLMSTimeStamp > new DateTime(2012, 02, 22)).toList();\n\n\nvar item = (from pos in posList\n            join neg in negList\n              on\n                 pos.RLMSRecruitId equals neg.RLMSRecruitId\n              orderby pos.RLMSTimestamp descending\n              select pos).FirstOrDefault();
4687	ViewData.Model = _selectedJobDb.Jobs.Where(j => j.Request.TargetName == TargetName).ToList();
4688	System.CodeDom
4689	activeWindow.ActivePane.View.Type = WdViewType.wdPrintView;\nactiveWindow.ActivePane.View.SeekView = WdSeekView.wdSeekPrimaryHeader;\n\n//Check for blank headers\nactiveWindow.ActivePane.Selection.WholeStory();\nvar text = activeWindow.ActivePane.Selection.Text;\nif (!string.IsNullOrEmpty(text) && text.Equals("\r"))\n{\n    activeWindow.ActivePane.View.SeekView = WdSeekView.wdSeekMainDocument;\n    continue;\n}\n// Get the full range of the header. This call causes my problem.\nRange headerRange = header.Range;
4690	System.Reflection.PropertyInfo pi = item.GetType().GetProperty("name");\nString name = (String)(pi.GetValue(item, null));
4691	var field = browser.TextField(Find.ByName("_MYPW"));\nif(field.Exists)\n    field.TypeText(privateCurrentPassword);
4692	Thread t = new Thread(() => saveFile(args));\nt.Start();
4693	Environment.GetCommandLineArgs
4694	using (StreamReader MyResponseStream = new StreamReader(hwresponse.GetResponseStream()))\n{\n    using (StreamWriter _FileStream = new StreamWriter("request.txt", true))\n    {\n        _FileStream.Write(MyResponseStream.ReadToEnd());\n    }\n}
4695	public string Path { get; set; }\nprivate void UploadButton_Click(object sender, EventArgs e)\n{\n    var o = new OpenFileDialog();\n    o.Multiselect = true;\n    if(o.ShowDialog()== System.Windows.Forms.DialogResult.OK)\n    {\n        o.FileNames.ToList().ForEach(file=>{\n            System.IO.File.Copy(file, System.IO.Path.Combine(this.Path, System.IO.Path.GetFileName(file)));\n        });\n    }\n\n    this.LoadFiles();\n}\n\nprivate void Form_Load(object sender, EventArgs e)\n{\n    this.LoadFiles();\n}\n\nprivate void LoadFiles()\n{\n    this.Path = @"d:\Test";\n    var files = System.IO.Directory.GetFiles(this.Path);\n    this.dataGridView1.DataSource = files.Select(file => new { Name = System.IO.Path.GetFileName(file), Path = file }).ToList();\n}
4696	.ToString()
4697	if (actionDescriptor.ControllerDescriptor.ControllerType == typeof(HomeController) &&\n                  (actionDescriptor.ActionName.Equals("home")) && controllerContext.HttpContext.Request.HttpMethod == "POST" )
4698	string filepath = @"C:\Users\H?seyin\Desktop\AA\a.txt";\n        zip.AddItem(filePath, Path.GetFileName(filePath));
4699	Foo max = list.MaxBy(f => f.value);
4700	IsSynchronizedWithCurrentItem="True"
4701	this.BindFilter(\n    x => new PermitFilter(\n        x.Inject<ISomeDependency>(),\n        x.FromControllerAttribute<PermitAttribute>().GetValue(attribute => attribute.Permissions)), \n        FilterScope.Controller, \n        0)\n    .WhenActionMethodHas<PermitAttribute>();
4702	App.PictureList.Pictures.OrderBy(x => x.DateTaken) as System.Collections.IList
4703	AccountAreaRegistration.cs
4704	interface IFoo\n{\n    event EventHandler OnChanged;\n}\n\nclass MyClass : IFoo\n{\n    public event EventHandler OnChanged;\n\n    private FireOnChanged()\n    {\n        EventHandler handler = this.OnChanged;\n        if (handler != null)\n        {\n            handler(this, EventArgs.Empty); // with appropriate args, of course...\n        }\n    }\n}
4705	a = a.Replace("," , "");
4706	SqlCommand command = new SqlCommand("Select * from whatever where Date Between @begin and @end");\n command.Parameters.Add(new SqlParameter("begin", yourbegin));\n command.Parameters.Add(new SqlParameter("end", yourEnd));\n ...
4707	display:inline-block
4708	var Data = base.Entities.Member.First(c => c.Id == entity.Id);\nif (Data != null)\n{\n    Data = entity;\n    base.Entities.SaveChanges();\n}
4709	private void PictureClicked(object sender, EventArgs e) {\n    Control picture = sender as Control;\n    if (picture == null) //just in case...\n        return;\n    switch (picture.Name) {\n        case "pictureBoxCar":\n            //open Car form\n            break;\n        case "pictureBoxBoat":\n            //open Boat form\n            break;\n    }\n}
4710	string srxPathOfCategory = "//div[@class='breadcrumbs']//li[@class='product'] | //div[@class='breadcrumbs']//a";
4711	var articlePages = categoryPages.SelectMany(x => x.ChildPages);
4712	UpdateModel(child.parent, "Parent", new[] { "child.parent.parentValue1", "child.parent.parentValue2", "child.parent.parentValue3" }, collection.ToValueProvider());
4713	public class TestClass \n{\n    public static event OrderUpdateHandler UpdatedOrder;\n\n    public void UpdateData(Order order) \n    {\n        // ...\n\n        OnOrderUpdated(args);\n    }\n\n    public Order GetConfirmedOrder(int id, TimeSpan waitToConfirm) \n    {\n        var order = GetOrderFromDatabase();\n\n        if (order.Status == OrderStatus.Pending) \n        {\n             var eventHandle = new EventWaitHandle(false, EventResetMode.AutoReset);\n\n             UpdatedOrderHandler waiter = (s, e) =>\n             {\n                if (e.Order.Id == id)\n                {\n                    order = e.Order;\n                    eventHandle.Set();\n                }\n            };\n\n            UpdatedOrder += waiter;\n\n            if (!eventHandle.WaitOne(waitToConfirm))\n            {                \n                return order;\n            }\n\n            OrderUpdated -= waiter;\n        }\n\n        return order;\n    }\n}
4714	Request.Form["__EVENTTARGET"]
4715	var dictionary = new Dictionary<object, object>();\n        //... fill the dictionary\n        var hashtable = new Hashtable(dictionary);
4716	private void DoSomething()\n{\n#if DEBUG\n    try\n    {\n#endif\n        //do something\n#if DEBUG\n    }\n    catch\n    {\n        Debugger.Break();\n        throw;\n    }\n#endif\n}
4717	DELETE * FROM tblSignIns \n WHERE LastActivityTime < DATEADD("minute", -10, GETDATE());
4718	var fileStream = File.Open(file, FileMode.Append, FileAccess.Write, FileShare.Read);\nvar streamWriter = new StreamWriter(fileStream);\nstreamWriter.AutoFlush = true;
4719	if (Dataset1.Tables[0].Columns[1].ColumnName.ToLower().Contains("date") || Dataset1.Tables[0].Columns[1].DataType.ToString() == "System.DateTime")                              \n{\n   //Do work;\n}
4720	//an empty file ( [{}] will return positive for HasElements so we also get \nbool IsEmptyObject = (root.Elements().Nodes().Count() > 0) ? true : false;
4721	class Program\n{\n    static void Main(string[] args)\n    {\n        int n = 22; //the number of points\n        float radius = 22f;\n        Vector3 vector = new Vector3(radius, 0, 0); //the vector you keep rotating\n        Vector3 center = new Vector3(33,33,33); //center of the circle\n        float angle = (float)Math.PI * 2 / (float)n;\n\n        Vector3[] points = new Vector3[n];\n\n        Matrix rotation = Matrix.RotationZ(angle);\n\n        for (int i = 0; i < n; i++)\n        {\n            points[i] = vector + center;\n\n            vector.TransformNormal(rotation);\n        }\n    }\n}
4722	var connectionString = ConfigurationManager.ConnectionStrings["SomeCN"].ConnectionString;\nusing (var cn = new SqlConnection(connectionString))\nusing (var cmd = cn.CreateCommand())\n{\n    cn.Open();\n    cmd.CommandText = "select imageid from accounts where accountid = @accountid";\n    cmd.Parameters.AddWithValue("@accountid", 5);\n    using (var reader = cmd.ExecuteReader())\n    {\n        if (reader.Read())\n        {\n            var filePath = reader.GetString(0);\n            // For this to work images must be stored inside the web application.\n            // filePath must be a relative location inside the virtual directory\n            // hosting the application. Depending on your environment some\n            // transformations might be necessary on filePath before assigning it\n            // to the image url.\n            imageControl.ImageUrl = filePath;\n        }\n    }\n}
4723	list = NET.createGeneric('System.Collections.Generic.List',...\n  {'System.Int32'},100);\nlist.Add(5)\nlist.Add(6)\n\nfor i = 0:list.Count - 1\n   disp(list.Item(i))\nend
4724	XDocument MyXDoc;\n// TODO, load or parse MyXDoc\n\nstring[] CsvList = MyXDoc.Root.Elements("row")\n    .Select(row => \n        String.Join(", ", row.Elements("value").Select(val => (string)val).ToArray() )\n     )\n    .ToArray();
4725	var xmlDict = XDocument.Load(filename).Root.Element("dict");\nvar dict = xmlDict.Elements("key")\n           .Zip(xmlDict.Elements("string"), (k, s) => new KeyValuePair<string, string>(k.Value, s.Value))\n           .ToDictionary(x=>x.Key,x=>x.Value);
4726	System.Diagnostics.Process proc = new System.Diagnostics.Process();\nproc.StartInfo.FileName = "C:\\Watcher\\Cleanup.bat";\nproc.StartInfo.WorkingDirectory = "C:\\Watcher";\nproc.Start();
4727	List<Tuple<T1, T2, ...>>
4728	System.Activator.CreateInstance\nSystem.Reflection.Assembly.LoadFrom
4729	file.CopyTo(@"\\123.45.678\etcetc");
4730	line = myReader.ReadLine();                                                     \nif (line != null && line.IndexOf(x, StringComparison.CurrentCultureIgnoreCase) >= 0)\n      Console.WriteLine(line);
4731	Object obj = -0.00002357467;\n        String value = obj.ToString();\n        String type = obj.GetType().ToString();\n\n        if (type.Equals("System.Double")&&value.Contains("E-"))\n        {\n            double doubleValue = (double)obj;\n            value = doubleValue.ToString("0.############################"); //thanks @Matthew Watson\n        }\n\n        Console.WriteLine(value);   //prints -0.00002357467
4732	private void MaskedTextBox1_TextChanged(object sender, EventArgs e)\n{\n    MaskedTextBox1.PromptChar = (MaskedTextBox1.MaskCompleted) ? ' ' : '_' ;\n}
4733	private void SetUpThreadPool(int numThreadDesired)\n{\n    int currentWorkerThreads;\n    int currentCompletionPortThreads;\n    ThreadPool.GetMinThreads(out currentWorkerThreads, out currentCompletionPortThreads);\n    //System.Diagnostics.Debug.WriteLine(string.Format("ThreadPool.GetMinThreads: workerThreads = {0}, completionPortThreads = {1}", workerThreads, completionPortThreads));\n\n    const int MAXIMUM_VALUE_FOR_SET_MIN_THREAD_PARAM = 20;\n    int numMinThreadToSet = Math.Min(numThreadDesired, MAXIMUM_VALUE_FOR_SET_MIN_THREAD_PARAM);\n    if (currentWorkerThreads < numMinThreadToSet)\n        ThreadPool.SetMinThreads(numThreadDesired, currentCompletionPortThreads);\n}\n\npublic List<int> ProcessList(List<int> itemsToProcess)\n{\n    SetUpThreadPool(documentNumberList.Count);\n    ...\n}
4734	public class Employee : System.ComponentModel.INotifyPropertyChanged
4735	dynamic data = Newtonsoft.Json.Linq.JObject.Parse(content);\nvar value = data.credits.cast as Newtonsoft.Json.Linq.JArray; \nvar actors = value.Select(x => x.ToObject<Actor>());
4736	if (!Dispatcher.CheckAccess()) \n        {\n            Dispatcher.BeginInvoke(DispatcherPriority.Normal,\n            (MyDelegate)delegate\n            {\n                // Get value\n            });\n        } \n        else \n        { \n            // Get value\n        }
4737	private vtkCamera camera;    \ncamera.SetPosition(DoubleArrayToIntPtr(defaultCamPos));\ncamera.SetViewUp(DoubleArrayToIntPtr(defaultCamViewup));\ncamera.SetFocalPoint(DoubleArrayToIntPtr(defaultCamFocus));
4738	// declare random instance outside of the method \n// because we don't want duplicate numbers\nstatic Random rnd = new Random();\n\npublic static int GenerateRandomNumber()\n{\n    // declare variables to store range of number\n    int from, to;\n\n    // use while(true) and force user to enter valid numbers\n    while(true)\n    {\n        // we use TryParse in order to avoid FormatException and validate the input\n        bool a = int.TryParse(Console.ReadLine(), out from);\n        bool b = int.TryParse(Console.ReadLine(), out to);\n\n        // check values and ensure that 'to' is greater than 'from'\n        // otherwise we will get a ArgumentOutOfRangeException on rnd.Next\n\n        if(a && b && from < to) break; // if condition satisfies break the loop\n\n        // otherwise display a message and ask for input again\n        else Console.WriteLine("You have entered invalid numbers, please try again.");\n    }\n\n    // generate a random number and return it\n    return rnd.Next(from, to + 1);\n\n}
4739	ws.Cells[j, 1] = "Category";\n            ws.Cells[j, 2] = "Part Number";\n            ws.Cells[j, 3] = "TradePrice";\n            ...
4740	var delegates = new Dictionary<string, Func<MyClass, DataTable>>()\n                                {\n                                    {"somestr", x => x.Method1()}\n                                };\n\n            if (delegates.ContainsKey(key))\n                delegates[key](this);
4741	Console.SetCursorPosition(0, 0);
4742	onkeypress='if(event.keyCode=13) return false;'
4743	files|*.txt;*.text
4744	Document wordDocument;\nMicrosoft.Office.Interop.Word.Application word = new Microsoft.Office.Interop.Word.Application(); \nwordDocument = word.Documents.Open(saveFileDialog.FileName);\nwordDocument.TablesOfContents[1].Update();\nwordDocument.Save();\nword.Quit();
4745	request.Content.Headers.ContentType = MediaTypeHeaderValue.Parse("application/atom+xml");
4746	public class UserMap : ClassMap<User>\n{\n    public UserMap()\n    {\n        Id(x => x.UserId).GeneratedBy.Identity();\n        Map(x => x.UserName).Length(DataConstants.UserNameLength).Unique().Not.Nullable();\n        Map(x => x.EmailAddress).Length(DataConstants.EmailAddressLength).Unique().Not.Nullable();\n        Map(x => x.DateJoined).Not.Nullable();\n        Map(x => x.Password).Length(DataConstants.PasswordHashLength).Not.Nullable();\n        HasManyToMany(x => x.UserRoles).Cascade.AllDeleteOrphan().AsBag().Table("UsersInRole");\n        HasManyToMany(x => x.SubscribedFeeds).Cascade.DeleteOrphan().AsBag().Table("Subscriptions");\n        HasManyToMany(x => x.OwnedFeeds).Cascade.All().AsBag().Table("FeedOwners");\n        HasMany(x => x.Reads).Cascade.AllDeleteOrphan().Fetch.Join().Inverse().KeyColumn("UserId");\n    }\n}
4747	public abstract class MyViewStart : System.Web.Mvc.ViewStartPage {\n    public My.Helpers.ThemeHelper Themes { get; private set; }\n\n    public override void ExecutePageHierarchy()\n    {\n        this.Themes = new Helpers.ThemeHelper(this.ViewContext);\n        base.ExecutePageHierarchy();\n    }\n}
4748	for (int i = 0; i < listView1.Items.Count; i++)\n    {\n    if (listView1.Items[i].Selected)\n      {\n        string var1 = listView1.Items[i].ToString();  // <-------\n        string var2 = var1.Substring(31, 5); \n        ... // code for other actions\n        listView1.Items[i].Remove();\n        i--;\n      }\n    }
4749	using (new TransactionScope(\n                    TransactionScopeOption.Required, \n                    new TransactionOptions \n                    { \n                         IsolationLevel = IsolationLevel.ReadUncommitted \n                    })) \n{\n        using (var db = new MyDbContext()) { \n            // query\n        }\n}
4750	IsWindowEnabled()
4751	protected void dlCategory_ItemDataBound(object sender, DataListItemEventArgs e) \n{\n    Label Label1 = e.Item.FindControl("Label1") as Label;\n    if (LblCat != null)\n    {\n        string id = ((System.Data.DataRowView)e.Item.DataItem).Row["ProductCategory_Id"].ToString();\n\n        if (Request.QueryString["ProductCategory_Id"] == id)\n        {\n            Label1.ForeColor = System.Drawing.Color.Red;\n        }\n    }\n}
4752	var enversCfg = new FluentConfiguration();\nenversCfg.SetRevisionEntity<DefaultRevisionEntity>(r => r.Id, r=> r.RevisionDate, yourRevisionListener>();
4753	var idx = yourString.IndexOf("unable");\nif (idx != -1)\n{\n    idx = yourString.IndexOf(';', idx);\n    if (idx != -1)\n    {\n        // you found it\n    }\n}
4754	foreach (var category in userCategories)\n{\n    CategoryDropDownList.Items.Add(new ListItem(Server.HtmlEncode(category.Category), category.ID.ToString()));\n}
4755	string filmID = comboBox1.SelectedValue.ToString();\nScenario newScenario = new Scenario();\nforeach (Scenario scenario in myDatabase.Scenario\n    .Where(scn => scn.filmID.ToString().Equals(filmId))\n{\n    scenario.SceneWriter.Add(newScenewriter);before\n}\n\nmyDatabase.SaveChanges();
4756	Microsoft.Office.Interop.Excel.Application oExcelApp;\n\noExcelApp = System.Runtime.InteropServices.Marshal.GetActiveObject("Excel.Application");\n\nforeach (Microsoft.Office.Interop.Excel.Workbook WB in oExcelApp.Workbooks) {\n   MessageBox.Show(WB.FullName);\n}\n\noExcelApp = null;
4757	System.Windows.Form
4758	var keysWithMatchingValues = dic.Where(p => p.Value == "a").Select(p => p.Key);\n\nforeach(var key in keysWithMatchingValues)\n    Console.WriteLine(key);
4759	public Task<double[]> ConvertToDouble<T>(T [] input)\n{\n    return new Task<double []> (CovertToDoubleArray ((T[]) item),  intArray) ;\n}
4760	var query = (\n    from a in db.Record_HoldData\n    join b in db.FlavorTable on\n        a.FlavorId equals b.Id\n    where a.HoldStatus == "Open"\n    select\n        new\n        {\n            a.DateOpened,\n            a.Field1,\n            a.Field2,\n            ...\n            b.FlavorName\n        })\n    .ToList();
4761	Queue<XmlNode>
4762	void navigatePage_onSelected(object sender, SelectedItemChangedEventArgs args){\n            _menulink menuitem = (_menulink)args.SelectedItem;\n            MasterDetailPage mstr = (MasterDetailPage)(Application.Current.MainPage); // My Application main page is a Masterpage so..\n            if (menuitem._link == "ABOUT FTW") {\n                mstr.Detail = new NavigationPage (new AboutFTW ());\n            }else if(menuitem._link == "I NEED HELP"){\n                mstr.Detail = new NavigationPage (new Entertainment ());\n            }else if(menuitem._link == "HOME"){\n                mstr.Detail = new NavigationPage (new FTWHome ());\n            }\n            // Show the detail page.\n            mstr.IsPresented = false;\n        }
4763	protected void MyDataSource_Selected(object sender, ObjectDataSourceStatusEventArgs e)\n{\n    var count = e.ReturnValue as int?;\n    if (count.HasValue)\n        litResults.Text = string.Format("Total results found {0}", count);\n}
4764	try\n        {\n            if (this.Connection.State == ConnectionState.Closed)\n                this.Connection.Open();\n            List<Bet> bets = new List<Bet>();\n            using(MySqlDataReader dr = cmd.ExecuteReader(CommandBehavior.CloseConnection)){\n\n\n            while (dr.Read())\n            {\n                Bet myBet = new Bet();\n                myBet = FillBetfromRow(dr);\n                bets.Add(myBet);\n            }\n       }\n            return bets;\n        }
4765	public class DoubleBufferedTableLayoutPanel :TableLayoutPanel\n{\n    public DoubleBufferedTableLayoutPanel()\n    {\n        DoubleBuffered = true;\n    }\n}
4766	class MyAccount \n{\n    public string Name { get; set; }\n    public int Priority { get; set; }\n}
4767	private async Task<StorageFile> SaveUriToFile(string uri)\n{\n    var picker = new FileSavePicker();\n\n    // set appropriate file types\n    picker.FileTypeChoices.Add(".jpg Image", new List<string> { ".jpg" });\n    picker.DefaultFileExtension = ".jpg";\n\n    var file = await picker.PickSaveFileAsync();\n    using (var fileStream = await file.OpenStreamForWriteAsync())\n    {\n        var client = new HttpClient();\n        var httpStream = await client.GetStreamAsync(uri);\n        await httpStream.CopyToAsync(fileStream);\n        fileStream.Dispose();\n    }\n    return file;\n}
4768	Dictionary<String, Country> dict = new Dictionary<string, Country>();\ndict.Add("Toronto", Country.Canada);\ndict.Add("New York", Country.US);\ndict.Add("Vancover", Country.Canada);\ndict.Add("Seattle", Country.US);\ndict.Add("Fredericton", Country.Canada);\n\nLookup<Country,String> lookup = (Lookup<Country,String>) dict.ToLookup(pair =>pair.Value, pair => pair.Key);\n\n foreach (var countryGroup in lookup)\n {\n    item = new ListViewItem(countryGroup.Key.ToString());\n    item.SubItems.Add(string.Format("{0}", string.Join(",", countryGroup.Select(s => "@" + s))));\n    lv.Items.Add(item);\n    item = null;\n }
4769	public static class Program\n{\n    public static void Main() {\n        var container = ConfigureContainer();\n\n        var application = container.Resolve<ApplicationLogic>();\n\n        application.Run();\n    }\n}\n\npublic class ApplicationLogic\n{\n    private readonly ILog log;\n\n    public ApplicationLogic(ILog log) {\n        this.log = log;\n    }\n\n    public void Run() {\n        this.log.Write("Hello, world!");\n    }\n}
4770	ddlFacultyMember.Items.Insert(0, new ListItem("Please Select a Value", "0"));
4771	EXEC [SSISDB].[catalog].[set_execution_parameter_value] \n        @execution_id,  -- execution_id from catalog.create_execution\n        @object_type=50, \n        @parameter_name=N'SYNCHRONIZED', \n        @parameter_value= 0;
4772	Task sendEmail = new Task(() =>\n        {\n            //create the mail message\n            MailMessage mail = new MailMessage();\n\n            //set the addresses\n            mail.From = new MailAddress("me@mycompany.com");\n            mail.To.Add("you@yourcompany.com");\n\n            //set the content\n            mail.Subject = "This is an email";\n            mail.Body = "this is a sample body";\n\n            //send the message\n            SmtpClient smtp = new SmtpClient();\n            smtp.Port = 465;\n            smtp.UseDefaultCredentials = true;\n\n            smtp.Host = "smtp.gmail.com";\n\n            smtp.EnableSsl = true;\n            smtp.Credentials = new NetworkCredential("youGmailAddress@gmail.com", "YourPassword");  \n\n            smtp.Send(mail);\n        });\n\n        sendEmail.Start();
4773	autoScrollBinding.Source = this;
4774	//but two lines below in "OnModelCreating" method in your Context\n\n modelBuilder.Entity<Lookup>().Map<Catalog>(m => m.Requires("IsCatalog").HasValue(true));\n modelBuilder.Entity<Lookup>().Map<CatalogType>(m =>m.Requires("IsCatalog").HasValue(false));\n\n// then :\n context.Lookups.AddOrUpdate(p => new { p.Name , p.IsCatalog},\n        new CatalogType\n        {\n            Name = "General",\n            IsActive = true,\n            Order = 1,\n        },\n        new CatalogType\n        {\n            Name = "Custom",\n            IsActive = true,\n            Order = 2,\n        });\n        //context.SaveChanges(); //if you used base.OnModelCreating(modelBuilder);\n        base.OnModelCreating(modelBuilder); // then you don't need to save
4775	var res = (from positions in context.Lloyds_ETAs\n          join vessels in context.Lloyds_Vessels on positions.ImoNumber equals vessels.imo_no\n          select new PositionData {\n              ImoNo = positions.ImoNumber,\n              PositionCordinates = positions.AIS_Latest_Position,\n              CompassOverGround = positions.Compass_over_Ground_Heading,\n              VesselId = positions.Vessel_ID,\n              Equipment = vessels.vessel_type,\n              Updated = positions.Last_Place_Location\n           })\n           .GroupBy(x => x.ImoNo)\n           .Select(g => g.OrderByDescending(pd => pd.Updated).First());
4776	System.Data.Common.DbConnectionStringBuilder builder = new System.Data.Common.DbConnectionStringBuilder();\n\n        builder.ConnectionString = "Provider=\"Some;Provider\";Initial Catalog='Some;Catalog';";\n\n        foreach (string key in builder.Keys)\n        {\n            Response.Write(String.Format("{0}: {1}<br>", key , builder[key]));\n        }
4777	ThemeManager.ToLightTheme();
4778	Environment.Is64BitProcess
4779	int[,] layout = new int[9,9];\n\nvar dict = (Dictionary<string, object>)Json.Deserialize(jsonString); \nvar list = (List<object>)dict["layout"];\n\nfor (int row = 0; row < 9; row++)\n{\n    var items = (List<object>)list[row];\n    for (int col = 0; col < 9; col++)\n    {\n        layout[row, col] = Convert.ToInt32(items[col]);\n    }\n}
4780	[localmax,maxind] = findpeaks(x);\ninversex = 1.01*max(x) - x;\n[localmin,minind] = findpeaks(inversex);\n%//this gives all maxima and minima, now you can compute the width.\n\n%//as for the top 4 peaks, surely you just sort and index 1:4 upon the result or in the beginning.
4781	Regex r = new Regex(@"^value\((.*)\)\.$");
4782	var query = from p in Process.GetProcesses()\n            orderby p.ProcessName\n            select p;\n\nList<XElement> content = new List<XElement>();\nforeach (var item in query)\n{\n    content.Add(new XElement("Process",\n        new XAttribute("Name", item.ProcessName),\n        new XAttribute("PID", item.Id)));\n}\n\nvar paramArr = content.ToArray();\nvar rootElement = new XElement("Processes", paramArr); // create one root element\nXDocument doc = new XDocument(rootElement);
4783	protected override void OnNavigatedTo(NavigationEventArgs e)\n        {\n            this.DefaultViewModel["Groups"] = e.Parameter;\n}
4784	path.Substring(3)
4785	from ev1 in document.Descendants("channel").Elements("item")\n    .Where(e => e.Element(georss + "point") != null)
4786	form2.Show();\n   Encoding charset = Encoding.GetEncoding("utf-8");\n   HttpWebRequest SMSRequset =  (HttpWebRequest)WebRequest.Create("http://www.iam.ma/_layouts/SharepointFreeSms/EnvoyerSms.aspx");  \n   SMSRequset.Method = "GET";\n   SMSRequset.CookieContainer = cookies;\n   HttpWebResponse SMSResponse = (HttpWebResponse)SMSRequset.GetResponse();\n   System.IO.StreamReader reader2 = new System.IO.StreamReader(SMSResponse.GetResponseStream(), charset);\nform2.webBrowser1.Invoke((MethodInvoker)delegate\n{\n   form2.webBrowser1.DocumentText = reader2.ReadToEnd();\n});
4787	public static IQueryable Where(this IQueryable source, string predicate, params object[] values)
4788	ConnectionStringSettings settings = ConfigurationManager.ConnectionStrings["LoremIpsum"];\nSqlConnectionStringBuilder builder;\nLINQTOSQLDataClassDataContext db;\n\nif (null != settings) \n{   \n    string connection = settings.ConnectionString;  \n    builder = new SqlConnectionStringBuilder(connection);\n\n   // passwordTextBox being the control where joe the user actually enters his credentials\n\n    builder.Password =passwordTextBox.Text;  \n    db = new LINQTOSQLDataClassDataContext(builder.ConnectionString);\n } }
4789	foreach (DataRow dr in prfLogic.GetAllProductFamilies())\n{\n   foreach(DataColumn dataColumn in myDataTable.Columns)\n    {\n        string fieldValue = dr[dataColumn].ToString();   \n    }\n}
4790	public class Form1 {\n  public Form1(){\n      InitializeComponent();\n      WindowState = FormWindowState.Maximized;\n      Load += (s,e) => {\n         MaximizeBox = false;        \n      };\n  }\n  bool hitControlButtons;\n  protected override void WndProc(ref Message m)\n  {\n     if ((!hitControlButtons) && (m.Msg == 0xa3 || m.Msg == 0xa1))//WM_NCLBUTTONDBLCLK and WM_NCLBUTTONDOWN\n     {                \n        return;\n     }\n     if (m.Msg == 0xA0)//WM_NCMOUSEMOVE\n     {\n        int wp = m.WParam.ToInt32();                \n        hitControlButtons = wp == 8 || wp == 20 || wp == 9;//Mouse over MinButton, CloseButton, MaxButton                               \n     }\n     base.WndProc(ref m);            \n  }\n}
4791	public interface IMyGenericDBProcessor\n{\n    void AddToDB<T>(T Record) where T : class;\n}\n\npublic class MyDBProcessor : IMyGenericDBProcessor \n{\n    public void AddToDB<T>(T record) where T : class\n    {\n        using(var tp = new tpEntities())\n            tp.Set<T>().Add(record);\n    }\n}
4792	public IEnumerable<string> GetGroups(string str)\n{\n    var items = str.Split(new[] { " " }, StringSplitOptions.RemoveEmptyEntries);\n\n    var groups = new List<string>(items);\n\n    for (int i = 1; i < items.Count(); i++)\n    {\n       groups.Add(string.Join(" ", items.Where((s, idx) => idx <= i)));\n    }\n\n    return groups;\n}
4793	/// <summary>\n    /// \n    /// </summary>\n    /// <param name="identity"></param>\n    /// <returns></returns>\n    public static async Task<IStorageFile> FileFromPicker(string identity)\n    {\n        FileOpenPicker picker = new FileOpenPicker();\n\n        setFileTypes(picker);\n\n        picker.SuggestedStartLocation = PickerLocationId.PicturesLibrary;\n        picker.ViewMode = PickerViewMode.Thumbnail;\n        picker.SettingsIdentifier = identity;\n\n        var storageFile = await picker.PickSingleFileAsync();\n\n        return storageFile;\n    }
4794	open System\nopen System.IO    \n\nlet readFloats filePath = \n    let strs = File.ReadLines(filePath) // Read file line by line\n    strs |> Seq.map (fun str -> System.Double.TryParse(str)) // TryParse returns pair (Boolean * float value). Boolean is true if string parsed correctly \n         |> Seq.filter (fun (success, _) -> success) // filters out wrong  (not parsed strings)\n         |> Seq.map snd // transforms sequence of pairs (bool * float) into float only
4795	protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)\n{\n            e.Row.Cells[0].Text = "<a href=''>" + e.Row.Cells[0].Text + "</a>";\n}
4796	if (nextIndex >= courseView.Count ) //to last element, yours is at second last.\n    {\n        currIndex = nextIndex;\n        return false;// make it false, it should terminate and end loop . \n    }
4797	Public Sub New()\n    InitializeComponent()\n    MyDropDownList.Select()\nEnd Sub
4798	label_status_title.Text = "Status: changing files.\nfiles changed: " + i + "/" + d.Count + " files.";\nlabel_status_title.Refresh(); //added
4799	YourList.SelectMany(l=>l).Distinct()
4800	listQuery.SpreadsheetQuery = "date=2015-01-05";
4801	var newTable = rows.CopyToDataTable();
4802	public class User\n    {\n        public User() \n        { \n        }\n\n        public int idUser; { get; set; }\n        [Required]\n        public string UserName { get; set; }\n\n\n        public virtual Computer Computer{ get; set; }\n\n    }\n\n\npublic class Computer\n    {\n        public Computer() \n        {\n        }\n        [Key, ForeignKey("User")]\n        public int idUser{ get; set; }\n\n        public string ComputerName {get;set;}\n\n        public virtual User User { get; set; }\n    }
4803	List<bool?> bools
4804	public static TimeSpan Minutes[this int i]\n{\n    get { return new TimeSpan(0, i, 0); }\n}
4805	var maxLen = cx.Classes.Max(x => x.Name.Length);\n        var query =  cx.Classes.Select(x => x.Name).OrderBy(x => x.PadLeft(maxLen));
4806	int average(int[] a, int k)\n{\n    int average, s, i, n;\n\n    s = 0;\n    for (i = 0; i < k; i++)\n    {\n        a[i] = Convert.ToInt32(lblSortiranNiz.Items[i]);\n        s = s + a[i];\n    }\n    average = s / k;\n    return average;\n}
4807	Array.Sort(array, (s1, s2) => s1.Name.CompareTo(s2.Name));
4808	System.IO.File.WriteAllBytes("c:\\YourFile.png", binaryData);
4809	Bind<ICustomerRepository>().To<CustomerRepository>();
4810	[Append Me]
4811	batches.GroupBy(x => x.Batch, x => x.Amount).Select(g => new {\n    Batch = g.Key,\n    Amount = g.Sum()\n});
4812	TwitterCredentials.SetCredentials("Access_Token", "Access_Token_Secret", "Consumer_Key", "Consumer_Secret");\nvar user =  User.GetUserFromScreenName("<username>");
4813	...\n\nbyte[] data = ASCIIEncoding.Default.GetBytes(ieLog.FirstName + "." + ieLog.LastName);\n\nusing(MemoryStream ms = new MemoryStream(data))\n{\n    mail.Attachments.Add(new Attachment(ms, "myFile.csv", "text/csv" ));\n\n    SmtpClient smtp = new SmtpClient("127.0.0.1");\n    smtp.Send(mail);   \n}
4814	using (var resp = myRequest.GetResponse())\n{\n    using (var responseStream = resp.GetResponseStream())\n    {\n        using (var responseReader = new StreamReader(responseStream))\n        {\n        }\n    }\n}
4815	Debug.Print()
4816	var processes = Process.GetProcesses();\nforeach(var p in processes.Where(proc => proc.ProcessName.IndexOf(searchString, StringComparison.CurrentCultureIgnoreCase) > -1))\n   p.Kill();
4817	public void ProcessFolder(DirectoryInfo dirInfo)\n{\n    //Check for sub Directories\n    foreach (DirectoryInfo di in dirInfo.GetDirectories())\n    {\n        //Call itself to process any sub directories\n        ProcessFolder(di);\n    }\n\n    //Process Files in Directory\n    foreach (FileInfo fi in dirInfo.GetFiles())\n    {\n        //Do something with the file here\n        //or create a method like:\n        ProcessFile(fi)\n    }\n} \n\npublic void ProcessFile(FileInfo fi)\n{\n    //Do something with your file\n    Debug.Print(fi.FullName);\n    //...\n}
4818	(?<=\s)x(?=[A-Z])
4819	void Selection_Change(Object sender, EventArgs e) \n{\n         if(Calendar1.SelectedDate < Date.Now)\n         {\n             Response.Write("<script language=javascript>alert('previous date selected');</script>);\n         }\n}
4820	(\[[^\]]*\])
4821	DataRow[] drr = dt.Select("Student=' " + id + " ' "); \n    for (int i = 0; i < drr.Length; i++)\n        drr[i].Delete();\n    dt.AcceptChanges();
4822	2 sin(PI VFOV / 360) D Y\nX = --------------------------\n              VRES
4823	Convert.ToBase64String
4824	List<GeoCoordinate> mycoord = new List<GeoCoordinate>();\nmycoord.add(MyGeoPosition);
4825	var whoHasPager = from teamMember in data.Elements("Employee")\n                  where teamMember.Elements("Phone").Any(x => x.Attribute("Type").Value == "Pager")\n                  select teamMember;
4826	string s = "MOT1-G-PRT45-100";\nint index = ... // position to insert\nstring res = s.Insert(index, c + separator);
4827	;WITH a AS (\n    SELECT  *,\n            ROW_NUMBER() OVER (PARTITION BY email ORDER BY Id) RowNum\n    FROM    UserBase\n)\n-- deleted rows will be:\nSELECT  *\n--DELETE \nFROM    a\nWHERE   a.RowNum <> 1
4828	var currentPage = ((PhoneApplicationFrame)Application.Current.RootVisual).Content as PhoneApplicationPage;\n        for (int i = 0; i < VisualTreeHelper.GetChildrenCount(currentPage); i++)\n        {\n            DependencyObject child = VisualTreeHelper.GetChild(currentPage, i);\n\n            if (child is System.Windows.Controls.Control)\n            {\n                // do work\n            }\n            else if (child is System.Windows.FrameworkElement)\n            {\n                // do work\n            }\n            if (VisualTreeHelper.GetChildrenCount(child) > 0)\n            {\n                enumChildren(child); // recur. enumerate children\n            }\n        }
4829	int n;\nbool isNumeric = int.TryParse("123", out n);
4830	Request.QueryString
4831	connection.Open();\n        DataTable schemaTable = connection.GetOleDbSchemaTable(\n            OleDbSchemaGuid.Tables,\n            new object[] { null, null, null, "TABLE" });\n foreach (DataRow row in schemaTable.Rows )\n  {\n     Console.WriteLine(row["TABLE_NAME"]);\n   }
4832	dt = dt.AddMilliseconds(-dt.Millisecond);
4833	string DiagnosesString  =  "250.00 03 350.0001 450.00 01 550.00 02";\n\n       string DiagnosisCodestemp = DiagnosesString.Replace(" 01 ", " ").Replace(" 02 ", " ").Replace(" 03 ", " ").Replace(" 04 ", " ").Replace(" 05 ", " ").Replace(" 06 ", " ").Replace(" 07 ", " ");\n\n        string[] DiagnosisCodesParts = DiagnosisCodestemp.Split();\n\n        foreach (var item in DiagnosisCodesParts)\n\n        {\n\n            string[] parts = item.Split('.');\n            string num = parts[1];\n            string finalValue = string.Empty;\n\n            if (num.Length > 2)\n            {\n                num = num.Replace(num, "00");\n                finalValue =  parts[0]+"."+num;\n            }\n            else\n            {\n                finalValue = parts[0] + "." + num;\n            }\n\n            list.Add(finalValue);\n        }
4834	![private void FrmWeb_Btn_Click(object sender, EventArgs e)\n        {\n\n\n            PictureBox PB = new PictureBox();\n\n            PB.ImageLocation =  "https://si0.twimg.com/profile_images/378800000038434114/f676cbea6f8500c9c15529e1d5e548c1_reasonably_small.jpeg";\n            PB.Size = new Size(100, 100);\n            Controls.Add(PB);\n\n            PB.Click +=new EventHandler(PB_Click); \n\n\n        }\n\n        protected void PB_Click(object sender, EventArgs e)\n        {\n\n            webBrowser1.Navigate("http://twit.tv/");\n\n        }][2]
4835	LogManager.Configuration = LogManager.Configuration.Reload();
4836	new Image[] { /* stuff in collection */ }
4837	string path = Server.MapPath("images/dashboard/myvacstatus-am.png")
4838	public bool IsChinese(string text)\n{\n    return text.Any(c => c >= 0x20000 && c <= 0xFA2D);\n}
4839	JArray jArray = JArray.Parse(jsonStr);\n\nbool isDefault;\nstring defaultValue;\nforeach (JObject jObject in jArray.Children<JObject>())\n{\n    isDefault = false;\n\n    // check if current jObject contains a property named "selected"\n    // and if the value is true\n    JProperty p = jObject.Properties().SingleOrDefault(x => x.Name == "selected");\n    if (p != null && (bool)p.Value == true)\n    {\n        isDefault = true;\n    }\n\n    foreach (JProperty jProperty in jObject.Properties())\n    {\n        string name = jProperty.Name.Trim();\n        string value = jProperty.Value.ToString().Trim();\n\n        if (name != "selected")\n        {\n            drpValues.Items.Add(new RadComboBoxItem(name, value));\n            if (isDefault)\n            {\n                defaultValue = value;\n            }\n        }\n    }\n}\n\n// set the dropdown selected item\nRadComboBoxItem itemToSelect = drpValues.FindItemByValue(defaultValue);\nitemToSelect.Selected = true;
4840	using umbraco.businesslogic;\nusing umbraco.interfaces;\n\n[Application("myApp", "My App", "myapp.gif")]\npublic class Class1 : IApplication \n{\n    public Class1()\n    {\n        //\n        // TODO: Add constructor logic here\n        //\n    }\n}
4841	protected void Calendar1_DayRender(object sender, DayRenderEventArgs e)\n{\n    // Disable the date being rendered if it is not in the DB-returned dates (as\n    // List<DateTime> _databaseDates).\n    if (!_databaseDates.Contains(e.Day.Date))\n    {\n        e.Day.IsSelectable = false;\n        e.Cell.ForeColor = Color.Gray; // or e.Cell.Font.Strikeout = true;\n    }\n}
4842	public List<Employees> GetEmployees()\n{\n    ..\n    List<Employees> emps = new List<Employees>();\n    Employees emp = null;\n\n    while (..)\n    {\n        emp = new Employees();\n        ..\n        emps.Add(emp);\n    }\n\n    return emps;\n}
4843	var orderLines = xDoc\n   .Element(nsp + "UniversalInterchange")\n   .Element(nsp + "Body")\n   .Element(nsp + "UniversalShipment")\n   .Element(nsp + "Shipment")\n   .Element(nsp + "Order")\n   .Element(nsp + "OrderLineCollection")\n   .Elements(nsp + "OrderLine");\n\n// 1, 2\nvar lineNumbers = orderLines.Select(x => x.Element(nsp + "LineNumber").Value);
4844	var myObservableList = new ObservableCollection<MyModelType>(myModel.NiceList);
4845	DirectoryInfo d = new DirectoryInfo(@"c:\");\nDirectoryInfo[] dInfo = d.GetDirectories()\n                          .Where(di => !di.Attributes.HasFlag(FileAttributes.System))\n                          .Where(di => !di.Attributes.HasFlag(FileAttributes.Hidden))\n                          .ToArray();
4846	public class BlogEntyTreeItem\n{\n   public string Text { set; get; }\n   public string URL { set; get; }\n   public List<BlogEntyTreeItem> Children { set; get; }\n\n   public List<BlogEntyTreeItem> GetTree()\n   {\n       NWDataContext db = new NWDataContext();\n       var p = db.Posts.ToList();\n\n       var list = p.GroupBy(g => g.DateCreated.Year).Select(g => new BlogEntyTreeItem\n       {\n           Text = g.Key.ToString(),\n           Children = g.GroupBy(g1 => g1.DateCreated.ToString("MMMM")).Select(g1 => new BlogEntyTreeItem\n           {\n               Text = g1.Key,\n               Children = g1.Select(i => new BlogEntyTreeItem { Text = i.Name }).ToList()\n           }).ToList()\n       }).ToList();\n\n       return list;        \n   }\n}
4847	if (tree.Nodes.Contains(theNode))\n        {\n            TreeNodeCollection childNodes = theNode.Nodes;\n            tree.Nodes.Remove(theNode);\n            foreach (TreeNode child in childNodes)\n            {\n                tree.Nodes.Add(child);\n            }\n        }
4848	SHOW INDEX
4849	driver.FindElement(By.CssSelector(".dummy"))
4850	string result = string.Join(";", fooList.Where(x=>x.property == "bar").Select(x=>x.title));
4851	txtRichTextBox.Select(yourText.IndexOf("portion"), "portion".Length);\ntxtRichTextBox.SelectionColor = YourColor;\ntxtRichTextBox.SelectionFont = new Font("Times New Roman",FontStyle.Bold);
4852	foreach (XElement element in xmlDocument.Elements())\n{\n    if (textBox3.Text.ToString() == element.Element("NAAM").Value)\n    {\n        PDFLocation = element.Element("NAAM").Value;\n        pictureBox1.Image = pdfhandler.GetPDFthumbNail(PDFLocation);\n        textBox4.Text =\n                        element.Element("Title").Value + "\r\n" +\n                        element.Element("Brand").Value + "\r\n" +\n                        element.Element("Type").Value + "\r\n"\n                        // access rest of properties...\n    }\n}
4853	strList[2] = "Pear";
4854	String.Intersect
4855	YourDataSource.YourTableDataTable anything= new YourDataSource.YourTableDataTable();\n\n    yourdataadapter.fill(anything,parametervalue.tostring());\n     DataGridView1.datasource= anything;
4856	List<double> nums = new List<double>();\n\n        for (int i = 0; i < grvData.Rows.Count; i++)\n        {\n            if (grvData.Rows[i].Cells[23].Text == "OPEN" && grvData.Rows[i].Cells[28].Text == "NO")\n            {\n                nums.Add(Convert.ToDouble(grvData.Rows[i].Cells[18].Text));\n            }\n        }\n\n        nums = nums.OrderByDescending(n => n).ToList();\n\n        NONSPR4.Text = nums[0].ToString();\n        NONSPR8.Text = nums[1].ToString();\n        NONSPR12.Text = nums[2].ToString();\n        NONSPR16.Text = nums[3].ToString();\n        NONSPR20.Text = nums[4].ToString();\n        NONSPR24.Text = nums[5].ToString();\n        NONSPR28.Text = nums[6].ToString();\n        NONSPR32.Text = nums[7].ToString();\n        NONSPR36.Text = nums[8].ToString();\n        NONSPR40.Text = nums[9].ToString();
4857	var elements1=(from e in file1.Element("in_mind").Descendants() select e.Name).ToList();\nvar elements2=(from e in file2.Element("in_mind").Descendants() select e.Name).ToList();\n\nfor(int i=0;i<elements1.Count;i++)\n{\n    if(elements1[i]!=elements2[i])\n    {\n        return false;\n    }\n}\n\nreturn true;
4858	private void SoundClip_MediaEnded(object sender, Windows.UI.Xaml.RoutedEventArgs e) {\n  SoundClip.Stop();\n }
4859	public static void Main()\n{\n    List<List<double>> listOfLists = new List<List<double>>();\n\n    listOfLists.Add(new List<double>() { 1, 2, 3 });\n    listOfLists.Add(new List<double>() { 4, 6 });\n\n    int flatLength = 0;\n    foreach (List<double> list in listOfLists)\n        flatLength += list.Count;\n\n    double[] flattened = new double[flatLength];\n\n    int iFlat = 0;\n\n    foreach (List<double> list in listOfLists)\n        foreach (double d in list)\n            flattened[iFlat++] = d;\n\n    foreach (double d in flattened)\n        Console.Write("{0} ", d);\n\n    Console.ReadLine();\n}
4860	string myAppPath = System.Reflection.Assembly.GetEntryAssembly().Location;\nif (File.Exists(Path.Combine(myAppPath, pathToExe)))\n{\n    workDir = Path.GetDirectoryName(Path.Combine(myAppPath, pathToExe));\n}\nelse \n{\n    // Use the referenced article to iterate thru System PATH to find the right path\n}
4861	for (int nI = splitContainerMain.Panel2.Controls.Count - 1; nI >= 0; nI--) \n { \n     splitContainerMain.Panel2.Controls[nI].Dispose();\n }
4862	if (typeof(ISomeInterface).IsAssignableFrom(passedInParameter.GetType()))\n{\n}
4863	for(int i = 0; i < panels.length; i++){\n    AddPanel(panels[i], i);\n}\n\nAddPanel(System.Drawing.Point point, int tabIndex){\n    Panel panel = new Panel();\n    this.Add(panel);\n    panel.Controls.Add(new Button());\n    panel.Controls.Add(new Label("Image"));\n    panel.Controls.Add(new Label("Name"));\n    panel.Controls.Add(new Label("linkName"));\n    panel.Controls.Add(new Label("linkLocation"));\n    panel.Controls.Add(new Label("location"));\n    panel.Location = point;\n    panel.Name = "panel" + i.ToString();\n    panel.Size = new System.Drawing.Size(506, 100);\n    panel.TabIndex = tabIndex;\n}
4864	var query  = dbContext.Users\n                 .GroupBy(u => u.Department)\n                 .Select(g => g.OrderByDescending(u => u.AddedOn).First());
4865	[XmlSerializerFormat]
4866	private string genNextId()\n{\n    var id = (from a in dc.nasabahs\n              select a.nomor_nasabah).Max();\n\n    return id.ToString();\n}
4867	ds.Tables[0].Columns.Add("AverageCostText", typeof(String));\nforeach (DataRow row in ds.Tables[0].Rows)\n{\n     row["AverageCostText"] = (row["AverageCost"] == DBNull.Value) ? string.Empty : string.Format("{0}", row["AverageCost"]);\n}
4868	((ChangeDateToFontWeightConverter)this.Resources["ChangeDateToFontWeightConverter"]).MyCustomProperty = myCacheObject;
4869	var timer = new DispatcherTimer();\ntimer.Interval = TimeSpan.FromSeconds(1);\ntimer.Tick += OnTimerTick;\n\n...\nprivate void OnTimerTick(object sender, object e)\n{\n    // do somthing\n}
4870	private bool updatingTreeView;\n\nprivate void treeView1_AfterCheck(object sender, TreeViewEventArgs e)\n{\n    if (updatingTreeView) return;\n    updatingTreeView = true;\n    CheckChildren_ParentSelected(e.Node, e.Node.Checked);\n    SelectParents(e.Node, e.Node.Checked);\n    updatingTreeView = false;\n}
4871	sort(listOfFoos, o => ((Foo) o).name());
4872	void OrderSummaryDetails_MouseMove(object sender, MouseEventArgs e)\n{\n      Control control = GetChildAtPoint(e.Location);\n      if (control != null)\n      {\n          string toolTipString = mFormTips.GetToolTip(control);\n          this.mFormTips.ShowAlways = true;\n          // trigger the tooltip with no delay and some basic positioning just to give you an idea\n          mFormTips.Show(toolTipString, control, control.Width / 2, control.Height / 2);\n      }\n}
4873	Button btn = new Button();\n        this.Controls.Add(btn);\n        btn.Click += (o, x) =>\n        {\n            Button b = o as Button;\n            FieldInfo eventclick = typeof(Control).GetField("EventClick", BindingFlags.Static | BindingFlags.NonPublic);\n            object eventValue = eventclick.GetValue(b);\n            PropertyInfo events = b.GetType().GetProperty("Events", BindingFlags.NonPublic | BindingFlags.Instance);\n            EventHandlerList eventHandlerList = (EventHandlerList)events.GetValue(b, null);\n            eventHandlerList .RemoveHandler(eventValue, eventHandlerList [eventValue]);\n            MessageBox.Show("Test");\n        };
4874	int start = -1;\nint index = str.IndexOf(search);\nwhile (index != -1)\n{\n    print str.Substring(index-100, index+100);\n    index = str.IndexOf(search, index);\n}
4875	ServiceReference1.imail_apiSoapClient soapClient = \nnew ServiceReference1.imail_apiSoapClient("imail_apiSoap");
4876	Byte[] array = new Byte[64];\n\nArray.Clear(array, 0, array.Length);
4877	Interlocked.Exchange
4878	internal static bool GetIsCompatibleIEVersionInstalled(int minimumRequiredVersion)\n{\n    var compatibleIEVersionInstalled = false;\n\n    var key = Registry.LocalMachine.OpenSubKey(@"SOFTWARE\Microsoft\Internet Explorer");\n\n    var fullVersion = (string)key.GetValue("Version");\n\n    int majorVersion;\n\n    if (int.TryParse(fullVersion.Split('.').First(), out majorVersion))\n    {\n        compatibleIEVersionInstalled = majorVersion >= minimumRequiredVersion;\n    }\n\n    return compatibleIEVersionInstalled;\n}
4879	class Program\n{\n    static void Main(string[] args)\n    {\n        using (var context = new PrincipalContext(ContextType.Domain))\n        using (var user = UserPrincipal.Current)\n        using (var userGroups = user.GetGroups())\n        {\n            PrintGroups(userGroups, 0);\n        }\n        Console.ReadLine();\n    }\n\n    static void PrintGroups(PrincipalSearchResult<Principal> groups, int level)\n    {\n        foreach (var group in groups)\n        {\n            Console.Write(new string('-', level * 3));\n            Console.WriteLine(group.Name);\n            using (var groupGroups = group.GetGroups())\n            {\n                PrintGroups(groupGroups, level + 1);\n            }\n        }\n    }\n}
4880	dataGridView1.DataSource = null;\n        dataGridView1.Columns.Clear();\n        dtCompanyInfo = GetCompanyInfo();\n        if (dtCompanyInfo.Rows.Count > 0)\n        {\n            dataGridView1.DataSource = dtCompanyInfo;\n            DataGridViewCheckBoxColumn checkColumn = new DataGridViewCheckBoxColumn();\n            checkColumn.Name = "";\n            checkColumn.HeaderText = "Select";\n            checkColumn.Width = 50;\n            checkColumn.ReadOnly = false;\n            checkColumn.FillWeight = 10; //if the datagridview is resized (on form resize) the checkbox won't take up too much; value is relative to the other columns' fill values\\\n            dataGridView1.Columns.Add(checkColumn);\n\n        }\n\n    }
4881	void textBox1_Validating(object sender, CancelEventArgs e)\n    {\n        DateTime dateEntered;\n\n        if (DateTime.TryParseExact(textBox1.Text, "HH:mm", System.Globalization.CultureInfo.CurrentCulture, System.Globalization.DateTimeStyles.None, out dateEntered))\n        {\n            MessageBox.Show(dateEntered.ToString());\n        }\n        else\n        {\n            MessageBox.Show("You need to enter valid 24hr time");\n        }\n\n    }
4882	------ Returns a list from the dictionary\n         |  --- Returns an item from the list\n         |  |\n         v  v\nfileList[0][0] // First item in the first list\nfileList[1][0] // First item in the second list\nfileList[1][1] // Second item in the second list\n// etc.
4883	var stackSize = 10000000;\nvar thread = new Thread(new ThreadStart(StartDetection), stackSize);
4884	public List<String> m_Distances = new List<String>();\npublic List<String> Distances\n{\n    get\n    {\n        return m_Distances;\n    }\n}\n\nlistPickerDistance.ItemsSource = Distances;\n\n<toolkit:ListPicker x:Name="listPickerDistance">\n\n</toolkit:ListPicker>
4885	public class Configuration: IConfiguration\n{\n    public User\n    {\n        get{ \n               return ConfigurationManager.AppSetting["User"];\n       }\n    }\n}
4886	for (int i = 0; i < columns; i++)\n{\n    double[] column = Enumerable.Range(0, rows)\n        .Select(row => values[row, i]).ToArray();\n    doubleList.Add(column);\n}
4887	var string="function sum(){return 'sum'}";\neval(string);
4888	var source = new BindingSource { DataSouce = query1.Concat(query2)\n                                                   .Concat(query3) };\ndataGridView1.DataSource = source;
4889	private void EnDis(object sender, RoutedEventArgs e)\n{\n    var button = (Button)sender;\n    if(button.Name == "btnEnable_1")\n    {\n        chk_1.IsChecked = true;\n        chk_2.IsChecked = true;\n        chk_3.IsChecked = true;\n        chk_4.IsChecked = true;\n    }\n        if(button.Name == "btnDisable_1")\n    {\n        chk_1.IsChecked = false;\n        chk_2.IsChecked = false;\n        chk_3.IsChecked = false;\n        chk_4.IsChecked = false;\n    }\n\n    if(button.Name == "btnEnable_2")\n    {\n        chk_5.IsChecked = true;\n        chk_6.IsChecked = true;\n        chk_7.IsChecked = true;\n        chk_8.IsChecked = true;\n    }\n\n}
4890	[DataContract] \npublic class mainresponse\n {\n [DataMember]\n public resultmap arrayelement { get; set; }\n }  \n [DataContract]\n public class resultmap \n{\n [DataMember] \n public string substringhere { get; set; } \n }     \n var djson = new DataContractJsonSerializer(typeof(Mainresponse));\n var stream = new MemoryStream(Encoding.UTF8.GetBytes(responsestring));\n mainresponse result = (mainresponse)djson.ReadObject(stream);
4891	if (day > 30)\n{\n    if (MessageBox.Show("Trial expired. Visit site to purchase license?",\n        "Trial Expired!", MessageBoxButtons.YesNo) == DialogResult.Yes)\n    {\n        Process.Start("http://www.yourwebsite.com");\n    }\n\n    Environment.Exit(0);\n}
4892	class Program {\n    [STAThread]\n    public static void Main() {\n        var app = new Application();\n        app.Run(new MainWindow());\n    }\n}
4893	// Provide the ProjectInstaller class which allows \n// the service to be installed by the Installutil.exe tool\n[RunInstaller(true)]\npublic class ProjectInstaller : Installer\n{\n    private ServiceProcessInstaller process;\n    private ServiceInstaller service;\n\n    public ProjectInstaller()\n    {\n        process = new ServiceProcessInstaller();\n        process.Account = ServiceAccount.LocalSystem;\n        service = new ServiceInstaller();\n        service.ServiceName = "WCFWindowsServiceSample";\n        Installers.Add(process);\n        Installers.Add(service);\n    }\n}
4894	string res = null;\nMatch m = Regex.Match(input, @"^=\[(.+)\].+$");\n\nif (m.Success)\n{\n    res = m.Groups[1].Value;\n}
4895	void GridView1_RowDeleting(object sender, GridViewDeleteEventArgs e)\n{\n  string name = e.Values["IntranetUserName"] as string;\n}
4896	public virtual Allocation Allocation { get; set; }
4897	// T[] source\n// int dest\n// int start, end\nT[] slice = new T[end - start];\nArray.Copy(source, start, slice, 0, slice.Length);\n\nif (dest < start)\n{\n    // push towards end\n    Array.Copy(source, dest, source, dest + slice.Length, start - dest);\n}\nelse\n{\n    // push towards start\n    // who moves where? Assumes dest..dest+count goes left\n    Array.Copy(source, end, source, dest, dest - start);\n}\n\nArray.Copy(slice, 0, source, dest, slice.Length);
4898	case when st.Name in ('varchar','varchar','char','nchar')
4899	var objGrid= document.getElementById('<%=YourGrid.ClientID%>');\nvar cells = objGrid.getElementsByClassName('footerClass') \n\ncells[0].innerText = ClsSum;\ncells[1].innerText = NonSaleSum;\ncells[2].innerText = SecSum;
4900	public class MyCanvas : Canvas\n{\n    public event EventHandler ChildDesiredSizeChanged;\n    protected override void OnChildDesiredSizeChanged(UIElement child)\n    {\n        if (ChildDesiredSizeChanged != null) ChildDesiredSizeChanged(child, EventArgs.Empty);\n        base.OnChildDesiredSizeChanged(child);\n    }\n}
4901	Freeze()
4902	private void btnColour_Click(object sender, EventArgs e)\n{\n    ColorDialog clrDialog = new ColorDialog();\n\n    //show the colour dialog and check that user clicked ok\n    if (clrDialog.ShowDialog() == DialogResult.OK)\n    {\n        //save the colour that the user chose\n        c = clrDialog.Color;\n    }\n}\n\nColor c = Color.Black;
4903	JObject json = JObject.Parse(JasonText);\n   var  type=   json["type"];
4904	smsComposeTask.Body = title.Text + "," + description.Text + "," + datee.Text;
4905	myTable.DefaultView.Sort = "myColumn DESC";
4906	public abstract class Person\n{\n    public string FirstName { get; set; }\n    public string Surname { get; set; }\n}\n\npublic partial class Teacher : Person\n{   \n    public string School { get; set; }\n}\n\npublic partial class Student : Person\n{\n    public string YearLevel { get; set; }\n}\n\npublic partial class Parent : Person\n{\n    public string Blagh { get; set; }\n}
4907	List<MeterPrevReadInfo> list = ...;\n\n var result = from item in list\n              from info in item.Regs\n              select new {item.DateMeterRead, info.MeterRead};
4908	foreach (var item in data)\n  {\n      var post = (IDictionary<string, object>)item;\n\n      if (post["id"].ToString() == latestPostId)\n      {\n           end = true;\n           break;                               \n      }\n\n      //App logic continues...\n\n  }
4909	private bool _preventMove = false;\n\nprotected override void WndProc(ref Message message)\n{\n    const int WM_SYSCOMMAND = 0??0112;\n    const int SC_MOVE = 0xF010;\n\n    if(_preventMove) \n    {\n        switch(message.Msg)\n        {\n            case WM_SYSCOMMAND:\n               int command = message.WParam.ToInt32() & 0xfff0;\n               if (command == SC_MOVE)\n                  return;\n               break;\n        }\n    }\n\n    base.WndProc(ref message);\n}
4910	public class WSField : Attribute {\n  // ...\n  internal string xmlField;\n  public WSField(string tableField, string xmlField = null) {\n\n...\n\npublic class FieldDefinition {\n  public FieldDefinition(FieldInfo fieldInfo) {\n    // ...\n    if (this.wsField.xmlField == null) this.wsField.xmlField = fieldInfo.Name;\n  }\n\n...
4911	EditingCommands.AlignLeft
4912	ex: _connectionString = @"Data Source =.......";
4913	MobileDevice.AMDeviceStartHouseArrestService(iPhoneHandle,      \nMobileDevice.CFStringMakeConstantString(bundleIdentifier), null, ref hService, 0);
4914	public static List<string> PermuteWords(string s)\n    {\n        string[] ss = s.Split(new string[] {" "}, StringSplitOptions.RemoveEmptyEntries);\n        bool[] used = new bool[ss.Length];\n        string res = "";\n        List<string> list = new List<string>();\n        permute(ss, used, res, 0, list);\n        return list;\n    }\n\n    private static void permute(string[] ss, bool[] used, string res, int level, List<string> list)\n    {\n        if (level == ss.Length && res != "")\n        {\n            list.Add(res);\n            return;\n        }\n        for (int i = 0; i < ss.Length; i++)\n        {\n            if (used[i]) continue;\n            used[i] = true;\n            permute(ss, used, res + " " + ss[i], level + 1, list);\n            used[i] = false;\n        }\n    }
4915	var index = 0;\nforeach (object itemChecked in RolesCheckedListBox.CheckedItems)\n{\n    if ( index>0 ) sw.Write( "," );\n    sw.Write(itemChecked.ToString());\n    index++;\n}
4916	//Get size number of characters of the string pointed to by the positionMemory pointer.\nstring result = Marshal.PtrToStringAnsi(new IntPtr(positionMemory), size); \n\n//Copy the contents of objectStruct to the memory location pointed at by positionMemory\nMarshal.StructureToPtr(objectStruct, new IntPtr(positionMemory), true);\n\n//Copy size number of bytes from the byteName array starting at index 0 to the memory indicated by positionMemory\nMarshal.Copy(byteName, 0, new IntPtr(positionMemory), size);\n\n//I think offsetting the memory location indicated by allocatedObject by size number of bytes and converting the memory pointer to an Int64.\nmachineNamePosInMem = allocatedObject.Offset(size).ToInt64();
4917	List<DataGridViewRow> selectedRows = new List<DataGridViewRow>();\n\nvoid selectRows()\n{\n    dataGridView1.SuspendLayout();\n    foreach (DataGridViewRow r in dataGridView1.Rows) \n             r.Selected = selectedRows.Contains(r);\n    dataGridView1.ResumeLayout();\n}\n\nprivate void dataGridView1_MouseClick(object sender, MouseEventArgs e)\n{\n    DataGridViewRow clickedRow = dataGridView1.CurrentRow;\n\n    if (selectedRows.Contains(clickedRow))\n        selectedRows.Remove(clickedRow);\n    else\n        selectedRows.Add(clickedRow);\n\n    selectRows();\n}
4918	int chunkSize = 524288;  // 512kb\nint fileByteCount = GetFileSizeInBytes();\nint packetCount = (fileByteCount + chunkSize - 1) / chunkSize;
4919	from Country a \nwhere (\n  select PropertyValue \n  from LocalizedProperty x \n  where x.Entity.id = a.Id \n    and x.PropertyName = 'Name' \n    and x.Entity.class = 'Prayon.Entities.Country' \n    and x.CultureName = 'de' take 1) \n  Like :val
4920	protected override bool ProcessDialogKey(Keys keyData)\n        {\n            int selectionIndex = pBoundsCollection.IndexOf(pSelection);\n            if (keyData == Keys.Tab)\n            {\n                while (selectionIndex++ <= pBoundsCollection.Count)\n                {\n                    if (selectionIndex >= pBoundsCollection.Count)\n                    {\n                        selectionIndex = 0;\n                        pSelection = (CMRField)pBoundsCollection[selectionIndex];\n                        Refresh();\n                        break;\n                    }\n                    if (((CMRField)pBoundsCollection[selectionIndex]).IsSelectable)\n                    {\n                        pSelection = (CMRField)pBoundsCollection[selectionIndex];\n                        Refresh();\n                        return false;\n                    }\n                }\n            }\n            return base.ProcessDialogKey(keyData);\n        }
4921	function parseDate(date){\n    var year = parseInt(date.substring(0,4));\n    var month = parseInt(date.substring(5,7));\n    var day = parseInt(date.substring(8,10));\n    var hour = parseInt(date.substring(11,13));\n    var minute = parseInt(date.substring(14,16));\n    var second = parseInt(date.substring(17,19));\n    return new Date(year, month, day, hour, minute, second);\n}\n\nfor(i = 0; i < points.length; i++){\n    var date = Date.parse(points[i].EarnedOn);\n    ...
4922	using (SqlConnection con = new SqlConnection(connectionString))\n{\n\n    con.Open();\n\n    SqlCommand cmd = new SqlCommand("SELECT userid,username,email,city FROM USERS where username=@username and password=@password", con);\n    cmd.Paramters.AddWithValue("@username", username);\n    cmd.Parameters.AddWithValue("@password", password);\n    cmd.CommandType = CommandType.Text;\n\n    UserInfo info = new UserInfo();\n\n    using (SqlDataReader rdr = cmd.ExecuteReader())\n    {\n\n        if (rdr.HasRows)\n        {\n            rdr.Read(); // get the first row\n\n            info.UserID = rdr.GetInt32(0);\n            info.UserName = rdr.GetString(1);\n            info.Email = rdr.GetString(2);\n            info.City = rdr.GetString(3);\n        }\n    }\n}
4923	company_reader2 = search_company2.ExecuteReader();\nif (company_reader2 != null && company_reader2.HasRows) {\n    company_reader2.Read();\n    dateform.Text = company_reader2[0].ToString();\n}
4924	myPort.DataReceived += myPort_DataReceived;
4925	namespace TheNamespace\n{\n\n  public partial class TheEntity\n  {\n      public DateTime DateAdded \n      {\n         get {  }\n         set {  }\n      }\n  }\n}
4926	request.Headers.Add("UserID", userID);            \n               request.Headers.Add("Password", password);
4927	if (sheet.get_FilterMode()) {\n    sheet.ShowAllData();\n}
4928	public class C\n{\n    private readonly object _parent;\n    public C(object parent)\n    {\n        _parent;\n    }\n\n    public void Do()\n    {\n        Type type = _parent != null ? _parent.GetType() : null;\n        // Do something with type...\n    }\n}
4929	System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable()
4930	protected void gridView_RowUpdating(object sender, GridViewUpdateEventArgs e)\n{\n    GridViewRow row = gridView.Rows[e.RowIndex];\n    FileUpload fileUpload = row.Cells[0].FindControl("fileUpload1") as FileUpload;\n    if (fileUpload != null && fileUpload.HasFile)\n    {\n        fileUpload.SaveAs(Server.MapPath("images/hardware/" + fileUpload.FileName));\n    }\n}
4931	List<Column> ListOfColumns { get; set;}
4932	Regex reg = new Regex("^[A-Za-z]+$");\n        do\n        {\n            DisplayDivider("Get Name");\n            strInput = GetInput("your Name");\n            isValid = reg.IsMatch(strInput);\n            if (!isValid)\n            {\n                isValid = false;\n                Console.WriteLine("'" + strInput + "' is not a valid name entry. Please retry...");\n            }\n        } while (!isValid);
4933	public FileResult GetFile()\n{\n    byte[] filebytes;\n\n    //load file data however you please\n    return File(filebytes, "application/pdf");\n}
4934	Decimal.Parse("Infinity", System.Globalization.CultureInfo.InvariantCulture);
4935	private void lblMove_KeyUp(object server, KeyEventArgs e)\n    {\n          Point location = button1.Location;\n          switch(e.KeyCode)\n          {\n            case Keys.Up: \n                location.Y = location.Y -1;\n                break;\n            case Keys.Down:\n                location.Y = location.Y + 1;\n                break;\n            case Keys.Right:\n                location.X = location.X + 1;\n                break;\n            case Keys.Left:\n                location.X = location.X - 1;\n                break;\n          }\n\n          button1.Location = location;\n    }
4936	List<Action<Graphics>> actions = new List<Action<Graphics>>();\n\nactions.Add(gr => gr.Drawrectangle(pen, p1, p2));\nactions.Add(gr => gr.FillEllipse(brush, p, x, y));
4937	string username = root.Elements("Username")\n                      .First(el => (string)el.Attribute("type") == type)\n                      .Element("Login")\n                      .Value;
4938	Bitmap.GetPixel()
4939	public class MyListener : Java.Lang.Object, ExpandableListView.IOnChildClickListener\n{\n    public override bool OnChildClick (ExpandableListView parent, View v, int groupPosition, int childPosition, long id)\n    {\n        return base.OnChildClick (parent, v, groupPosition, childPosition, id);\n    }\n}
4940	Register-EngineEvent PowerShell.Exiting -Action { "Exiting $(Get-Date)" >> C:\TEMP\log.txt }
4941	public Bitmap GrayScale(Bitmap Bmp)\n{\n    int rgb;\n    Color c;\n\n    for (int y = 0; y < Bmp.Height; y++)\n    for (int x = 0; x < Bmp.Width; x++)\n    {\n        c = Bmp.GetPixel(x, y);\n        rgb = (int)((c.R + c.G + c.B) / 3);\n        Bmp.SetPixel(x, y, Color.FromArgb(rgb, rgb, rgb));\n    }\n    return Bmp;\n}
4942	var num = 166.7;\nvar numString = (num * 100).ToString("000000000000");
4943	private void backgroundWorker1_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e) {\n        if (e.Error != null) MessageBox.Show(e.Error.ToString());\n    }
4944	private void btnSubmit_Click(object sender, EventArgs e)\n{\n    DisplayCustomMessageBox("Please Wait");\n\n    Thread t = new Thread(()=>\n    {\n        ProcessRequest();\n        this.BeginInvoke(new Eventhandler((s,ee)=>{\n            HideCustomMessageBox();\n        }));\n    });\n    t.Start();\n}
4945	var props = typeof(Foo)\n            .GetProperties(BindingFlags.Public | BindingFlags.Instance);\n\nforeach (PropertyInfo p in props)\n{\n     // p.Name gives name of property\n}
4946	e.Graphics.DrawString(dataToPrint, valueFont, \n        System.Drawing.Brushes.Black, 200, 20, format);
4947	List<string> strList = new List<string>{ "foo", "bar" };\n\nList<Person> people = new List<Person>{\n                                new Person { Name = "Pete", Age = 12},\n                                new Person { Name = "Jim", Age = 15}\n                      };
4948	Process.Start("Yourfile.txt")
4949	String Residence = xmlDoc.Descendants("Appointment").Single().Element("StateOfResidence");\nif(Residence == "NULL")\n{\n    Residence = null;\n}
4950	y = (myNumber - 1) / 6 + 1;\nx = (myNumber - 1) % 6 + 1;
4951	public ActionResult Edit(int id)\n{\n    // Get the currently logged in user.\n    string userName = User.Identity.Name;\n    var user = db.Users.First(u => u.UserName == userName);\n\n    // Determine whether the requested id is the same id as the currently logged in user.\n    icerik icerik = db.icerik.Find(id);\n    if (icerik.Userid.HasValue && icerik.Userid.Value == user.UserId)\n    {       \n        ViewBag.Kategorid = new SelectList(db.Kategoriler, "Id", "Adi", icerik.Kategorid);\n\n        // You should not need this SelectList anymore.\n        //ViewBag.Userid = new SelectList(db.Users, "UserId", "UserName", icerik.Userid);\n        return View(icerik);\n    }\n    // This redirect the unauthorized user to the homepage. This can be any other page of course.\n    return RedirectToAction("Index", "Home"); \n}
4952	proteted void login_Authenticate(object sender, AuthenticateEventArgse){\n   AuthenticationServiceClient client = new AuthenticationServiceClient();\n   e.Authenticated = client.Login(login.UserName, login.Password, "", true);\n}
4953	protected void btnDownloadList_Click(object sender, EventArgs e)\n{\n    ExcelExport = "<table><tr><td>Name</td><td>Surname</td><td>Telephone</td><td>E-mail</td></tr><tr><td> </td><td> </td><td> </td><td> </td></tr>" + StringExport + "</table>";\n\n    Response.AddHeader("Content-disposition", "attachment; filename=raport.xls");\n    Response.ContentType = "application/ms-excel";\n    byte[] BOM = { 0xEF, 0xBB, 0xBF }; // The BOM for UTF-8 encoding.\n    Response.BinaryWrite(BOM);\n    Response.Write(ExcelExport);\n    Response.End();\n\n}
4954	System.Web.HttpUtility.UrlDecode
4955	string sqlFormattedDate = myDateTime.ToString("yyyy-MM-dd HH:mm:ss");
4956	var gridView = listView.View as GridView;\ngridView.Columns[0].Header = "MyCustomHeader"; //setting header to the first column
4957	using System;\nusing Microsoft.VisualBasic.FileIO;\n\nclass Program\n{\n    static void Main()\n    {\n    using (TextFieldParser parser = new TextFieldParser("C:\\csv.txt"))\n    {\n        parser.Delimiters = new string[] { "," };\n        while (true)\n        {\n        string[] parts = parser.ReadFields();\n        if (parts == null)\n        {\n            break;\n        }\n        Console.WriteLine("{0} field(s)", parts.Length);\n        }\n    }\n    }\n}
4958	using MySql.Data.MysqlClient;\n\nnamespace OwnNameSpace\n{\n  public class Database\n  {\n    MySqlConnection connect;\n    string connection = "Data Source=localhost;Database=ASP;User ID=(your ID)";\n//constructor\npublic Database()\n{\n}\n\n  // this if want to select something in your db\n  public MySqlDataReader Select(string query)\n  {\n\n      connect = new MySqlConnection(connection);\n      connect.Close();\n      MySqlCommand command = connect.CreateCommand();\n      command.CommandText = query;\n      connect.Open();\n      MySqlDataReader reader;\n      return reader = command.ExecuteReader();\n  }\n\n  // this if want to insert/delete or update \n  public Boolean Modify(string query)\n  {\n\n      connect = new MySqlConnection(connection);\n      MySqlCommand command = connect.CreateCommand();\n      command.CommandText = query;\n      connect.Open();\n      try\n      {\n         command.ExecuteNonQuery();\n         return true;\n      }\n      catch\n      {\n        return false;\n      }\n\n   }\n\n\n\n }\n}
4959	employees.Except(employees.Join(managers, e => e.Id, m => m.EmployeeId, (e, m) => e));
4960	public class DecoratorProxy<T> : RealProxy\n{\n    private T m_instance;\n\n    public static T CreateDecorator<T>(T instance)\n    {\n        var proxy = new DecoratorProxy<T>(instance);\n        (T)proxy.GetTransparentProxy();\n    }\n\n    private DecoratorProxy(T instance) : base(typeof(T))\n    {\n        m_instance = instance;\n\n    }\n    public override IMessage Invoke(IMessage msg)\n    {\n        IMethodCallMessage methodMessage = msg as IMethodCallMessage;\n        if (methodMessage != null)\n        {\n            // log method information\n\n            //call method\n            methodMessage.MethodBase.Invoke(m_instance, methodMessage.Args);\n            return new ReturnMessage(retval, etc,etc);\n\n        }\n\n    }\n}
4961	//EditingControlShowing event handler for your dataGridView1\nprivate void dataGridView1_EditingControlShowing(object sender, DataGridViewEditingControlShowingEventArgs e){\n   ComboBox combo = e.Control as ComboBox;\n   if(combo != null) combo.SelectedIndexChanged += GridComboSelectedIndexChanged;\n}\nprivate void GridComboSelectedIndexChanged(object sender, EventArgs e) {\n   ComboBox combo = sender as ComboBox;\n   //Your populating code here\n   //you can access the selected index via combo.SelectedIndex\n   //you can access the current row by dataGridView1.CurrentCell.OwningRow\n   //then you can access to the cell 4 and cell 5 by dataGridView.CurrentCell.OwningRow.Cells[4] and dataGridView.CurrentCell.OwningRow.Cells[5]\n}
4962	var offset = (int)Math.Floor(buffer.WaveFormat.SampleRate * barDuration / 128) * 128 * bar;
4963	public static void Serialize<T>(this IList<T> list, string fileName)  \n{\n   try\n   {\n      var ds = new DataContractSerializer(list.GetType());\n      using (Stream s = File.Create(fileName))\n        ds.WriteObject(s, list);  \n   }\n   catch (Exception e)\n   {\n     _logger.Error(e);\n     throw;\n   } \n}
4964	if (ArrivalDate != DBNull.Value)\n                param[2].Value = Convert.ToDateTime(ArrivalDate);\n            else\n            {\n                param[2].Value = // default value\n            }
4965	return Json(parts, JsonRequestBehavior.AllowGet);
4966	// assuming xA, yA, xB, yB, arrWidth, arrHeight are initialised\nvar xV = xB - xA;\nvar yV = yB - yA;\nvar v = Math.Sqrt(xV*xV + yV*yV);\nvar pArr1 = new[] {\n    xA + xV / 2 - xV * arrHeight / (2 * v) - yV * arrWidth / (2 * v),\n    yA + yV / 2 - yV * arrHeight / (2 * v) + xV * arrWidth / (2 * v) };\nvar pArr2 = new[] {\n    xA + xV / 2 - xV * arrHeight / (2 * v) + yV * arrWidth / (2 * v),\n    yA + yV / 2 - yV * arrHeight / (2 * v) - xV * arrWidth / (2 * v) };\nvar pArr3 = new[] {\n    xA + xV / 2 + xV * arrHeight / (2 * v),\n    yA + yV / 2 + yV * arrHeight / (2 * v) };
4967	public override void OnApplyTemplate()\n{\n  base.OnApplyTemplate();\n\n  dataGrid = GetTemplateChild("dataGrid") as DataGrid;\n  dataGrid.MouseUp += new MouseButtonEventHandler(dataGrid_MouseUp);\n  docGrid = GetTemplateChild("docGrid") as DataGrid;\n  docGrid.MouseUp += new MouseButtonEventHandler(docGrid_MouseUp);\n}\n\npublic void dataGrid_MouseUp(object sender, MouseEventArgs e)\n{\n  docGrid.UnselectAll();\n}\n\npublic void docGrid_MouseUp(object sender, MouseEventArgs e)\n{\n  dataGrid.UnselectAll();\n}
4968	string result = string.Empty;\n\nforeach (var item in jobj)\n{\n    if (!string.IsNullOrEmpty(result))\n    {\n        result += ",";\n    }\n    result += item.Key;\n}\nConsole.WriteLine(result);
4969	DateTime.Now.ToString("hh:mmtt");
4970	public interface ITest\n{\n    void DoSomething();\n}\n\npublic void GetData<T, U>(T varA, int acao) where U: ITest, new()\n{\n    var item = new U();\n    item.DoSomething();\n}
4971	decimal balance = 13m;\nint months = 3;\nint monthsRemaining = 3;\n\nfor (var i = 0; i < months; i++)\n{\n    decimal thisMonth = Math.Round(balance / monthsRemaining, 2);\n\n    balance -= thisMonth;\n    monthsRemaining -= 1;\n\n    Console.WriteLine("Month {0}: {1}", i + 1, thisMonth);\n}
4972	int count = 0;\nusing (var dr = new SqlDataReader(cmd)) {\n   while (dr.Read()) count++;\n}
4973	using (Model m = new Model())\n{\n    var result = from attack in m.Attacks\n                 group attack by attack.Player into attacksForPlayer\n                 select new\n                 {\n                     PlayerName = attacksForPlayer.Key.Name,\n                     NumberOfAttacks = attacksForPlayer.Count(),\n                     NumberOfKills = (from k in m.Kills\n                                      where attacksForPlayer.Contains(k.Attack)\n                                      select k).Count()\n                 };\n\n    // The result can be read like this:\n    foreach (var r in result)\n    {\n        // r.PlayerName, r.NumberOfAttacks, r.NumberOfKills\n    }\n}
4974	int result = 0;\nint final_result = 0;\nfor (String word : words) {\n     if (word == "one") {\n         result = 1;\n     }\n     if (word == "two") {\n         result = 2;\n     }    \n     if (word == "twelve") {\n         result = 12;\n     }    \n     if (word == "thousand") {\n         // Get what we accumulated before and add with thousands\n         final_result = final_result + result * 1000;\n     }    \n}\nfinal_result = final_result + result;
4975	var rangeStart = new DateTime(2012, 1, 1);\nvar rangeEnd = new DateTime(2012, 12, 31);\nvar res = list\n    .Where(item => (item.StartTime < rangeStart ? rangeStart : item.StartTime) < (item.EndTime < rangeEnd ? item.EndTime : rangeEnd) )\n    .ToList();
4976	string patternstart = Regex.Escape("Session[");\nstring patternend = Regex.Escape("]");\nstring regexexpr = patternstart + @"(.*?)" + patternend;
4977	if(new FileInfo(path).Length % 94 == 0)\n{\n   using(var reader = new StreamReader(path))\n   {\n       ...\n   }\n}\nelse \n    throw new ArgumentException("File-length not multiple of 94", "path");
4978	private IEnumerable<PropertyInfo> SelectProperties( Type type )\n    {\n        const BindingFlags bindingFlags = BindingFlags.Instance | \n            BindingFlags.DeclaredOnly\n                                          | BindingFlags.Public;\n\n        return from property\n                   in type.GetProperties( bindingFlags )\n               where property.CanWrite &&\n                     !property.IsDefined(typeof(SuppressNotify))\n               select property;\n    }\n\n    [OnLocationSetValueAdvice, MethodPointcut( "SelectProperties" )]\n    public void OnSetValue( LocationInterceptionArgs args )\n    {\n        if ( args.Value != args.GetCurrentValue() )\n        {\n            args.ProceedSetValue();\n\n           this.OnPropertyChangedMethod.Invoke(null);\n        }\n    }
4979	var result = accounts.OrderBy(x => x.Id)\n              .Select(x => new \n                {\n                   AccountNumber = x.AccountNumber,\n                   Balance = x.Balance,\n                   BillToCompanyName = x.BillToContact.CompanyName,\n                   BillToName = x.BillToContact.Name,\n                   PhoneNumbersCount = x.BillToContact.PhoneNumbers.Count(),  \n                                         //All phone numbers count including null\n                   PhoneNumbersList = x.BillToContact.PhoneNumbers\n                                       .Select(z => z.Number ?? String.Empty).ToList()\n                });
4980	Regex r = new Regex(@"\d+", RegexOptions.None);\n            Console.WriteLine(r.Replace("Test123456.txt", "#"));\n            Console.Read();
4981	using D = System.Diagnostics;\n\n...\n\nprotected void Application_Start()\n{\n   if (D.Trace.Listeners["MyTraceListener"] == null)\n   {\n      D.Trace.Listeners.Add(new MyTraceListener("") { Name = "MyTraceListener" });\n   }\n\n   ...\n\n}
4982	var rnd = new Random();\nvar shuffledList = list.OrderBy(x => rnd.Next()).ToList();
4983	string resourceVal = SPUtility.GetLocalizedString("$Resources:ResourceKey",\n"Comp.Dept.Proj.Farm\\GlobalResources", language);
4984	public static Int32? ParseInt32(this string str) {\n    Int32 k;\n    if(Int32.TryParse(str, out k))\n        return k;\n    return null;\n}
4985	var morseDictonary = new Dictionary<char, string>()\n{\n    { '.', ".-.-.-" },\n    { ',', "--..--" },\n    { ' ', " " },\n    { 'A', ".-" },\n    { 'B', "-..." },\n};\n\nvar example = "A , B .";\n\nvar result = String.Join("", example.Select(x => morseDictonary[x]));
4986	XDocument xDoc = XDocument.Load(@"C:\Data.xml");\n    string amt = xDoc.Descendants("salesTaxAmt")\n                     .Elements("amt")\n                     .Single().Value;
4987	context.Database.ExecuteSqlCommand(TransactionalBehavior.DoNotEnsureTransaction, "VACUUM;");
4988	private void btn1_DropDownItemClicked(object sender, ToolStripItemClickedEventArgs e)\n{\n  MessageBox.Show(e.ClickedItem.Text); // ClickedItem = item clicked.\n}
4989	PageReference listRoot = CurrentPage.PageLink;
4990	public Texture2D AddWatermark(Texture2D background, Texture2D watermark)\n{\n\n    int startX = 0;\n    int startY = background.height - watermark.height;\n\n    for (int x = startX; x < background.width; x++)\n    {\n\n        for (int y = startY; y < background.height; y++)\n        {\n            Color bgColor = background.GetPixel(x, y);\n            Color wmColor = watermark.GetPixel(x - startX, y - startY);\n\n            Color final_color = Color.Lerp(bgColor, wmColor, wmColor.a / 1.0f);\n\n            background.SetPixel(x, y, final_color);\n        }\n    }\n\n    background.Apply();\n    return background;\n}
4991	insert into someTable (id, name)\nvalues newid(), 'some name'
4992	public class IProductMetadata\n{         \n    [HiddenInput(DisplayValue = false)]\n    int ProductID;\n\n    [Required(ErrorMessage = "Please enter a product name")]         \n    string Name;\n\n    [Required(ErrorMessage = "Please enter a description")]         \n    string Description;\n    // etc\n}\n\n[MetadataType(typeof(IProductMetadata))]\npublic partial class Product\n{\n}
4993	public static void testConnection()\n        {\n            SapROTWr.CSapROTWrapper sapROTWrapper = new SapROTWr.CSapROTWrapper();\n            object SapGuilRot = sapROTWrapper.GetROTEntry("SAPGUI");\n            object engine = SapGuilRot.GetType().InvokeMember("GetSCriptingEngine", System.Reflection.BindingFlags.InvokeMethod,\n                null, SapGuilRot, null);\n            SAPconnection.sapGuiApp = engine as GuiApplication;\n            GuiConnection connection = sapGuiApp.Connections.ElementAt(0) as GuiConnection;\n            GuiSession session = connection.Children.ElementAt(0) as GuiSession;\n            MessageBox.Show(session.Info.User + " !!||!! " + session.Info.Transaction);\n\n\n        }
4994	...\n//Before calling UpdateStudent, make sure your StudentId property is set\nstudent.StudentId = 123;\n....\n\npublic void UpdateStudent(Student student)\n{\n    using (IDataContext ctx = DataContext.Instance())\n    {\n        var rep = ctx.GetRepository<Student>();\n        rep.Update(student);\n    }\n}
4995	protected void cal_SelectionChanged(object sender, EventArgs e)\n    {\n\n        lblSelectDate.Text = cal.SelectedDate.ToString();\n    }
4996	var p=new Person();\np.FirstName = "Jeff";\np.MI = "A";\np.LastName = "Price";\nSystem.Xml.Serialization.XmlSerializer x = new System.Xml.Serialization.XmlSerializer(p.GetType());\nx.Serialize(Console.Out, p);
4997	"INSERT into [User] values(@fname,@lname,@email,@num,@locID)"
4998	if (e.Key == Key.Enter)\n{\n  LoginButton_Click(sender,e); //here LoginButton_Click is click eventhandler\n}
4999	javascript:document.getElementById('theCheckBox').setAttribute('checked', 'checked');document.getElementById('theForm').submit();
5000	byte[] send_buffer = { ((byte)MyEnum.Enum1) };
5001	Private Sub PrintTableOrView(ByVal table As DataTable, ByVal label As String)\n    Dim sw As System.IO.StringWriter\n    Dim output As String\n\n    Console.WriteLine(label)\n\n    ' Loop through each row in the table. '\n    For Each row As DataRow In table.Rows\n        sw = New System.IO.StringWriter\n        ' Loop through each column. '\n        For Each col As DataColumn In table.Columns\n            ' Output the value of each column's data.\n            sw.Write(row(col).ToString() & ", ")\n        Next\n        output = sw.ToString\n        ' Trim off the trailing ", ", so the output looks correct. '\n        If output.Length > 2 Then\n            output = output.Substring(0, output.Length - 2)\n        End If\n        ' Display the row in the console window. '\n        Console.WriteLine(output)\n    Next\n    Console.WriteLine()\nEnd Sub
5002	grid.ClearSelection();\nfor(int r = 0; r < grid.RowCount; r++)\n    grid[columnIndex, r].Selected = true;
5003	companies.Select(company => company.Name.Substring(0, 1));
5004	BigInteger.TryParse(string.Format("0{0}", "FFFF"), style, ...)
5005	g.TextRenderingHint = System.Drawing.Text.TextRenderingHint.SingleBitPerPixel;
5006	public class TableSource : MvxSimpleTableViewSource\n    {\n        private TwitterView _parent;\n\n        public TableSource (UITableView tableView, TwitterView parent)\n            : base(tableView, TweetCell3.Identifier, TweetCell3.Identifier)\n        {\n            _parent = parent;\n            tableView.RegisterNibForCellReuse(UINib.FromName(TweetCell3.Identifier, NSBundle.MainBundle), TweetCell3.Identifier);\n        }\n\n        public override float GetHeightForRow (UITableView tableView, NSIndexPath indexPath)\n        {\n            return _parent.SomeMethod(indexPath);\n        }\n    }
5007	create function dbo.F_GREAT_CIRCLE_DISTANCE\n(\n    @Latitude1  float,\n    @Longitude1 float,\n    @Latitude2  float,\n    @Longitude2 float\n)\nreturns float as\nbegin\n    declare @radius float\n\n    declare @lon1  float\n    declare @lon2  float\n    declare @lat1  float\n    declare @lat2  float\n\n    declare @a float\n    declare @distance float\n\n    -- Sets average radius of Earth in Miles\n    set @radius = 3956\n\n    -- Convert degrees to radians\n    set @lon1 = radians( @Longitude1 )\n    set @lon2 = radians( @Longitude2 )\n    set @lat1 = radians( @Latitude1 )\n    set @lat2 = radians( @Latitude2 )\n\n    set @a = sqrt(square(sin((@lat2-@lat1)/2.0E)) + (cos(@lat1) * cos(@lat2) * square(sin((@lon2-@lon1)/2.0E))) )\n    set @distance = @radius * ( 2.0E *asin(case when 1.0E < @a then 1.0E else @a end ))\n\n    return @distance\nend
5008	List<KeyValuePair<string, object>>
5009	List<string> femalePetNames = { "Maggie", "Penny", "Saya", "Princess", \n                            "Abby", "Laila", "Sadie", "Olivia", \n                            "Starlight", "Talla" };\n    public void StringRandom()\n    {\n        if (femalePetNames.Count > 0)\n        {\n            Random bsd = new Random();\n\n            int fIndex = bsd.Next(0, femalePetNames.Count);\n            txttBox2.Text = femalePetNames[fIndex];\n            femalePetNames.RemoveAt(fIndex);\n        }\n    }
5010	public static void Main(string[] args)\n{\n    //Read in code to shift from text file.\n    var file = @"txt"; //I have a file linked here\n    var text = File.ReadAllText(file);\n    //Show original unshifted code. \n    Console.WriteLine("Original text reads: \n\n{0}", text);\n\n    //Show text after shift. \n    Console.WriteLine("The shifted code is: \n\n{0}", Caesar(text, 18));\n}
5011	protected override Size ArrangeOverride(Size arrangeSize)\n{\n    base.ArrangeOverride(arrangeSize);\n    return arrangeSize;\n}
5012	private void AddMemberToGroup(string bindString, string newMember)\n{\n    try\n    {\n        DirectoryEntry ent = new DirectoryEntry(bindString);\n        ent.Properties["member"].Add(newMember);\n        ent.CommitChanges();\n    }\n    catch (Exception e)\n    {\n        // do error catching stuff here\n        return;\n    }\n}
5013	Dim x? As Integer\nDim x As Integer?\nDim x As Nullable(Of Integer)\n\n\nDim s As Integer\n\ns = If(x, 5)
5014	using System.Text.RegularExpressions;\n    using System.IO;\n    using System.Text;\n\n    string pattern = "^3/1/2014.*"; \n    string strPath = new string("c:\\"); \n    string strDateTime = DateTime.Now.ToString("yyyyMMdd"); \n    string FileToCopy = "c:\\regexTest.txt"; \n    string NewCopy = strPath + strDateTime + ".txt"; \n    StringBuilder sb = new StringBuilder(""); \n    if (System.IO.File.Exists(FileToCopy) == true) { \n    string[] lines = File.ReadAllLines(FileToCopy); \n    foreach (string line in lines) { \n    if (Regex.IsMatch(line, pattern)) { \n    sb.Append(line + System.Environment.NewLine); \n    } \n    } \n    } \n\n    if (sb.Length > 0) { \n    System.IO.File.WriteAllText(NewCopy, sb.ToString); \n    }
5015	((Action<ViewModel>)d1)(yourparameter)
5016	using System;\nusing System.Data;\nusing Microsoft.SqlServer.Dts.Runtime;\nusing System.Windows.Forms;\n\nnamespace ST_8eab6a8fbc79431c8c9eb80339c09d1d.csproj\n{\npublic class myclass\n{\n    int a, b;\n\n    public myclass()\n    {\n        a = 0;\n        b = 0;\n    }\n}\n\n[System.AddIn.AddIn("ScriptMain", Version = "1.0", Publisher = "", Description = "")]\npublic partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase\n{\n    #region VSTA generated code\n    enum ScriptResults\n    {\n        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,\n        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure\n    };\n    #endregion\n\n    public void Main()\n    {\n        Dts.TaskResult = (int)ScriptResults.Success;\n        myclass m = new myclass();\n        Dts.Variables["myObject"].Value = m;\n    }\n}
5017	PostBuffer.Split(new string[] { "----WebKitFormBoundaryBBZbLlWzO0CIcUa6"}, StringSplitOptions.None);
5018	public static double MetersToPixels(double meters, double latitude, double zoomLevel)\n    {\n        var pixels = meters / (156543.04 * Math.Cos(latitude) / (Math.Pow(2, zoomLevel)));\n        return Math.Abs(pixels);\n    }
5019	if (txtUserName.Text == "admin" && txtPassword.Password.ToString() == "admin")
5020	protected void ddlViewLabel_SelectedIndexChanged(object sender, EventArgs e)\n{\nDropDownList d = (DropDownList)sender;\n\n// psudeo code from here on out\n// get the DropDownList selected index\n// create the new SQL statement\n// either create a new SQlDataSource or SqlCommand/SqlConnection objects, set the sql, attach them to the repeater, bind\n\n}
5021	DataTable table = new DataTable("myTable");\nusing(OdbcConnection conn = new OdbcConnection("specfiy_conn_string"))\n{\n    using(OdbcDataAdapter da = new OdbcDataAdapter(@"SELECT * FROM MyTable", conn))\n        da.Fill(table);\n}\ndataGridView1.DataSource = table.DefaultView; //binding table to dgv
5022	class ClockComponent : Component {\n    public ClockComponent(IContainer container) { \n        // Add object to container's list so that \n        // we get notified when the container goes away container.Add(this); \n    } \n    // ...\n}
5023	TextBox.LostFocus
5024	IDataObject data = null;\n\n                Exception threadEx = null;\n                Thread staThread = new Thread(\n                    delegate()\n                    {\n                        try\n                        {\n                            data = Clipboard.GetDataObject();\n                            if (data.GetDataPresent(DataFormats.Bitmap))\n                            {\n                                Bitmap bmp = (System.Drawing.Bitmap)data.GetData(DataFormats.Bitmap);\n                                string filename = String.Format(@"c:\image{0}.bmp", i.ToString());\n                                bmp.Save(filename);\n                            }\n                        }\n\n                        catch (Exception ex)\n                        {\n                            threadEx = ex;\n                        }\n                    });\n                staThread.SetApartmentState(ApartmentState.STA);\n                staThread.Start();\n                staThread.Join();
5025	List<UIElement> labels = new List<UIElement>();\n\nforeach (var block in myRTB.Document.Blocks)\n{\n    if (block is Paragraph)\n    {\n        var paragraph = block as Paragraph;\n        foreach (var inline in paragraph.Inlines)\n        {\n            if(inline is InlineUIContainer)\n            {\n    labels.Add(((InlineUIContainer)inline).Child);\n            }\n        }\n\n    }\n}
5026	foreach(Control ctrl in this.Controls)\n{\n   ctrl.Enter += new EventHandler(Focus_Changed); // Your method to fire\n}
5027	Func<IEnumerable<XElement>, string, string, IEnumerable<XElement>> functionSearch;\nfunctionSearch = (l, x, y) => l.Where(m => m.Descendants(x).Any(v => v.Value.Contains(y)));
5028	G3FacsimileBodyPart ::= SEQUENCE { parameters G3FacsimileParameters, \n                                   data       G3FacsimileData}\nG3FacsimileParameters ::= SET { number-of-pages [0] INTEGER OPTIONAL, \n                                non-basic-parameters [1] G3FacsimileNonBasicParameters  \n                                OPTIONAL}\nG3FacsimileData ::= SEQUENCE OF BIT STRING
5029	XDocument configXML = XDocument.Load("Config.xml");
5030	DECLARE @tbl TABLE(ID INT, SomeValue VARCHAR(10));\nINSERT INTO @tbl VALUES\n (1,'value 1')\n,(2,'value 2')\n,(3,'value 3')\n,(4,'value 4')\n,(5,'value 5');\n\nDECLARE @ListOfIDs VARCHAR(20)='1,3,5';\n\nWITH ListOfIDs AS\n(\n    SELECT CAST('<root><r>'+REPLACE(@ListOfIDs,',','</r><r>')+'</r></root>' AS XML) AS IDsAsXML\n)\n,ListOfIDsResolved AS\n(\n    SELECT x.y.value('.','int') AS ID\n    FROM ListOfIDs\n    CROSS APPLY ListOfIDs.IDsAsXML.nodes('/root/r') x(y)\n)\nSELECT * FROM @tbl AS tbl\nINNER JOIN ListOfIDsResolved ON tbl.ID=ListOfIDsResolved.ID
5031	if (new []{"red", "blue"}.Contains("blue")) return true;
5032	new TaskCompletionSource<WebResponse>(TaskCreationOptions.LongRunning);
5033	%PDF-1.X
5034	DataRowView vrow = (DataRowView)cboItems.SelectedItem;\nDataRow row = vrow.Row;
5035	myControl.Style =  (Style)res["ComboBoxTextBox"];
5036	string input = @"""abc"" <abc@gmail.com>; ""pqr"" <pqr@gmail.com>;";\nvar output = String.Join(";", Regex.Matches(input, @"\<(.+?)\>")\n                                    .Cast<Match>()\n                                    .Select(m => m.Groups[1].Value));
5037	public DataTable CreateDataTable(bool headerRow)
5038	var lines = new List<string>(File.ReadLines("input.csv"));\nforeach (string line in lines)\n{\n    if (line.StartsWith("a")) continue;\n    // insert code to modify the other lines\n}\n// ... and later\nFile.WriteAllLines("output.csv", lines);
5039	public static string GetDisplayName<T>( T toCheck )\n{\n  Type enumType = typeof(T);\n  if( !enumType.IsEnum ) return null;\n\n  MemberInfo[] members = enumType.GetMember(toCheck.ToString());\n\n  if( ( members == null ) || ( members.Length != 1 ) ) return toCheck.ToString();\n\n  foreach( MemberInfo memInfo in members )\n  {\n      DisplayAttribute[] attrs = (DisplayAttribute[]) memInfo.GetCustomAttributes(typeof(DisplayAttribute), false);\n\n      if( ( attrs != null ) && ( attrs.Length == 1 ) ) return attrs[0].Name;\n  }\n\n  return toCheck.ToString();\n}
5040	protected void Button1_Click(object sender, EventArgs e)\n    {\n        //Get path from web.config file to upload\n        string FilePath = ConfigurationManager.AppSettings["FilePath"].ToString();\n        bool blSucces = false;\n        string filename = string.Empty;\n        string pathname = string.Empty;\n        string filePathName = string.Empty;\n\n        //To access the file upload control\n        //First get the clicked button\n        Button btn = (Button)sender;\n\n        //Then get the detailsview row\n        DetailsViewRow drv = (DetailsViewRow)btn.Parent.Parent;\n\n        //Now you can access the FileUpload control\n        FileUpload FileEditUpload1 = (FileUpload)drv.FindControl("FileEditUpload1");\n        if (FileEditUpload1.HasFile)\n        {\n            //Do the rest of your code\n        }\n    }
5041	DECLARE @TABLE TABLE(\n        AUTOID INT IDENTITY(1,1),\n        BRANCHID INT,\n        QUTNO AS CAST(BRANCHID AS VARCHAR(25)) + '#' + CAST(AUTOID AS VARCHAR(25))\n)\n\nINSERT INTO @TABLE (BRANCHID) VALUES (10),(11)\n\nSELECT * FROM @TABLE
5042	if (ddl.Items.Count <= 1) \n{\n    e.Cancel = true;\n}
5043	ImageSRC = entry.Element(media + "group").Element(media + "thumbnail").Attribute("url").Value
5044	Label tempLab = new Label();\ntempLab.Text = "Test Label";\ntempLab.AutoSize = true;\nControls.Add(tempLab);\ntempLab.Location = new Point(5,5);\n\nButton tempBut = new Button();\ntempBut.Text = "Test Button";\nControls.Add(tempBut);\ntempBut.Location = new Point(20,20);
5045	TfsTeamProjectCollection collection = new TfsTeamProjectCollection(\n    new Uri(http://server:8080/tfs/DefaultCollection,\n    new System.Net.NetworkCredential("domain_name\\user_name", "pwd"));\ncollection.EnsureAuthenticated();
5046	Assembly.Load("Project Name of Desired Assembly")
5047	beverage2 = new Mocha(beverage2);                                       \nbeverage2 = new DarkRoast(beverage2);                                       \nbeverage2 = new Whip(beverage2);
5048	private void Form1_KeyDown(object sender, KeyEventArgs e)\n    {\n        if (e.Control && e.Shift && e.KeyCode == Keys.P)\n        {\n            MessageBox.Show("Hello");\n        }\n    }
5049	private List<Item> _linkedItems;\n\nprivate void UpdateLinksTo() {\n    this.LinksTo = string.Join<string>(_linkedItems.Select(i => i.ID.ToString()));\n}\n\n[NotMapped]\npublic ReadOnlyCollection<Item> LinkedItems {\n    get {\n        if(_linkedItems == null) {\n            _linkedItems = db.Items.Where(i => this.LinksTo.Split(',').Select(x => int.Parse(x)).Contains(i.ID)).ToList();\n        }\n        return _linkedItems.AsReadOnly();\n    }\n}\n\n[NotMapped]\npublic void AddLinkedItem(Item item) {\n    if(!_linkedItems.Select(i => i.ID).Contains(item.ID)) {\n        _linkedItems.Add(item);\n        UpdateLinksTo();\n    }\n}
5050	private void Form1_Load(object sender, EventArgs e)\n    {\n\n        var systemSounds = new[]\n                              {\n                                  System.Media.SystemSounds.Asterisk,\n                                  System.Media.SystemSounds.Beep,\n                                  System.Media.SystemSounds.Exclamation,\n                                  System.Media.SystemSounds.Hand,\n                                  System.Media.SystemSounds.Question\n                              };\n\n        comboBox1.DataSource = systemSounds;\n\n        comboBox1.SelectedIndexChanged += new EventHandler(comboBox1_SelectedIndexChanged);\n    }\n\n    void comboBox1_SelectedIndexChanged(object sender, EventArgs e)\n    {\n        ((System.Media.SystemSound)comboBox1.SelectedItem).Play();\n    }
5051	SyntaxFactory.RegionDirectiveTrivia()
5052	mb.Mem_Email = reader["Mem_Email"] == System.DBNull.Value ? null : (string) reader["Mem_Email"];
5053	// use this method to your 2 textbox\nprivate void yourTextBox_GotFocus(object sender, RoutedEventArgs e)\n{\n    (sender as TextBox).Text = string.Empty;\n}
5054	Response.End()
5055	new RectangleF(Math.Min(start.X, end.X),\n               Math.Min(start.Y, end.Y),\n               Math.Abs(start.X - end.X),\n               Math.Abs(start.Y - end.Y));
5056	dr["Column"].ToString()
5057	Mono.Cecil
5058	worksheet.Activate();\n        worksheet.Application.ActiveWindow.SplitColumn = 1;\n        worksheet.Application.ActiveWindow.FreezePanes = true;
5059	tempStroke.DrawingAttributes.Color = Colors.FromArgb(125,255,0,0);
5060	textbox1.select()
5061	GetSchema()
5062	CREATE procedure SP_GetEmployeeRequests\n    (\n         @ApproverName varchar (50)\n    )\n    AS\n    BEGIN\n\n    SELECT ed.Emp_Username, rd.Request_Amount, rd.Request_description, bt.Balance_Amount, bt.LastApproval, bt.LastUpdated\n    FROM EmployeeDetails ed JOIN RequestDetails rd ON ed.Emp_ID = rd.emp_ID \n    JOIN BalanceTracker bt ON bt.Emp_ID = rd.Emp_ID\n    JOIN ApprovalDetails ad ON rd.Approved_ID  = ad.Approved_ID\n    WHERE ad.Approved_By = @ApproverName \n\n    END\n    GO
5063	public virtual void Dispose()\n {\n\n     _Writer.Dispose();\n }
5064	Foo foo = new Foo();\nvar barValue = foo.GetType().GetProperty("Bar").GetValue(foo, null)
5065	CultureInfo culture = new CultureInfo("en-US"); // or whatever culture you want\nConvert.ToDateTime(date, culture);
5066	var r = from i in myList\n            group i by new { i.Number, i.CurrentStatus }\n                into grp\n                select new\n                {\n                    Reported = grp.Key.CurrentStatus,\n                    Number = grp.Key.Number,\n                    Sum = grp.Sum(x => x.Details[0].Quantity),\n                    Name = grp.Select(x => x.Name).First(),\n                    Details = grp.Select(x => x.Details).First(),\n                    Descriptions = grp.Select(x => x.Descriptions).First(),\n                    AssignmentId = grp.Select(x => x.AssignmentId).First(),\n                    Listor = grp.Select(x => x.Number).Count()\n                };
5067	Environment.TickCount
5068	task.ContinueWith(HandleError, TaskContinuationOptions.OnlyOnFaulted);
5069	Astr = new String(AByte.Select (b=>(Char)(b+ 48)).ToArray())
5070	public delegate string IncomingMessageHook(int id);\n    public event IncomingMessageHook InComingMessage;\n    private string OnInComingMessage(int id)\n    {\n        IncomingMessageHook handler = null;\n        Delegate[] targets = null;\n        string result;\n\n        handler = InComingMessage;\n        if (handler != null)\n        {\n            targets = handler.GetInvocationList();\n            foreach (Delegate target in targets)\n            {\n                try\n                {\n                    handler = (IncomingMessageHook)target;\n                    result = handler.Invoke(id);\n                    if (!String.IsNullOrEmpty(result))\n                    {\n                        break;\n                    }\n                }\n                catch (Exception ex)\n                {\n                }\n            }\n        }\n        return result;\n   }
5071	while(true) {\n    Thread.Sleep(500); // lets get a break\n    if(!System.IO.File.Exists(FILE_NAME)) continue;\n    using (System.IO.StreamReader sr = System.IO.File.OpenText(FILE_NAME)) \n    {\n        string s = "";\n        while ((s = sr.ReadLine()) != null) \n        {\n            if(s.Contains(TEXT_TO_SEARCH)) {\n                // output it\n            }\n        }\n    }\n}
5072	foreach (RepeaterItem item in rptServices.Items)\n{\n    if (item.ItemType == ListItemType.Item || item.ItemType == ListItemType.AlternatingItem)\n    {\n       var textbox = (TextBox)item.FindControl("tbx");\n\n       //Do something with your textbox\n       textbox.Text = "Test";\n    }\n}
5073	File.Copy("path_to_pdf", Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString() + ".pdf");
5074	String St = proxy.ToString();\nMessageBox.Show(St.Substring(0, St.LastIndexOf(':')).Substring(St.IndexOf('{') + 1));
5075	var ThematicId = parseInt('@ViewBag.thematicid');\nvar ThematicName =  '@ViewBag.Name';
5076	try\n    {//\n        var pathUri = await YouTube.GetVideoUriAsync("GC2qk2X3fKA", YouTubeQuality.Quality480P);\n        player.Source = pathUri.Uri;\n    }\n    catch (Exception ex)\n    {\n        if (ex is FormatException)\n        {\n            // handle exception. \n            // For example: Log error or notify user problem with file\n        }\n    }
5077	GridView1.PageIndex = 0;
5078	String content = msg.Body;\ncontent = content.Replace("123456", "<a href=\"url\">123456</a>");\nmsg.Body = content;
5079	IRandomAccessStream stream = ...;\n\nusing (var memoryStream = new MemoryStream())\n{\n    memoryStream.Capacity = (int)stream.Size;\n    var ibuffer = memoryStream.GetWindowsRuntimeBuffer();\n    await stream.ReadAsync(ibuffer, (uint)stream.Size, InputStreamOptions.None).AsTask().ConfigureAwait(false);\n}
5080	var needle = "M6T1";\nvar ix = str.LastIndexOf(needle);\nstr = str.Substring(0, ix) + str.Substring(ix + needle.Length);
5081	pbxNy.Image = (Image)kortlek[i].bild
5082	if (Grid.Rows.Count > 1)\n        {\n            if (ViewState["CurrentTable"] != null)\n            {\n                DataTable dtCurrentTable = (DataTable)ViewState["CurrentTable"];\n                dtCurrentTable.Rows.RemoveAt(dtCurrentTable.Rows.Count -1);\n                ViewState["CurrentTable"] = dtCurrentTable;\n                Grid.DataSource = dtCurrentTable;\n                Grid.DataBind();\n\n            }\n            else\n            {\n                Response.Write("ViewState is null");\n            }\n        }
5083	public class Customer\n{\n  public string GenderOrEmptyString {get {return this._gender ?? ""; }\n}
5084	public class GlobalScope \n{\n  public String Variable { get; set; }\n}
5085	Web API only uses model binding for ???simple types???
5086	SyndicationFeed feed = null;\n\nSyndicationClient client = new SyndicationClient();\n\nvar feedUri = new Uri(myUri);\n\ntry {\n    var task = client.RetrieveFeedAsync(feedUri).AsTask();\n\n    task.ContinueWith((x) => {\n        var result = x.Result;\n\n        Parallel.ForEach(result.Items, item => {\n            Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal,\n            () =>\n            {\n                test.Text += item.Title.Text;\n            });\n       });     \n   });\n}\ncatch (Exception ex) { }
5087	public String description {get; set;}
5088	XmlNodeList nodeList0 = root.SelectNodes(@"//ns1:Department[(ns1:InstrumentData/@StatusCode='1'\n                                                                or ns1:InstrumentData/@StatusCode='2')\n                                                                 and not (ns1:InstrumentData/@RoleType='ED' \n                                                                    or ns1:InstrumentData/@RoleType='FD') \n                                                                and (ns1:InstrumentData/@Style='S' \n                                                                     or ns1:InstrumentData/@Style='T') ]", manager);
5089	return list.All(a => a.SomeId == 0 || IsAuthorizedOnID(TheUserID, a.SomeID));
5090	open master file for reading.\ncount := 0\nwhile not EOF do\n    read line from master file into buffer\n    write line to output file    \n    count := count + 1\n    if count = 5 then\n       write added line to output file\n    fi\nod\nrename output file to replace input file
5091	public interface ISettingsUpgrader\n{\n    void UpgradeSettings();\n}\n\npublic abstract class SettingsUpgrader : SettingsUpgrader\n{\n    protected int version;\n\n    public virtual void UpgradeSettings()\n    {\n        // load settings and read version info\n        version = settingsVersion;\n    }\n}\n\npublic class SettingsUpgraderV2 : SettingsUpgrader\n{\n    public override void UpgradeSettings()\n    {\n        base.UpgradeSettings();\n        if(version > 1) return;\n\n        // do the v1 -> v2 upgrade\n    }\n}\n\npublic class SettingsUpgraderV3 : SettingsUpgraderV2\n{\n    public override void UpgradeSettings()\n    {\n        base.UpgradeSettings();\n        if(version > 2) return;\n\n        // do the v2 -> v3 upgrade\n    }\n}
5092	routes.MapRoute(\n    "Home",\n    "Home/{action}/{id}",\n    new { controller = "Home", action = "Index", id = "" }\n);
5093	private void lsvObjectives_ItemClick(object sender, ItemClickEventArgs e)\n{\n    objectives item = e.ClickedItem as objectives;\n    var itemText = item.objective;\n\n    youtTextBox.Text = item.Description.ToString();\n}
5094	KeyValuePair<TKey, TValue>
5095	CustomerDataContext dc = new CustomerDataContext();\nTable<Customer> customers = dc.GetTable<Customer>();\nTable<Product> products= dc.GetTable<Product>();\nTable<ProductConsumer> ProductConsumers= dc.GetTable<ProductConsumer>();\n\nCustomer newCustomer = new Customer ();\nProduct newProduct   = new Product();\n\n\ncustomers.InsertOnSubmit(newCustomer);\nproducts.InsertOnSubmit(newProduct);\ncustomers.Context.SubmitChanges();\nproducts.Context.SubmitChanges();\n\n//Now insert associations\nProductConsumer= new ProductConsumer();\nProductConsumer.Consumer= newCustomer ;\nProductConsumer.Product= newProduct  ;\n\n\nProductConsumers.InsertOnSubmit(ProductConsumer)\nProductConsumers.Context.SubmitChanges();
5096	public interface IJobListener<TDes>\n{\n    void CopyS3File(S3Location src, TDes des, Action<Exception> complete);\n}
5097	private async void MassInvoiceExecuted()\n{     \n    foreach (Invoice invoice in Invoices)\n    {\n        DoStuff(invoice);\n        RefreshExecuted();\n        await Task.Delay(8000);\n    }\n}
5098	t = tree.Root;\nwhile (true) {\n  while (t.Left != t.Right) {\n    while (t.Left != null) {   // Block one.\n      t = t.Left;\n      Visit(t);\n    }\n    if (t.Right != null) {     // Block two.\n      t = t.Right;\n      Visit(t);\n    }\n  }\n\n  while (t != tree.Root && (t.Parent.Right == t || t.Parent.Right == null)) {\n    t = t.Parent;\n  }\n  if (t != tree.Root) {        // Block three.\n    t = t.Parent.Right;\n    Visit(t);\n  } else {\n    break;\n  }\n}
5099	Image i = new Bitmap(200, 50);\nGraphics g = Graphics.FromImage(i);\ng.DrawString("Message", new Font("Arial", 8), Brushes.Black, new PointF(0,0));\n\npictureBox.Image = i;\ng.Dispose();
5100	WebApp.Start
5101	myForm.ShowDialog()
5102	var t = (from li in list\n         orderby li descending\n         select li).Take(4);
5103	MySqlConnection connection = new MySqlConnection(MyConString);\nconnection.Open();\n\n...\n\nMySqlCommand SQLup = new MySqlCommand(mySQL, connection);\nSQLup.ExecuteNonQuery();
5104	{Binding car.wheels}
5105	MessageFault msgFault = ex.CreateMessageFault();\nvar msg = msgFault.GetReaderAtDetailContents().Value;
5106	private static int  CalcLevenshteinDistance(string a, string b)\n    {\n    if (String.IsNullOrEmpty(a) || String.IsNullOrEmpty(b))  return 0;\n\n    int  lengthA   = a.Length;\n    int  lengthB   = b.Length;\n    var  distances = new int[lengthA + 1, lengthB + 1];\n    for (int i = 0;  i <= lengthA;  distances[i, 0] = i++);\n    for (int j = 0;  j <= lengthB;  distances[0, j] = j++);\n\n    for (int i = 1;  i <= lengthA;  i++)\n        for (int j = 1;  j <= lengthB;  j++)\n            {\n            int  cost = b[j - 1] == a[i - 1] ? 0 : 1;\n            distances[i, j] = Math.Min\n                (\n                Math.Min(distances[i - 1, j] + 1, distances[i, j - 1] + 1),\n                distances[i - 1, j - 1] + cost\n                );\n            }\n    return distances[lengthA, lengthB];\n    }
5107	row.Cells[0].Value = i.ToString();
5108	.html(htmlString)
5109	var part = message.BodyParts.OfType<TextPart> ().FirstOrDefault ();\npart.Text += Environment.NewLine + footer;
5110	var query = from item in db.People\n            select item.Name;
5111	private void ListBox5_Click(System.Object sender, System.EventArgs e)\n{\n    ListBox lb = (ListBox)sender;\n    if (lb.SelectedIndex != -1) {\n        ListBox1.SelectedIndex = lb.SelectedIndex;\n        ListBox2.SelectedIndex = lb.SelectedIndex;\n        ListBox3.SelectedIndex = lb.SelectedIndex;\n        ListBox4.SelectedIndex = lb.SelectedIndex;\n        ListBox5.SelectedIndex = lb.SelectedIndex;\n        txtsn.Text = ListBox1.SelectedItem;\n        txtsa.Text = ListBox2.SelectedItem;\n        txtsadd.Text = ListBox3.SelectedItem;\n        txtsp.Text = ListBox4.SelectedItem;\n        txtse.Text = ListBox5.SelectedItem;\n    }\n}
5112	abstract class classA\n{\n    public abstract void MyMethod();\n    // other fields and methods\n}\n\ninternal class classB : classA\n{\n    public override void MyMethod()\n    {\n        //logic\n    }\n}\n\ninternal class classC : classA\n{\n    public override void MyMethod()\n    {\n        //logic\n    }\n}
5113	class MyClass\n{\n    public event EventHandler MyEvent;\n\n    public MyClass()\n    {\n        MyEvent += OnSomeEventHandlerToMyLocalClassWhichOfcourseIsABadPractice;\n    }\n\n    protected void OnSomeEventHandlerToMyLocalClassWhichOfcourseIsABadPractice(object sender, EventArgs e)\n    {\n        MyEvent -= OnSomeEventHandlerToMyLocalClassWhichOfcourseIsABadPractice;\n    }\n}
5114	string encodedUrl = HttpContext.Current.Server.UrlEncode(Request.QueryString["QueryString"]);\nstring decodedUrl HttpContext.Current.Server.UrlDecode(encodedUrl);
5115	public class HideableGridSplitter : GridSplitter\n    {\n        private GridLength height;\n\n        public HideableGridSplitter()\n        {\n            this.IsVisibleChanged += HideableGridSplitter_IsVisibleChanged;\n        }\n\n        void HideableGridSplitter_IsVisibleChanged(object sender, DependencyPropertyChangedEventArgs e)\n        {\n            Grid parent = base.Parent as Grid;\n            if (parent == null)\n                return;\n            int rowIndex = Grid.GetRow(this);\n            if (rowIndex + 1 >= parent.RowDefinitions.Count)\n                return;\n            var lastRow = parent.RowDefinitions[rowIndex + 1];\n\n            if (this.Visibility == Visibility.Visible)\n                lastRow.Height = height;\n            else\n            {\n                height = lastRow.Height;\n                lastRow.Height = new GridLength(0);\n            }\n        }\n    }
5116	long largestSize = 0;\nfor (int i = 0; i < files.Length; i++)\n{\n    if (files[i].Length > largestSize)\n         largestSize = files[i].Length;\n}\nConsole.WriteLine(largestSize);
5117	var result = myList\n  .GroupBy(x => x.Id)\n  .Select(g => new Parent()\n  {\n    Key = g.Key,\n    Children = g.Select(x => x.SomeString).ToList()\n  });
5118	[System.Web.Http.AcceptVerbs("GET", "POST")]\n[System.Web.Mvc.HttpGet]\npublic async Task<string> ServiceModelsForTournamentBase(int id)\n    {\n        var jsons = await Task.WhenAll(\n              GetJsonFromApi("api/asyncdata/searchmatchfortournament/" + id, _siteUrl),\n              GetJsonFromApi("api/asyncdata/scoringplayersfortournament/" + id, _siteUrl),\n              GetJsonFromApi("api/asyncdata/tournamentteams/" + id, _siteUrl)\n        );\n        var matchInfoJson = jsons[0];\n        var scoringPlayersJson = jsons[1];\n        var teamsJson = jsons[2];\n\n    // return json containing all three\n    }
5119	ColNameHeader=False
5120	IF NOT EXISTS (SELECT SerialNumber WHERE SerialNumber = @SerialNumber AND Status = 'Allocated')\nBEGIN\n//Logic for if the serial number is not allocated\nEND\nELSE\nBEGIN\n//Logic for the serial number being in the allocated state\nEND
5121	uint ip = 0xFFDF5F4F;\n        var bytes = BitConverter.GetBytes(ip);\n        string res = string.Join(".", bytes.Reverse());
5122	if(myList.Any())\n{ /* do something */ }
5123	This[\w|\s]*: (?<title>[\w|\s]+)\.
5124	using System.Web.Security;
5125	protected void grid_CustomColumnSort (object sender, DevExpress.Web.ASPxGridView.CustomColumnSortEventArgs e) {\n    if (e.Column.FieldName == "cTotalValue") \n    {\n        e.Handled = true;\n\n        //you can get the row index of 2 columns being sorted through e.ListSourceRowIndex1 and e.ListSourceRowIndex2\n        //Get the two custom values and compare and set result\n\n        var value1 = "Some custom value you retrieve using e.ListSourceRowIndex1";\n        var value2 = "Another custom value you retrieve using e.ListSourceRowIndex2";\n\n        if (value1 > value2)\n            e.Result = 1;\n        else if (value1 == value2)\n            e.Result = Comparer.Default.Compare(value1, value2);\n        else\n            e.Result = -1;\n    }\n}
5126	string parseFormat = "ddd, dd MMM yyyy HH:mm:ss zzz";\n  DateTime date = DateTime.ParseExact(dateString, parseFormat,\n                                            CultureInfo.InvariantCulture);
5127	int[] myIntArray = Enumerable.Repeat(-1, 20).ToArray();
5128	if (aLength == 0) a = new int[1];\nif (bLength == 0) b = new int[1];\nif (cLength == 0) c = new int[1];\nif (dLength == 0) d = new int[1];\nif (eLength == 0) e = new int[1];
5129	AddressHeader header = AddressHeader.CreateAddressHeader(authorization);\nvar address = new EndpointAddress(ClientConfig.Endpoint, new[] { header });
5130	string lblText = CustomLabelFunction(Chart1.Series["Default"].Points[0]);\nChart1.Series["Default"].Points[0].AxisLabel = lblText;
5131	public List_id_model Model\n{\n  get\n  {\n    List_id_model model = ViewState["List_id_model"] as List_id_model;\n    if (model != null)\n       return model;        \n    return new List_id_model();\n  }\n  set\n  {\n    ViewState["List_id_model"] = value;\n  }\n}\n\nprotected void DropDown_Client_SelectedIndexChanged(object sender, EventArgs e)\n{\n    List_id_model client_list = Model;\n    if (client_list.client_id == null)\n       client_list.client_id = new List<int>();\n    client_list.client_id.Add(value);\n    Model = client_list;\n}
5132	var result = from objPt in lstTicketPrintingTrack    \n             join objtransDetail in lstTrans \n             on new { t1 = objPt._id, t2 = } equals new { t1 = objtransDetail._id, t2 = }\n\n             where objPt.Seg.Contains(objtransDetail.transSeq)\n             select new { name = objPt.GetValue("_id").GetIntValue() };
5133	EquateType = element.Elements().First().Name.LocalName;
5134	Button.MouseClick
5135	t.Columns["ProductID"].ExtendedProperties["MS_Description"].Value
5136	ManagedIpHelper.GetExtendedTcpTable(true);
5137	Thread.Sleep(1000)
5138	string template = \n  @"<html>\n      <head>\n        <title>Hello @Model.Name</title>\n      </head>\n      <body>\n        Email: @Html.TextBoxFor(m => m.Email)\n      </body>\n    </html>";\n\n  var model = new PageModel { Name = "World", Email = "someone@somewhere.com" };\n  string result = Razor.Parse(template, model);
5139	Thread.CurrentThread.CurrentCulture = New CultureInfo("th-TH", False)
5140	internal static class MySharedInfo {\n    /* static proerties and whatever you need */\n}
5141	...\n    string adep = let.Attributes.GetNamedItem("adep").Value;\n    string qfu = string.Empty;\n    foreach(XmlNode letiste in getQfu)\n    {\n       if(adep == letiste.Attributes.GetNamedItem("icao").Value);\n            qfu = letiste.Attributes.GetNamedItem("rwy").Value;\n    }\n    ...
5142	public TFLB BusRouteMapper(string[] input)\n{\n    return new TFLB {\n        Route = input[x],\n        Direction = input[y],\n    };\n}
5143	private void AddProducts(double salePrice, int taxValue)\n{\n    using (var ctx = new Entity())\n    {\n\n        Product prodObject = new Product\n        {\n            PId = //NEW ID,\n            SalePrice = salePrice\n        };\n\n        Product_tax pTax = new Product_tax \n        {\n            pid = prodObject.PId,\n            taxid = taxValue\n        };\n\n        ctx.product.AddObject(prodObject);\n        ctx.Product_tax .AddObject(pTax);\n\n        ctx.SaveChanges();\n    }\n}
5144	MethodInfo method = service.GetType().GetMethod(serviceAction);\nobject result = method.Invoke(service, new object[] { request });\nreturn (R) result;
5145	function OpenPopup()\n{\n  document.getElementById("linkID").style.visibility='hidden';\n  window.open("mytest.aspx");\n}
5146	With cmd.Parameters\n        cn.Open()\n        dr = cmd.ExecuteReader(CommandBehavior.CloseConnection)\n        ' Process rowset(s)\n        bolEOF = dr.Read\n        Do\n            Do While bolEOF = True\n                ' Process rows\n                bolEOF = dr.Read()\n            Loop\n        Loop While dr.NextResult = True\n        cmd.Cancel()\n// you need to close dataReader first\n        dr.Close()\n\n\n        Debug.WriteLine("@iOutDistinceBankCount:" & _\n            .Item("@iOutDistinceBankCount").Value.ToString)\n    End With
5147	var order = new Order\n{\n    OrderId = 1,\n    OrderDate = new DateTime(2012, 6, 1),\n    OrderStatus = "OPEN",\n    CreatedDate = DateTime.Now\n};\norder.OrderItems = new[]{\n    new OrderItem {\n        LineItemId = 1,\n        ProductId = "Orange",\n        CreatedDate = order.CreatedDate\n    },\n    new OrderItem {\n        LineItemId = 2,\n        ProductId = "Pear",\n        CreatedDate = order.CreatedDate\n    }};
5148	User user = new User();\n\nuser.Id = Guid.NewGuid();
5149	protected void Button1_Click(object sender, EventArgs e)\n {\n    foreach (TextBox i in this.Page.Form.Controls.OfType<TextBox>().ToList())\n    {\n        i.Text = null;\n    }\n }
5150	public DataTableResult Get([FromUri]DataTableParameters parameters)\n {\n      return new DataTableResult();\n }
5151	if (!(item is Label | item is LiteralControl))\n{\n      if(item is TextBox)\n      {\n        TextBox textBox = (TextBox)item;\n        string textValue = textBox.Text;\n      }\n      ...\n\n}
5152	var tableName = "someTable";\nvar oc = ((IObjectContextAdapter)context).ObjectContext;\n\nvar items = oc.MetadataWorkspace.GetItems(DataSpace.SSpace).OfType<EntityType>();\nforeach (var entityType in items.Where(e => e.Name == tableName))\n{\n    var props = string.Join(",", entityType.Properties.Where(p => p.Nullable));\n    Debug.WriteLine(string.Format("{0}: {1}", entityType.Name, props));\n}
5153	ntdll.dll!NtWaitForSingleObject()\nKernelBase.dll!WaitForSingleObjectEx()\nmsvcr110_clr0400.dll!__C_specific_handler()\nntdll.dll!RtlpExecuteHandlerForException()\nntdll.dll!RtlDispatchException()\nntdll.dll!KiUserExceptionDispatch()\ndbghelp.dll!MiniDumpWriteDump()\n[Managed to Native Transition]  \n    ExceptionTest.exe!ExceptionTest.Program.WriteMiniDump() Line 66 C#\nExceptionTest.exe!ExceptionTest.Program.HandleUnobservedTaskException(object sender, System.Threading.Tasks.UnobservedTaskExceptionEventArgs e) Line 48 C#\nmscorlib.dll!System.Threading.Tasks.TaskScheduler.PublishUnobservedTaskException(object sender, System.Threading.Tasks.UnobservedTaskExceptionEventArgs ueea)\nmscorlib.dll!System.Threading.Tasks.TaskExceptionHolder.Finalize()
5154	// For the multi-dimentional array\nStringBuilder sb = new StringBuilder();\nfor (int stringIndex = 0; stringIndex < s.Length; stringIndex++)\n{\n  sb.Clear();\n  for (int charIndex = 0; charIndex < str.UpperBound(1); charIndex++)\n    sb.Append(str[stringIndex,charIndex]);\n  s[stringIndex] = sb.ToString();\n}\n\n// For the jagged array\nfor (int index = 0; index < s.Length; index++)\n  s[index] = new string(str[index]);
5155	createResponse["GivenName"] = "Rohit1";\n        request.Content = new StringContent(JsonConvert.SerializeObject(createResponse));\n        request.Content.Headers.ContentType = new MediaTypeHeaderValue("application/json");
5156	System.IO.File.WriteAllLines(\n    "outfilename.txt",\n    System.IO.File.ReadAllLines("infilename.txt").Select(line =>\n        string.Join("|",\n            line.Split(new string[] { " " }, StringSplitOptions.RemoveEmptyEntries)\n        )\n    ).ToArray()\n);
5157	System.Data.Entity.Database.SetInitializer<EFDbContext>(new DropCreateDatabaseAlways<EFDbContext>());\n// System.Data.Entity.Database.SetInitializer<EFDbContext>(EFDbContext>(null);\n\nif (!WebMatrix.WebData.WebSecurity.Initialized)\n {\n     WebSecurity.InitializeDatabaseConnection("EFDbContext", "UserProfile", "UserId", "UserName", autoCreateTables: true);\n }
5158	private void searchBox_TextChanged(object sender, TextChangedEventArgs e)\n{\n    listboxWords1.Items.Clear();\n\n    if (searchBox.Text.Length > 0)\n    {\n        trie.Matcher.ResetMatch();//Reset the match\n\n        foreach (char c in searchBox.Text)\n            trie.Matcher.NextMatch(c); //Start the match from beginning \n\n        foundWords = trie.Matcher.GetPrefixMatches(); //foundWords is List<string>\n        for (int i = foundWords.Count - 1; i > 0 ; i--)\n        {\n            listboxWords1.Items.Add(foundWords[i]);\n        }\n\n        foundWords = null;\n        isFoundExact = trie.Matcher.IsExactMatch();\n        if (isFoundExact)\n            listboxWords1.Items.Add(trie.Matcher.GetExactMatch());\n    }\n    else\n    {\n        foundWords = null;\n        trie.Matcher.ResetMatch();    \n    }\n}
5159	private void btnOK_Click(object sender, EventArgs e)\n{\n    if(textbox.Text=="admin")\n    {\n    var form = Application.OpenForms.OfType<Meniu>().Single();\n    form.DeleteSelectedRows();\n    }\n}
5160	JObject obj = JObject.Parse(json);\nif (obj != null)\n{\n    var root = obj.First;\n    if (root != null)\n    {\n        var sumJson = root.First;\n        if (sumJson != null)\n        {\n            var sum = sumJson.ToObject<Sum>();\n        }\n    }\n}
5161	Clients.Others.addMessage(message)
5162	datagridview.Datasource = datasource\ndatagridview.databind()
5163	var frm = new Form { Height = 200, Width = 200 };\nvar txt = new TextBox {Dock = DockStyle.Fill, Multiline=true };\nfrm.Controls.Add(txt);\nport.DataReceived += (sender, args) => { \n        if (txt.InvokeRequired)\n        {\n            txt.Invoke(new MethodInvoker(() => { \n                txt.Text += port.ReadExisting(); \n                }));\n        } \n        else  \n        {\n           txt.Text += port.ReadExisting(); \n        }\n   };\nApplication.Run( frm);
5164	private void Page_Load( object sender, EventArgs e ) {\n    string imgUrl = GetRandomImageUrl();\n    Session["num1"] = imgUrl;\n    Image1.ImageUrl = imgUrl;\n    Image1.Visible = true;\n}\n\nprotected string GetRandomImageUrl() {\n    Random r = new Random();\n    return String.Format( "~/fordoctor/doctor_login/images/{0}.gif", r.Next( 0, 9 ) );\n}
5165	public class ServerResponseObject<T>\n{\n    public ServerResponseObject(T obj)\n    {\n        Obj = obj;\n    }\n\n    public T Obj { get; set; }\n}
5166	string stm = @"\n    select distinct(position)\n      from plan \n     where region = @region\n       and market = @market\n";\n\n\nMySqlCommand cmd = new MySQLCommand(stm);\ncmd.Parameters.AddWithValue("@region",regionvalue);\ncmd.Parameters.AddWithValue("@market",marketvalue);
5167	var original = "stack";\nfor (int i = 0; i < original.Length; i++)\n    Console.WriteLine(original.Insert(i, original[i].ToString()));
5168	XmlNode RootNode = doc.CreateElement("SDF");\n            doc.AppendChild(RootNode);\n            XmlAttribute rootAttribute2 = doc.CreateAttribute("Version");\n            rootAttribute2.Value = "3.0";\n            RootNode.Attributes.Append(rootAttribute2);\n            XmlAttribute newAttr = doc.CreateAttribute("sdf", "noNamespaceSchemaLocation", "http://www.w3.org/2001/XMLSchema-instance");\n            newAttr.Value = "SDF.xsd";\n            RootNode.Attributes.Append(newAttr);
5169	// source dictionary\nDictionary<string, List<string>> dict = new Dictionary<string, List<string>>();\n\n// target dictionary\nDictionary<string, List<string>> target = new Dictionary<string, List<string>>();\n\n// using LINQ extension methods\ndict.ToList().ForEach(i =>\n{\n    List<string> temp = i.Value.Select(x => x.Trim()).ToList();\n    target.Add(i.Key, temp);\n});
5170	DirectoryInfo di = new DirectoryInfo(@"c:\temp\");\nFileInfo[] fis = di.GetFiles("*.flg");\nforeach (FileInfo fi in fis)\n{\n    Console.WriteLine("File Name: {0}, Full Name: {1}, Number: {2}", fi.Name, fi.FullName, fi.Name.Substring(fi.Name.LastIndexOf(".") - 3, 3));\n}
5171	[OperationContract]\n[WebGet(UriTemplate = "people/driversLicense/{driversLicense}")]\nstring GetPersonByLicense(string driversLicense);\n\n[OperationContract]\n[WebGet(UriTemplate = "people/ssn/{ssn}")]\nstring GetPersonBySSN(string ssn);
5172	public FileContentResult Display(string id) {\n   byte[] byteArray = GetImageFromDB(id);\n   return new FileContentResult(byteArray, "image/jpeg");\n}
5173	using System.Drawing;\n\n...\n\nFont font = new Font(FontFamily.GenericMonospace, 8);\nImage reportImage = new Bitmap(270, 45);\nusing (Graphics graphics = Graphics.FromImage(reportImage))\n{\n    graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;\n\n    graphics.FillRectangle(Brushes.White, \n        new Rectangle(new Point(0, 0), reportImage.Size));\n\n    for (int i = 0; i != 6; i++)\n    {\n        Rectangle r = new Rectangle(20 + i * 40, 15, 25, 15);\n        graphics.FillEllipse(\n            i % 2 == 0 ? Brushes.DarkOrange : Brushes.DarkKhaki, r);\n        graphics.DrawEllipse(Pens.Black, r);\n\n        r.Offset(2, 0);\n\n        graphics.DrawString(i.ToString(), font, Brushes.Black, r);\n    }\n}\nreportImage.Save("C:\\test.bmp");
5174	library.books[0].name
5175	\[0*([1-9]|[12][0-9]|3[01]) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (201[4-9]|20[2-9][0-9]|2[1-9][0-9]{2}|[3-9][0-9]{3}) ((?:0?[0-9]|1[0-9]|2[0-3]){2}:(?:0?[0-9]|[1-5][0-9])) by (\w+)\]
5176	// Old\n// editwindow.Add(editpanel);\n// this.Page.Controls.Add(editwindow);\n\n// New\neditwindow.Items.Add(editpanel);\neditwindow.Render(this.Form);
5177	System.Console
5178	int health = 100;\nint lastFrameHealth;\n\nvoid Start ()\n{\n    lastFrameHealth = health;\n}\n\nvoid Update ()\n{\n    if (health < lastFrameHealth)\n    {\n        StartCoroutine("InterruptPassiveSkill", 5f);\n    }\n\n    lastFramehealth = health;\n}\n\n\nvoid OnCollisionEnter(Collision collision)\n{\n    health -= 10;\n}\n\nIEnumerator InterruptPassiveSkill (float seconds)\n{\n    // insert code to deactivate passive skill here:\n\n    yield return new WaitForSeconds(seconds); // delay for number of seconds\n\n    // insert code to reactivate passive skill here:\n\n}
5179	var result = list1.Except(list2);
5180	\bSccTeamFoundationServer\s*=\s*(['"]?)([^\1\n]*)\1
5181	table.AsEnumerable().Select(dr => dr.Field<string>("FuncName")).ToList()
5182	webclient.Timeout = 500;\nreturnValue = webclient.uploadstring(url, Message);
5183	if (test.ToLower().Replace('\u00A0', ' ').Contains("hello stack person"))\n{\n    // code\n}
5184	[DatabaseGenerated(DatabaseGeneratedOption.Computed)]
5185	foreach( DataRow row in workingTable.Rows ) \n{\n    int keyIndex = isKey ? keyIdentifier : sKeyIdentifier;\n    int valueIndex = isValue ? valueIdentifier : sValueIdentifier;\n\n    workingDictionary.Add( row[ keyIndex ].ToString(), row[ valueIndex ] );                             \n}
5186	public class DataViewModel\n{\n    public AsynchronousCommand Send;\n\n    public DataViewModel()\n    {\n        Send = new AsynchronousCommand(() =>\n        {\n            SendData();\n        });\n    }\n\n    private void SendData()\n    {\n    }\n}\n\npublic class SomewhereInForm\n{\n    private DataViewModel dataViewModel = new DataViewModel();\n\n    public SomewhereInForm()\n    {\n        dataViewModel.Send.Executed += SendOnExecuted;\n    }\n\n    private void SendOnExecuted(object sender, CommandEventArgs args)\n    {\n    }\n\n    private void DoSome()\n    {\n        dataViewModel.Send.DoExecute(new int());\n    }\n}
5187	gvFrame.SelectedIndex = gvFrame.Rows.Cast<GridViewRow>().First(r => \n    (string)gvFrame.DataKeys[r.RowIndex]["foo"] == requestedFrame).RowIndex;
5188	string query = "SELECT * FROM Employee WHERE LastName='"+ textBox1.Text +"'";
5189	bin\debug
5190	var data = _config.GetSettings().ToDictionary(\n                s => s.Desc, \n                s => s.Setting, \n                StringComparer.Ordinal);\n\n\nif(data.ContainsKey("start time"))\n    scheduler.Config.first_hour = int.Parse(data["start time"]);\n\nif (data.ContainsKey("end time"))\n    scheduler.Config.first_hour = int.Parse(data["end time"]);
5191	public interface IUIService   \n        {   \n            bool ShowPopUp(....);\n\n            DialogResult ShowDialog(...);\n\n            ..  \n        }
5192	StreamWriter writeFile = new StreamWriter(fileLocation);\nwriteFile.WriteLine(textBox1.Text);\nwriteFile.WriteLine(textBox2.Text);\n//etc.\n\nwriteFile.Close();
5193	new string("XQ74MNT8244A".Where(char.IsDigit).ToArray()) == "748244"
5194	(verticalLine.Start.X, horizontalLine.Start.Y)
5195	txt.ForeColor = System.Drawing.Color.FromName("#00B300");\ntxt.ForeColor = System.Drawing.Color.FromName("red");
5196	routes.MapRoute(name: "DefaultCaptchaRoute", url: "DefaultCaptcha/Generate", defaults: new { controller = "DefaultCaptcha", action = "Generate" });
5197	SqlConnection conn = new SqlConnection (yourconnectionstring + ";Connection Timeout=1;");          \n try\n { \n     conn.Open();\n     conn.Close();\n }\n catch (SqlException ex)\n {\n     if (ex.Number == 18456)\n     {\n          // invalid login\n     }\n }
5198	Convert.ToUInt32(hex, 16)  //Using ToUInt32 not ToUInt64, as per OP comment
5199	BACKUP DATABASE database_name TO DISK='d:\path\to\backup\file\on\the\server.bak'
5200	namespace ConsoleApplication2 {\n    class Program {\n        static void Main(string[] args) {\n            string line;\n            //initialize Dictionary\n\n            var keyMatch = new Dictionary<string, string>();\n            //opening the file\n            using (TextReader re = File.OpenText("Sample.txt")) {\n                //loop through lines\n                while ((line = re.ReadLine()) != null) {\n                    keyMatch.Add(line.Substring(0, line.IndexOf("-")), line.Substring(line.IndexOf("-") + 1));\n                }\n            }\n\n            var test = keyMatch["Info5"];\n        }\n    }\n}
5201	[CreateNew]\npublic DefaultViewPresenter Presenter\n{\n    set\n    {\n        this._presenter = value;\n        this._presenter.View = this;\n    }\n}
5202	private void BindCountry()\n{\n    XmlDocument doc = new XmlDocument();\n    doc.Load(Server.MapPath("countries.xml"));\n\n    foreach (XmlNode node in doc.SelectNodes("//country"))\n    {\n        XmlAttribute attr = node.Attributes["codes"];\n        if (attr != null)\n        {\n            usrlocationddl.Items.Add(new ListItem(node.InnerText, attr.Value));\n        }\n    }\n}
5203	double a = 3.332125;\ndouble b = 100/100;\ndouble c = 0 / 100;\nConsole.WriteLine((a * b * (c + 100 / 100) + 0.16).ToString());
5204	if (genStream == null )\n{\ngenStream.Close()\n}
5205	// JavaScript Code\n   var body = document.getElementsByTagName('body')[0];\n    body.onkeydown = function (e) {\n        if (e.keyCode === 13) {  //enter key code\n         // call your html button onclick code here\n        }\n    }
5206	//This will cause BuildQueryString to return "actions=createCard&action_fields=data,type,date"\nvar options = new { actions = "createCard", action_fields = "data,type,date" };\n\nList<CardUpdateAction> cua = chello.CardUpdates.ForCard("5264d37736695b2821001d7a",options).ToList();
5207	static ManualResetEvent finishGate;\n\nstatic void Main(string[] args)\n{\n    finishGate = new ManualResetEvent(false); // initial state unsignaled\n\n    Telnet telCon = new Telnet();\n    telCon.OnDataIn += new Telnet.OnDataInHandler(HandleDataIn);\n    telCon.Connect(remoteHostStr);\n\n    finishGate.WaitOne(); // waits until the gate is signaled\n}\n\npublic static void HandleDataIn(object sender, TelnetDataInEventArgs e)\n{\n    // handle event\n\n    if (processingComplete)\n        finishGate.Set(); // signals the gate\n}
5208	List<string> files = new List<string>(Directory.GetFiles(@"C:\test", "*.dll", SearchOption.AllDirectories));\nfiles.ForEach(f => File.Copy(f, Path.Combine(@"C:\dest", Path.GetFileName(f))));
5209	this.listenThread = new Thread(this.ListenForClients);\nthis.listenThread.IsBackground = true;\nthis.listenThread.Start();
5210	void GetListByInterface<TInterface>(out IList<TInterface> plugins) where TInterface : IBasePlugin\n{\n  plugins = (from p in _allPlugins where p is TInterface select (TInterface)p).ToList();\n}
5211	DataTable table = new DataTable();\n//put some data in your table and then\ntable.Columns.Add("C1");\ntable.Columns.Add("C2");\nString[] examplerow = new String[] {"one","two"};\ntable.Rows.Add(examplerow);\nDataRow row = table.Rows[0];\nConsole.WriteLine(row["C1"]); // Or pass it to textboxes, etc
5212	public List<Users> GetUsers()\n            {\n                List<Users> users=new  List<Users> ();\n                DataSet ds=getDataSet("Select FirstName,...... from Users")\n                Users user;\n\n                 foreach(DataRow row in ds.Tables[0].Rows)\n                 {\n                   user=new Users();\n                   user.FirstName=row["firstname"].ToString();\n                    ....\n                    ....\n                   users.Add(user)\n                 }\n                return users;\n            }
5213	div.Controls.Add(control);
5214	Dim dtFirstOfMonth as DateTime = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1)
5215	using (var transaction = new TransactionScope())\n{\n\n    var result = from r in db.Tests\n                    where r.value == 10\n                    select r;\n    Test t2 = result.FirstOrDefault();\n\n    // change its value from 10 to 4711...\n    t2.value = 4711;\n    // send UPDATE to Database but don't commit transcation\n    db.SaveChanges();\n\n    var result2 = from r in db.Tests\n                    where r.value == 10\n                    select r;\n    // should not return anything\n    Trace.Assert(result2.Count() == 0);\n\n    // This way you can commit the transaction:\n    // transaction.Complete();\n\n    // but we do nothing and after this line, the transaction is rolled back\n}
5216	CONTROL.Invoke(new Action(() =>\n{\n  CONTROL.Items.Add(item);\n}\n));
5217	private string GetEnumDescription(Enum value)\n{\n    // Get the Description attribute value for the enum value\n    FieldInfo fi = value.GetType().GetField(value.ToString());\n    DescriptionAttribute[] attributes = (DescriptionAttribute[])fi.GetCustomAttributes(typeof(DescriptionAttribute), false);\n\n    if (attributes.Length > 0)\n        return attributes[0].Description;\n    else\n        return value.ToString();\n}
5218	var regex = @"\(\d{3}\)-\d{8}-\(\d{3}\)";\nvar matches = Regex.Match("(123)-12345678-(123)", regex);\n\n// this means it did in fact match the input\nif (matches.Success)
5219	Protected Sub TabContainer1_ActiveTabChanged(ByVal sender As Object, ByVal e As System.EventArgs) \n    Handles TabContainer1.ActiveTabChanged\n                Dim actTab As String = TabContainer1.ActiveTab.ID.ToString()\n                Dim gv As GridView\n\n                ds = gc.GetDataToListBinder("select * from ParameterOnline where TabName='Courts'")\n\n                If actTab = "Panel_Courts" Then\n                    gv.DataSource = ds.Tables(0)\n                    TabContainer1.ActiveTab.Controls.Add(gv)\n                End If\n\n\n            End Sub
5220	mshtml.HTMLDocument htmlDoc = webBrowser.Document as mshtml.HTMLDocument;\nif (htmlDoc != null && htmlDoc.body != null)\n{\n    mshtml.IHTMLElement2 body = (mshtml.IHTMLElement2)htmlDoc.body;\n    webBrowser.Width = body.scrollWidth;\n    webBrowser.Height = body.scrollHeight;\n}
5221	private static bool setMachineTrust(X509Certificate2 oRootCert)\n{\n  try\n  {\n    X509Store certStore = new X509Store(StoreName.Root, \n                                        StoreLocation.LocalMachine);\n    certStore.Open(OpenFlags.ReadWrite);\n\n    try\n    {\n      certStore.Add(oRootCert);\n    }\n    finally\n    {\n      certStore.Close();\n    }\n    return true;\n  }\n  catch (Exception eX) \n  {\n     return false;\n  }
5222	protected void Page_Load(object sender, EventArgs e)\n    {\n        base.Page_Load();\n        this.control.DataBind();\n    }
5223	((Form)this.TopLevelControl).Close();
5224	Regex.Replace(input, @"\D+", "")
5225	Random random = new Random(); \nTimeSpan buffer = TimeSpan.FromSeconds(10);\n\nTimeSpan span = TimeSpan.FromHours(24.0);\n\n// 50% of the time do this\nif(random.Next() % 2 == 0)\n{\n    span += buffer;\n}\n// The rest of the time do this\nelse\n{\n    span -= buffer;\n}\n\njobElement.CreationDate = jobElement.CreationDate + span;
5226	// Use TimeSpan constructor to specify:\n// ... Days, hours, minutes, seconds, milliseconds.\n// ... The TimeSpan returned has those values.\nTimeSpan span = new TimeSpan(0, 0, 13, 0, 0);\nConsole.WriteLine(span);
5227	private void pinnedAppsListBox_MouseHover(object sender, EventArgs e){\n\n   Point point = pinnedAppsListBox.PointToClient(Cursor.Position);\n   int index = pinnedAppsListBox.IndexFromPoint(point);\n   if (index < 0) return;\n   //Do any action with the item\n   pinnedAppsListBox.GetItemRectangle(index).Inflate(1,2);\n}
5228	string.Join(",", dates.Select(d => d.ToString("dd/MM/yyyy")).ToArray());
5229	app = new Microsoft.Office.Interop.Outlook.Application();\n            Microsoft.Office.Interop.Outlook.NameSpace ns = app.GetNamespace("MAPI");\n            f = ns.GetDefaultFolder(OlDefaultFolders.olFolderInbox);\n            Thread.Sleep(5000); // a bit of startup grace time.
5230	NCalc.Expression expr = new NCalc.Expression("x * 10 / 3");\nexpr.EvaluateParameter += (name, args) =>\n    {\n        if (name == "x" && somecondition == 1) args.Result = 6;\n        if (name == "x" && somecondition == 2) args.Result = 12;\n    };\nvar result = expr.Evaluate();
5231	using DevExpress.XtraGrid.Views.Grid;\n//...\nvoid gridView_RowStyle(object sender, RowStyleEventArgs e) {\n   GridView view = sender as GridView;\n   if(e.RowHandle >= 0) {\n      int value = (int)view.GetRowCellValue(e.RowHandle, view.Columns["ISVERIFIKASI"]);\n      if(value == 1) \n         e.Appearance.Font = ...;\n   }\n}
5232	public class MyForm : Form \n{\n     Friend f1;\n\n    private void OnLoad()\n    {\n       f1 = new Friend();\n    }\n\n    private void Display()\n    {\n       // use f1 here\n    }\n\n}
5233	*  \n  * \n****
5234	Expression<Action> expr = () => MessageBox.Show("test");\n\nConsole.WriteLine(expr.ToString()); \n// () => Show("test")
5235	public class Recorder\n{\n    private IList<Action> _recording;\n    public Recorder()\n    {\n        _recording = new List<Action>();\n    }\n    public void CallAndRecord(Action action)\n    {\n        _recording.Add(action);\n        action();\n    }\n    public void Playback()\n    {\n        foreach(var action in _recording)\n        {\n            action();\n        }\n    }\n}\n\n//usage\nvar recorder = new Recorder();\n//calls the functions the first time, and records the order, function, and args\nrecorder.CallAndRecord(()=>Foo(1,2,4));\nrecorder.CallAndRecord(()=>Bar(6));\nrecorder.CallAndRecord(()=>Foo2("hello"));\nrecorder.CallAndRecord(()=>Bar2(0,11,true));\n//plays everything back\nrecorder.Playback();
5236	var ListByPrograma  = from a in db.Actions\n join c in db.Costs on a.ID equals c.Action_Id\n group new {a,c} by a.Program into p\n select new\n {\n    Program = p.Key,\n    actionsQty = p.Count ( ),\n    totalValue1 = p.Sum(y => y.c.Value1),\n    totalValue2 = p.Sum (y => y.c.Value2),\n    totalValue3 = p.Sum(y=>y.c.Value3)\n};
5237	string fileName = "description/ask_question_file_10.htm";\n\nstring result = Path.GetFileNameWithoutExtension(fileName);\n// result == "ask_question_file_10"
5238	var startInfo = new ProcessStartInfo( executable, parameters )\n            {\n                UseShellExecute = false,\n                RedirectStandardError = false,\n                RedirectStandardOutput = false,\n                CreateNoWindow = true\n            };\n\n            using( var process = Process.Start( startInfo ) )\n            {\n                if( process != null )\n                {\n                    process.WaitForExit( timeoutInMilliSeconds );\n                    return process.ExitCode;\n                }\n            }
5239	public partial class Form1 : Form\n{\n    public Form1()\n    {\n        InitializeComponent();\n    }\n\n    private void button1_Click(object sender, EventArgs e)\n    {\n        string[] row = { textBox1.Text, textBox2.Text, textBox3.Text };\n        var listViewItem = new ListViewItem(row); \n        listView1.Items.Add(listViewItem);\n    }\n}
5240	testItemCollectionList = (from WorkItem mItem in testItemCollection select mItem).ToList();
5241	using (var client = new HttpClient(new HttpClientHandler { AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate }))\n{\n    // your code\n}
5242	// Build graph\nvar customer = new Customer(...);\ncustomer.LegalAddress = new Address(...);\nvar account = new Account();\naccount.Customer = customer;\nvar order = new Order();\norder.BuyerAccount = account;\n// Here all Navigation properties updated\n// and state of all entities set to Added\n_orderRepository.Add(order); \n// Here all entities inserted in transaction, PK and FK updated\ncontext.SaveChanges();
5243	LUWAccts.SelectCommand = \nString.Format("SELECT mycolumns FROM mytables WHERE GROUP_NAME IN {0})",\nGet_SVCACCT_Auth_Groups(Session["ThisUser"].ToString()));
5244	(?<=[.?!])\s*
5245	Regex = new Regex("(\d+)(years?)");\n\nMatch match = regex.Match(ss);\nif(match.Success)\n{\n  string s = match.Groups[1];\n  string s1 = match.Groups[2];\n}
5246	Debug: {Items[{index}]}
5247	String birthDate = \n    dsEmployees.Employees.FindByEmployeeID(Convert.ToInt32(ID.ToString())).BirthDate.ToString();
5248	List<Record> t = new List<Record>();\n\n            var result = t.ConvertAll(x => new RecordModified()\n                {\n                    RecordTypeText = ((MyEnum)x.RecordTypeID).ToString()\n                });
5249	string base64 = Convert.ToBase64String(test);\nbyte[] originalBytes = Convert.FromBase64String(base64);\nstring text = Encoding.ASCII.GetString(originalBytes);
5250	Uri uri = new Uri(LinkButton.Text);\nScriptManager.RegisterStartupScript(this, Page.GetType(), "", "window.open('" + uri.OriginalString + "');", true);
5251	var collection = new ObservableCollection<Note>(this.DBContext.Notes.Where(n => n.ID == selectedNote.ID)); \nthis.notesBox.DataContext = collection;
5252	[DllImport("blah.dll")]\nprivate static extern int thingy( ref uint refArg );\n/* ... later in the code. ...*/\nint retVal = thingy( ref refVariable );
5253	public Form1()\n{ \n    InitializeComponent();\n}\npublic string[] fileNames { get; private set; }\nint numberOfFiles { get; set; }\n\npublic void button1_Click(object sender, EventArgs e)\n{\n    //Your openFileDialog1 initialisation and other stuff here\n    if (openFileDialog1.ShowDialog() == DialogResult.OK)\n    {\n        fileNames = openFileDialog1.SafeFileNames;\n        numberOfFiles = fileName.Length;\n    }\n}\npublic void button2_Click(object sender, EventArgs e)\n{\n    foreach (string fileName in fileNames)\n    {\n        //You can access the name of each file using fileName now\n    }\n}
5254	DELETE FROM table_name\nWHERE some_column=some_value
5255	context.Request.IsLocal
5256	public static IQueryable<T> Active<T>(this IQueryable<T> entityCollection) where T:EntityBase\n{\n    return entityCollection.Where(e => e.Enabled && !e.Deleted);\n}
5257	if (myMap.Rows[(int)cekPosisiPlayer().Y].Columns[(int)(cekPosisiPlayer().X + (7 / 6))].passable)
5258	PagesSection pageSection = new PagesSection();\npageSection.ValidateRequest = false;
5259	// Get the stream associated with the response.\nStream receiveStream = response.GetResponseStream ();\n\nStreamReader readStream = new StreamReader (receiveStream, Encoding.UTF8);\n\nConsole.WriteLine ("Response stream received.");\nConsole.WriteLine (readStream.ReadToEnd ());
5260	powershell.AddCommand("Set-Variable");\npowershell.AddParameter("Name", "cred");\npowershell.AddParameter("Value", Credential);\n\npowershell.AddScript(@"$s = New-PSSession -ComputerName '" + serverName + "' -Credential $cred");\npowershell.AddScript(@"$a = Invoke-Command -Session $s -ScriptBlock {" + cmdlet + "}");\npowershell.AddScript(@"Remove-PSSession -Session $s");\npowershell.AddScript(@"echo $a");
5261	Mock<IFileInformation> fileInformation = new Mock<IFileInformation>();\nfileInformation.SetupGet(x => x.Name).Returns("whatever.txt");\n\nThing serviceResult = new Thing();\nserviceResult.FileInformation = fileInformation.Object;
5262	images= images.Replace(" ", String.Empty);
5263	UIApplication.SharedApplication.Windows[1].AddSubview(myView);
5264	var newList = (\n    from trade in FillList\n    group trade by trade.Date.Date into g\n    select new CurrentTrade { date = g.Key, dwBuy = g.Sum(t => t.dwBuy) }\n).ToList();
5265	HtmlDocument doc = new HtmlDocument();\n doc.Load("file.htm");\n foreach(HtmlNode link in doc.DocumentElement.SelectNodes("//span"])\n {\n\n }
5266	return allFoos.All(foo => foo.FooVar1 == defaultFoo.FooVar1);
5267	var newStr = Regex.Replace(input, @"\s+[\d\.]+\s*Megapixels", "", RegexOptions.IgnoreCase);
5268	const string fileName = "txt.html";\n const string templateFileName = "txtTemplate.html";    \n\nvar content = File.ReadAllText(templateFileName );\ncontent = content.Replace("{0}", textBox1.Text);\n\nFile.WriteAllText(fileName, content);\n\nProcess.Start(fileName);
5269	if (setTest.Tables[0].Rows.Count == 0)
5270	....\nformList = data.Read<WebsiteForm>().ToList();\nsurveyList = data.Read<Survey>().ToList();\n\nformList.ForEach(fl=>fl.Surveys = surveyList.Where(sl=>sl.LinkID == fl.ID).ToList());\n....
5271	Console.WriteLine(date.ToString("dddd MM-dd-yy",usCultureInfo));
5272	string location;\n\nProcess p = new Process;\n\nlocation = System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetEntryAssembly().Location)\n+@"\Resources\batchfile.bat";\n\np.StartInfo.FileName = location;
5273	ilmerge nonsigned.dll /keyfile:key.snk /out:signed.dll
5274	var lines = File.ReadAllLines( path );\nforeach( var line in lines )\n{\n    if( line.StartsWith( ";" ) )\n    {\n        continue;\n    }\n    else\n    {\n        // do your stuff\n    }\n}
5275	var regex = new System.Text.RegularExpressions.Regex(@"(?<=<td>).+?(?=</td>)", RegexOptions.Compiled | RegexOptions.IgnoreCase);\nvar text = "<tr> <td>FO Special Added (Comments, Part #, RFQ #) - 13, 13, 13</td> </tr><tr> <td>FO Special Added (Comments, Part #, RFQ #) - 14, 14, 14</td> </tr><tr> <td>FO Special Added (Comments, Part #, RFQ #) - 15, 15, 15</td> </tr> <td>FO Special Added (Comments, Part #, RFQ #) - 16, 16, 16</td> </tr>";\nvar matches = regex.Matches(text);\n\nvar results = matches.Cast<Match>()\n    .Select(match => match.Value)\n    .ToList();
5276	private void addButton_Click(object sender, System.EventArgs e)\n{\n    //I'm assuming your datatable is a member level variable \n    //otherwise you could get it through the grid\n    //have the datatable send you back a new row\n    DataRow newRow = table.NewRow();\n    //populate your new row with default data here\n    //....\n    //add the new row to the data table\n    table.Rows.Add(newRow);\n}
5277	protected override bool OnPowerEvent(PowerBroadcastStatus powerStatus)\n  { \n     //do stuff here\n  }
5278	void btnGetProcesses_Click(object sender, EventArgs e)\n{\n    Process[] processes = Process.GetProcesses();\n    ListViewItem lstViewItems = null;\n    foreach (Process process in processes)\n    {\n        lstViewItems = new ListViewItem();\n        lstViewItems.Text=process.Id.ToString();\n        lstViewItems.SubItems.Add(process.ProcessName);\n        lstViewItems.SubItems.Add(process.StartTime.ToString());\n        listView1.Items.Add(lstViewItems);\n    }\n}
5279	System.Linq namespace
5280	int resultIndex = (myRepeater.CurrentPageIndex * myRepeater.PageSize) + ItemIndex + 1
5281	System.Threading.Thread.Sleep(5000);
5282	var treeViewItem = treeView.ItemContainerGenerator.ContainerFromIndex(0) as TreeViewItem;\n\ntreeViewItem.Focus();
5283	public interface IOptionSelector<T>\n{\n    event EventHandler SelectedOptionChanged;\n}\npublic interface IReadOnlyOptionSelector<T> : IOptionSelector<T>\n{\n    IReadOnlyCollection<T> Options { get; }\n}\npublic interface IWritableOptionsSelector<T> : IOptionSelector<T>\n{\n    ICollection<T> Options { get; }\n}
5284	[ComVisible(true)]
5285	public class Form1\n{\n    private Panel CreateNotificationPanel()\n    {\n        var p = new Panel { BackColor = Color.Red };\n        p.Controls.Add(new Button { Text = "Test" });\n        return p;\n    }\n\n    private void Form1_Load(System.Object sender, System.EventArgs e)\n    {\n        var flp = new FlowLayoutPanel { Dock = DockStyle.Fill };\n\n        flp.Controls.Add(CreateNotificationPanel());\n        flp.Controls.Add(CreateNotificationPanel());\n        flp.Controls.Add(CreateNotificationPanel());\n\n        this.Controls.Add(flp);\n    }\n\n    public Form1() { Load += Form1_Load; }\n}
5286	public void Linq102() \n{ \n\n    string[] categories = new string[]{  \n        "Beverages",   \n        "Condiments",   \n        "Vegetables",   \n        "Dairy Products",   \n        "Seafood" };  \n\n    List<Product> products = GetProductList(); \n\n    var q = \n        from c in categories \n        join p in products on c equals p.Category \n        select new { Category = c, p.ProductName }; \n\n    foreach (var v in q) \n    { \n        Console.WriteLine(v.ProductName + ": " + v.Category);  \n    } \n}
5287	string[] formats= {"dd/MM/yyyy", "dd-MMM-yyyy", "yyyy-MM-dd", \n                   "dd-MM-yyyy", "M/d/yyyy", "dd MMM yyyy"};\nstring converted = DateTime.ParseExact("16-05-2014", formats, CultureInfo.InvariantCulture, DateTimeStyles.None).ToString("MM/dd/yyyy");
5288	[XmlRoot("Farm")]\npublic class Farm\n{\n    [XmlElement("Person", typeof(Person))]\n    [XmlElement("Dog", typeof(Dog))]\n    public List<Animal> Items { get; set; }\n}
5289	public class UserModel {\n    public string Name {get;set;}\n    public string Age {get;set;}\n    // Other properties here that do not reference another UserModel class.\n}
5290	DateTime expirationDate = new DateTime(2008, 1, 31); // random date\nstring lastTwoDigitsOfYear = expirationDate.ToString("yy");
5291	private void g1_Hold(object sender, Microsoft.Phone.Controls.GestureEventArgs e)\n        {\n              StackPanel stk = (StackPanel)sender;\n              ClassName sg = (ClssName)stk.DataContext;\n              string path=sg.imagepath;\n        }
5292	VisualTreeHelper.GetParent(myUserControl);
5293	ObservableCollection<Product> ProductsObject = new ObservableCollection<Product>();\n\n for (int i = 0; i < GetProductByCategoryResultObject.Products.Count; i++)\n            {\n             ProductsObject.Add(GetProductByCategoryResultObject.Products[i]); \n            }\nProductListView.ItemsSource = ProductsObject;
5294	Buffer.BlockCopy
5295	DateTime dat1 = Convert.ToDateTime("7/28/2014");\n        DateTime dat2 = Convert.ToDateTime("8/1/2014");\n\n        DateTime today = Convert.ToDateTime(DateTime.Now.ToString("MM/dd/yyy"));\n\n        if (today > dat1 && today < dat2)\n        {\n\n           // between\n        }\n        else\n        {\n            // lies between\n        }
5296	Image image = Image.getInstance(IMG);\nimage.scaleAbsolute(12, 12);\nimage.setScaleToFitHeight(false);\nList list = new List();\nlist.setListSymbol(new Chunk(Image.getInstance(image), 0, 0));\nlist.add("Hello World");\nlist.add("This is a list item with a lot of text. It will certainly take more than one line. This shows that the list item is indented and that the image is used as bullet.");\nlist.add("This is a test");\ndocument.add(list);
5297	Regex rx = new Regex( @"^(?!9999)\d{5,9}$" ) ;
5298	EditorUtility.SetDirty (tb);
5299	static AmazonS3 client;\nclient = Amazon.AWSClientFactory.CreateAmazonS3Client(\n                    accessKeyID, secretAccessKeyID);\n\nListObjectsRequest request = new ListObjectsRequest();\nrequest.BucketName = bucketName;\ndo\n{\n   ListObjectsResponse response = client.ListObjects(request);\n\n   // Process response.\n   // ...\n\n   // If response is truncated, set the marker to get the next \n   // set of keys.\n   if (response.IsTruncated)\n   {\n        request.Marker = response.NextMarker;\n   }\n   else\n   {\n        request = null;\n   }\n} while (request != null);
5300	var processes=Process.GetProcessByName( "AppName" );\nforeach(var process in processes )\n    process.Kill();
5301	int rows = 8;\nint colums = 8;\nString[,] data = new String[colums, rows];\nint x = 0;\nint y = 0;\n\nfor(; y < rows; y++)\n{\n    for (; x < colums; x++)\n    {\n        Console.Write(data[x, y] + " ");\n        if (x == (colums - 1))\n        {\n            Console.WriteLine("");\n            Console.WriteLine("");\n        }\n    }\n    x = 0;\n}\n\nint userSelectedHomeTeam\nint userSelectedAwayTeaM\n\nConsole.WriteLine("Select home team by the number")\nfor(int i = 1; i < colums; i++)\n{   \n    Console.WriteLine(data[i, 0] + " " + i)\n}\nstr = Console.ReadLine(); \nuserSelectedHomeTeam = Int32.Parse(str);\n\nConsole.WriteLine("Select away team by the number")\nfor(int i = 1; i < colums; i++)\n{   \n    Console.WriteLine(data[i, 0] + " " + i)\n}\nstr = Console.ReadLine(); \nuserSelectedAwayTeam = Int32.Parse(str);\n\nConsole.WriteLine("Write user input")\nstr = Console.ReadLine(); \ndata[userSelectedHomeTeam , userSelectedAwayTeam ] = str;
5302	var canvas = new Canvas\n             {\n                 Clip = Geometry.Parse("F1 M 0,0L 76,0L 76,76L 0,76L 0,0"),\n                 Margin = new Thickness(1330, 19, -231, 302)\n             };\n\nvar path = new Path\n           {\n               Width = 8,\n               Height = 8,\n               Fill = new SolidColorBrush(Colors.Black),\n               Stretch = Stretch.Fill,\n               Data = Geometry.Parse("F1 M 18,23L 58,23L 58,53L 18,53L 18,23 Z M 54,31L 22,31L 22,49L 54,49L 54,31 Z")\n           };\n\ncanvas.Children.Add(path);\nCanvas.SetTop(path, 3);\nCanvas.SetLeft(path, 3);
5303	public partial class DummyControlContainer : UserControl\n{\n    private Dictionary<string, Control> _ControlMap;\n\n    public DummyControlContainer()\n    {\n        InitializeComponent();\n\n        _ControlMap = new Dictionary<string, Control>();\n        this.ControlAdded +=\n            new ControlEventHandler(DummyControlCollection_ControlAdded);\n    }\n\n    void DummyControlCollection_ControlAdded(object sender,\n        ControlEventArgs args)\n    {\n        // If the added Control doesn't provide its own BindingContext,\n        // set a new one\n        if (args.Control.BindingContext == this.BindingContext)\n            args.Control.BindingContext = new BindingContext();\n        _ControlMap.Add(args.Control.Name, args.Control);\n    }\n\n    public Control this[string name]\n    {\n        get { return _ControlMap[name]; }\n    }\n}
5304	List<string> lst = new List<string>(new string[] { "a", "b", "c", "d" });\nList<string> lst1 = lst.GetRange(0, 2);\nlst.RemoveRange(0, 2);
5305	protected void ASPxGridView1_CustomColumnDisplayText(object sender, \n   ASPxGridViewColumnDisplayTextEventArgs e)\n    {\n        if (e.Column.FieldName == "Column1")\n        {\n            Label1.Text = e.Value.ToString();\n        }\n\n        if (e.Column.FieldName == "Column2")\n        {\n\n            Label2.Text = e.Value.ToString();\n        }\n\n       . \n\n       .\n\n       if (e.Column.FieldName == "Column12")\n        {\n\n            Label12.Text = e.Value.ToString();\n        }\n\n    }
5306	XmlNode XNode = doc.CreateProcessingInstruction("mso-application ", "progid=\"Excel.Sheet\"");\n     doc.AppendChild(XNode);
5307	static readonly char[] space = { ' ' };\n...\nstring[] items = line.Split(space, StringSplitOptions.RemoveEmptyEntries);
5308	Employees.SelectMany(e => e.ListEmployeeCashAllowances).Where(lc => lc.CashAllowanceId == selectedCashAllowanceId).Select(c => c.ValueTaken).Sum();
5309	System.Configuration
5310	var writePermissionSet = new PermissionSet(PermissionState.None);\nwritePermissionSet.AddPermission(new FileIOPermission(FileIOPermissionAccess.Write, path));\n\nif (!Properties.Settings.Default.searchReadOnly &&\n    !writePermissionSet.IsSubsetOf(AppDomain.CurrentDomain.PermissionSet))\n    //diPath.Attributes.HasFlag(FileAttributes.ReadOnly))\n    searchable = false;
5311	anim.SetFloat(hash.speedFloat, 5.5f, speedDampTime, Time.deltaTime);
5312	var barkFunction = ((Expression<Func<Foo, bool>>)barkExpression).Compile()
5313	tnParent.Text = dr["ACCT_GRP"].ToString().Replace("'"; "''");
5314	public <Material> Material { get; }\npublic void Draw(<Tool> pen);
5315	long SetRangeMask(int lower, int upper)     // 3..7\n{\n   if (! (lower <= upper)) throw new ArgumentException("...");\n\n   int size = upper - lower + 1;            // 7 - 3 + 1 = 5\n   if (size >= 64) return -1;\n   long mask = (1 << size) - 1;             // #00100000 - 1  = #000011111\n   return mask << lower | mask >> -lower;   // #00011111 << 3 = #011111000\n}
5316	static async void Main()\n{\n    try \n    {\n      // Create a New HttpClient object.\n      HttpClient client = new HttpClient();\n\n      HttpResponseMessage response = await client.GetAsync("http://www.contoso.com/");\n      response.EnsureSuccessStatusCode();\n      string responseBody = await response.Content.ReadAsStringAsync();\n      // Above three lines can be replaced with new helper method in following line \n      // string body = await client.GetStringAsync(uri);\n\n      Console.WriteLine(responseBody);\n    }  \n    catch(HttpRequestException e)\n    {\n      Console.WriteLine("\nException Caught!"); \n      Console.WriteLine("Message :{0} ",e.Message);\n    }\n }
5317	private void TabHost_SelectionChanged(object sender, SelectionChangedEventArgs e)\n{\n    TabHost.Focus();\n}
5318	var dirs = from file in myList\n     let fileInfo = new DirectoryInfo(file)\n     orderby fileInfo.CreationTime ascending\n     select fileInfo;
5319	var formCollection = (Microsoft.Owin.FormCollection)context.Parameters;\n\nvar userId = formCollection.Get("userId");
5320	public class MyClass {\n    public ObjectId Id;\n    [BsonRepresentation(BsonType.Document)]\n    public DateTime MyDateTime;\n}
5321	>>> import time\n>>> time.localtime(22194885*60)\ntime.struct_time(tm_year=2012, tm_mon=3, tm_mday=13, tm_hour=19, tm_min=45, tm_sec=0, tm_wday=1, tm_yday=73, tm_isdst=1)
5322	private static int Main(string[] args)\n{\n    string line= "<H2:H2LabelComboBoxCell ID=\"LabelComboboxCellProject\"  SecurityID=\"CD4D3959-0ADB-4375-8DCF-917157528BDE\"/>";\n\n    string stringToFind = "ID=\"";\n    int firstQuote = line.IndexOf(stringToFind) + stringToFind.Length;\n    int nextQuote  = line.IndexOf("\"",firstQuote);\n\n    string id= line.Substring(firstQuote,nextQuote-firstQuote);\n\n    System.Console.Write("id="+id);\n    return 0;\n}
5323	Uri postUri = new Uri();
5324	static void Main(string[] args)\n{\n    int counter = 0;\n    Console.WriteLine(fun(ref counter)); // Prints 1\n    Console.WriteLine(counter); // Prints 3\n}        \n\nstatic int fun(ref int counter)\n{\n  try\n  {\n      counter = 1;\n      return counter;\n  }\n  finally\n  {\n      counter = 3;\n  }\n}
5325	protected void insertButton_Click(object sender, EventArgs e)\n{\n    // This is the crux - \n    GridViewRow row = (GridViewRow)((sender as Button).NamingContainer);\n    // ...\n    // then you can get your textboxes\n    // Since we know it's an insert\n    dt.Columns.Add("id");\n    dt.Columns.Add("name");\n    dt = (DataTable)Session["students"];\n    DataRow dr = dt.NewRow();\n    TextBox txtnewid = (TextBox) row.FindControl("txtNewId");\n    TextBox txtnewName =  (TextBox) row.FindControl("txtNewName");\n    dr["id"] =  txtnewid.Text;\n    dr["name"] = txtnewName.Text ;\n    dt.Rows.Add(dr);\n    Session["students"] = dt;\n    gv.DataSource = dt;\n    gv.DataBind();\n}
5326	int lastX = 0;\nfor (int i = 0; i < 4; i++) {\n  Button b = new Button();\n  b.Location = new Point(lastX, 0);\n  this.Controls.Add(b);\n  lastX += b.Width;\n}
5327	private void MeasureStringWidth(PaintEventArgs e)\n{\n\n    // Set up string. \n    string measureString = "Measure String";\n    Font stringFont = new Font("Arial", 16);\n\n    // Set maximum width of string. \n    int stringWidth = 200;\n\n    // Measure string.\n    SizeF stringSize = new SizeF();\n    stringSize = e.Graphics.MeasureString(measureString, stringFont, stringWidth);\n\n    // Draw rectangle representing size of string.\n    e.Graphics.DrawRectangle(new Pen(Color.Red, 1), 0.0F, 0.0F, stringSize.Width, stringSize.Height);\n\n    // Draw string to screen.\n    e.Graphics.DrawString(measureString, stringFont, Brushes.Black, new PointF(0, 0));\n}
5328	/// <summary>\n/// Prepares the range specifier.\n/// </summary>\nprivate void PrepareRangeSpecifier()\n{                  \n    //clear the items from the end range list\n    ddlEndDayOfWeek.Items.Clear();\n\n    if (pnlEndDayOfWeek.Visible)\n    {\n        foreach (RadComboBoxItem item in ddlStartDayOfWeek.Items)\n        {\n            //insert the list items from the start range list\n            if (item.Index > ddlStartDayOfWeek.SelectedIndex)\n                ddlEndDayOfWeek.Items.Add(new RadComboBoxItem(item.Text, item.Value));\n        }\n\n        //set end range panel visibility\n        pnlEndDayOfWeek.Visible = ddlEndDayOfWeek.Items.Count > 0;\n    }\n\n    //if the end range has any items\n    if (ddlEndDayOfWeek.Items.Count > 0)\n        ddlEndDayOfWeek.Items.FirstOrDefault().Selected = true;\n}
5329	this.Height = (System.Windows.SystemParameters.PrimaryScreenHeight * 0.25);\nthis.Width = (System.Windows.SystemParameters.PrimaryScreenWidth * 0.25);
5330	Console.SetCursorPosition(0, Console.CursorTop -1);\nConsole.WriteLine("Over previous line!!!");
5331	MailMessage msg = new MailMessage();\nstring system_Area_Encoded = HttpContext.Current.Server.HtmlEncode(system_Area);\nstring assigned_ToVal_Encoded = HttpContext.Current.Server.HtmlEncode(Assigned_ToVal);\nstring taskStatus_Encoded = HttpContext.Current.Server.HtmlEncode(TaskStatus);\nstring msgBody_Encoded = HttpContext.Current.Server.HtmlEncode(MsgBody);\nmsg.Body = string.Format(@"<b>System Area :</b>{0}<br /><b>Assigned To : </b>{1}<br /><b>Status :</b><font color=#0000FF>{2}</font><br /><br><b>Description :</b> {3}", system_Area_Encoded, assigned_ToVal_Encoded, taskStatus_Encoded, msgBody_Encoded);
5332	List<string>
5333	public class Node {\n  public Node next;\n  public int val;\n}\nclass MyList {\n  Node head = null;\n  Node tail = null;\n  public MyList() { }\n  bool isEmpty() {\n    return head == null;\n  }\n  void add(int val) {\n    if (isEmpty())\n      head = tail = new Node();\n    else {\n      tail.next = new Node();\n      tail = tail.next;\n    }\n    tail.val = val;\n  }\n}
5334	var News = (from news in db.News                   \n               select new \n               {\n               ID = news.NewsID,\n               kort = news.Short\n               }).AsEnumerable().Reverse();
5335	b.BaseStream.Position = 0;
5336	using System.Runtime.InteropServices; //to DllImport\n\npublic int WM_SYSCOMMAND = 0x0112;\npublic int SC_MONITORPOWER = 0xF170; //Using the system pre-defined MSDN constants that can be used by the SendMessage() function .\n\n\n[DllImport("user32.dll")]\nprivate static extern int SendMessage(int hWnd, int hMsg, int wParam, int lParam);\n//To call a DLL function from C#, you must provide this declaration .\n\n\nprivate void button1_Click(object sender, System.EventArgs e)\n{\n\nSendMessage( this.Handle.ToInt32() , WM_SYSCOMMAND , SC_MONITORPOWER ,2 );//DLL function\n}
5337	(?<=[\r\n]SVC\*)\b(\w*)\b
5338	SomeClass.Range1 = (int)dt.Rows[0]["Range"]; //Gets value in 'Range' column in first row.\nSomeClass.Range2 = (int)dt.Rows[1]["Range"]; //Gets value in 'Range' column in second row.\n//Add more here.
5339	HtmlDocument doc = new HtmlDocument();\ndoc.LoadHtml("text <a href=\"...\" class=\"...\"><img src=\"...\" class=\"...\" width=\"...\" /></a> more text"\n     +" <a href=\"...\" class=\"...\"><img src=\"...\" class=\"...\" width=\"...\" /></a> even more text\"");\n\nvar firstImage = doc.DocumentNode.Descendants("img").Where(node => node.ParentNode.Name == "a").FirstOrDefault();\n\nif (firstImage != null)\n{\n    var aNode = firstImage.ParentNode;\n    aNode.RemoveChild(firstImage);\n    aNode.ParentNode.ReplaceChild(firstImage, aNode);\n}\n\nvar fixedText = doc.DocumentNode.OuterHtml;\n//doc.Save(/* stream */);
5340	public static void RemoveNamespace(this XElement element)\n    {\n        foreach (XElement e in element.DescendantsAndSelf())\n        {\n            if (e.Name.Namespace != XNamespace.None)\n                e.Name = e.Name.LocalName;\n\n            if (e.Attributes().Any(a => a.IsNamespaceDeclaration || a.Name.Namespace != XNamespace.None))\n                e.ReplaceAttributes(e.Attributes().Select(NoNamespaceAttribute));\n        }\n    }\n\n    private static XAttribute NoNamespaceAttribute(XAttribute attribute)\n    {\n        return attribute.IsNamespaceDeclaration\n            ? null\n            : attribute.Name.Namespace != XNamespace.None\n                ? new XAttribute(attribute.Name.LocalName, attribute.Value)\n                : attribute;\n    }
5341	Return RedirectToAction("Details", New With { .id = dinner.DinnerID})
5342	using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.Runtime.InteropServices;\n\nnamespace WindowsFormsApplication1\n{\n    public partial class Form1 : Form\n    {\n\n[return: MarshalAs(UnmanagedType.Bool)]\n[DllImport("user32.dll", CharSet = CharSet.Auto, ExactSpelling = true)]\npublic static extern void BlockInput([In, MarshalAs(UnmanagedType.Bool)]bool fBlockIt);\n\n        public Form1()\n        {\n            InitializeComponent();\n        }\n\n        private void Form1_Load(object sender, EventArgs e)\n        {\n            this.Show();\n            //Blocks the input\n            BlockInput(true);\n            System.Threading.Thread.Sleep(5000);\n            //Unblocks the input\n            BlockInput(false); \n        }\n    }\n}
5343	MySql.Data.MySqlClient.MySqlConnection conn;\nstring myConnectionString;\n\nmyConnectionString = "server=127.0.0.1;uid=root;pwd=12345;database=test;";\n\ntry\n{\n    conn = new MySql.Data.MySqlClient.MySqlConnection();\n    conn.ConnectionString = myConnectionString;\n    conn.Open();\n}\ncatch (MySql.Data.MySqlClient.MySqlException ex)\n{\n    MessageBox.Show(ex.Message);\n}
5344	MultiBinding multiBinding = new MultiBinding();\n\nmultiBinding.Converter = converter;\n\nmultiBinding.Bindings.Add(new Binding\n{\n    ElementName = "FirstSlider",\n    Path = new PropertyPath("Value")\n});\nmultiBinding.Bindings.Add(new Binding\n{\n    ElementName = "SecondSlider",\n    Path = new PropertyPath("Value")\n});\nmultiBinding.Bindings.Add(new Binding\n{\n    ElementName = "ThirdSlider",\n    Path = new PropertyPath("Value")\n});
5345	UserForms[0].Visibility = true;
5346	private void FormClosing(object sender, FormClosingEventArgs e)\n{\n    CachedText = scintilla.Text;\n}\n\npublic string CachedText { get; private set; }
5347	atext = ALPHA / DIGIT / ; Any character except controls,\n        "!" / "#" /     ;  SP, and specials.\n        "$" / "%" /     ;  Used for atoms\n        "&" / "'" /\n        "*" / "+" /\n        "-" / "/" /\n        "=" / "?" /\n        "^" / "_" /\n        "`" / "{" /\n        "|" / "}" /\n        "~"
5348	class Program\n{\n    static void Main(string[] args)\n    {\n        var doc = new XmlDocument();\n        doc.Load(@"..\..\input.xml");\n\n        var container = doc.DocumentElement\n            .GetElementsByTagName("Dealers")\n            .OfType<XmlElement>()\n            .FirstOrDefault();\n\n        if (container == null) return;\n\n        var dealers = container\n            .GetElementsByTagName("Dealer")\n            .OfType<XmlElement>();\n\n        foreach (var dealer in dealers)\n        {\n            var dealerId = dealer.GetAttribute("id");\n            Console.Write(dealerId + " - ");\n\n            var descrip = dealer.GetElementsByTagName("Description").OfType<XmlElement>().FirstOrDefault();\n            if (descrip != null)\n                Console.WriteLine(descrip.InnerText);\n\n            // etc...\n        }\n        Console.ReadLine();\n    }\n}
5349	int serviceday;\nint servicehour;\nint serviceminute;\nInt32.TryParse(ServiceDay, out serviceday);\nInt32.TryParse(ServiceHour, out servicehour);\nInt32.TryParse(ServiceMinute, out serviceminute);\nDateTime finalDateTime = serviceEntry.ServiceDateTime\n                        .AddDays(serviceday)\n                        .AddHours(servicehour)\n                        .AddMinutes(serviceminute);
5350	foreach (Component comp in this.components.Components) {\n            var ilist = comp as ImageList;\n            if (ilist != null) {\n                // Got one, do something with it\n                //...\n            }\n        }
5351	class Program\n{\n\n    private static bool _s_stop = false;\n\n    public static void Main(string[] args)\n    {\n        Console.CancelKeyPress += new ConsoleCancelEventHandler(Console_CancelKeyPress);\n        while (!_s_stop)\n        {\n            /* put real logic here */\n            Console.WriteLine("still running at {0}", DateTime.Now);\n            Thread.Sleep(3000);\n        }\n        Console.WriteLine("Graceful shut down code here...");\n\n        //don't leave this...  demonstration purposes only...\n        Console.ReadLine();\n    }\n\n    static void Console_CancelKeyPress(object sender, ConsoleCancelEventArgs e)\n    {\n        //you have 2 options here, leave e.Cancel set to false and just handle any\n        //graceful shutdown that you can while in here, or set a flag to notify the other\n        //thread at the next check that it's to shut down.  I'll do the 2nd option\n        e.Cancel = true;\n        _s_stop = true;\n        Console.WriteLine("CancelKeyPress fired...");\n    }\n\n}
5352	oDrawRectangle = new Rectangle(this.Width / 2 - iWidth / 2, this.Height / 2 - iHeight / 2, iWidth, iHeight);
5353	if (variable == 1) {\n    ComboxBox1.Items.Add("item3");\n}
5354	ScriptManager.RegisterStartupScript(UpdatePanel2, this.GetType(), "click", "alert('This Email address is already registered...');window.location.href ='test.aspx?WidgetID=" + Request.QueryString["WidgetID"] + "&lan=" + readCookie() + "&seeHome=true'", true);
5355	public static void Main()\n{\n    List<ValueType> values = new List<ValueType> {3, DateTime.Now, 23.4M};\n    DuplicateLastItem(values);\n\n    Console.WriteLine(values[2]);\n    Console.WriteLine(values[3]);\n    values[3] = 20;\n    Console.WriteLine(values[2]);\n    Console.WriteLine(values[3]);\n}\n\nstatic void DuplicateLastItem(List<ValueType> values2)\n{\n    values2.Add(values2[values2.Count - 1]);\n}
5356	private void OrdersButton_Click(object sender, EventArgs e)\n    {\n        if (OrdersButton.Text == "Turn Orders On")\n        {\n            OrdersButton.Text = "Turn Orders Off";\n        }\n        else if (OrdersButton.Text == "Turn Orders Off")\n        {\n            OrdersButton.Text = "Turn Orders On";\n        }\n    }
5357	protected override void OnStart(string[] args)\n        {\n            this.timer = new System.Timers.Timer(10000D);\n            this.timer.AutoReset = true;\n            this.timer.Elapsed += new System.Timers.ElapsedEventHandler(this.timer_Elapsed);\n            this.timer.Start();\n        }\n        protected override void OnStop()\n        {\n            this.timer.Stop();\n            this.timer = null;\n        }\n\n        protected void timer_Elapsed(object sender, System.Timers.ElapsedEventArgs e)\n        {\n            this.proccessQue();\n        }
5358	XDocument doc = XDocument.Parse(xml);\nList<string> ids = doc.Descendants("employee")\n                        .Select(e => e.Attribute("id").Value)\n                          .ToList();
5359	htmlDoc.DocumentNode.SelectNodes("//div[@ispublished='false' or @ispublished='False']");
5360	int[] scoreArray = { 5, 3, 9, 8, 1 };\n\n        int new_number = 6;\n\n        //Replaces smallest number by your new number\n        int min_index = Array.IndexOf(scoreArray, scoreArray.Min());\n        scoreArray[min_index] = new_number;\n\n        Array.Sort(scoreArray);\n        Array.Reverse(scoreArray);
5361	string name = "Unknown";\n        foreach (KnownColor kc in Enum.GetValues(typeof(KnownColor)))\n        {\n            Color known = Color.FromKnownColor(kc);\n            if (Color.FromArgb(255,255,140,0).ToArgb() == known.ToArgb())\n            {\n                label1.Text = known.Name;\n                break;\n            }\n        }
5362	//List of items to return\nList<PlanObjectsViewModel> result = new List<PlanObjectsViewModel>();\n\nRandom rand = new Random();\nint temp=0;\n\nwhile(budget>temp)\n{\n    //Get random item within selection\n    int randi = rand.Next(0, count);\n    var nthItem = model1.Skip(randi).First();\n\n    //Remove this test if you are happy adding duplicates\n    if (!result.Find(nthItem)\n    {\n        result.Add(nthItem); \n\n        //Update temp with calculation from nthItem just added\n    }\n}
5363	hitBounds = Math.Abs(ship.position.x - transform.position.x) >= xBound || Math.Abs(ship.position.y - transform.position.y) >= yBound;
5364	SamplerState somethingLikeThis {\n    Filter = MIN_MAG_MIP_LINEAR;\n    AddressU = Clamp;\n    AddressV = Clamp;\n};
5365	[DynamicTestFactory]\n    public IEnumerable<Test> LoginAndOut() \n    {\n        string method;\n        while (Model.graphWalker.HasNextStep())\n        {\n            method=Model.graphWalker.GetNextStep().ToString();\n            if (method == string.Empty)\n                break;\n            yield return new TestCase(method, () =>\n                {\n                    object obj = this.GetType().InvokeMember(method, BindingFlags.InvokeMethod | BindingFlags.Instance | BindingFlags.Public, null, this, null);\n                });\n        }\n     }
5366	namespace BH_Server {\n    [ServiceContract]\n    public interface BHInterface {\n        [OperationContract]\n        string GetName( string name );\n        [OperationContract]\n        Device GetDevice();\n    }\n    [DataContract( Name = "Device", Namespace = "" )]\n    public class Device {\n\n        [DataMember( Name = "SN", Order = 1 )]\n        public string SN { get; set; }\n    }\n}
5367	Regex r = new Regex(@"[ ]{2,}");     \nvar newStr = r.Replace(FileContents, @",");
5368	ExportFile()
5369	buttons.Where(b => buttonGroups.ContainsKey((int)b.Tag))
5370	foreach (var edge in distinctEdge)\n{\n    edge.value = EdgeList.Count(e => e.target == edge.target && e.source == edge.source);\n}
5371	public static void WriteBeginComment(this HtmlTextWriter writer)\n{\n    writer.Write(HtmlTextWriter.TagLeftChar);\n    writer.Write("!--");\n}\n\npublic static void WriteEndComment(this HtmlTextWriter writer)\n{\n    writer.Write("--");\n    writer.Write(HtmlTextWriter.TagRightChar);\n}\n\npublic static void WriteComment(this HtmlTextWriter writer, string comment)\n{\n    if (\n        comment.StartsWith(">") || \n        comment.StartsWith("->") || \n        comment.Contains("--") ||\n        comment.EndsWith("-"))\n    {\n        throw new ArgumentException(\n            "text does not meet HTML5 specification",\n            "comment");\n    }\n\n    writer.WriteBeginComment();\n    writer.Write(comment);\n    writer.WriteEndComment();\n}
5372	public MainPage()\n{\n    Windows.Phone.UI.Input.HardwareButtons.BackPressed += HardwareButtons_BackPressed;\n}\n\nprivate void HardwareButtons_BackPressed(object sender, Windows.Phone.UI.Input.BackPressedEventArgs e)\n{\n    /* When you don't know the namespace you can use this code instead of the lower\n\n    string[] Namespace = Frame.CurrentSourcePageType.FullName.Split('.');\n    if (!e.Handled && Frame.CurrentSourcePageType.FullName == Namespace[0] + ".MainPage")\n            Application.Current.Exit();\n    */\n    if (!e.Handled && Frame.CurrentSourcePageType.FullName == "NAMESPACE.MainPage")\n        Application.Current.Exit();\n}
5373	Transaction_Id,Value_Date,Transmit_Date,Transmit_Time,Contract_Id,Contract_Amount,Contract_RageTestAmount,Employer_Code,Test_Acceptor,Institution_Id\n35454521,20111230,20120102,2:23:12,1442,1714.56,1,285.76,0,643650
5374	protected void Button1_Click(object sender, EventArgs e)\n{    \n    DateTime dateToday = DateTime.Now;\n    DateTime dateInFiveDays = dateToday.AddDays(5);\n\n    lblDateToday = dateToday.ToString("MMMMMM dd, yyyy HH:mm");\n    lblValiDate = dateInFiveDays.ToString("MMMMMM dd, yyyy HH:mm");\n}
5375	property == null
5376	Code Editing -> C# -> Localization
5377	rmtool.exe -p [PID] -S
5378	let uploadFile (uri: Uri) fileName =\n    async {\n        use stream = File.OpenRead fileName\n        use client = new HttpClient()\n        return! client.PostAsync(uri, new StreamContent(stream)) |> Async.AwaitTask\n    }
5379	CRAXDDRT.SubreportObject subReport = null;\n\nforeach (CRAXDDRT.Section section in crystalReport.Sections)\n{\n    foreach (object item in section.ReportObjects)\n    {\n        subReport = item as CRAXDDRT.SubreportObject;\n        if (subReport != null)\n        {\n            //loop code here\n        }\n    }\n}
5380	image.Save(Server.MapPath(FileName));\n        MemoryStream stream1 = new MemoryStream(System.IO.File.ReadAllBytes(Server.MapPath(Filename)));\n        System.IO.File.Delete(Server.MapPath(Filename));
5381	File.Delete("<your file directory>");
5382	public class MyMongoRepository<T> : MongoRepository<T>\n{\n    // of course you should fill in the real connection string here.\n    public MyMongoRepository() : base("connectionString", "name") { }\n}\n\ncontainer.RegisterType(typeof(IRepository<>), typeof(MyMongoRepository<>));
5383	int numOfEvents = eventsForAllMonths.SelectMany(m => m.AllDays)\n                                    .Select(d => d.CalEvents.Count)\n                                    .Sum();
5384	result = kpiReportClient.Render(format, devInfo, out extension, out encoding, out mimeType, out warnings, out streamIDs);\nConsole.WriteLine(result);\nresult = kpiReportClient.Render(format, devInfo, out extension, out encoding, out mimeType, out warnings, out streamIDs);\nStream resStream = new MemoryStream(result);\nvar nonRepSickReportForNM = XElement.Load(resStream);\nreturn nonRepSickReportForNM
5385	Table Leave\nemp_id,\nleave_id,\nleave_Type,\ndays_applied,\nfrom_date,\nto_date,\ndate_applied\n\n\nTable Leave Type\nleave_Type_id,\nleave_Type
5386	Encoding iso = Encoding.GetEncoding("ISO-8859-1");\nEncoding utf8 = Encoding.UTF8;\nbyte[] utfBytes = utf8.GetBytes(Message);\nbyte[] isoBytes = Encoding.Convert(utf8, iso, utfBytes);\nstring msg = iso.GetString(isoBytes);
5387	private void button1_Click(object sender, EventArgs e)\n    {\n        treeView1.Focus();\n        SendKeys.SendWait("{UP}");\n    }
5388	WPFUC userControl = (WPFUC)elementHost1.Child;\nuserControl.Parameter = "line"; //To draw line\nor\nuserControl.Parameter = "rectangle"; //To draw rectangle
5389	MediaFoundationEncoder.EncodeToMp3
5390	private void xrLabel_BeforePrint(object sender, System.Drawing.Printing.PrintEventArgs e) {\n    // Obtain the current label.\n    XRLabel label = (XRLabel)sender;\n\n    //Obtain the parent Report\n    XtraReportBase parentReport = label.Report;\n\n    //Get the data object\n    object currentData = parentReport.GetCurrentRow();\n\n    //Pass this object to Tag\n    label.Tag = currentData;\n}
5391	private void DataGridView_CellValueChanged(object sender, DataGridViewCellEventArgs e)\n{\n      this.bindingList[e.RowIndex] = (myEnumeration)DataGridView[e.ColumnIndex, e.RowIndex].Value;\n}
5392	using System.Net;\nusing System.Net.Mail;\n\nvar fromAddress = new MailAddress("from@gmail.com", "From Name");\nvar toAddress = new MailAddress("to@example.com", "To Name");\nstring fromPassword = "fromPassword";\nstring subject = "Subject";\nstring body = "Body";\n\nvar smtp = new SmtpClient\n           {\n               Host = "smtp.gmail.com",\n               Port = 587,\n               EnableSsl = true,\n               DeliveryMethod = SmtpDeliveryMethod.Network,\n               UseDefaultCredentials = false,\n               Credentials = new NetworkCredential(fromAddress.Address, fromPassword)\n           };\nusing (var message = new MailMessage(fromAddress, toAddress)\n                     {\n                         Subject = subject,\n                         Body = body\n                     })\n{\n    smtp.Send(message);\n}
5393	public ActionResult ByAlias([Bind(Prefix = "id")] string alias) {\n    // your code here\n}
5394	private void backgroundWorker1_DoWork(object sender, DoWorkEventArgs e) {\n        string path = (string)e.Argument;\n        processFile(path);\n    }\n\n    private void processToolStripMenuItem_Click(object sender, EventArgs e) {\n        backgroundWorker1.RunWorkerAsync(openSingleFile.FileName);\n        processToolStripMenuItem.Enabled = false;\n    }\n\n    private void backgroundWorker1_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e) {\n        processToolStripMenuItem.Enabled = true;\n    }
5395	int numberOfElements = 10;\nvar mock = Mock.Of<ICalendar>(x =>\n           x.GetSchedules() == Enumerable.Repeat(Mock.Of<ISchedule>(), numberOfElements).ToList());
5396	private static object _lock = new object();\nprivate static int _queuedCount = 0;\n\npublic Map()\n{\n  InitializeComponent();\n\n  _worker = new BackgroundWorker();\n  _worker.DoWork += _worker_DoWork;\n  _worker.ProgressChanged += _worker_ProgressChanged;\n  _worker.WorkerReportsProgress = true;\n}\n\nprivate void _worker_DoWork(object sender, DoWorkEventArgs e)\n{\n    _frameCount = _frames.FrameCount();\n    // For this specific example, _frameCount may be around 30000-40000\n    for (var i = 0; i < _frameCount; i++)\n    {\n      var f = _frames.Frame(i + 1);\n      lock(_lock)\n      {\n          _queuedCount++;\n      }\n      _worker.ReportProgress(i, f);\n      Thread.Sleep(_tickCount);\n      _suspend.WaitOne(); // Used to Pause the playback\n    }\n}\nvoid _worker_ProgressChanged(object sender, ProgressChangedEventArgs e)\n{\n  if (_queuedCount > 1)\n      //now queue is building up\n\n  this.Refresh();\n  lock(_lock)\n  {\n      _queuedCount--;\n  }\n}
5397	metadataStore.setEntityTypeForResourceName("Products", "Product:#Model");\nmetadataStore.setEntityTypeForResourceName("Uoms", "Uom:#Model");
5398	BitmapImage bi = new BitmapImage();\nbi.BeginInit();\nbi.CacheOption = BitmapCacheOption.OnLoad;\nbi.CreateOptions = BitmapCreateOptions.None;\nbi.StreamSource = decryptedImageStream;\nbi.EndInit();
5399	Connection.Query()
5400	Console.ReadKey();
5401	var elem = (HtmlTableCell)FindControl("cell_" + i.ToString());\nelem.InnerText = "yada yada";
5402	var sel = eval(Selector);
5403	Text = "{Binding Path=Settings.TotalTime}"
5404	public class Forwarded\n{\n    [XmlElement(ElementName = "delay", Namespace = "urn:xmpp:delay")]\n    public Delay Delay { get; set; }\n    [XmlElement(ElementName = "message")]\n    public XmppMessage Message { get; set; }\n    [XmlAttribute(AttributeName = "xmlns")]\n    public string Xmlns { get; set; }\n}\n\npublic class Result\n{\n    [XmlElement(ElementName = "forwarded", Namespace = "urn:xmpp:forward:0")]\n    public Forwarded Forwarded { get; set; }\n    [XmlAttribute(AttributeName = "xmlns")]\n    public string Xmlns { get; set; }\n    [XmlAttribute(AttributeName = "id")]\n    public string Id { get; set; }\n}\n\n[XmlRoot(ElementName = "message")]\npublic class MessageHistory\n{\n    [XmlElement(ElementName = "result", Namespace = "urn:xmpp:mam:tmp")]\n    public Result Result { get; set; }\n    [XmlAttribute(AttributeName = "from")]\n    public string From { get; set; }\n    [XmlAttribute(AttributeName = "to")]\n    public string To { get; set; }\n}
5405	somevalue = typeof(MyTable).GetProperty(fieldName).GetValue(table, null);
5406	Byte[] SeatL1 = new UTF8Encoding(true)\n           .GetBytes("L1=" + r2.BackColor.R.ToString("000") + \n                     ", " + r2.BackColor.G.ToString("000") + \n                     ", " + r2.BackColor.B.ToString("000"));\nfsNew.Write(SeatL1, 0, SeatL1.Length);
5407	FileInfo finfo = new FileInfo(fileName);\nstring fileName = finfo.Extension
5408	List<List<KeyValuePair<string, double>>> dblWordFreqByCluster = new List<List<KeyValuePair<string, double>>>();\n int count = dblWordFreqByCluster.count;
5409	string str = DateTime.Now.ToString("u");
5410	((BoundField)GridView1.Columns[ColumnIndex]).DataFormatString = myFormatString;
5411	var nuds = new []\n{\n    numericUpDown1, numericUpDown2,\n    numericUpDown3, numericUpDown4,\n    numericUpDown5, numericUpDown6,\n    // etc\n};\n\nfor (int i = 0; i < readBuf.Length; i++)\n{\n    nuds[i].Value = Convert.ToDecimal(BitConverter.ToSingle(readBuf[i], startIndex: 0));\n}
5412	FederatedAuthentication.SessionAuthenticationModule.SessionSecurityTokenReceived += SessionAuthenticationModule_SessionSecurityTokenReceived;
5413	Thread newThread = new Thread(delegate() { stream(string); });\nthis.list.Add(newThread);\nnewThread.isBackground = true;\nnewThread.Start();
5414	void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)\n{\n    if (e.Row.RowType == DataControlRowType.DataRow)\n    {\n        var firstCell = e.Row.Cells[0];\n        firstCell.Controls.Clear();\n        firstCell.Controls.Add(new HyperLink { NavigateUrl = firstCell.Text, Text = firstCell.Text });\n    }\n}
5415	new BitmapImage(new Uri("/vm;component/h.png", UriKind.RelativeOrAbsolute));
5416	public class BusinessModel : INotifyPropertyChanged\n{\n    public event PropertyChangedEventHandler PropertyChanged;\n\n    private int _quantity;\n    public int Quantity\n    {\n        get { return _quantity; }\n        set \n        { \n            _quantity = value;\n            this.OnPropertyChanged("Quantity");            \n        }\n    }\n\n    void OnPropertyChanged(string PropertyName)\n    {\n        if (this.PropertyChanged != null)\n        {\n            this.PropertyChanged(this, new PropertyChangedEventArgs(PropertyName));\n        }\n    }\n }
5417	[HttpPost]\npublic ActionResult Create(Names name)\n{\n    var names = name.Split(new[] { '\n', '\r' }, StringSplitOptions.RemoveEmptyEntries)\n    foreach(var n in names) \n    {\n        unitofwork.Names.Insert(n);\n    }\n\n    unitofwork.save();\n\n    return RedirectToAction("Index");\n}
5418	var tommorowMidnight = DateTime.Today.AddDays(1);\nvar timeTilMidnight = tommorowMidnight - DateTime.Now;\nvar minutesTilMidnight = (uint)timeTilMidnight.TotalMinutes;\nbuilder.SetTrigger(new TimeTrigger(minutesTilMidnight, true));
5419	public async Task<string> MakeWebRequest(string url)\n{\n    HttpClient http = new System.Net.Http.HttpClient();\n    HttpResponseMessage response = await http.GetAsync(url);\n    return await response.Content.ReadAsStringAsync();\n}
5420	var input = "SMS \r\n\t?    Map - locations of";\n\nvar regexPattern = @"(?<=?)\s+(?=\w)";\nvar cleanedInput = Regex.Replace(input, regexPattern, String.Empty);
5421	var src = "/Date(1302589032000+0400)/";\n\n//Remove all non-numeric (except the plus)\nsrc = src.replace(/[^0-9 +]/g, ''); \n\n//Create date\nvar myDate = new Date(parseInt(src));
5422	(?<!src=['"]?)(http|ftp|https):...
5423	%windir%\system32\DpiScaling.exe
5424	string[] addetailsID = new string[20];  // this is the array I want to index into\n        // generate the 4 unique indices into addetailsID\n        Random random = new Random();\n        List<int> indices = new List<int>();\n        while (indices.Count < 4)\n        {\n            int index = random.Next(0, addetailsID.Length);\n            if (indices.Count == 0 || !indices.Contains(index))\n            {\n                indices.Add(index);\n            }\n        }\n        // now get the 4 random values of interest\n        string[] strAdDetailsID = new string[4];\n        for (int i = 0; i < indices.Count; i++)\n        {\n            int randomIndex = indices[i];\n            strAdDetailsID[i] = addetailsID[randomIndex];\n        }
5425	public string GetDate(FileInfo f)\n    {\n        FileStream fs = new FileStream(f.FullName, FileMode.Open, FileAccess.Read, FileShare.Read);\n        BitmapSource img = BitmapFrame.Create(fs);\n        BitmapMetadata md = (BitmapMetadata)img.Metadata;\n        string date = md.DateTaken;\n        Console.WriteLine(date);\n        return date;\n    }
5426	Console.Writeline(RandomMessage());
5427	gts.push(['google_base_offer_id', document.getElementById('<%= hidden.ClientID %>').value]);
5428	using (SqlCommand cmd = new SqlCommand(query, conn))\n        {\n          int 123;\n\n          cmd.Parameters.Add(new SqlParameter(@"Number", SqlDbType.int)).Value = 123;\n          cmd.Parameters.Add(new SqlParameter(@"aDateTime", SqlDbType.DateTime)).Value = mydate;\ncmd.Parameters.Add(new SqlParameter(@"aDateTime", SqlDbType.decimal)).Value = value;\n          cmd.ExecuteNonQuery();\n        }
5429	public partial class Form1 : Form\n{\n    public Form1()\n    {\n        InitializeComponent();\n    }\n\n    // Will return string on textBox1 uppon calling\n     private string ab(){\n       return textBox1.Text;\n    }\n\n    private void button1_Click(object sender, EventArgs e)\n    {\n        MessageBox.Show(ab());\n    }     \n    private void button2_Click(object sender, EventArgs e)\n    {\n        MessageBox.Show(ab()+" Hello");\n    }\n}
5430	var value = demoWorksheet.get_Range("A1", "A1").Value2;
5431	public static string[] StringToArray(string str)\n{\n    return str.Replace(" ", ",").Split(',');\n}\n\npublic static string ArrayToString(string[] array)\n{\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i <= array.Length-1; i++)\n    {\n        sb.AppendFormat(i % 2 != 0 ? "{0} " : "{0},", array[i]);\n    }\n    return sb.ToString();\n}
5432	private void dgvBRT_DoubleClick(object sender, EventArgs e)\n        {\n\n         if (dgvBRT.SelectedCells.Count > 0)\n            {\n             int selectedrowindex = dgvBRT.SelectedCells[0].RowIndex;\n\n             DataGridViewRow selectedRow = dgvBRT.Rows[selectedrowindex];\n\n             string BRTNumber = Convert.ToString(selectedRow.Cells["BRTNumber"].Value);  \n             // Open selected row\n\n              frmBRTDetail BRTDetail = new frmBRTDetail(this);\n              BRTDetail.LoadBRTNumberKey(BRTNumber, null);\n              BRTDetail.Show();\n            }\n        }
5433	ListItem newItem = null;\n    foreach (ListItem item in ListBox1.Items)\n    {\n        if (item.Selected)\n        {\n            foreach (ListItem innerItem in ListBox2.Items)\n            {\n                if (innerItem.Selected)\n                {\n                    newItem = new ListItem();\n                    newItem.Text = item.Text + innerItem.Text;\n                    ListBoxResult.Items.Add(newItem);\n                }\n            }\n        }\n    }
5434	String recordTime = fileName.Split('_','-').Last();// format is 'yyyyMMddHHmmss'\nDateTime recordDateTime = DateTime.ParseExact( recordTime , "yyyyMMddHHmmss", CultureInfo.InvariantCulture );\n\nif ( recordDateTime.AddYears(2) < DateTime.Now )\n{\n    Console.WriteLine(fileName);\n}
5435	public TValue RetryHelper<T, TValue>(Func<ObjectSet<T>, TValue> func)\n    where T : class\n{\n    using (MyEntities dataModel = new MyEntities())\n    {\n        var entitySet = dataModel.CreateObjectSet<T>();\n        return FancyRetryLogic(() =>\n               {\n                   return func(entitySet);\n               });\n    }\n}\n\npublic User GetUser(String userEmail)\n{\n    return RetryHelper<User, User>(u => u.FirstOrDefault(x => x.UserEmail == userEmail));\n}
5436	from c in db.Customer\njoin a in db.Account\non a.customerID equals c.customerID\nselect new Model {FirstName = c.firstName,LastName = c.lastName,Address = c.address,AccountRate = a.accountRate}
5437	private void label1_MouseHover(object sender, EventArgs e)\n    {\n        //make changes for hovering\n    }\n\n    private void label1_MouseLeave(object sender, EventArgs e)\n    {\n        //undo changes\n    }
5438	Map(x => x.TransactionDate).Formula("[[sql statement]]");
5439	XmlNode root = doc.SelectSingleNode("/cXML");\nstring attrVal = root.Attributes["payloadID"].Value;
5440	double number;\n\nnumber = .0023;\nConsole.WriteLine(number.ToString("G", CultureInfo.InvariantCulture));\n// Displays 0.0023\n\nnumber = 1234;\nConsole.WriteLine(number.ToString("G2", CultureInfo.InvariantCulture));\n// Displays 1.2E+03\n\nnumber = Math.PI;\nConsole.WriteLine(number.ToString("G5", CultureInfo.InvariantCulture));\n// Displays 3.1416
5441	Persist Security Info=True
5442	DateTime indianStd = TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTime.UtcNow, "India Standard Time");\n\n   DateTime MyanmarStd = TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTime.UtcNow, "Myanmar Standard Time");\n\nDateTime SEAsia = TimeZoneInfo.ConvertTimeBySystemTimeZoneId(DateTime.UtcNow, "SE Asia Standard Time");\n\n DateTime ConvertedDt = TimeZoneInfo.ConvertTimeBySystemTimeZoneId(MyanmarStd, "Myanmar Standard Time", "India Standard Time");
5443	XElement root = XElement.Parse(strSerializedoutput);\nDictionary<int, Pair> list = root.Descendants("item")\n                                 .ToDictionary(x => (int) x.Attribute("id"),\n                                  x => {\n                            var pId = x.Parent.Attribute("id");\n                            var depthLevel = x.Attribute("level");\n                            return pId == null ? new Pair { parentID = 0, level = (int)depthLevel } :\n                            new Pair { parentID = (int)pId, level = (int)depthLevel };\n                          });\n\npublic class Pair\n{\n    public int parentID;\n    public int level;\n}
5444	using (PdfReader reader = new PdfReader(FilePath),PdfReader reader1 = new PdfReader(MapFilePath))\n{\npass that reader1 object to AddMap method.\n}
5445	var docFolder = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);\n\nCSConfig.Logging = true;\nCSConfig.LogFileName = Path.Combine(docFolder,"coolstorage.log");
5446	private static void Main(string[] args)\n    {\n        var encodedString = System.IO.File.ReadAllText(@"D:\original.txt");\n        var bytes = System.Convert.FromBase64String(encodedString);\n        System.IO.File.WriteAllBytes("d:\\result.rar", bytes);\n    }
5447	foreach (DataTable table in result.Tables)\n    {\n        GfoTopBox box1 = StuffData(table);\n        Grid.SetRow(box1, j);\n        Grid.SetColumn(box1, i);\n        output.Children.Add(box1);\n\n        i++;\n        if (i >= output.ColumnDefinitions.Count)\n        {\n            i = 0;\n            j++;\n        }\n    }
5448	FeedsPanorama.ItemContainerGenerator.ContainerFromItem(currentDataObject);
5449	int value = int.Parse(txtByteValue.Text);\nint len = fi[i].Length;\n\nswitch (cmboCompareType.SelectedText)\n{\n    case "Greater Than": fileOK = len > value; break;\n    case "Less Than": fileOK = len < value; break;\n    case "Equal To": fileOK = len == value; break;\n}
5450	if(Membership.ValidateUser(username,password))\n{\n     FormsAuthentication.SetAuthCookie(username,true); \n} //do it in login page
5451	MyMediaPlayer.Source = new Uri(_videos.Video[1].videourl3)
5452	public string getSalt()\n{\n    string sql = "select DISTINCT Salt from Logins where Name = @username"; \n\n    using (var connection = new SqlConnection(@"server=.\SQLEXPRESS; database=loginsTest;Trusted_Connection=yes")) \n    using (var command = new SqlCommand(sql, connection))\n    {\n        //guessing at the column length here. Use actual column size instead of 20\n        command.Parameters.Add("@username", SqlDbType.NVarChar, 20).Value = userNameBox.Text;\n\n        connection.Open();\n        return (command.ExecuteScalar() as string) ?? "Error";\n    }\n}
5453	private void Button_Click(object sender, RoutedEventArgs e)\n{\n   //theMessageStatus is the message you want to post to FB/Twitter\n   ShareNewsArticle(theMessageStatus);\n}\n\nprivate void ShareNewsArticle(string message)\n{\n   ShareStatusTask sst = new ShareStatusTask();\n   sst.Status = message;\n   sst.Show();\n}
5454	// connect to SQL\nusing (SqlConnection connection = \n        new SqlConnection(connString))\n{\n    // make sure to enable triggers\n    // more on triggers in next post\n    SqlBulkCopy bulkCopy = \n        new SqlBulkCopy\n        (\n        connection, \n        SqlBulkCopyOptions.TableLock | \n        SqlBulkCopyOptions.FireTriggers | \n        SqlBulkCopyOptions.UseInternalTransaction,\n        null\n        );\n\n    // set the destination table name\n    bulkCopy.DestinationTableName = this.tableName;\n    connection.Open();\n\n    // write the data in the "dataTable"\n    bulkCopy.WriteToServer(dataTable);\n    connection.Close();\n}\n// reset\nthis.dataTable.Clear();
5455	DataColumn totalColumn = new DataColumn();\ntotalColumn.ColumnName = "FinalTotal";\ntotalColumn.DataType = typeof (int);\ntotalColumn.DefaultValue = 0;\ndtSourceTable.Columns.Add(totalColumn);\n\nforeach (DataRow row in dtSourceTable.Rows)\n{\n    row["FinalTotal"] = Convert.ToInt32\n       (row["HeadCount"]) - Convert.ToInt32(row["Total"]);\n}
5456	ddlType.SelectedValue = ddlType.Items.FindByText(dr1[0].ToString()).Value;
5457	XDocument streamFeed = XDocument.Load(new StringReader(response.Content));\nvar query =\n    from sticker in streamFeed.Root.Elements("sticker")\n    let imageData = sticker.Element("imageData")\n    select new Stickers\n    {\n        name = (string)sticker.Element("name"),\n        description = (string)sticker.Element("description"),   \n        image = (string)imageData.Element("baseImageUrl") + "huge" + (string)imageData.Element("imageUrlSuffix")\n    };\n\nstickersListBox.ItemsSource = query;
5458	libreriaCobol lc = new libreriaCobol();\nlc.property = "";  // here.
5459	private void button1_KeyDown(object sender, KeyEventArgs e)\n        {\n            if (e.Modifiers == Keys.Control && e.KeyCode == Keys.R)\n            {\n            }\n\n        }
5460	var mostCommon = gradeData.GroupBy(x => x.TotalPoints)\n    .OrderByDescending(g => g.Count())\n    .Select(g => g.Key)\n    .First();
5461	Random Rnd = new Random();\nvar jobItem = haggleList.ElementAt(Rnd.Next(1, haggleList.Count()));\nvar selectedJobId = Convert.ToInt32(jobItem.JobId);
5462	public static byte[] BitmapToBytes(ColorConvertedBitmap ccb)\n{\n    byte[] bytes = new byte[ccb.PixelWidth * ccb.PixelHeight * ccb.Format.BitsPerPixel / 8];\n    ccb.CopyPixels(bytes, ccb.PixelWidth * ccb.Format.BitsPerPixel / 8, 0);\n    return bytes;\n}
5463	TimeElapsed = String.Format("{0:00}:{1:00}:{2:00}", total.Hours, total.Minutes, total.Seconds / 10);
5464	xdoc.XPathSelectElement("Projects/Project[@projectName = 'project1']").Remove();
5465	DropDownList ddl =  (DropDownList)LoginView1.FindControl("ddlName");\n ddl.DataSource = connDr;       ?    \n        ddl.DataValueField = DataPara; ?        \n        ddl.DataTextField = DataPara;  ?            \n        ddl.DataBind();
5466	var listOfIds = listOfObjects.Select(o => o.Id);\nvar query = \n    from a in DatabaseTable\n    where listOfIds.Contains(a.Id)\n    select a;
5467	listBox1.Items.AddRange(latesProcessList.Select(p => p.ProcessName));
5468	var eai = EventArgs.InterfaceInsideEventArg[index];\nvar eaz = EventArgs.InterfaceInsideEventArg[z];\n\neai.PropertyInsideInterface = eaz.PropertyInsideInterface.Replace("DeeperSkyBlue", "0066CC");\neai.{prop2} = eaz.{prop2}.Replace("DeeperSkyBlue", "0066CC");\n//etc.
5469	private void phonenumber_Tap(object sender, System.Windows.Input.GestureEventArgs e)\n    {\n        PhoneCallTask call = new PhoneCallTask();\n        call.PhoneNumber = ((TextBlock)sender).Text;\n        call.Show();\n     }
5470	public partial class MainWindow : Window\n{\n    private ObservableCollection<TestItem> testItems = new ObservableCollection<TestItem>();\n    public ObservableCollection<TestItem> TestItems { get { return  testItems ; }\n\n    public MainWindow()\n    {\n        InitializeComponent();   \n        this.DataContext = this;    \n        TestItem test = new TestItem("name", "type");    \n        this.testItems.Add(test);\n    }\n}
5471	var query = from _stats in _statsList \n    group _stats by new {\n               Latency = _stats.latency, \n               CpuUsagePercent = _stats.cpuUsagePercent, \n               MemoryUsagePercent = _stats.memoryUsagePercent, \n               DiskUsage = _stats.diskUsage, \n               DiskRead = _stats.diskRead, \n               DiskWrite = _stats.diskWrite\n\n    } into myGroup\n    select new {\n        AverageVal = myGroup.Average(x => x.Value),\n        CpuUsagePercent = myGroup.Key.CpuUsagePercent,\n        ... // the rest of your projection\n};
5472	dropdownlist.ClearSelection(); //making sure the previous selection has been cleared\ndropdownlist.Items.FindByValue(value).Selected = true;
5473	NamespaceManager.AddNamespace("my", formXml.DocumentElement.NamespaceURI
5474	"Convert Zero Datetime=True"\n"Allow Zero Datetime=True"
5475	private bool draging = false; \n        private Point pointClicked; \n        private void pictureBox1_MouseMove(object sender, MouseEventArgs e) \n        { \n            if (draging) \n            { \n                Point pointMoveTo; \n                pointMoveTo = this.PointToScreen(new Point(e.X, e.Y)); \n                pointMoveTo.Offset(-pointClicked.X, -pointClicked.Y); \n                this.Location = pointMoveTo; \n            } \n        } \n \n        private void pictureBox1_MouseDown(object sender, MouseEventArgs e) \n        { \n            if (e.Button == MouseButtons.Left) \n            { \n                draging = true; \n                pointClicked = new Point(e.X, e.Y); \n            } \n            else \n            { \n                draging = false; \n            } \n        } \n \n        private void pictureBox1_MouseUp(object sender, MouseEventArgs e) \n        { \n            draging = false; \n        }
5476	RenderTarget2D target = new RenderTarger2D(...); \n//I cant remeber the arguments off the top of my head.\n//I think its GraphicsDevice, Width, Height, GenerateMipmap, SurfaceFormat, Depthformat\n\nGraphicsDevice.SetRenderTarget(target);\nGraphicsDevice.Clear(Color.Black); //any colour will do\nusing(SpriteBatch b = new SpriteBatch(GraphicsDevice))\n{\n   b.Begin();\n\n   //Loop through all texture and draw them, so ...\n   for(int y = 0; y < 10; i++)\n     for(int y = 0; y < 10; i++)\n       batch.Draw(Texture, new Rectangle(xPos, yPos, width, height), Color.White));\n\n   b.End();\n}\n\nGraphicsDevice.SetRenderTarget(null);\n\n//Then to access your new Texture, just do \nTexture newTexture = target; //Target inherits from Texture2D so no casting needed
5477	public CustomComboBox()\n{\n    InitializeComponent();\n    SetStyle(ControlStyles.UserPaint, true);\n}
5478	private static void OnMyNamePropertyChanged(DependencyObject d,\n    DependencyPropertyChangedEventArgs e)\n{\n    // d is the object which the attached property has been set on\n}
5479	public static class SessionHelper\n{\n\n    private static HttpSession sess = HttpContext.Current.Session;\n    public static int Age\n    {\n        get\n        {\n            return (int)sess["Age"];\n        }\n\n        set\n        {\n            sess["Age"] = value;\n        }\n    }\n}
5480	public void CaptureApplication(string procName)\n{\n    var proc = Process.GetProcessesByName(procName)[0];\n    var rect = new User32.Rect();\n    User32.GetWindowRect(proc.MainWindowHandle, ref rect);\n\n    int width = rect.right - rect.left;\n    int height = rect.bottom - rect.top;\n\n    var bmp = new Bitmap(width, height, PixelFormat.Format32bppArgb);\n    Graphics graphics = Graphics.FromImage(bmp);\n    graphics.CopyFromScreen(rect.left, rect.top, 0, 0, new Size(width, height), CopyPixelOperation.SourceCopy);\n\n    bmp.Save("c:\\tmp\\test.png", ImageFormat.Png);\n}\n\nprivate class User32\n{\n    [StructLayout(LayoutKind.Sequential)]\n    public struct Rect\n    {\n    public int left;\n    public int top;\n    public int right;\n    public int bottom;\n    }\n\n    [DllImport("user32.dll")]\n    public static extern IntPtr GetWindowRect(IntPtr hWnd, ref Rect rect);\n}
5481	ListViewItem selectedListView = \n    (ListViewItem)listView1.ItemContainerGenerator.GetContainerForItem(\n        listView1.Items[index]);
5482	// To convert an XML node contained in string xml into a JSON string   \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(xml);\n    string jsonText = JsonConvert.SerializeXmlNode(doc);\n\n    // To convert JSON text contained in string json into an XML node\n    XmlDocument doc = JsonConvert.DeserializeXmlNode(json);
5483	var results = Table.Where(row => row.result != null)\n                   .Select(row => row.result)\n                   .ToArray();
5484	protected void WindowsAuthentication_OnAuthenticate(object sender, WindowsAuthenticationEventArgs e)\n{\n    if (!Roles.IsUserInRole(e.Identity.Name, "Users"))\n    {\n        Roles.AddUsersToRole(new string[] { e.Identity.Name }, "Users");\n    }\n}
5485	string username = "<username>";\n\nDirectoryEntry de = new DirectoryEntry(\n    "LDAP://" + ConfigurationManager.AppSettings["ADDomain"],\n    ConfigurationManager.AppSettings["ADUsername"],\n    ConfigurationManager.AppSettings["ADPassword"]);\n\nDirectorySearcher ds = new DirectorySearcher(de);\nds.Filter = string.Format("samaccountname={0}",\n    (username.Split('\\').Length > 1) ? username.Split('\\')[1] : username);\n\nSearchResult result = ds.FindOne();\nif (result == null)\n    throw new ArgumentException(\n        string.Format("Username '{0}' does not exist in the active directory", username), "username");
5486	do\n{Application.Doevents()}\nwhile (step == false)
5487	var nodes = list\n    .GroupBy(c1 => c1.Cat1.Name)\n    .Select(c1 => new Node\n    {\n        Name = c1.Key,\n        Weight = c1.Sum(x => x.Weight),\n        Children = c1\n            .GroupBy(c2 => c2.Cat2.Name)\n            .Select(c2 => new Node\n            {\n                Name = c2.Key,\n                Weight = c2.Sum(x => x.Weight),\n                Children = c2.Select(c3 => new Node\n                {\n                    Name = c3.Cat3.Name,\n                    Weight = c3.Weight,\n                    Children = new List<Node>()\n                }).ToList()\n            }).ToList()\n\n    }).ToList();
5488	using ( new Impersonator( "myUsername", "myDomainname", "myPassword" ) )\n{\n    using (RunspaceInvoke invoker = new RunspaceInvoke())\n    {\n        invoker.Invoke("Set-ExecutionPolicy Unrestricted");\n    }\n}
5489	"My Program.exe" "%1"
5490	public static Dictionary<int, int> map = new Dictionary<int, int>() { { 0, 64 }, { 1, 1 }, { 2, 2 }, { 3, 4 }, { 4, 8 }, { 5, 16 }, { 6, 32 } };\n\n//actually,this gets from a user interface,but we shoul be focus database layer\nWeekDays[] dw = new WeekDays[] {WeekDays.Saturday,WeekDays.Tuesday,WeekDays.Wednesday };\n\nint[] systemDayOfWeekList = new int[daysOfWeek.Length];\n\nfor (int i = 0; i < daysOfWeek.Length; i++)\n{\n  systemDayOfWeekList[i] = map.FirstOrDefault(e => e.Value == (int)daysOfWeek[i]).Key;\n}\n\nquery = query.Where(f => dayOfWeekList.Contains(((int)SqlFunctions.DatePart("dw", f.FromDateTime))));
5491	Class2 class2 = new Class2();
5492	private void MethodThatWillCallComObject()\n        {\n            System.Threading.Tasks.Task.Factory.StartNew(() =>\n            {\n                //this will call in background thread\n                return this.MethodThatTakesTimeToReturn();\n            }).ContinueWith(t =>\n            {\n                //t.Result is the return value and MessageBox will show in ui thread\n                MessageBox.Show(t.Result);\n            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());\n        }\n\n        private string MethodThatTakesTimeToReturn()\n        {\n            System.Threading.Thread.Sleep(5000);\n            return "end of 5 seconds";\n        }
5493	Monitor.Enter
5494	public void dvgCombo_SelectedIndexedChanged()\n{\n    if (<condition1>)\n        ExecuteConditionOneLogic();\n\n    if (<condition2>)\n        ExecuteConditionTwoLogic();\n\n}
5495	string connectionString = "your_connection_string";  \nSqlConnection con = new SqlConnection(connectionString);  \n\ntry  \n{  \n    con.Open();  \n    string query = "insert statement";  \n\n    using (SqlCommand cmd = new SqlCommand(query, con))  \n    {  \n        cmd.Parameters.AddWithValue("@some_parameter", "value_of_some_parameter");  \n        cmd.ExecuteNonQuery();  \n    }   \n}  \ncatch (Exception)  \n{  \nthrow;  \n}
5496	void Delete(bool recursive = false)\n{\n    if(recursive)\n        RecursiveDelete();\n\n    if(this.Parent != null)\n        this.Parent.Children.Remove(this);\n\n    using(var db = new MyContext())\n    {\n        db.SaveChanges();\n    }\n}\nvoid RecursiveDelete()\n{\n    foreach(var child in Children.ToArray())\n    {\n        child.RecursiveDelete();\n        Children.Remove(child);\n    }\n\n    using(var db = new MyContext())\n    {\n        db.Nodes.Attach(this);\n        db.Entry(this).State = EntityState.Deleted();\n    }\n}
5497	string input = "08:00";\nDateTime time;\nif (!DateTime.TryParse(input, out time))\n{\n    // invalid input\n    return;\n}\n\nTimeSpan timeSpan = new TimeSpan(time.Hour, time.Minute, time.Second);
5498	DataSet.WriteXml
5499	public class Rootobject\n     {\n        public string xmlns { get; set; }\n        public string text { get; set; }\n     }\n\n\n\n    public static void Main(string[] args) \n    { \n      Rootobject details = new Rootobject();\n      details.xmlns = "myNamespace";\n      details.text = "Value";\n\n      Serialize(details);\n   }   \n\n   static public void Serialize(Rootobject details)\n   { \n     XmlSerializer serializer = new XmlSerializer(typeof(Rootobject)); \n     using (TextWriter writer = new StreamWriter(@"C:\Xml.xml"))\n     {\n       serializer.Serialize(writer, details); \n     } \n   }
5500	void backgroundWorker_DoWork(object sender, DoWorkEventArgs e) {\n  long ticks1 = 0;\n  long ticks2 = 0;\n  double interval = (double)Stopwatch.Frequency / 60;\n  while (true) {\n    ticks2 = Stopwatch.GetTimestamp();\n    if (ticks2 >= ticks1 + interval) {\n      ticks1 = Stopwatch.GetTimestamp();\n\n      if(_fadeIn){\n        _fadeAlpha += 0.1f;\n        if(_fadeAlpha > 1f){\n          _fadeAlpha = 1f;\n          break;\n        }\n      }else{\n        _fadeAlpha -= 0.1f;\n        if(_fadeAlpha < 0f){\n          _fadeAlpha = 0f;\n          break;\n        }\n      }\n      backgroundWorker.ReportProgress(0);\n    }\n    Thread.Sleep(1);\n  }\n  backgroundWorker.ReportProgress(0);\n}
5501	listbox1.GetSelectedIndices().Count();
5502	Mapper.CreateMap<ModelChild, DayViewModel>()\n    .ConstructUsing(context =>\n    {\n        var key = ((ModelChild) context.SourceValue).Started;\n        var daysCollection = (SortedSet<DayViewModel>) context.Parent.DestinationValue;\n\n        var dayViewModel = daysCollection.FirstOrDefault(d => d.Date == key);\n\n        if (dayViewModel == null)\n        {\n            dayViewModel = new DayViewModel\n            {\n                Date = key\n            };\n\n            daysCollection.Add(dayViewModel);\n        }\n\n        dayViewModel.Children.Add(Mapper.Map<ChildViewModel>(context.SourceValue));\n        return dayViewModel;\n    })\n    .ForAllMembers(d => d.Ignore());
5503	public class ProductService\n{\n    public void Create<T>(T obj)\n    {\n        if (typeof(Supplier) == typeof(T))\n            Supplier(obj); //Call Supplier Method;\n        else if (typeof(Product) == typeof(Product))\n            Product(); //Call Product Method;\n        else\n            throw new ArgumentOutOfRangeException("Unrecognized type", "type");\n    }\n\n    private void Supplier<T>(T s)\n    {\n        //statements\n        Console.WriteLine("Supplier");\n    }\n    private void Product()\n    {\n        //statements\n        Console.WriteLine("Product");\n    }\n}
5504	var xd = XDocument.Parse(@"<Identification LastName=""Bornery"" Name=""John"" Age=""23""/>");\nxd.Element("Identification").Attribute("Age").Value = "40";\nstring result = xd.ToString();
5505	string id = "1"\n\n\nXDocument doc = XDocument.Load("data.xml");\nvar accounts = from elements in doc.Elements("HOSTS").Elements("Host")\n                where elements.Attribute("id").Value = id\n                    select elements.FirstOrDefault();
5506	XmlDocument doc = new XmlDocument(); \ndoc.Load("C:\\Users\\hsyed\\Documents\\XMLParser\\Example.xml");\n\nXmlNodeList nodes = doc.SelectNodes("//root/Identities/Identity/Refrences/Reference/Value/text()");\n\nforeach (XmlNode xn in nodes)\n{\n    Console.WriteLine(xn.Value.ToString());\n}
5507	using (StreamReader r = new StreamReader(guid.ToString()))\n{\n    string line;\n    int linesCount;\n    ArrayList result = new ArrayList();\n    while ((line = r.ReadLine()) != null && linesCount++ <= 200)\n    {\n         result.AddRange(line.Split(','));\n    }\n}
5508	// Creates a deep copy of an Object\npublic static T DeepClone<T>(T obj)\n{\n    using (var ms = new MemoryStream())\n    {\n        var formatter = new BinaryFormatter();\n        formatter.Serialize(ms, obj);\n        ms.Position = 0;\n\n        return (T)formatter.Deserialize(ms);\n    }\n}
5509	var query =\n                from a in db.LUT_Employees\n                where a.position == "Supervisor" && a.department == "Production"\n                select new { a, Names = a.lastName + ", " + a.firstName };\n\n            cboProductionSupervisor.DataSource = query;\n            cboProductionSupervisor.DisplayMember = "Names";
5510	protected override void WndProc(ref System.Windows.Forms.Message m)\n    {\n        const int TTM_RELAYEVENT = 0x407;\n        if (m.Msg == TTM_RELAYEVENT)\n        {\n            Message relayed = (Message)Marshal.PtrToStructure(m.LParam, typeof(Message));\n            if (related.Msg == WM_LBUTTONDOWN)\n            {\n                // Do something\n            }\n        }\n\n        base.WndProc(ref m);\n    }
5511	string strConnection = ConfigurationSettings.AppSettings["ConnectionString"];\n     MySqlConnection connection = new MySqlConnection(strConnection);\n\n     List<string> array = new List<string>();\n\n        using (MySqlCommand cmd = new MySqlCommand("SELECT idprojects FROM `test`.`projects` WHERE application_layers = " + applicationTiers, connection))\n        {\n            try\n            {\n                using (MySqlDataReader Reader = cmd.ExecuteReader())\n                {\n                    while (Reader.Read())\n                    {\n                        array.Add(Reader["idprojects"].ToString());\n                    }\n                }\n            }\n\n            catch (Exception ex)\n            {\n                throw;\n            }\n        }\n\n        string[] ret= array.ToArray();
5512	String dna="ACTG";\nString dnaComplement = "";\n\nforeach(char c in dna)\n{\n  if (c == 'A') dnaComplement += 'T';\n  else if (c == 'C') dnaComplement += 'G';\n // and so long\n}
5513	else if.....
5514	[Serializable]\npublic class LogAttribute : OnMethodBoundaryAspect\n{\n    public override void OnEntry(MethodExecutionArgs args)\n    {\n        if (!application.running)\n            throw new Exception(String.Format("Method {0} is not allowed to call when application is not running.", args.Method.Name));\n    }\n}
5515	private readonly XNamespace a = "http://www.w3.org/2005/Atom";\nprivate readonly XNamespace d = "http://schemas.microsoft.com/ado/2007/08/dataservices";\nprivate readonly XNamespace m = "http://schemas.microsoft.com/ado/2007/08/dataservices/metadata";\n\nList<KLList> lists = doc.Descendants(a + "entry").Where(element => element.Attribute(m + "etag") != null).Select(\n    list => new KLList()\n    {\n        Id = list.Descendants(d + "Id").FirstOrDefault().Value,\n        Title = list.Descendants(d + "Title").FirstOrDefault().Value,\n        ListItemEntityTypeFullName = list.Descendants(d + "ListItemEntityTypeFullName").FirstOrDefault().Value,\n        BaseType = (BaseType)Convert.ToInt32(list.Descendants(d + "BaseType").FirstOrDefault().Value),\n        ListTemplateType = (ListTemplateType)Convert.ToInt32(list.Descendants(d + "BaseTemplate").FirstOrDefault().Value),\n        RelativeUrl = list.Descendants(d + "ServerRelativeUrl").FirstOrDefault().Value\n    }).ToList();
5516	IPAddress.Any
5517	e.Effect
5518	private CalculationEngine engine = new CalculationEngine();\n\n private void ExecuteButton_Click(object sender, RoutedEventArgs e)\n {\n    double result = engine.Calculate(ExpressionTextBox.Text);\n    ExpressionTextBox.Text = result.ToString();  // displays the result\n }
5519	this._chart.ChartAreas[0].AxisX.CustomLabels.Add(new CustomLabel(position - 1, position + 1, point.AxisLabel, 0, LabelMarkStyle.None));\n\nthis._chart.ChartAreas[0].AxisX.CustomLabels[position - 1].ForeColor = GetColor(point.AxisLabel);
5520	DependencyPropertyDescriptor dpd = DependencyPropertyDescriptor.FromProperty(Canvas.TopProperty, typeof(Canvas));\n\ndpd.AddValueChanged(canvas1, new EventHandler(topChangedCallback));
5521	public void ReplaceBookmarkTextWithHtml(Bookmark bookmark, string html)\n{\n    if (html != null) {\n        Clipboard.SetData(DataFormats.Html, ClipboardFormatter.Html(html));\n        bookmark.Range.PasteSpecial(DataType: WdPasteDataType.wdPasteHTML);\n    }\n}
5522	DateTime startDate = new DateTime(DateTime.Today.Year, 2, 1); // 1st Feb this year\nDateTime endDate = new DateTime(DateTime.Today.Year+1, 2, 1).AddDays(-1); // Last day in January next year
5523	private void pictureBox_Paint(object sender, PaintEventArgs e)\n{\nGraphics graphics = e.Graphics;\n\nBrush brush = new SolidBrush(Color.Red);\ngraphics.FillRectangle(brush, new Rectangle(10, 10, 100, 100));\n\nPen pen = new Pen(Color.Green);\ngraphics.DrawRectangle(pen, new Rectangle(5, 5, 100, 100));\n}
5524	DateTime Dob;\nConsole.WriteLine("Enter date of Birth in format MM/DD/YYYY: ");\n//accepts date in MM/dd/yyyy format\nDob = DateTime.Parse(Console.ReadLine());
5525	private void YourFormName_Load(object sender, EventArgs e)\n{\n     ContextMenu mnu = new ContextMenu();\n     MenuItem mnuCopy = new MenuItem("Copy");\n     mnuCopy.Click += (sen, ev) =>\n     { \n         System.Windows.Forms.Clipboard.SetText(YourTextBoxName.Text);\n     };\n     mnu.MenuItems.AddRange(new MenuItem[] { mnuCopy });\n     YourTextBoxName.ContextMenu = mnu;\n}\n\nprivate void YourFormName_MouseUp(object sender, MouseEventArgs e)\n{\n    Control ctl = this.GetChildAtPoint(e.Location);\n    if (ctl != null && !ctl.Enabled && ctl.ContextMenu != null)\n    ctl.ContextMenu.Show(this, e.Location);\n}
5526	node.BaseType.IsGeneric && node.BaseType.Template == FrameworkAssemblies.Mscorlib.Types.SingleOrDefault(t => t.FullName == "System.Collections.Generic.List`1")
5527	XLWorkbook wb = new XLWorkbook();\nDataTable dt = GetDataTableOrWhatever();\nwb.Worksheets.Add(dt,"WorksheetName");
5528	public class OraclePrimaryKeySequenceConvention : IIdConvention\n{\n    public void Apply(IIdentityInstance instance)\n    {\n        instance.GeneratedBy.Sequence(string.Format("Sequence_{0}",\n                                                    instance.EntityType.Name));\n    }\n}
5529	picker.SelectedIndexChanged += (sender, args) =>\n            {\n                if (picker.SelectedIndex == -1)\n                {\n                    boxView.Color = Color.Default;\n                }\n                else\n                {\n                    string colorName = picker.Items[picker.SelectedIndex];\n                    boxView.Color = nameToColor[colorName];\n                }\n            };
5530	{ \n    // before code snippet.. \n    await messageDisplayer1.ShowMessage("test", true); \n    // after code snippet.. \n}
5531	while(true)\n{\n    if(DateTime.Now.Hour == 6 && DateTime.Now.Minute == 0)\n       Processmethod();\n    else\n       Thread.Sleep(1000)\n}
5532	onclientclick="test()"
5533	public IEnumerable<Table1> Method1()\n    {\n        string StrSql = "Select * From [Table1] Where [Name] in (";\n        List<string> par = fav.Split(',').ToList();\n        foreach (string _par in par)\n        {\n            StrSql += "'" + _par + "'";\n            if (_par != par.Last())\n            {\n                StrSql += ',';\n            }\n            else\n            {\n                StrSql += ")";\n            }\n        }\n        return conn.Query<Table1>(StrSql);\n    }
5534	myFormInstance.ActiveControl
5535	var map = new Dictionary<char, string>\n{\n    { '?', "P" },\n    { '?', "e" },\n    { '?', "t" },\n    { '?', "r" },\n    ...\n}\n\nvar result = string.Concat("?????????".Select(c => map[c]));
5536	Partial EntityClassA : InterfaceA\n{\n    IEnumerable<InterfaceB> CollectionEntityClassBs\n    {\n        get{ return (some cast or somthin)EntityClassBs;  }\n    }\n}\n\nInterfaceA\n{\n   IEnumerable<InterfaceB> CollectionEntityClassBs;\n}
5537	var r = new Regex("<A[GHI]>!(.+?)!");\nvar actual = r.Replace(xml, "$1");
5538	private void calculateButton_Click(object sender, EventArgs e)\n        {\n            if (tabControl.SelectedTab == tab1)\n            {\n                 MessageBox.Show("whatever");\n            }\n            else\n            {\n                 MessageBox.Show("doesnt matter");\n            }\n        }
5539	public partial class Window1 : System.Windows.Window\n{\npublic Window1()\n{\n  try\n\n  {\n    InitializeComponent();\n  }\n  catch ( Exception ex )\n  {\n  // Log error (including InnerExceptions!)\n  // Handle exception\n   MessageDialog dialog = new MessageDialog(ex.InnerException);\n   dialog.ShowAsync();\n\n  }\n }\n}
5540	android.os.NetworkOnMainThreadException
5541	Bitmap imga = ...;\npictureBox0.Image = imga;\npictureBox1.Image = imga;\npictureBox2.Image = imga;\npictureBox3.Image = imga;\nimga = ...;\npictureBox4.Image = imga;\npictureBox5.Image = imga;\npictureBox6.Image = imga;\npictureBox7.Image = imga;\n...
5542	var custom = Context.Current as MyCustomPrinciple;\nif(custom == null)\n{\n// Your construct code here.\n}
5543	var countByOtherId = db.EntityToOrder\n    .GroupBy(e => e.OtherId)\n    .Select(g => new { ID = g.Key, Count = g.Count() })\n    .ToDictionary(e => e.ID, e => e.Count);\n\nvar other = new Dictionary<long, string>();\nint skipCount = startIndex, useCount = 0;\nforeach (var e in db.OtherEntity.OrderBy(e => e.Name))\n{\n    int count;\n    if (!countByOtherId.TryGetValue(e.ID, out count)) continue;\n    if (skipCount > 0 && other.Count == 0)\n    {\n        if (skipCount >= count) { skipCount -= count; continue; }\n        count -= skipCount;\n    }\n    other.Add(e.ID, e.Name);\n    if ((useCount += count) >= pageSize) break;\n}\n\n\nvar entities = db.EntityToOrder\n    .Where(e => other.Keys.Contains(e.OtherId))\n    .AsEnumerable()\n    .Select(e => new EntityToOrder { ID = e.ID, Name = e.Name, \n        OtherId = e.OtherId, OtherName = other[e.OtherId] })\n    .OrderBy(e => e.OtherName).ThenBy(e => e.Name)\n    .Skip(skipCount).Take(pageSize)\n    .ToList();
5544	string FindPattern(string text)\n{\n    if (text == null)\n    {\n        return null;\n    }\n\n    return Enumerable\n        .Range(1, text.Length / 2)\n        .Where(n => text.Length % n == 0)\n        .Select(n => text.Substring(0, n))\n        .Where(pattern => Enumerable\n            .Range(0, text.Length / pattern.Length)\n            .SelectMany(i => pattern)\n            .SequenceEqual(text))\n        .FirstOrDefault();\n}
5545	MethodInfo methodInfo = typeof(MyClass).GetMethod(task.Command);\nif (methodInfo != null)\n  Task.Factory.StartNew(() => methodInfo.Invoke(this, new []{ task }));
5546	DateTime time = DateTime.Now;              \n    string format = "yyyy-MM-dd HH:mm:ss";   \n    var mytime = time.ToString(format);
5547	var policyNames =  Container.Model.AllInstances.Where(x => x.PluginType == typeof(IPolicy)).Select(x => x.Name);
5548	var streamGeometry = StreamGeometry.Parse("F1 M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z ");\n                    sortButton.IconData = streamGeometry;
5549	img.RenderTransformOrigin = new Point(0.5, 0.5);
5550	public static void GoogleGeoCode(string address)\n{\n    string url = "http://maps.googleapis.com/maps/api/geocode/json?sensor=true&address=";\n    dynamic googleResults = new Uri(url + address).GetDynamicJsonObject();\n\n    foreach (var result in googleResults.results)\n    {\n        Console.WriteLine("[" + result.geometry.location.lat + "," + \n                            result.geometry.location.lng + "] " + \n                            result.formatted_address);\n    }\n}
5551	lblSaleData.Text = "&lt;Sales&gt;" + "<br/>" + \n"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;eml&gt;" + eml + \n"&lt;/eml&gt;" + "<br/>"+ "&lt;/Sales&gt;";
5552	itemUrl = obj.SelectSingleNode(".//a").Attributes["href"].Value, itemId = obj.SelectSingleNode(".//article").Attributes["data-id"].Value
5553	using (var context = new PrincipalContext( ContextType.Domain ))\n{\n  using (var user = UserPrincipal.FindByIdentity( context, IdentityType.SamAccountName, userName ))\n  {\n      user.SetPassword( "newpassword" );\n      user.ExpirePasswordNow(();\n  }\n}
5554	var testData = "{\r\n\t\"status\":\"Success\"\r\n}";\ndynamic testObject = JsonConvert.DeserializeObject(testData);\nConsole.WriteLine(testObject.status); //Success\nConsole.ReadKey();
5555	BULK INSERT
5556	KmlTreeViewNode node = kmlTreeView1.GetNodeById("Sites"); // get the empty node you added to the tree\nnode.ApiObject.getFeatures().appendChild(placemark); // get the KmlFolder and add a placemark\nge1.getFeatures().appendChild(node.ApiObject); // add the KmlFolder and features to the plugin\nkmlTreeView1.Nodes.RemoveByKey("sites"); // remove the empty node from the tree...\nkmlTreeView1.ParseKmlObject(node.ApiObject); // add the KmlFolder that contains your placemark
5557	protected void Page_Load(object sender, EventArgs e)\n {\n   string planType=Request.QueryString["type"];\n   if (planType == "False")\n    {\n      rdodomiantype.Items.Remove(rdodomiantype.Items.FindByValue("1"));\n    }\n }
5558	[DataContract]\npublic class Message\n{\n    [DataMember]\n    public string Info {get; set;}\n\n    //Other Properties.\n}
5559	return string.Format("<dfn title=\"{0}\">{1}</dfn>",\n                     this.FindDefinition(m.Value),\n                     m.Value);
5560	i.ReadAsByteArrayAsync()
5561	private string name;\n\npublic string Name \n{\n    get\n    {\n        return name;\n    }\n\n    set\n    {           \n        CheckName(value); // Or whatever are you check functions\n\n        name = value;\n\n        PropertyChanged("Name");\n    }\n}
5562	Mapper.CreateMap<Order, OrderDetailsModel>();\nOrderDetailsModel dto = Mapper.Map<Order, OrderDetailsModel >(order);
5563	public string ConnectionString { get; set; }\npublic string ProviderName { get; set; }\n\npublic EntityClusterRefreshServiceDatabaseWorker()\n{\n    // Code as before\n    ConnectionString = ...;\n    ProviderName = ...;\n}
5564	public class UblConverter<TParser, TDto, TUbl> where TParser : UblParser<TDto, TUbl> \n                                               where TUbl : UblBaseDocumentType \n                                               where TDto : DtoB \n{\n    //...\n}
5565	create table user3(uname varchar(50) primary key,email varchar(50),doj datetime);
5566	public static UInt64 CountLeadingZeros(UInt64 input)\n{\n    if (input == 0) return 64;\n\n    UInt64 n = 1;\n\n    if ((input >> 32) == 0) { n = n + 32; input = input << 32; }\n    if ((input >> 48) == 0) { n = n + 16; input = input << 16; }\n    if ((input >> 56) == 0) { n = n + 8; input = input << 8; }\n    if ((input >> 60) == 0) { n = n + 4; input = input << 4; }\n    if ((input >> 62) == 0) { n = n + 2; input = input << 2; }\n    n = n - (input >> 63);\n\n    return n;\n}
5567	public class CalendarCell : DataGridViewTextBoxCell\n{\n\n...\n\npublic class CalendarEditingControl : DateTimePicker, IDataGridViewEditingControl\n{\n\n...
5568	swOutput.BaseStream.Position
5569	for (char ch : word.toCharArray()) {\n\n            if (ch >= 'B' && ch <= 'F' && soundexString.length() < 4) {\n\n                ... ...\n...\n            }\n        }
5570	routes.MapRoute("Name", "param/{*params}", new { controller = ..., action = ... });\n\nActionResult MyAction(string params) {\n    foreach(string param in params.Split("/")) {\n        ...\n    }\n}
5571	public string Test\n        {\n            get\n            {\n                //Get properties for this\n                System.ComponentModel.PropertyDescriptorCollection pdc = System.ComponentModel.TypeDescriptor.GetProperties( this );\n\n                //Get property descriptor for current property\n                System.ComponentModel.PropertyDescriptor pd = pdc[ System.Reflection.MethodBase.GetCurrentMethod().Name ];\n            }\n        }
5572	protected void Open_Click(object sender, System.Web.UI.ImageClickEventArgs e)\n{\n    try\n    {\n        Response.Redirect("http://www.website.com");\n    }\n    catch { }\n}
5573	var closest = data.Select().\n    OrderBy(dr => Math.Abs((int)dr["TRK_Distance"] - 1600)).\n    FirstOrDefault();
5574	PrincipalContext pc = new PrincipalContext(ContextType.Domain);\nbool isCredentialValid = pc.ValidateCredentials(username, password);
5575	this.WindowState = FormWindowState.Maximized; // To maximize\n this.WindowState = FormWindowState.Normal; // To restore
5576	var myCollection = from de in myDictionary \n                   select new\n                   {\n                       de.Value.property1,\n                       de.Value.property2,\n                       de.Key\n                   }.ToList();  // or .ToArray()
5577	public class Estimate {\n   public string Name { get; set; }\n   public List<Option> Options { get; set; }\n\n   public Estimate() {\n      Options = new List<Option>();\n   }\n}\n\npublic class Option {\n   public int Id { get; set; }\n   public string Description { get; set; }\n   public Estimate Estimate { get; set; }\n}
5578	if(Socket.OSSupportsIPv6 && _hostIpAddress.AddressFamily == AddressFamily.InterNetworkV6) \n{\n   // newer OS\n   _socketConnection = new Socket(\n       AddressFamily.InterNetworkV6, \n       SocketType.Stream, \n       ProtocolType.Tcp);\n   _socketConnection.SetSocketOption(SocketOptionLevel.IPv6, SocketOptionName.IPv6Only, 0);\n} else { \n   // older OS\n   _socketConnection = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\n}
5579	// best, using Color's static method\nColor red1 = Color.FromName("Red");\n\n// using a ColorConverter\nTypeConverter tc1 = TypeDescriptor.GetConverter(typeof(Color)); // ..or..\nTypeConverter tc2 = new ColorConverter();\nColor red2 = (Color)tc.ConvertFromString("Red");\n\n// using Reflection on Color or Brush\nColor red3 = (Color)typeof(Color).GetProperty("Red").GetValue(null, null);\n\n// in WPF you can use a BrushConverter\nSolidColorBrush redBrush = (SolidColorBrush)new BrushConverter().ConvertFromString("Red");
5580	byte[] unicodeBytes = Encoding.Unicode.GetBytes(ackMessage);\n    var asciiBytes = new List<byte>(ackMessage.Length + 3);\n    asciiBytes.Add(0x0b);\n    asciiBytes.AddRange(Encoding.Convert(Encoding.Unicode, Encoding.ASCII, unicodeBytes));\n    asciiBytes.AddRange(new byte[] { 0x1c, 0x0d });
5581	"C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\Bin\NETFX 4.0 Tools\gacutil.exe" /f /i "$(TargetDir)$(TargetFileName)"\n\n"C:\Windows\Microsoft.NET\Framework\v4.0.30319\RegAsm.exe" /unregister "$(TargetDir)$(TargetFileName)"\n\n"C:\Windows\Microsoft.NET\Framework\v4.0.30319\RegAsm.exe" "$(TargetDir)$(TargetFileName)"
5582	public static class AssemblyResolverFix\n{\n  //Looks up the assembly in the set of currently loaded assemblies,\n  //and returns it if the name matches. Else returns null.\n  public static Assembly HandleAssemblyResolve( object sender, ResolveEventArgs args )\n  {\n    foreach( var ass in AppDomain.CurrentDomain.GetAssemblies() )\n      if( ass.FullName == args.Name )\n        return ass;\n    return null;\n  }\n}\n\n//in main\nAppDomain.CurrentDomain.AssemblyResolve += AssemblyResolverFix.HandleAssemblyResolve;
5583	dgv.Columns[i].ValueType = typeof(uint);
5584	int[] numbers = { 1, 1, 3, 2, 2, 2 };\nint[] words = { 1, 1, 2, 3, 2, 2 };\n\nvar result = numbers.Zip(words, (first, second) => {if(first != second) {return first + " / " + second;} else return second.ToString(); });
5585	int maxDotNumber = kok.Max(k => k.Title.Count(c => c == '.'));
5586	var query =\n    from c in document.Root.Elements("Customer")\n    where c.Attribute("id").Value == customerID.ToString()\n    from a in c.Element("Accounts").Elements("Account")\n    where a.Attribute("id").Value == this.id.ToString()\n    select a;\n\nquery\n    .First()\n    .Attribute("money")\n    .SetValue(money.ToString());
5587	using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args) {\n        var letters = args[0];\n\n        var wordList = new List<string> { "abcbca", "bca", "def" };\n\n        var results = from string word in wordList\n                      where IsValidAnswer(word, letters)\n                      orderby word.Length descending\n                      select word;\n\n        foreach (var result in results) {\n            Console.WriteLine(result);    \n        }\n    }\n\n    private static bool IsValidAnswer(string word, string letters) {\n        foreach (var letter in word) {\n            if (letters.IndexOf(letter) == -1) {\n                return false;\n            }\n\n            letters = letters.Remove(letters.IndexOf(letter), 1);\n        }\n\n        return true;\n    }\n}
5588	DateTime enteredDate;\nDateTime.TryParse(workerDateAcquired, out enteredDate);\n\nskill.DateAcquired = enteredDate.Equals(DateTime.MinValue) ? DateTime.Now : enteredDate;
5589	Path.GetFullPath(Path.Combine(abs, rel))
5590	public class ReadWriteDictionary<K,V>\n{\n    private readonly Dictionary<K,V> dict = new Dictionary<K,V>();\n    private readonly ReaderWriterLockSlim rwLock = new ReaderWriterLockSlim();\n\n    public V Get(K key)\n    {\n        return ReadLock(() => dict[key]);\n    }\n\n    public void Set(K key, V value)\n    {\n        WriteLock(() => dict.Add(key, value));\n    }\n\n    public IEnumerable<KeyValuePair<K, V>> GetPairs()\n    {\n        return ReadLock(() => dict.ToList());\n    }\n\n    private V2 ReadLock<V2>(Func<V2> func)\n    {\n        rwLock.EnterReadLock();\n        try\n        {\n            return func();\n        }\n        finally\n        {\n            rwLock.ExitReadLock();\n        }\n    }\n\n    private void WriteLock(Action action)\n    {\n        rwLock.EnterWriteLock();\n        try\n        {\n            action();\n        }\n        finally\n        {\n            rwLock.ExitWriteLock();\n        }\n    }\n}\n\nCache["somekey"] = new ReadWriteDictionary<string,int>();
5591	myControlState.Visible = myFoo.IsValid ?? false;
5592	Encoding.ASCII.GetString(Encoding.ASCII.GetBytes(strData)) == strData;
5593	"?disablecache=" + Environment.TickCount
5594	Properties.Settings.Default.Save();
5595	if (File.Exists(Application.StartupPath + @"\Webcam1.xlsx"))\n{\n  //Do My stuff\n}
5596	TreeNode node = CreateATreeNode();\nnode.Tag = myStateObject;
5597	public List<double> Average(List<double> number, int nElement)\n    {\n        var currentElement = 0;\n        var currentSum = 0.0;\n\n        var newList = new List<double>();\n\n        foreach (var item in number)\n        {\n            currentSum += item;\n            currentElement++;\n\n            if(currentElement == nElement)\n            {\n                newList.Add(currentSum / nElement);\n                currentElement = 0;\n                currentSum = 0.0;\n            }\n        }\n        // Maybe the array element count is not the same to the asked, so average the last sum. You can remove this condition if you want\n        if(currentElement > 0)\n        {\n            newList.Add(currentSum / currentElement);\n        }\n\n        return newList;\n    }
5598	DbCommand.CommandText = \n @"SELECT HIST.Field1, HIST.Field2, LOCINFO.Field3 FROM CAV_MBRHISTDEL AS HIST\n   INNER JOIN LOCINFODETL AS LOCINFO ON HIST.MBRNUM = LOCINFO.MBRNUM \n   WHERE LOCINFO.CYCLE = @CYCLE AND\n         LOCINFO.DISTRICT = @DISTRICT AND\n         HIST.BILLTYPE = '09' AND\n         HIST.BOLLMOYR <> '9999'";\n\nDbCommand.Parameters.AddWithValue("@CYCLE", cycle);\nDbCommand.Parameters.AddWithValue("@DISTRICT", district);
5599	[DllImport("user32.dll", CharSet = CharSet.Auto)]\nstatic extern IntPtr SendMessage(IntPtr hWnd, UInt32 Msg, IntPtr wParam, IntPtr lParam);\n\nprivate void button1_Click(object sender, EventArgs e)\n{\n    SendMessage(this.Handle, COMMAND_HERE, PARAM_HERE, 0);\n}
5600	da.UpdateCommand = new OleDbCommand(string.Format("UPDATE tbl_Orders SET {0} = @myCell WHERE oid = @myIndex", myColumn), cs);
5601	CREATE PROC pSomething (@params) AS     \nBEGIN..<code here>..END
5602	Encoding.UTF8.GetBytes("abcd");
5603	var dt1 = new DataTable("Test");\ndt1.Columns.Add("id", typeof(int));\ndt1.Columns.Add("name", typeof(string));\n\nvar dt2 = new DataTable("Test");\ndt2.Columns.Add("id", typeof(int));\ndt2.Columns.Add("name", typeof(string));\n\ndt1.Rows.Add(1, "Apple"); dt1.Rows.Add(2, "Oranges");\ndt1.Rows.Add(3, "Grapes");\ndt1.AcceptChanges();\n\ndt1.Rows[0].Delete();\ndt2.Merge(dt1);\ndt2.AcceptChanges(); \ndt1.RejectChanges();
5604	public void SetIdToHiddenField(string id)\n{\nPage.ClientScript.RegisterHiddenField("idHiddenField", id);\n}
5605	Optimize code
5606	string[] nameArray = new string[5];\n\nvoid CopyTextBoxesToArray()\n{\n    nameArray[0] = textBoxName1.Text;\n    nameArray[1] = textBoxName2.Text;\n    nameArray[2] = textBoxName3.Text;\n    nameArray[3] = textBoxName4.Text;\n    nameArray[4] = textBoxName5.Text;\n}\n\nprivate void button9_Click(object sender, EventArgs e)\n{\n    CopyTextBoxesToArray();\n    Array.Sort(nameArray);\n\n    foreach(string s in nameArray)\n    {\n        richTextBox1.Text += s + " ";\n    }\n}
5607	// (shared variables here)\n\nforeach (KeyValuePair<string, int> total in totalOrders)\n{\n    // Code relevant to all orders here\n}\n\nforeach (KeyValuePair<string, int> error in errorOrders)\n{\n    // Code relevant to erroneous orders only here\n}
5608	return rbReturning.SelectedItem == null ? null : rbReturning.SelectedItem.Text;
5609	[DllImport("user32.dll")]\nstatic extern IntPtr GetForegroundWindow();\n\n[DllImport("user32.dll")]\nstatic extern int GetWindowText(IntPtr hWnd, StringBuilder text, int count);\n\nprivate string GetActiveWindowTitle()\n{\n    const int nChars = 256;\n    StringBuilder Buff = new StringBuilder(nChars);\n    IntPtr handle = GetForegroundWindow();\n\n    if (GetWindowText(handle, Buff, nChars) > 0)\n    {\n        return Buff.ToString();\n    }\n    return null;\n}
5610	IPAddress.Address
5611	var dialogForm = new MyNewForm();\nif (dialogForm.ShowDialog() != DialogResult.OK)\n{\n   Application.Exit()\n}\nelse \n{\n   var pw = dialogForm.GetText(); // string var pw stores the enterd pw now\n   // validate your password here\n\n   if (PasswordIsCorrect())\n   {\n      // some logic here\n   } \n}
5612	public List<User> GetUsers(Expression<Func<User, bool>> where)\n{\n    return _entity.Where(where).ToList();\n}\nvar users = _acc.GetUsers(x => x.Id == 1);
5613	public class Notifier\n    {\n        public static void Say(string message)\n        {\n            var context = GlobalHost.ConnectionManager.GetHubContext<MyHub>();\n            context.Clients.say(message);\n        }\n    }\n}
5614	[TemplateInstance(TemplateInstance.Single)]
5615	MembersWebPart membersWebPart = new MembersWebPart();\n                membersWebPart.DisplayType = MembersWebPartDisplayType.WebUserGroups;\n                membersWebPart.Title = "Anv?ndare och grupper";\n\n                wpManager.AddWebPart(membersWebPart, "Right", 2);
5616	var listing = \nxDoc.Elements("Listings")\n.Elements("Listing")\n.GroupBy (x => new { \n                ID = x.Element(XName.Get("CatID")).Value\n                , Description = x.Element(XName.Get("CatDesc")).Value\n            }\n)\n.Select (x => new Category { \n                ID = x.Key.ID\n                , Description = x.Key.Description\n                , Items = x.Select (i => new Item { \n                                    ID = i.Element("ItemID").Value\n                                    , Description = i.Element("ItemDesc").Value\n                                    , TotalPrice = decimal.Parse(i.Element("TotalPrice").Value) \n                                   }\n                    ).ToList()\n            }\n        )\n.OrderBy (x => x.ID);
5617	var filesnames = text.Split(new char[] { }) // split on whitespace into words\n                     .Where(word => word.EndsWith(".txt"));
5618	var dataAccess = Assembly.GetExecutingAssembly();\n\nbuilder.RegisterAssemblyTypes(dataAccess)\n   .Where(t => t.Name.EndsWith("Query"))\n   .AsImplementedInterfaces();
5619	radAjaxManager1.RequestQueueSize = 0;
5620	string assemblyName = this.GetType().Assembly.FullName;
5621	if(SpeedboostTimeRemaining > 0)\n{\n    SpeedboostTimeRemaining -= Time.deltaTime\n    if(SpeedboostTimeRemaining < 0)\n    {\n        SpeedboostTimeRemaining = 0;\n        Player0.speed = 3.5f;\n    }\n}
5622	foreach (Criteria.SegmentCriteria x in myCriteria)\n            {\n                Criteria.SegmentCriteria item = x;\n                if (myMatchMethod == Common.MultipleCriteriaMatchMethod.MatchOnAll)\n                {\n                    predicate = predicate.Expand().And<Segment>(CreateCriteriaExpression(item).Expand());\n                    customPropertiesPredicate = customPropertiesPredicate.Expand().And<Segment>(CreateCriteriaExpressionForCustomProperties(item).Expand());\n                }\n                else if (myMatchMethod == Common.MultipleCriteriaMatchMethod.MatchOnAny)\n                {\n                    predicate = predicate.Expand().Or<Segment>(CreateCriteriaExpression(item).Expand());\n                    customPropertiesPredicate = customPropertiesPredicate.Expand().Or<Segment>(CreateCriteriaExpressionForCustomProperties(item).Expand());\n                }\n            }
5623	insert into tbl_date(date_value) values(#7/8/2014#)
5624	interface ISomething\n{\nvoid DoSomething();\n}\n\nclass NormalType : ISomething\n{\n// ...\npublic void DoSomething() { /* nothing to do */ }\n}\n\nclass SpecialType : ISomething\n{\n// ...\npublic void DoSomething() { this.SpecialString = "foo" }\n}\n\nclass MyGenericClass : ICloneable\n{\nprivate ISomething m_storedClass;\n\nprivate DoStuff()\n{\n// ...\nm_storedClass.DoSomething();\n}\n}
5625	var prm = Sys.WebForms.PageRequestManager.getInstance();\n\nprm.add_initializeRequest(InitializeRequest);\nprm.add_endRequest(EndRequest);\n\nfunction InitializeRequest(sender, args) {     \n}\n\nfunction EndRequest(sender, args) {\n  // here you can load your scripts.\n}
5626	var obj=lvUsers.SelectedItems[0] as User;\nif(obj!=null)\n{\n   var age=obj.Age;\n}
5627	string macro = string.Format("'{0}'!{1}", workbook.Name, macroName);\nApplication.Run(macro);
5628	bool isValid = Regex.IsMatch(value, @"/d{3}-/d{3}-/d{4}");
5629	case "zeroBtn":\nif(textBox_output.Text.IndexOf(".") > 0)\n{\n    textBox_output.Text+="0";\n}\nelse\n{\n    //edit: thanks for the comment\n    if(textBox_output.Text.ToString() == "")\n    {\n         textBox_output.Text+="0";\n    }\n    else if(!textBox_output.Text.StartWith("0"))\n    {\n        textBox_output.Text+="0";\n    }\n    else\n    {\n        //do nothing\n    }\n}
5630	radDock1.SplitPanelElement.Fill.BackColor = Color.Red;\n    radDock1.SplitPanelElement.Fill.GradientStyle = GradientStyles.Solid;\n\n    radDock1.MainDocumentContainer.SplitPanelElement.Fill.BackColor = Color.Yellow;\n    radDock1.MainDocumentContainer.SplitPanelElement.Fill.GradientStyle = GradientStyles.Solid;
5631	var searchForIds = searchFor.Select(x => x.ID).ToList();\nvar query = context.Products\n                   .Where(product => product.Categories\n                                     .Any(cat => searchForIds.Contains(cat.ID)));
5632	string[] strArray = Regex.Split(content, "(\r\n)*");
5633	[ComVisible(true)]\n[Guid("babe87fc-1467-4913-a1d3-47eeedf1afb5")]\npublic interface IDialogFactory {\n  void Create(); \n}
5634	DemoService ctx = new DemoService(new Uri("http://services.odata.org/OData/OData.svc/"));\nDataServiceQuery<Product> products = ctx.Products;\n\nDataServiceQuery<Product> q = (DataServiceQuery<Product>)products.Where(p => p.Name == "Bread").Skip(10);\nMethodCallExpression skipCall = (MethodCallExpression)q.Expression;\nq = (DataServiceQuery<Product>)q.Provider.CreateQuery<Product>(skipCall.Arguments[0]);\nConsole.WriteLine(q);
5635	static void Main(string[] args)\n{\n    string str = @"N:Pay in Cash++RGI:40++R:200++T:Purchase++IP:N++IS:N++PD:PC++UCP:598.80++UPP:0.00++TCP:598.80++TPP:0.00++QE:1++QS:1++CPC:USD++PPC:Points++D:Y++E:Y++IFE:Y++AD:Y++IR:++MV:++CP:~ ~N:ERedemption++RGI:42++R:200++T:Purchase++IP:N++IS:N++PD:PC++UCP:598.80++UPP:0.00++TCP:598.80++TPP:0.00++QE:1++QS:1++CPC:USD++PPC:Points++D:Y++E:Y++IFE:Y++AD:Y++IR:++MV:++CP:"; \n    System.Text.RegularExpressions.MatchCollection MC = System.Text.RegularExpressions.Regex.Matches(str,@"((RGI|N):.*?)\+\+");\n    foreach( Match Foundmatch in MC)\n    {\n        string[] s = Foundmatch.Groups[1].Value.Split(':');\n        Console.WriteLine("Key {0} Value {1} " ,s[0],s[1]);\n\n    }\n\n}
5636	var query = from p in data.GetMember \n            where (p.Client == client && p.Person_id == pid) \n            select new MemberCommunicationType \n                       { person_id = p.person_id, comm_id = p.comm_id}\n            ;\nvar output = new GetMemberColl { memberCommunication = query.ToArray() };
5637	var total = Double.Parse(string.Concat(left, ",", right));
5638	IList<int> list = new List<int>( new int[] { 1, 2, 3 } );\n    Console.WriteLine(string.Join(",", list.Select( i => i.ToString() ).ToArray( )));
5639	FtpWebRequest ftpClient = (FtpWebRequest)FtpWebRequest.Create(new Uri(ftpurl + \n                                            ftpusername + "_" + filename));
5640	Expression<Action<string>>
5641	public Task CreateAnimationFileAsync(IEnumerable<Bitmap> frames)\n{\n    var frameProcessor = new TransformBlock<Bitmap, Bitmap>(\n        frame => ProcessFrame(frame),\n        new ExecutionDataflowBlockOptions\n        { MaxDegreeOfParallelism = DataflowBlockOptions.Unbounded });\n\n    var animationWriter = new ActionBlock<Bitmap>(frame => WriteFrame(frame));\n\n    frameProcessor.LinkTo(\n        animationWriter,\n        new DataflowLinkOptions { PropagateCompletion = true });\n\n    foreach (var frame in frames)\n    {\n        frameProcessor.Post(frame);\n    }\n\n    frameProcessor.Complete();\n\n    return frameProcessor.Completion;\n}\n\nprivate Bitmap ProcessFrame(Bitmap frame)\n{\n    ???\n}\n\nprivate async Task WriteFrame(Bitmap frame)\n{\n    ???\n}
5642	TextBox.KeyDown += (s, a) => {\n if (a.Key == VirtualKey.Enter) {\n   TextBox.IsEnabled = false;\n   TextBox.IsEnabled = true;\n }
5643	using System.Web.Mvc;\n\nnamespace WebApplication1.Areas.Admin\n{\n    public class AdminAreaRegistration : AreaRegistration \n    {\n        public override string AreaName \n        {\n            get \n            {\n                return "Admin";\n            }\n        }\n\n        public override void RegisterArea(AreaRegistrationContext context) \n        {\n            // This is where the custom route has to be registered for me to access\n            // it from my area.\n            context.MapRoute(\n                "Admin_pages",\n                "Admin/Pages/{action}/{id}",\n                new { action = "Index", \n                      controller = "CMSPages", \n                      id = UrlParameter.Optional }\n            );\n\n            context.MapRoute(\n                "Admin_default",\n                "Admin/{controller}/{action}/{id}",\n                new { action = "Index", id = UrlParameter.Optional }\n            );\n        }\n    }\n}
5644	var myBytes[] = {0,0,0,0,0,1,1,2}; //assume you pad your array with enough zeros to make it 8 bytes.\nvar myDouble = BitConverter.ToDouble(myBytes,0);
5645	[DataMember]\npublic virtual List<Account> TargetAccounts { get; set; }
5646	var query2 = db.Users.GroupJoin(db.Defects,\n                                u => u.userId,\n                                d => d.userID,\n                                (u, defectsGroup) => new { u, defectsGroup})\n                     .SelectMany(z => z.defectsGroup.DefaultIfEmpty(),\n                                 (z, d) => new { z.u, d });
5647	public bool IsValidSSN(object ssn) {\n  ...\n  IsValidSSN(Convert.ToInt32(ssn));\n  ...\n}\n\npublic bool IsValidSSN(int ssn) {\n  ...\n}
5648	PropertyInfo propertyInfo = typeof(MyClass).GetProperty("something");\nstring something = (string) propertyInfo.GetValue(null, null);
5649	private void btn_Clicked(object sender, RoutedEventArgs e)\n{\n    Button cmd = (Button)sender;\n    string name = cmd.name;\n    switch(name)\n    //{ do some stuff based on the button name}\n}
5650	#include "cv.h"\n#include "highgui.h"\n#include <iostream>\n\nint main(int, char**) {\n    cv::VideoCapture vcap;\n    cv::Mat image;\n\n    const std::string videoStreamAddress = "rtsp://cam_address:554/live.sdp"; \n    /* it may be an address of an mjpeg stream, \n    e.g. "http://user:pass@cam_address:8081/cgi/mjpg/mjpg.cgi?.mjpg" */\n\n    //open the video stream and make sure it's opened\n    if(!vcap.open(videoStreamAddress)) {\n        std::cout << "Error opening video stream or file" << std::endl;\n        return -1;\n    }\n\n    int counter = 0;\n    for(;;) {\n        counter++;\n\n        if(!vcap.read(image)) {\n            std::cout << "No frame" << std::endl;\n            cv::waitKey();\n        }\n\n        // if the picture is too large, imshow will display warped images, so show only every 10th frame\n        if (counter % 10 != 0)\n            continue;\n\n        cv::imshow("Output Window", image);\n        if(cv::waitKey(1) >= 0) break;\n    }   \n}
5651	DataTable dtCloned = dt.Clone();\ndtCloned.Columns[0].DataType = typeof(Int32);\nforeach (DataRow row in dt.Rows) \n{\n    dtCloned.ImportRow(row);\n}
5652	Process.Start("shutdown", "/s /f /hybrid /t 0");
5653	public abstract class Base\n{\n    public abstract override string ToString(); \n}
5654	list.push_end(new_data)\nwhile list.head.age >= age_limit:\n    list.pop_head()
5655	LocalResource localResource = RoleEnvironment.GetLocalResource("DownloadedTemplates");
5656	import requests\n    from requests_ntlm import HttpNtlmAuth\n\n    requests.get("http://ntlm_protected_site.com",auth=HttpNtlmAuth('domain\\username','password'))
5657	Console.WriteLine(cities.Distinct().Count());\nConsole.WriteLine(String.Join(", ", cities.Where(city=>city.IsOpenOnFriday).ToList()));
5658	private void AddNewUserControlAndAutoRemoveOldUserControl(UserControl control)\n        {\n            if (control != null)\n            {\n                Panel parent = control.Parent as Panel;\n\n                if (parent != null)\n                {\n                    // Removing old UserControl if present\n                    if(parent.Children.Count > 0)\n                        parent.Children.RemoveAt(0);\n\n                    parent.Children.Insert(0, control);\n                }\n            }\n        }\n}
5659	this.Controls.Add
5660	var result = Regex.Replace(input, @"[^a-zA-Z0-9]", "");
5661	private void Save(object sender, EventArgs args)\n{\n   //Gather text info e.g.: var myText1 = myTextBox1.Text;\n   //Save to the database or wherever using Stream \n   //or SqlConnection or something else.  See below\n}
5662	.hgignore
5663	Storyboard.SetTargetProperty(keyFrameDa, new PropertyPath(PlaneProjection.RotationXProperty));\nStoryboard.SetTarget(keyFrameDa, cardBack.Projection);
5664	async private void loadData_Click_1(object sender, EventArgs e)\n{\n    await Task.WhenAll(Task.Run(() => loadData()), \n                       Task.Run(() => loadOtherData()));\n\n    updateGrids(myDictionary); \n}
5665	var bitmap = new BitmapImage(\n    new Uri("pack://application:,,,/GameTools;component/Images/face1.png"));
5666	private static readonly long NegativeZeroBits =\n    BitConverter.DoubleToInt64Bits(-0.0);\n\npublic static bool IsNegativeZero(double x)\n{\n    return BitConverter.DoubleToInt64Bits(x) == NegativeZeroBits;\n}
5667	private void DrawModel(Model m)\n{\n    Matrix[] transforms = new Matrix[m.Bones.Count];\n    float aspectRatio = graphics.GraphicsDevice.Viewport.Width / graphics.GraphicsDevice.Viewport.Height;\n    m.CopyAbsoluteBoneTransformsTo(transforms);\n    Matrix projection = Matrix.CreatePerspectiveFieldOfView(MathHelper.ToRadians(45.0f),\n        aspectRatio, 1.0f, 10000.0f);\n    Matrix view = Matrix.CreateLookAt(new Vector3(0.0f, 50.0f, Zoom), Vector3.Zero, Vector3.Up);\n\n    foreach (ModelMesh mesh in m.Meshes)\n    {\n        foreach (BasicEffect effect in mesh.Effects)\n        {\n            effect.EnableDefaultLighting();\n\n            effect.View = view;\n            effect.Projection = projection;\n            effect.World = gameWorldRotation * transforms[mesh.ParentBone.Index] * Matrix.CreateTranslation(Position);\n        }\n        mesh.Draw();\n    }\n}
5668	string baseUrl = Request.Url.Scheme + "://" + Request.Url.Authority + \n    Request.ApplicationPath.TrimEnd('/') + "/";
5669	var dt = DateTime.ParseExact("7/16/2013 7:00:00 AM", "M/d/yyyy h:mm:ss tt", CultureInfo.InvariantCulture);
5670	[DataContract]\npublic class Person\n{\n    [DataMember]\n    public int id { get; set; }\n\n    [DataMember]\n    public string Name{ get; set; }\n}
5671	public class Items\n{\n    [XmlAttribute("id")]\n    public string ID { get; set; }\n\n    [XmlAttribute("title")]\n    public string Title { get; set; }\n\n    [XmlElement("word")]\n    public List<string> Words { get; set; }\n}\n\n[XmlRoot("root")]\npublic class Lists\n{\n    [XmlElement("list")]\n    public List<Items> Get { get; set; }\n}
5672	DataTable dt = new DataTable();\nforeach(DataGridViewColumn col in dgv.Columns)\n{\n   dt.Columns.Add(col.HeaderText);    \n}\n\nforeach(DataGridViewRow row in dgv.Rows)\n{\n    DataRow dRow = dt.NewRow();\n    foreach(DataGridViewCell cell in row.Cells)\n    {\n        dRow[cell.ColumnIndex] = cell.Value;\n    }\n    dt.Rows.Add(dRow);\n}
5673	icon.UriSource = new Uri(string.Format(\n    "pack://application:,,,/{0};component/Images/logo.ico",\n    Path.GetFileNameWithoutExtension(Application.ResourceAssembly.Location)));
5674	_kernel\n    .Bind<DefaultModelValidatorProviders>()\n    .ToConstant(new DefaultModelValidatorProviders(\n         config.Services.GetServices(\n             typeof (ModelValidatorProvider))\n         .Cast<ModelValidatorProvider>()));
5675	for(int i = dsData.Tables["TAble1"].Rows; i > 0; i--)\n{\n     if(item.SubItems[2].Text == dsData.Tables["Table1"].Rows[i - 1]["LoginName"].ToString())\n         dsData.Tables["Table1"].Rows.Remove(i - 1)\n}
5676	List<Developer> developers =\n    employees.Where(x => x.Department == "Dev")\n             .Select(x => new Developer\n             {\n                 Name = x.Name,\n                 Department = x.Department,\n                 JobTitle = x.Function,\n                 Division = String.Concat(x.Function, "/", x.Department)\n             }).ToList();\n\n    return developers;
5677	for (int i = 0; i < c.Count; i++)\n        {\n            System.Xml.Serialization.XmlSerializer x = new System.Xml.Serialization.XmlSerializer(c[i].GetType());\n            using (StringWriter writer = new StringWriter())\n            {\n                x.Serialize(writer, c[i]);\n                String details = writer.ToString();\n            }\n                   //do here what ever you want\n        }
5678	[HttpPost]\npublic ActionResult DATACRUD()\n{\n    Stream req = Request.InputStream;\n    req.Seek(0, System.IO.SeekOrigin.Begin);\n    string json = new StreamReader(req).ReadToEnd();\n    return Json(new { fromMVC = json });\n}
5679	annotation.Items.Add(doc);\ndoc.Markup = TextToNodeArray("Your text you need");
5680	private void button1_Click(object sender, EventArgs e)\n {\n     var button = (Button) sender;\n     button.Text = "X";\n }
5681	public partial class Form1 : Form {\n    protected override CreateParams CreateParams {\n        get {\n            CreateParams par = base.CreateParams;\n            par.Style = par.Style | 0x20000; // Turn on the WS_MINIMIZEBOX style flag\n            return par;\n        }\n    }\n}
5682	if not locked then\n    open and update file
5683	for (int i = 0; i < customer.Count; i++)
5684	string s = DateTime.Now.ToString("MM/dd/yyyy");
5685	(100|([1-9][0-9])|[1-9]
5686	Control ctrl = Page.LoadControl("UserControlPath");\ndivControls.Controls.Clear();\ndivControls.Controls.Add(ctrl);
5687	one.SetAttributeValue("name", "ID");
5688	var group_key = (from g in this.Context.Groups\n            where g.ID == groupID\n                  && g.TaxId == groupTaxId\n            select g.Group_K);\n\n        var query = (from a in this.Context.Addresses\n            join ga in this.Context.GroupAddress on a.Address_K equals ga.Address_K\n            where (group_key.Contains(ga.Group_K) && a.ZipCode == "whatever passed from method" && ga.Address_Type == "whatever passed from your method")\n            select a);
5689	string formatedDate = "";\n        EventQuery query = new EventQuery();\n        DateTime? time;\n        if (!string.IsNullOrEmpty(startDate))\n        {\n            time = Convert.ToDateTime(startDate);\n            formatedDate = string.Format("{0:s}", time);\n\n            // Create the query object:\n            query.Uri = new Uri("http://www.google.com/calendar/feeds/" + service.Credentials.Username + "/private/full?updated-min=" + formatedDate);\n        }\n        else\n        {\n            query.Uri = new Uri("http://www.google.com/calendar/feeds/" + service.Credentials.Username + "/private/full");\n        }\n\n\n        // Tell the service to query:\n        EventFeed calFeed = service.Query(query);\n        return calFeed.Entries.Cast<EventEntry>();
5690	protected dynamic getNewObject(String name, String phone, String email)\n    {\n\n\n        // ... //I can not add the variables that received by the object parameter here.\n        dynamic ex = new ExpandoObject();\n        ex.Name = name;\n        ex.Phone = phone;\n        ex.Email = email;\n        return ex;\n    }\n\n    private void button1_Click_2(object sender, EventArgs e)\n    {\n        var ye = getNewObject("1", "2", "3");\n        Console.WriteLine(string.Format("Name = {0},Phone = {1},Email={2}", ye.Name, ye.Phone, ye.Email));\n    }
5691	allShapes = cubes.Cast<Shape>().ToList();
5692	decimal x  = 3.141592654M ;\ndouble  pi = (double) x ;
5693	Uri combined = new Uri(\n  new Uri("http://www.domain.com/aaa/bbb/ccc/ddd/eee.ext", UriKind.Absolute),\n  "../../fff.ext"\n);
5694	Bitmap b = SystemIcons.Error.ToBitmap();
5695	Book Name: @Html.DisplayFor(model =>  model.Book.Name)
5696	Conductor<T>.Collection.AllActive
5697	int minPrice = closingsBook.Min(book => book.LimitPrice);\n\nvar indexes = closingsBook.Select((book, index) => new { book, index })\n             .Where(x => x.book.LimitPrice== minPrice)\n             .Select(x => x.index);
5698	string PropertyName<T>(Expression<Func<T>> expression)\n    {\n        var body = expression.Body as MemberExpression;\n\n        if (body == null)\n        {\n            body = ((UnaryExpression)expression.Body).Operand as MemberExpression;\n        }\n\n        return string.Join(".", GetPropertyNames(body).Reverse());\n    }\n\n    private IEnumerable<string> GetPropertyNames(MemberExpression body)\n    {\n        while (body != null)\n        {\n            yield return body.Member.Name;\n            var inner = body.Expression;\n            switch (inner.NodeType)\n            {\n                case ExpressionType.MemberAccess:\n                    body = inner as MemberExpression;\n                    break;\n                default:\n                    body = null;\n                    break;\n\n            }\n        }\n    }
5699	protected override void Render(HtmlTextWriter writer)\n    {\n        foreach (GridViewRow row in this.Rows)\n            if (row.RowType == DataControlRowType.DataRow)\n                foreach (DataControlFieldCell cell in row.Cells)\n                    if ((cell.ContainingField).HeaderText != "Detalhes")\n                        cell.Attributes["onclick"] = this.Page.ClientScript.GetPostBackClientHyperlink(this, string.Format("Select${0}", row.RowIndex), true);\n\n        base.Render(writer);\n    }
5700	using (new UseDialogOnce(ie.DialogWatcher, approveConfirmDialog))\n        {\n            ie.Button(Find.ByName("btn")).ClickNoWait();\n            approveConfirmDialog.WaitUntilExists();\n            approveConfirmDialog.OKButton.Click();\n            ie.WaitForComplete();\n        }
5701	public Task Foo()\n{\n    var tcs = new TaskCompletionSource<bool>();\n    storyboard.Begin();\n    storyboard.Completed += (s, e) => tcs.SetResult(true);\n    return tcs.Task;\n}
5702	public Form1()\n{\n  InitializeComponent();\n  InitializeChart();\n}\n\nprivate Bitmap chartBmp;\n\nprivate void InitializeChart()\n{\n  tChart1.Series.Add(new Steema.TeeChart.Styles.Bar()).FillSampleValues();\n\n  chartBmp = tChart1.Bitmap;\n\n  tChart1.GetLegendRect += tChart1_GetLegendRect;\n}\n\nvoid tChart1_GetLegendRect(object sender, Steema.TeeChart.GetLegendRectEventArgs e)\n{\n  Rectangle cropRect = e.Rectangle;\n  Bitmap legendImg = new Bitmap(cropRect.Width, cropRect.Height);\n\n  using (Graphics g = Graphics.FromImage(legendImg))\n  {\n    g.DrawImage(chartBmp, new Rectangle(0, 0, legendImg.Width, legendImg.Height),\n                     cropRect,\n                     GraphicsUnit.Pixel);\n  }\n\n  legendImg.Save(@"c:\temp\legend.png");\n}
5703	using (WebClient wc = new WebClient())\n{\n    string json = wc.DownloadString("http://moon.eastlink.com/~jandrews/webservice2.php");\n    var jObj = JObject.Parse(json);\n\n    var items = jObj.Children()\n                .Cast<JProperty>()\n                .Select(c => new\n                {\n                    Title = (string)c.Value["{\"Title"],\n                    Body = (string)c.Value["Body"],\n                    Caption = (string)c.Value["Caption"],\n                    Datestamp = (string)c.Value["Datestamp"],\n                })\n                .ToList();\n}
5704	Process.Start()
5705	protected void GridView2_DataBound(object sender, EventArgs e)\n{\n    // Populate dropdown with column names\n    if(e.Row.RowType != DataControlRowType.Header) return; //only continue if this is hdr row\n    ddColumnSearch.Items.Clear();\n    foreach (TableCell cell in e.Row.Cells)\n    {\n        ddColumnSearch.Items.Add(new ListItem(cell.Text));\n    }\n}
5706	private void driverNo_TextChanged(object sender, EventArgs e)\n    {\n\n        if (string.IsNullOrEmpty(driverNo.Text))\n        {\n            ((DataTable)dataGridView1.DataSource).DefaultView.RowFilter = string.Empty;\n            return;\n        }\n\n        int _driverNo;\n\n        if (int.TryParse(driverNo.Text,out _driverNo))\n            ((DataTable)DataGridViews.DataSource).DefaultView.RowFilter = "DriverNo = " + _driverNo;\n        else\n            MessageBox.Show("Invalid driver no.");\n    }
5707	public class Item\n{\n    private readonly LimitedString _reality = new LimitedString("Real", "Imaginary", "Based on reality");\n    public string Reality\n    {\n        get { return _reality.Value; }\n        set { _reality.Value = value; }\n    }\n\n    private readonly LimitedString _colour = new LimitedString("Other", "Blue", "Red", "Green");\n    public string Colour\n    {\n        get { return _colour.Value; }\n        set { _colour.Value = value; }\n    }\n}
5708	NewEventStart = NewEventStart.ToUniversalTime();
5709	var foundExcelRows =\nfrom excelRow in this.ExcelDataTable.AsEnumerable()\njoin file in this.FilesToImport.AsEnumerable()\non excelRow.Field<Guid>("ceGuid") equals file.SourceFileIdentifier\nselect excelRow;\n\nfor (int i = 0; i < foundExcelRows.Count(); i++)\n{\n    DataRow row = foundExcelRows.ElementAt(i);\n    // work with this row since I know the columns I expect   \n}
5710	PList = PList.GroupBy (x => x.Name).SelectMany (x=>x.OrderBy(y=> y.Date).Take(1))
5711	this.Manager.CheckName(dossierId, id)
5712	var result = partNumbers.Where(x => Regex.Match(x, "\\d+").Success);
5713	public static Color GetColor(String ColorName)\n{\n    Type colors = typeof(System.Windows.Media.Colors);\n    foreach(var prop in colors.GetProperties())\n    {\n        if(prop.Name == ColorName)\n            return ((System.Windows.Media.Color)prop.GetValue(null, null));\n    }\n\n    throw new Exception("No color found");\n}
5714	printDocument1.PrintPage += this.printDocument1_PrintPage;
5715	protected void rpt_ItemDataBound(object sender, RepeaterItemEventArgs e)\n    if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)\n    {\n        DropDownList cbo = (DropDownList)e.Item.FindControl("cboType");\n        Behaviour b = (Behaviour)e.Item.DataItem;\n\n        for (int i = 0; i < cbo.Items.Count; i++)\n        {\n            if (b.Type_of_Behaviour == cbo.Items[i].Value)\n                cbo.Items[i].Selected = true;\n            else\n                cbo.Items[i].Selected = false;\n        }\n    }\n}
5716	(?<=from|join)(\s+\w+\b)
5717	using Microsoft.Win32;\nRegistryKey key;\nkey = Registry.LocalMachine.OpenSubKey\n         ("SYSTEM\\CurrentControlSet\\Services\\UsbStor");\nkey.SetValue("Start", 4, RegistryValueKind.DWord);  //disables usb drives\nkey.SetValue("Start", 3, RegistryValueKind.DWord);  //enables usb again
5718	private IEnumerable<TreeViewModel> GetCheckedItems(TreeViewModel node)\n{\n    var checkedItems = new List<TreeViewModel>();\n\n    ProcessNode(node, checkedItems);\n\n    return checkedItems;\n}    \n\nprivate void ProcessNode(TreeViewModel node, IEnumerable<TreeViewModel> checkedItems)\n{\n    foreach (var child in node.Children)\n    {\n        if (child.IsChecked)\n            checkedItems.Add(child);\n\n        ProcessNode(child, checkedItems);\n    }\n}
5719	private static byte[] Encrypt(byte[] value, byte[] key)\n    {\n        DESCryptoServiceProvider cryptoProvider = new DESCryptoServiceProvider\n                                                      {\n                                                          Mode = CipherMode.ECB,\n                                                          Padding = PaddingMode.None\n                                                      };\n\n        MemoryStream memoryStream = new MemoryStream();\n\n        CryptoStream cryptoStream = new CryptoStream(memoryStream, cryptoProvider.CreateEncryptor(key, key), CryptoStreamMode.Write);\n\n        cryptoStream.Write(value, 0, value.Length);\n        cryptoStream.Close();\n\n        return memoryStream.ToArray();\n    }
5720	public class MyProjectionExpressions\n {\n    public static Expression<Func<Log, dynamic>> LogSelector()\n    {\n        return log => new\n        {\n            logId = log.LogId,\n            message = log.Message,\n        };\n    }\n\n    //Get the expression as a Func<Log, dynamic>, then apply it\n    //to your log object.\n    private static Func<Log, dynamic> impl = LogSelector().Compile();\n\n    public static dynamic LogSelector(Log log)\n    {\n        return impl(log);\n    }\n }
5721	grades.DataBind();
5722	Datetime myDate=(DateTime)((DataRowView)dv.DataItem)["_DTMON_F"];
5723	public void RegisterFakeData<T> (Context ctx,IEnumerable<T> list)\n        {\n            var name =typeof (T).Name;\n            var mi = ctx.GetType().GetProperty(name).GetGetMethod();\n            var args = new object[0] ;\n            Isolate.WhenCalled(() =>(IEnumerable<T>)mi.Invoke(ctx,args)).WillReturnCollectionValuesOf(list);\n        }
5724	List<Products> products = (from x in everythingList\n                          group x by new { x.Product, x.ProductName } into xg\n                          select new Products\n                          {\n                             Product = xg.Key.Product,\n                             ProductName = xg.Key.ProductName \n                          }).ToList();
5725	[ServiceContract]\npublic interface IServiceClient\n{\n    [OperationContract]\n    void InsertMaster(Service ServiceObj);\n}\n\n[DataContract]\npublic class Service\n{\n    [DataMember]\n    public string Id;\n    [DataMember]\n    public string Submitter;\n    [DataMember]\n    public string Comments;\n    [DataMember]\n    public DateTime TimeSubmitted;\n}\n\npublic void InsertMaster(Service ServiceObj)\n{\n    string query = "INSERT INTO movies (id, submitter, comments, time) VALUES(ServiceObj.id, ServiceObj.submitter, ServiceObj.comments, ServiceObj.time)";\n    //open connection\n    connection.Open();\n    //create command and assign the query and connection from the constructor\n    MySqlCommand cmd = new MySqlCommand(query, connection);\n    //Execute command\n    cmd.ExecuteNonQuery();\n    //close connection\n    connection.Close();\n\n}
5726	string currClass =  hc.Attributes["class"].ToString();\nstring count = e.Item.Controls.Count.ToString();\n        if (e.Item.ItemIndex == 0)\n                    {\n                        currClass += " TabbedPanelsTabSelected";\n                    }\n     else if (e.Item.ItemIndex.ToString() == count)\n                    {\n                        currClass += " last";\n                    }
5727	chartArea.AxisY.LineWidth = 0;\n        chartArea.AxisX.LineWidth = 0;\n        chartArea.AxisX.LabelStyle.Enabled = false;\n        chartArea.AxisY.LabelStyle.Enabled = false;\n        chartArea.AxisX.MajorTickMark.Enabled = false;\n        chartArea.AxisY.MajorTickMark.Enabled = false;
5728	long _n;\nint _i;\nlong _mod;\n\nlong FindModulusParallel(long n, int i)\n{\n    _mod = _n = n;\n    _i = i;\n\n    var actions = Enumerable.Range(0, Environment.ProcessorCount)\n                            .Select<int,Action>(j => Subtract).ToArray();\n    Parallel.Invoke(actions);\n\n    return _mod;\n}\n\nvoid Subtract()\n{\n    while (Interlocked.Add(ref _n, -_i) >= 0)\n        Interlocked.Add(ref _mod, -_i);\n}
5729	public IEnumerable<BufferWrapper> getBytes(Stream stream)\n{\n    List<int> bufferSizes = new List<int>() { 8192, 65536, 220160, 1048576 };\n    int count = 0;\n    int bufferSizePostion = 0;\n    byte[] buffer = new byte[bufferSizes[0]];\n    bool done = false;\n    while (!done)\n    {\n        BufferWrapper nextResult = new BufferWrapper();\n        nextResult.bytesRead = stream.Read(buffer, 0, buffer.Length);\n        nextResult.buffer = buffer;\n        done = nextResult.bytesRead == 0;\n        if (!done)\n        {\n            yield return nextResult;\n            count++;\n            if (count > 10 && bufferSizePostion < bufferSizes.Count)\n            {\n                count = 0;\n                bufferSizePostion++;\n                buffer = new byte[bufferSizes[bufferSizePostion]];\n            }\n        }\n    }\n}\n\npublic class BufferWrapper\n{\n    public byte[] buffer { get; set; }\n    public int bytesRead { get; set; }\n}
5730	string pcName = System.Environment.MachineName;
5731	if(!IsPostBack)\n{\n  dg.DataSource = GetData();\n  dg.DataBind();\n}
5732	//extract the first number found in the address string, wherever that number is.\nMatch m = Regex.Match(address, @"((\d+)/?(\d+))");\nstring numStr = m.Groups[0].Value;\n\nstring streetName = address.Replace(numStr, "").Trim();\n//if a number was found then convert it to numeric \n//also remove it from the address string, so now the address string only\n//contains the street name\nif (numStr.Length > 0)\n{\n    string streetName = address.Replace(numStr, "").Trim();\n    if (numStr.Contains('/'))\n    {\n        int num1 = Convert.ToInt32(m.Groups[2].Value);\n        int num2 = Convert.ToInt32(m.Groups[3].Value);\n    }\n    else\n    {\n        int number = Convert.ToInt32(numStr);\n    }\n}
5733	--- loop ---\nButton abc = new Button();\nabc.Name = loopCounter.ToString();\n--- loop ---
5734	var a = new int[] {1,2,3 };\nvar b = new int[] {4,5,6 };\na.Zip(b, (x, y) => x + y)
5735	public class RightButton : MonoBehaviour {\n\n    public Texture bgTexture;\n    public Texture airBarTexture;\n    public int iconWidth = 32;\n    public Vector2 airOffset = new Vector2(10, 10);\n\n\n    void start(){\n    }\n\n    void OnGUI(){\n        int percent = 100;\n\n        DrawMeter (airOffset.x, airOffset.y, airBarTexture, bgTexture, percent);\n    }\n\n    void DrawMeter(float x, float y, Texture texture, Texture background, float percent){\n        var bgW = background.width;\n        var bgH = background.height;\n\n        if (GUI.Button (new Rect (x, y, bgW, bgH), background)){\n            // Handle button click event here\n        }\n\n        var nW = ((bgW - iconWidth) * percent) + iconWidth;\n\n        GUI.BeginGroup (new Rect (x, y, nW, bgH));\n        GUI.DrawTexture (new Rect (0, 0, bgW, bgH), texture);\n        GUI.EndGroup ();\n    }\n}
5736	public string UserName {\n    get {\n        return (from u in context.Users\n                where u.UserID==session["UserID"]\n                select u.UserName).SingleOrDefault(); \n    }\n}
5737	var dates = messageList.Select(m => m.MessageDate).ToList();\nvar dayFlags = db.DayFlags.GroupBy(flag => flag.FlagDate)\n                          .Where(group => dates.Contains(group.Key))\n                          .Select(group => group.First());
5738	this.buttonOk.BackColor = System.Drawing.SystemColors.MenuHighlight;\n            this.buttonOk.BackgroundImage = ((System.Drawing.Image)(resources.GetObject("buttonOk.BackgroundImage")));\n            this.buttonOk.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Stretch;\n            this.buttonOk.DialogResult = System.Windows.Forms.DialogResult.Cancel;\n            this.buttonOk.Location = new System.Drawing.Point(475, 15);\n            this.buttonOk.Name = "buttonOk";\n            this.buttonOk.Size = new System.Drawing.Size(50, 50);\n            this.buttonOk.TabIndex = 11;\n            this.buttonOk.UseVisualStyleBackColor = false;\n            this.buttonOk.Click += new System.EventHandler(this.buttonOk_Click);
5739	using (var writer = new StreamWriter(@"C:\temp\yourfile.csv"))\n        {\n            string header = "DateModified,ModifiedBy,CustomerPricing,Id,Customer,Code";\n            writer.WriteLine(header);\n            foreach (var log in logs)\n            {\n                string line = "\"" + log.DateModified.ToShortDateString() + "\",\"" + log.ModifiedBy + "\",\"" +\n                              // you don't have a CustomerPricing element, as the whole object is CustomerPricing\n                              // add a "Price" element and sub out the element value below\n                              //log.ChangedData.Element("CustomerPricing").Value + "\",\"" +\n                              log.ChangedData.Element("Id").Value + "\",\"" +\n                              log.ChangedData.Element("Customer").Value + "\",\"" +\n                              log.ChangedData.Element("Code").Value + "\"";\n\n                writer.WriteLine(line);\n            }\n\n        }
5740	string rawData = "Car: volvo Wheels: 4 doors: 5";\n        var words = Regex.Split(rawData, @"\w+:").Select(x => x.Trim()).Where(x => x.Length > 0).ToList();\n        var car = words[0];\n        var wheels = words[1];\n        var doors = words[2];
5741	class Program\n{\n    static void Main(string[] args)\n    {\n        var holder = new Holder<IObject>();\n        holder.MyItem = new Object { List = new List<IObject>() };\n        holder.ChangeItemList(new Object { List = new List<IObject>() });\n    }\n}\n\npublic class Object : IObject\n{\n    public List<IObject> List { get; set; }\n}\n\npublic interface IObject\n{\n    List<IObject> List { get; set; }\n}\n\npublic class Holder<T> where T : IObject\n{\n    public T MyItem { get; set; }\n\n    public void ChangeItemList(T item)\n    {\n        MyItem.List = item.List;\n    }\n}
5742	[DllImport("user32.dll")]\nstatic extern IntPtr SetWindowsHookEx(int idHook, keyboardHookProc callback, IntPtr hInstance, uint threadId);
5743	protected void cbPop_CheckedChanged(object sender, EventArgs e)\n{\n    Response.Cookies["UserPreferences"].Value = \n       Request.Cookies["UserPreferences"].Value + "1";\n    Label1.Text = Response.Cookies["UserPreferences"].Value.Length.ToString();\n    //                ^\n    //                |\n}\n\nprotected void cbDown_CheckedChanged(object sender, EventArgs e)\n{\n    Response.Cookies["UserPreferences"].Value = \n        Request.Cookies["UserPreferences"].Value + "2";\n    Label1.Text = Response.Cookies["UserPreferences"].Value.Length.ToString();\n    //                ^\n    //                |\n}
5744	public static class CryptoExtensions {\n\n    public static void ChangePasswordEx(this AsaMembershipProvider mp, string username, string oldPassword, string newPassword){\n        // validate format of the password\n        if (true /*validation code*/ )\n        {\n            throw new Exception("Invalid password format");\n        }\n\n        // rest of the code to encrypt and store the password\n        mp.ChangePassword(username, oldPassword, newPassword);\n    }\n\n}
5745	//HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.avi\UserChoice -->"Progid" "Applications\YEPlayer.exe"\n        OpenMethod = Registry.CurrentUser.OpenSubKey(@"Software\Classes\Applications\", true);\n        OpenMethod.CreateSubKey(KeyName + @".exe\shell\open\command").SetValue("",'"'+OpenWith+'"'+ " "+ '"'+"%1"+'"');\n\n        FileExts = Registry.CurrentUser.OpenSubKey(@"Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\", true);\n        foreach (string child in FileExts.OpenSubKey(Extension).GetSubKeyNames())\n        {\n            FileExts.OpenSubKey(Extension,true).DeleteSubKey(child);\n        }\n        FileExts.CreateSubKey(Extension + @"\UserChoice").SetValue("Progid", @"Applications\" + KeyName +".exe");\n    }
5746	public class Material\n{\n    [XmlIgnore]\n    public string MaterialText { get; set; } \n\n    [XmlElement(ElementName = "mattext")]\n    public XmlElement MatText\n    {\n        get {\n            var doc = new XmlDocument();\n            doc.LoadXml(MaterialText);\n            return doc.DocumentElement;\n        }\n        set { /* implement in a similar way */ }\n   }
5747	string columnFourName = "Col4";\nstring columnFourName = "Col5";\nList<object> columnFourItems = new List<object>()\nList<object> columnFiveItems = new List<object>()\nSqlConnection oConn = new SqlConnection("SomeConnstring);\noConn.Open();\nSqlCommand oComm = new SqlCommand("SELECT * FROM Stuff", oConn);\nSqlDataAdapter sda = new SqlDataAdapter(oComm);\nDataTable dt = new DataTable();\nsda.Fill(dt);\ndt.Columns.Add(columnFourName, typeof(object));\ndt.Columns.Add(columnFiveName, typeof(object));\nfor (int row = 0; row < dt.Rows.Count; row++)\n{\n    dt.Rows[row][3] = columnFourItems[row];\n    dt.Rows[row][4] = columnFiveItems[row];\n}
5748	using UnityEngine;\nusing System.Collections;\n\npublic class Test : MonoBehaviour\n{\n    bool loadingStarted = false;\n    float secondsLeft = 0;\n\n    void Start()\n    {\n        StartCoroutine(DelayLoadLevel(10));\n    }\n\n    IEnumerator DelayLoadLevel(float seconds)\n    {\n        secondsLeft = seconds;\n        loadingStarted = true;\n        do\n        {\n            yield return new WaitForSeconds(1);\n        } while (--secondsLeft > 0);\n\n        Application.LoadLevel("Level2");\n    }\n\n    void OnGUI()\n    {\n        if (loadingStarted)\n            GUI.Label(new Rect(0, 0, 100, 20), secondsLeft.ToString());\n    }\n}
5749	private Point _Offset = Point.Empty;\n    private void ctrlToMove_MouseDown(object sender, MouseEventArgs e)\n    {\n        if (e.Button == MouseButtons.Left)\n        {\n            _Offset = new Point(e.X, e.Y);\n        }\n    }\n\n    private void ctrlToMove_MouseUp(object sender, MouseEventArgs e)\n    {\n        _Offset = Point.Empty;\n    }\n\n    private void ctrlToMove_MouseMove(object sender, MouseEventArgs e)\n    {\n        if (_Offset != Point.Empty)\n        {\n            Point newlocation = ctrlToMove.Location;\n            newlocation.X += e.X - _Offset.X;\n            newlocation.Y += e.Y - _Offset.Y;\n            ctrlToMove.Location = newlocation;\n        }\n    }
5750	var onlineUsers = Membership.GetAllUsers()\n    .Cast<MembershipUser>().Where(u => u.IsOnline);
5751	if (properties.ListTitle == "ListName")\n    {\n         //AfterProperties gives new value and ListItem gives the previously stored\n         if(properties.AfterProperties["ColumnName"].ToString()!=properties.ListItem["ColumnName"].ToString())\n         //Your code Here\n    }
5752	IList<MaterialType> materialTypes =  (from tom in context.MaterialTypes\n                                      where tom.IsActive == true\n                                      select tom).ToList(); //do you really need to split ID's from Names?\n\nmaterialTypes.Insert(0, new MaterialType { Name = "-- No Material --" }); //add to our list fake material\n\ncombobox.ValueMember = "ID";\ncombobox.DisplayMember = "Name";\ncombobox.DataSource = materialTypes;
5753	DataTable dtbind1 = objvehicleBAL.GetTaxdetails();\n DataTable dtbind2 = new DataTable();\n\n foreach (DataRow row in dtbind1.Rows)\n {\n     DateTime dt1 = DateTime.ParseExact(row["todate"].ToString(), "dd/MM/yyyy", null);\n     if (dt1 < ((DateTime.Now.AddDays(15))))\n          dtbind2.Rows.Add(row);\n     }\n }\n\n GVTax.DataSource = dtbind2;\n GVTax.DataBind();
5754	string ref= @"<a href=""http://www.google.com"">test</a>";\n var regex = new Regex("<a [^>]*href=(?:'(?<href>.*?)')|(?:\"(?<href>.*?)\")", RegexOptions.IgnoreCase);\n var urls = regex.Matches(ref).OfType<Match>().Select(m => m.Groups["href"].Value).SingleOrDefault();
5755	FormsAuthentication.SetAuthCookie(Guid.NewGuid(), true)
5756	// Act phase: you get result somehow\nvar result = 42;\n\n// Assert phase\nresult.Should().BeOneOf(new [] { 1, 2 } ); \n// in this case you'll be following error:\n// Expected value to be one of {1, 41}, but found 42.
5757	Match()
5758	XDocument feedXML = XDocument.Load("http://feeds.bbci.co.uk/news/world/middle_east/rss.xml");\nXNamespace media = XNamespace.Get("http://search.yahoo.com/mrss/");\nvar feeds = from feed in feedXML.Descendants("item")\n                select new\n                {\n                    Title = feed.Element("title").Value,\n                    Link = feed.Element("link").Value,\n                    Description = feed.Element("description").Value,\n                    pubDate = feed.Element("pubDate").Value,\n                    guid = feed.Element("guid").Value,\n                    thumbnail = feed.Element(media+"thumbnail")!=null ? feed.Element(media+"thumbnail").Attribute("url").Value : ""\n                };
5759	public class FieldReference\n{\n    public GameObject gObject;\n    public string component;\n    public string fieldName;\n    public string value {\n        get {\n            return gObject.GetComponent (component).GetType ().GetField (fieldName).GetValue (gObject.GetComponent (component)).ToString ();\n        }\n    }\n}
5760	public int LargeMethod()\n{\n    int result = 0;\n    Task<int> t1 = new Task<int>(SmallMethodA);\n    Task<int> t2 = new Task<int>(SmallMethodB);\n    t1.Start();\n    t2.Start();\n    result += t1.Result;\n    result += t2.Result;\n    return result;\n}
5761	// setup sql command and sql connection etc first...\nint count = (int) cmd.ExecuteScalar();
5762	...\nconnection.Open();\nvar name = command.ExecuteScaclar().ToString();\nconnection.Close();\n\nif (name != null) {\n  MessageBox.Show("This name already exists");\n  return;\n}
5763	SPUtility.SendEmail(SPContext.Current.Web, false, false,\n                    "test@example.com", "E-mail title", "E-mail body");
5764	Dictionary<string, string>
5765	[assembly: InternalsVisibleTo("AssemblyName, PublicKey=xxx")]
5766	System.IO.Path.GetFileNameWithoutExtension(@"/Pages/Alarm/AlarmClockPage.xaml");
5767	private CustomerOrderItem _HighestValueOrderItem = null;\npublic CustomerOrderItem HighestValueOrderItem { \nget{\n   if(this.CustomerOrderItems.Any() && _HighestValueOrderItem != null){\n        _HighestValueOrderItem =  this.CustomerOrderItems.OrderByDescending(i => i.SalesPrice).FirstOrDefault();\n        return  _HighestValueOrderItem;\n   } else {\n      return new CustomerOrderItem();\n   }\n}\n}
5768	public class MyClientSOAPExtension : SoapExtension\n{\n\n     Stream oldStream;\n     Stream newStream;\n\n     // Save the Stream representing the SOAP request or SOAP response into\n     // a local memory buffer.\n     public override Stream ChainStream( Stream stream )\n     {\n            oldStream = stream;\n            newStream = new MemoryStream();\n            return newStream;\n     }\n\n    public override void ProcessMessage(SoapMessage message)\n    {\n       switch (message.Stage)\n        {\n            case SoapMessageStage.BeforeDeserialize:\n                // before the XML deserialized into object.\n                break;\n            case SoapMessageStage.AfterDeserialize:\n                break;        \n            case SoapMessageStage.BeforeSerialize:\n                break;\n            case SoapMessageStage.AfterSerialize:\n                break;            \n            default:\n                throw new Exception("Invalid stage...");\n        }       \n    }\n}
5769	public ViewModel ViewModel\n{\n    get\n    {\n        return DataContext as ViewModel;\n    }\n}\n\npublic void OnLoaded()\n{\n    ViewModel.DoThatThing();\n}
5770	...\n<dx:TreeListCommandColumn>\n   <CellStyle Font-Size="20px">\n   </CellStyle>\n</dx:TreeListCommandColumn>\n...
5771	Enumerable.Range(0, 10)\n          .Select(x => new FirstCircleControl())\n          .ToList()                        // Forces creation of controls.\n          .ForEach(x => Circles.Add(x));   // Adds them to the list.
5772	var userId = "123";\n\nusing (UsersContext db = new UsersContext())\n{\n   UserProfile userProfile = db.UserProfiles.FirstOrDefault(u => u.UserId == userId);\n   FormsAuthentication.SetAuthCookie(userProfile.UserName, false);\n}
5773	protected override void OnHandleCreated(EventArgs e) {\n        base.OnHandleCreated(e);\n        SetWpfInteropParentHandle(this.Handle);\n    }
5774	zip.CompressionLevel= Ionic.Zlib.CompressionLevel.BestCompression;
5775	SET @SQLScript = 'SELECT b.name\nFROM tblBrand b \nJOIN tblStore s ON b.PK_BrandID = s.FK_BrandID\nJOIN tblCustomReportTemp  CT on b.PK_BrandID = CT.BrandID\nWHERE b.Active =1 '\n\nif(@reportname is not null)\n        set @SQLScript = @SQLScript + ' AND CT.ReportName = ''' + @reportname + ''''\n\n    if(@username is not null)\n        set @SQLScript = @SQLScript + ' AND CT.UserName = ''' + @username + ''''
5776	new SolidColorBrush(Color.FromArgb(255, 245, 171, 0));
5777	List<ReportParameter> myParams = new List<ReportParameter>();\n\nReportParameter p = new ReportParameter("Start_Date");\np.Values.Add(null);\nmyParams.Add(p);\n\n//myParams.Add(new ReportParameter("Start_Date")); \n// I even tried omiting this line.  \n//(This is the null parameter I wish to pass)\nmyParams.Add(new ReportParameter("End_Date", EndDate));\n\nReportViewer1.ServerReport.SetParameters(myParams);
5778	//context = HttpContext\ncontext.Response.Clear();\ncontext.Response.ContentType = varMimeType;\ncontext.Response.TransmitFile(filePath);\ncontext.Response.AddHeader("content-disposition", "attachment;filename=" + varFileName);\ncontext.Response.AddHeader("Content-Length", filePathFileInfo.Length);\ncontext.Response.Flush();\ncontext.Response.End();
5779	string path = C:\...\text1.text\n List<string> lines = File.ReadAllLines(path);\n int i = 1;\n\n foreach (var line in lines)\n{\n   Console.WriteLine("{0}. {1}", i, line);\n   i++;\n }\n\n  Console.Write("Choose which line to edit: ");\n  int n = int.Parse(Console.ReadLine());\n  n--;\n\n Console.Write("{0}. ", n + 1);\n\nlines.Insert(n, Console.ReadLine());\n\nFile.WriteAllLines(path, lines.ToArray());
5780	adapter.GetIPProperties().UnicastAddresses.Single(a => a.Address.AddressFamily == AddressFamily.InterNetwork).Address
5781	for(;;);
5782	IEnumerable<XElement> linq;\nlinq = (IEnumerable<XElement>)XElement.Parse(RawXmlData.ToString()).Elements();
5783	string modified = string.Format("{2}-{1}-{0}-{3}-{4}", tokens);
5784	private void methodName()\n{\n    for (int i = 0; i < 2; i++)\n    {\n        updateTextBox(i.ToString());\n\n        this.canvas.UpdateLayout();\n\n        PrintDialog dialog = new PrintDialog();\n        dialog.PrintVisual(this.canvas, "ABC");\n\n        dialog.PrintQueue.Refresh();\n\n        while (dialog.PrintQueue.NumberOfJobs != 0)\n        {\n            bool isQueued = false;\n            foreach (var job in dialog.PrintQueue.GetPrintJobInfoCollection())\n            {\n                if (job.Name == "ABC")\n                    isQueued = true;\n            }\n\n            if (!isQueued)\n                break;\n\n            Thread.Sleep(500);\n            dialog.PrintQueue.Refresh();\n        }\n    }\n}\n\nprivate void updateTextBox(string text)\n{\n    txtTextBox.Text = text;\n}
5785	public string tags()\n{\n    string url = "http://www.testdomain.com/data.aspx";\n    string html = Story();\n    DataTable tags = LoadAllTags();\n\n    if (tags.Rows.Count > 0)\n    {\n        foreach(var row in tags.Rows)\n        {\n            foreach(var column in tags.Columns)\n            {\n                var tag = column.ToString();\n                var path = string.Format("{0}?SearchName={1}", url, HttpUtility.UrlEncode(tag);\n                var link = string.Format("<a href=\"{0}\">{1}</a>", path, tag);\n                html = html.Replace(tag, link);\n            }\n        }\n    }\n    return html;\n}
5786	var result = new MyModel {\n                          Total = <yourDataSource>\n                            .Count(x.TheDate >= StartDate && x.TheDate <= EndDate)\n                          };
5787	private void Form56_Load(object sender, EventArgs e)\n        {\n\n\n            try\n            {\n                MySqlConnection cnn = new MySqlConnection("MY CONNECTION");\n\n                cnn.Open();\n                // - DEBUG \n                // MessageBox.Show("Connection successful!"); \n                MySqlDataAdapter MyDA = new MySqlDataAdapter();\n                MyDA.SelectCommand = new MySqlCommand("MY QUERY", cnn);\n                DataTable table = new DataTable();\n                MyDA.Fill(table);\n\n                BindingSource bSource = new BindingSource();\n                bSource.DataSource = table;\n\n                dataGridView1.DataSource = bSource;\n\n            }\n            catch (MySql.Data.MySqlClient.MySqlException ex)\n            {\n                MessageBox.Show(ex.Message);\n                Close();\n            }\n\n        }
5788	using System;\n\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate = "Certificate.cer";\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = new X509Certificate(Certificate);\n\n        // Get the value.\n        string resultsTrue = cert.ToString(true);\n\n        // Display the value to the console.\n        Console.WriteLine(resultsTrue);\n\n        // Get the value.\n        string resultsFalse = cert.ToString(false);\n\n        // Display the value to the console.\n        Console.WriteLine(resultsFalse);\n\n    }\n\n}
5789	// Call:\nForm2 test = new Form2(this);\n\n//Constructor Form2:\npublic Form2 (Form1 FormToAccess)\n\n//Access:\nFormToAccess.listBox1.... = ... ;
5790	int[][] stores = {new int [] {2000,4000,3000,1500,4000},\n              new int [] {6000,7000,8000},\n              new int [] {9000,10000}};\n\nConsole.WriteLine("Row 1 average: {0}", stores[0].Average());\nConsole.WriteLine("Row 2 average: {0}", stores[1].Average());\nConsole.WriteLine("Row 3 average: {0}", stores[2].Average());
5791	class BlDb : DbManager\n{\n    public BlDb()\n        : base( new BLToolkit.Data.DataProvider.MySqlDataProvider(), "Server=myServerAddress;Database=myDataBase;Uid=myUsername;Pwd=myPassword" )\n    {           \n    }\n    public Table<Car> Car { get { return GetTable<Car>(); } }\n    public Table<Make> Make { get { return GetTable<Make>(); } }\n}
5792	void Appointments_SearchCompleted(object sender, AppointmentsSearchEventArgs e)\n  {\n     try\n     {\n        AppointmentResultsData.DataContext = e.Results;\n        MessageBox.Show(e.Results.ElementAt<Appointment>(0).Subject.ToString());\n     }\n     catch (System.Exception) { }\n  }
5793	foreach (DataRow dr in ds.Tables["movie"].Rows)\n{\n    item = new ListViewItem(new string[]\n    {\n        dr["title"].ToString(),\n        dr["year"].ToString(),\n        dr["rating"].ToString(),\n        string.Join(", ", dr.GetChildRows("movie_actor").Select(a => a[0])),\n        dr["director"].ToString(),\n        string.Join(", ", dr.GetChildRows("movie_genre").Select(a => a[0])),\n        dr["length"].ToString(),\n    });\n\n    listView1.Items.Add(item);\n}
5794	hex.Split(",\r\n".ToCharArray(), StringSplitOptions.RemoveEmptyEntries);
5795	XmlDocument xmlDoc = new XmlDocument();\nxmlDoc.Load(filepath);\nXmlElement root = xmlDoc.DocumentElement;\nXmlNode node = root.SelectSingleNode("SurveySetting");\nif (node != null && node.Attributes.Count > 0 && node.Attributes["IsServeyOn"] != null && !string.IsNullOrEmpty(node.Attributes["IsServeyOn"].Value))\n  {\n        RadiobuttonSurverysetting.SelectedValue = node.Attributes["IsServeyOn"].Value;\n  }
5796	public static IQueryable GetActiveEmployees_Grid(string Period)\n    {\n        DataContext Data = new DataContext();\n        var Employees = (from c in DataSystem_Records\n                         where c.Period == Period\n                         orderby c.DataSystem_Employees.LName\n                         select c).GroupBy(g=>g.DataSystem_Employees.AccID).Select(x=>x.FirstOrDefault());\n\n        return Employees;\n    }
5797	public static string Serialise(YourObject data)\n{\nStringBuilder sb = new StringBuilder();\nStringWriter sw = new StringWriter(sb);\n\nusing (JsonWriter writer = new JsonTextWriter(sw))\n{\n    writer.WriteStartObject();\n\n    writer.WritePropertyName("propertyName1");\n\n    if (data.Property1 == null)\n    {\n        writer.WriteNull();\n    }\n    else\n    {\n        writer.WriteValue(data.Property1);\n    }\n\n    writer.WritePropertyName("propertyName2");\n\n    writer.WriteStartArray();\n\n    foreach (var something in data.CollectionProperty)\n    {\n        writer.WriteStartObject();\n\n        writer.WritePropertyName("p1");\n        writer.WriteValue(something.prop1);\n\n        writer.WritePropertyName("p2");\n        writer.WriteValue(something.prop2);\n\n        writer.WritePropertyName("p3");\n        writer.WriteValue(something.prop3);\n\n        writer.WriteEndObject();\n    }\n\n    writer.WriteEndArray();\n\n    writer.WriteEndObject();\n}\n\nreturn sb.ToString();\n}
5798	public void ProcessCompleteCallback()\n{\n    MessageBox.Show("Process completed.");\n    Application.Current.Dispatcher.Invoke(() => \n    {\n        GenerateOutputButton.IsEnabled = true;\n        LoadingGifImage.Visibility = Visibility.Hidden;\n        CommandManager.InvalidateRequerySuggested();\n    });\n}
5799	Dictionary<string, List<int>> data = new Dictionary<string,List<int>>();\n\n    foreach (DataGridViewRow row in dataGridView1.Rows)\n    {\n        string name = row.Cells[1].ToString();\n        int ID =  Convert.ToInt32(row.Cells[0]);\n        if (data.ContainsKey(name)) data[name].Add(ID);\n        else data.Add(name, new List<int>(new int[] { ID }));\n    }\n\n    foreach (string name in data.Keys)\n        if (data[name].Count > 1 ) \n        {\n            Console.Write(name);\n            foreach (int ID in data[name]) Console.Write(ID.ToString("##### "));\n            Console.WriteLine();\n        }
5800	nslookup -type=mx <domain.name>
5801	AddAccessRule()
5802	public static void Main(string[] args)\n    {\n        var urls = new List<string>();\n        Parallel.ForEach(\n            urls, \n            new ParallelOptions{MaxDegreeOfParallelism = 10},\n            DownloadFile);\n    }\n\n    public static void DownloadFile(string url)\n    {\n        using(var sr = new StreamReader(HttpWebRequest.Create(url).GetResponse().GetResponseStream()))\n        using(var sw = new StreamWriter(url.Substring(url.LastIndexOf('/'))))\n        {\n            sw.Write(sr.ReadToEnd());\n        }\n    }
5803	Process proc = new Process();\n\nproc.StartInfo.FileName = @"C:\Program Files\Ipswitch\WS_FTP Professional\ftpscrpt.com";\nproc.StartInfo.Arguments = @"-f P:\share\getfiles.scp";\nproc.StartInfo.RedirectStandardOutput = true;\nproc.StartInfo.RedirectStandardError = true;\nproc.StartInfo.UseShellExecute = false;\n// start the process\nproc.Start();\n// wait for it to finish\nproc.WaitForExit(5000);     \n// get results\nstring output = proc.StandardOutput.ReadToEnd();\nstring error = proc.StandardError.ReadToEnd();
5804	Storyboard.SetTargetProperty(animation, new PropertyPath(FrameworkElement.HeightProperty));
5805	ScrollViewer Grid.Row="1"..
5806	WriteableBitmap wBitmap = new WriteableBitmap(yourBitmapImage);\n\nMemoryStream ms = new MemoryStream();\n\nwBitmap.SaveJpeg(ms, 50, 50, 0, 100);
5807	private List<UserInformationProxy> GetContactsFromGuidList(List<Guid> contactList)\n{\n    var qe = new QueryExpression(Contact.EntityLogicalName);\n    qe.ColumnSet = new ColumnSet("fullname", "contactid")\n    qe.Criteria.AddCondition("contactid", ConditionOperator.In, list.Cast<Object>().ToArray());\n    qe.Distinct = true;\n\n    var results = service.RetrieveMultiple(qe).Entities.Select (e => e.ToEntity<Contact>()).\n        Select(x => new UserInformationProxy()\n        {\n            FullName = x.FullName,\n            Id = x.ContactId\n        });\n\n    return results;\n}
5808	if (openFileDialog1.ShowDialog() == System.Windows.Forms.DialogResult.OK)\n{\n    string selectedFile = openFileDialog1.FileName;\n}
5809	namespace WindowsFormsApplication1\n{\n    public partial class Form1 : Form\n    {\n        public Form1()\n        {\n            InitializeComponent();\n\n            this.SetLastColumnWidth();\n\n            this.theListView.Layout += delegate\n            {\n                this.SetLastColumnWidth();\n            };\n        }\n\n        private void SetLastColumnWidth()\n        {\n            // Force the last ListView column width to occupy all the\n            // available space.\n            this.theListView.Columns[ this.theListView.Columns.Count - 1 ].Width = -2;\n        }\n\n        private void listView1_DrawColumnHeader( object sender, DrawListViewColumnHeaderEventArgs e )\n        {\n            // Fill header background with solid yello color.\n            e.Graphics.FillRectangle( Brushes.Yellow, e.Bounds );\n            // Let ListView draw everything else.\n            e.DrawText();\n        }\n    }\n}
5810	"PBEwithSHA-1and3-keyDESEDE-CBC"
5811	var store =     \n    System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication();\nvar newPath = "MyFileName.png";\n\nif (store.FileExists(newPath)) store.DeleteFile(newPath);\n\nvar stream = store.CreateFile(newPath);\n\nBitmapImage i = new BitmapImage();\ni.SetSource(photoResult.ChosenPhoto);\nWriteableBitmap imageToSave = new WriteableBitmap(i);\nimageToSave.SaveJpeg(stream, 173, 173, 0, 100);\n\nstream.Flush();\nstream.Close();
5812	ProcessSelection(lstbDataFields.SelectedItems.Cast<ClassDataField>())
5813	System.Xml.Serialization.XmlSchemaExporter
5814	protected override void OnStartup(StartupEventArgs e)\n{\n    base.OnStartup(e);\n\n    MainWindow window = new MainWindow();\n\n    Window1 test = new Window1();\n    test.ShowDialog();\n\n    if (test.InvalidLicense)\n    {\n        Shutdown();\n        return;\n    }\n\n    window.Show();\n}
5815	value = (T)(object)(value.ToString().Substring(0,length));
5816	string contents = File.ReadAllText(@"C:\temp\test.txt");
5817	// send request\nHttpWebRequest request = (HttpWebRequest)WebRequest.Create("http://localhost:8080/xmlrpc/");\nrequest.Method = "POST";\nrequest.ContentType = "text/xml; encoding=utf-8";\n\nstring content = "<?xml version='1.0'?><methodCall><methodName>app.getName</methodName><params></params></methodCall>"; \nbyte[] contentBytes = System.Text.UTF8Encoding.UTF8.GetBytes(content);                      \nrequest.ContentLength = contentBytes.Length;\nusing (Stream stream = request.GetRequestStream())\n{\n    stream.Write(contentBytes, 0, contentBytes.Length); \n}\n\n// get response\nWebResponse response = request.GetResponse();\nXmlDocument xmlDoc = new XmlDocument();\nusing (Stream responseStream = response.GetResponseStream())\n{\n    xmlDoc.Load(responseStream);\n    Console.WriteLine(xmlDoc.OuterXml);\n}
5818	internal interface IServiceAInternal\n{\n    ServiceResponse ProcessFromServiceB(ServiceRequest request);\n}\n\npublic class ServiceA : IServiceA, IServiceAInternal\n{\n    public ServiceResponse Process(ServiceRequest request)\n    {\n        return ProcessCore(request, false);\n    }\n\n    ServiceResponse IServiceAInternal.ProcessFromServiceB(ServiceRequest request)\n    {\n        return ProcessCore(request, true);\n    }\n\n    private ServiceResponse ProcessCore(ServiceRequest request, bool calledFromServiceB)\n    {\n        ...\n    }\n}\n\npublic class ServiceB : IServiceB\n{\n    private readonly IServiceAInternal _serviceA;\n\n    public ServiceB()\n    {\n        _serviceA = Container.Get<IServiceAInternal>();\n    }\n\n    public ServiceResponse ReProcess(ServiceRequest request)\n    {\n        return _serviceA.ProcessFromServiceB(request);\n    }\n}
5819	HtmlDocument doc = new HtmlDocument();\ndoc.Load("file.htm");\nforeach(HtmlNode link in doc.DocumentElement.SelectNodes("//a[@href"])\n{\n   HtmlAttribute att = link["href"];\n   att.Value = FixLink(att);\n}\ndoc.Save("file.htm");
5820	_NO_DEBUG_HEAP = 1
5821	ArrayList array = new ArrayList();\n\n        String[] arrayB = new String[array.Count];\n        for (int i = 0; i < array.Count; i++)\n        {\n            arrayB[i] = array[i].ToString();\n        }\n\n        valuesdata.Rows.Add(arrayB);
5822	// Add Microsoft.VisualBasic.dll to References.\nusing Microsoft.VisualBasic.FileIO; \n\n// input is your original line from csv.\n\n// Remove starting and ending quotes.\ninput = input.Remove(0, 1);\ninput = input.Remove(input.Length - 1);\n\n// Replace double quotes with single quotes.\ninput = input.Replace("\"\"", "\"");\n\nstring[] result;\nusing (var csvParser = new TextFieldParser(new StringReader(input)))\n{\n    csvParser.Delimiters = new string[] { "," };\n    result = csvParser.ReadFields();\n}
5823	class FooRepository\n{\n   public async Task<List<FooDTO>> FindAsync()\n   {\n       using(var context = new DbContext())\n       {\n           return await context.Foos\n               .Select(m => new FooDTO\n               {\n                   Id = m.Id,\n                   ...\n               })\n               .ToListAsync();\n       } \n   }\n}
5824	foreach(var noxRecord in CurrentPermit.PermitDetails.Where(a => a.PermitConstituentTypeId == 2)\n{\n    var ppmAt15PercentOxygen = noxRecord.PpmAt15PercentOxygen;\n}
5825	public enum Color { Black, Yellow, Blue, Green };\n\nclass Circle\n{\n    public const double PI = 3.14;\n\n    private Color _color;\n    int radius;\n\n    public Circle(int radius, Color color)\n    {\n        this.radius = radius;\n        this._color = color;\n    }\n}
5826	protected void Page_Load(object sender, EventArgs e)\n{   \n    if (!Page.IsPostBack)\n    {\n        //Question\n        lblQuestion1.Text = "Which of the following is not a country in Europe?";\n\n        //Answers\n        lstAns1.Items.Add(new ListItem("Enland", "0"));\n        lstAns1.Items.Add(new ListItem("Germany", "0"));\n        lstAns1.Items.Add(new ListItem("France", "0"));\n        lstAns1.Items.Add(new ListItem("Canada", "1"));\n    }\n}
5827	r.Cells(9).Style.BackColor = Drawing.Color.Red
5828	// Return true so All will go through the whole list.\nbooks.All(book => { book.TitleTarget = book.TitleSource; return true; });
5829	var singleString = someStrings.Aggregate((current, next) => current + Environment.NewLine + next);
5830	var str = "abc kskd 8.900 prew";\nvar result = Regex.Split(str, @"\W(\d.*)").Where(x => x!="").ToArray();
5831	foreach (FileInfo fi in new DirectoryInfo(@"C:\documents").GetFiles().Where(x => x.Extension.ToLower() == ".doc")) {\n    Console.WriteLine(fi.Name);\n}
5832	protected override async void OnStart(string[] args)\n        {\n            eventLog1.WriteEntry("In OnStart");\n            try\n            {\n                var hubConnection = new HubConnection("http://localhost/AlphaFrontEndService/signalr", useDefaultUrl: false);\n                IHubProxy alphaProxy = hubConnection.CreateHubProxy("AlphaHub");\n\n                await hubConnection.Start();\n                // Invoke method on hub\n                await alphaProxy.Invoke("Hello", "Message from Service");\n\n            }\n            catch (Exception ex)\n            {\n                eventLog1.WriteEntry(ex.Message);\n            }\n        }
5833	Directory.CreateDirectory(Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), "MyDirectory"));
5834	var myStack = new Stack<MyObjectType>(myList);
5835	Model.Entities entities = new Model.Entities();\n\n        public ServicePeople()\n        {\n            entities.ContextOptions.ProxyCreationEnabled = false;\n            entities.ContextOptions.LazyLoadingEnabled = false;\n        }
5836	this.comboBox1.ItemSource = names.Select(o=>o.SaveName)
5837	private static Color getcolor(int grayScale)\n{\n   return Color.FromArgb(grayScale, grayScale, grayScale);\n}
5838	string Userfolder = Session["UserInfo"].ToString();\n// URL path to user files.\nUserFilesPath = "~/Upload/" + Userfolder;
5839	public class PersonModel\n{\n    string firstName;\n    string Surname;\n    DateTime DateOfBirth\n}\npublic class PersonDisplayViewModel\n{\n    PersonModel Model;\n    string FullName\n    {\n        get{return Model.firstname + " " + Model.Surname;}\n    }\n    int Age\n    {\n        get{return (DateTime.Today() - Model.DateOfBirth).TotalYears;}\n    }\n}\npublic class PersonEditViewModel\n{\n    PersonModel Model;\n    string FirstName {\n        get{return Model.FirstName;}\n        set{Model.FirstName = value;}\n    }\n    string Surname{\n        get{return Model.Surname;}\n        set{Model.Surname= value;}\n    }\n    DateTime DateOfBirth{\n        get{return Model.DateOfBirth;}\n        set{Model.Surname= DateOfBirth;}\n    }\n\n}
5840	public static readonly DependencyProperty IsInReadModeProperty = DependencyProperty.Register(\n    "IsInReadMode",\n    typeof(bool),\n    typeof(RegCardSearchForm),\n    new UIPropertyMetadata(false, ReadModeChanged));\n\nprivate static void ReadModeChanged(DependencyObject dObj, DependencyPropertyChangedEventArgs e)\n{\n    RegCardSearchForm form = dObj as RegCardSearchForm;\n    if (form != null)\n        form.ReadModeChanged((bool)e.OldValue, (bool)e.NewValue);\n}\n\nprotected virtual void ReadModeChanged(bool oldValue, bool newValue)\n{\n    // TODO: Add your instance logic.\n}
5841	private void MyImage_ManipulationCompleted(object sender, ManipulationCompletedEventArgs e)\n{\n    if(isSoundPlaying) stopSound();\n}
5842	public Form1()\n    {\n        InitializeComponent();\n\n        DataGridViewComboBoxColumn cmbcolumn = new DataGridViewComboBoxColumn();\n        dataGridView2.EditingControlShowing += new DataGridViewEditingControlShowingEventHandler(dataGridView2_EditingControlShowing);\n\n\n    }\n\n    private void dataGridView2_EditingControlShowing(object sender, DataGridViewEditingControlShowingEventArgs e)\n    {\n        ComboBox combo = e.Control as ComboBox;\n        if (combo != null)\n        {\n            combo.SelectedIndexChanged -= new EventHandler(ComboBox_SelectedIndexChanged);\n            combo.SelectedIndexChanged += new EventHandler(ComboBox_SelectedIndexChanged);\n        }\n    }\n\n    private void ComboBox_SelectedIndexChanged(object sender, EventArgs e)\n    {\n        ComboBox cb = (ComboBox)sender;\n        string item = cb.Text;\n        if (item == "Add")\n        {\n            Categorie cat = new Categorie();\n            cat.Show();\n\n        }\n    }
5843	public hinoDetail()\n{\n    this.InitializeComponent();\n\n}\n\nprotected override void OnNavigatedTo(NavigationEventArgs e)\n{\n    hinos result = (e.Parameter as List<hinos>).FirstOrDefault(); //gets the first one only\n   textBlock.Text = result.nameHino\n\n}\n\npublic async void mostraHino()\n{\n\n}
5844	Expression<Func<T, object>>
5845	private HttpContext context;\n\npublic MyItemEventReceiver() {\n    context = HttpContext.Current;\n}\n\npublic override void ItemAdding(SPItemEventProperties properties) {\n    HttpFileCollection collection = context.Request.Files;\n    foreach (String name in collection.Keys) {\n    if (collection[name].ContentLength > 0) {\n    // Do what you need with collection[name].InputStream\n    }\n    }\n}
5846	var headers = Request.Headers.GetValues("AjaxHeader");\nvar ajaxHeader = headers.FirstOrDefault();
5847	Tools->Options->Text Editor->C#->Formatting->Spacing
5848	var result = Regex.Replace("david", "[b-df-hj-np-tv-z]", "$0o$0" );
5849	from c in context\nwhere c.Attribute("category") == "category name"\nselect new\n{\n  Description = c.Attribute("desc"),\n  Category =  c.Attribute("category")\n}
5850	public static MvcHtmlString Image(this HtmlHelper _helper, string _url, string _altText, object _htmlAttributes)\n{\n    TagBuilder builder = new TagBuilder("image");\n    TagBuilder anchorabBuilder = new TagBuilder("a"); \n\n    var path = _url.Split('?');\n\n    string pathExtra = "";\n\n    if (path.Length > 1)\n    {\n        pathExtra += "?" + path[1];\n    }\n\n    builder.Attributes.Add("src", VirtualPathUtility.ToAbsolute(path[0]) + pathExtra);\n    builder.Attributes.Add("alt", _altText);\n    builder.MergeAttributes(new RouteValueDictionary(_htmlAttributes));\n    anchorabBuilder.InnerHtml = builder.ToString(TagRenderMode.SelfClosing);\n    return MvcHtmlString.Create(anchorabBuilder.ToString(TagRenderMode.Normal));\n}
5851	Process[] apps=Process.GetProcesses();\nforeach (Process p in apps){\nif (p.MainWindowHandle.ToInt32()>0)\n                    {\n                        NativeWin32.SetForegroundWindow(p.MainWindowHandle.ToInt32());\n\n                        System.Windows.Forms.SendKeys.SendWait("^+(2)"); //send control shift 2 to switch the language bar back to english.\n                        p.Dispose();\n                    }\n                }
5852	label1.Location = p2; // your point
5853	void SetThread()\n    {\n        for (int i = 0; i < _intArrayLength; i++)\n        {\n           int currentValue = i;\n            Console.Write(string.Format("SetThread->i: {0}\r\n", i));\n            _th[i] = new Thread(() => RunThread(currentValue));\n            _th[i].Start();\n        }\n    }
5854	setup.exe TARGETDIR="C:\App"
5855	string s= "This island is a colony; however,it is autonomous and receives no orders from the mother country, autonomy, N.";;\nstring pattern="autonomous";\nRegex r=new Regex(@"\b(?!"+pattern+")"+pattern.Substring(0,pattern.Length/2)+@".*?\b");\nr.Replace(s,".");
5856	public MyClass()\n{\n\n   YourDateTimePickerId.Value = DateTime.Now.AddDays(1);\n   MessageBox.Show(dateTimePicker1.Value.ToString());\n}
5857	[XmlElement(\nElementName = "Members",\nNamespace = "http://www.cpandl.com")]\npublic Employee[] Employees;
5858	^([\p{Lu}\p{Lt}]\p{L}+\s*){2,5}
5859	public static bool SameDate(DateTimeOffset first, DateTimeOffset second)\n{\n    bool returnValue = false;\n    DateTime firstAdjusted = first.ToUniversalTime().Date;\n    DateTime secondAdjusted = second.ToUniversalTime().Date;\n\n    // calculate the total diference between the dates   \n    int diff = first.Date.CompareTo(firstAdjusted) - second.Date.CompareTo(secondAdjusted);\n    // the firstAdjusted date is corected for the difference in BOTH dates.\n    firstAdjusted = firstAdjusted.AddDays(diff);\n\n    if (DateTime.Compare(firstAdjusted, secondAdjusted) == 0)\n        returnValue = true;\n\n    return returnValue;\n}
5860	string result = Regex.Replace(input,@"^[^A-Z]*","");
5861	((AreaSeries)CHART_Overview.Series[0]).ItemsSource = null;\n((AreaSeries)CHART_Overview.Series[0]).ItemsSource = _lstLogOvw;
5862	public class Holder\n{\n    public Action OnPropChange;\n\n    int _prop;\n    public int Prop\n    {\n        get\n        {\n            return _prop;\n        }\n        set\n        {\n            _prop = value;\n            OnPropChange();\n        }\n    }\n}\n\npublic class SortedListThing : List<Holder>\n{\n    public void Add(Holder h)\n    {\n        BinarySortedInsert(h);\n        h.OnPropChange = () => { this.Remove(h); base.Add(h); };\n    }\n\n    private void BinarySortedInsert(Holder h)\n    {\n        //do stuff\n    }\n\n    public void Remove(Holder h)\n    {\n        h.OnPropChange = null;\n        base.Remove(h);\n    }\n}
5863	public ActionResult DetailsChanged(DetailsRepository detailsRepository, Details detailsModel)\n{\n  if(!ModelState.Valid)\n{\n   ViewData["Error"] = "Error";\n   return View();\n}\n\nDetails newDetails = detailsRepository.FirstOrDefault(x => x.ID == detailsModel.Id);\nif(newDetails != null)\n{\n   if(newDetails.Id == 1)\n   {\n      newDetails.Id = 2;\n   } else {\n      newDetails.Id = 2;\n   }\n   detailsRepository.SaveChanges();\n   return View();\n }\n}
5864	using (var conn = new SqlConnection(connectionString))\n{\n    using (var comm = conn.CreateCommand())\n    {\n        conn.Open();\n        comm.CommandText = "SOME SQL HERE";\n\n        // command type, parameters, etc.\n\n        //pick one of the following\n        comm.ExecuteNonQuery();\n        int value = (int)comm.ExecuteScalar();\n        SqlDataReader reader = comm.ExecuteReader();\n\n    }\n}
5865	// Get rid of the tags\ndescription = Regex.Replace(description, @"<.+?>", String.Empty);\n\n// Then decode the HTML entities\ndescription = WebUtility.HtmlDecode(description);
5866	DataContractSerializer.Instance = new DataContractSerializer(new XmlDictionaryReaderQuotas\n{  \n    MaxStringContentLength = /* new value */; \n};
5867	private void addMainBookInfos() \n{ \n    using (SqlConnection con = new SqlConnection(Conn.Activated))\n    using (SqlCommand com = new SqlCommand("AddBook", con))\n    {\n        com.CommandType = CommandType.StoredProcedure; \n        com.Parameters.AddWithValue("@BookISBN", txtISBN.Text);             \n\n        com.ExecuteNonQuery()\n\n        // close can be omitted since you are already using the 'using' statement which automatically closes the connection\n        con.Close(); \n    }\n}
5868	const string NAME = "Global\\MySemaphore";
5869	foreach (ListViewItem row in ListView2.Items)\n    {            \n        CheckBox cb = (CheckBox)row.FindControl("CheckBox1");\n            if( cb != null)\n            {\n                if (cb.Checked == true)\n                {\n                       //Some Stuf..\n                }\n            }\n    }
5870	//\n    // POST: /Blog/Comment/5\n\n    [HttpPost]\n    public ActionResult Comment(int id, Comment comment)\n    {\n        if (ModelState.IsValid)\n        {\n            db.Comments.AddObject(comment);\n            comment.PostReference.EntityKey = new EntityKey("BlogEntities.Posts", "id", id);\n            db.SaveChanges();\n            return RedirectToAction("Index");\n        }\n\n        return View();\n    }
5871	HtmlDocument doc = new HtmlDocument();\n    doc.Load("file.html");\n    string phone_number = doc.DocumentElement.SelectNodes("//td[contains(text(), 'Phone')]//following-sibling::td[1]"]).InnerText
5872	List<int> used = new List<int>();\nRandom random = new Random();\n\nforeach(thing you want to do)\n{\n    int current = random.Next(1000, 9999);\n\n    while(used.Contains(current))\n        current = random.Next(1000, 9999);\n\n    //do something\n\n    used.Add(current);\n}
5873	static void Main(string[] args)\n{\n    using (var p = PresentationDocument.Open(@"SmartArt.pptx", true))\n    {\n        foreach (var slide in p.PresentationPart.GetPartsOfType<SlidePart>().Where(sp => IsVisible(sp)))\n        {\n            foreach(var diagramPart in slide.DiagramDataParts)\n            {\n                foreach(var text in diagramPart.RootElement.Descendants<Run>().Select(d => d.Text.Text))\n                {\n                    Console.WriteLine(text);\n                }\n            }\n        }\n    }\n\n    Console.ReadLine();\n}\n\nprivate static bool IsVisible(SlidePart s)\n{\n    return (s.Slide != null) &&\n      ((s.Slide.Show == null) || (s.Slide.Show.HasValue &&\n      s.Slide.Show.Value));\n}
5874	LinkedList<T>
5875	var singleView = regionManager.Regions["MyRegion"].ActiveViews.FirstOrDefault();
5876	private void DetailButton_Click_1(object sender, RoutedEventArgs e)\n{\n    var clickedUIElement =  sender as Button;\n    if (null == clickedUIElement) { Return; }\n    Display selectedItemData = clickedUIElement.DataContext as Display;\n    if(null != selectedItemData)\n    {\n        NavigationService.Navigate("/page3.xaml", selectedItemData);\n    }\n}
5877	using (var context = GetContext())\n{\n  var userEntity = new UserEntity() { ID = userUpdate.ID };\n  context.Users.Attach(userEntity);\n  context.Entry(userEntity).CurrentValues.SetValues(userUpdate);\n\n  // Disable entity validation\n  context.Configuration.ValidateOnSaveEnabled = false;\n\n  context.SaveChanges();\n}
5878	WebRequest request = WebRequest.Create(url);\nNetworkCredential credential = new NetworkCredential(username, password);\n\nrequest.Credentials = credential;\nrequest.PreAuthenticate = true;\n\nWebResponse response = request.GetResponse();\nStream Answer = response.GetResponseStream();\n\nStreamReader _Answer = new StreamReader(Answer); \nstring content = _Answer.ReadToEnd(); //the string of the whole xml\nresponse.Close();
5879	static void Main(string[] args)\n{\n    String Readfiles = File.ReadAllText(@"C:\Users\ken4ward\Desktop\Tidy\WriteLines.txt");\n    Int32 myInt = Int32.Parse(Readfiles);\n\n    //Declare array outside the loop\n    String[] start = new String[myInt];\n\n    for (int i = 0; i < myInt; ++i)\n    {\n        //Populate the array with the value (add one so it starts with 1 instead of 0)\n        start[i] = (i + 1).ToString();\n\n        Console.WriteLine(i);\n        Console.ReadLine();  \n    }\n\n    //Write to the file once the array is populated\n    File.WriteAllLines(@"C:\Users\ken4ward\Desktop\Tidy\writing.txt", start);\n}
5880	var resultObjectList = _context.\n                   Parents.\n                   Where(p => p.DeletedDate == null).\n                   OrderBy(p => p.Name).\n                   Select(p => new\n                             {\n                                 ParentItem = p,\n                                 ChildItems = p.Children.Where(c => c.Name=="SampleName")\n                             }).ToList();
5881	[DefaultValue("SomeValue")]\npublic string Prop { get; set; }
5882	from od in db.OrderDetails\n    join o in db.Orders on od.OrderID equals o.OrderID\n    join p in db.Products on od.ProductID equals p.ProductID\nwhere o.CustomerID == "ALFKI"\ngroup od by new { p.ProductID, p.ProductName } into g1\nselect new { \n    ProductName = g1.Key.ProductName, \n    Total = g1.Sum(od => od.Quantity) }
5883	CREATE PROCEDURE dbo.StoredProcedure2\n\n    @columnName varchar(50),\n    @batchmId  int\nAS\n\n    DECLARE @SQL1 AS VARCHAR(MAX)\n    DECLARE @SQL2 AS VARCHAR(MAX)\n\n    SET @SQL1 = 'select ' + @columnName + ' from Batch_Master'\n\n    SET @SQL1 = 'select ' + @columnName + '\n         from GTIN_Master inner join Batch_Master\n         on GTIN_Master.GTIN = Batch_Master.GTIN\n         where Batch_M_id =' + CONVERT(VARCHAR,@batchmId)\n\n    IF EXISTS(SELECT * FROM sys.columns WHERE Name = @columnName and Object_ID = Object_ID(N'Batch_Master'))\n        BEGIN    \n            EXEC (@SQL1)\n        END\n    ELSE\n        BEGIN\n            EXEC (@SQL2)\n        END
5884	[OperationContract]\n    SuccessUpload uploadDoc2(Stream data);
5885	[SuppressMessage("Microsoft.Naming", "CA1720:IdentifiersShouldNotContainTypeNames")]
5886	Tabla.Rows[0]["mycolumnName"]
5887	private void MainPage_Load(object sender, EventArgs e)\n{\n    checkBox1.CheckedChanged += checkBox1_CheckedChanged;\n}\nprivate void checkBox1_CheckedChanged(object sender, EventArgs e)\n{\n    if (checkBox1.Checked)\n    {\n        // your code to go to the other page.\n    }\n}
5888	class BookmarkObj { /* similar to steven's */ }\nclass BookmarkStore {\n Dictionary<int, BookmarkObj> byId;\n Dictionary<DateTime, BookmarkObj> byStartDate;\n Dictionary<DateTime, BookmarkObj> byEndDate;\n\n /* Boring init code */\n\n public void Insert(BookmarkObj obj) {\n  byId[obj.Id] = obj;\n  byStartDate[obj.Start] = obj;\n  byEndDate[obj.End] = obj;\n }\n\n public BookmarkObj GetById(int id) {\n  return byId[obj.Id];\n }\n\n /* And so on */
5889	MemberInfo property = typeof(YourClass).GetProperty("PropertyName");   \nvar attribute = property.GetCustomAttributes(typeof(MyCustomAttribute), true)\n      .Cast<MyCustomAttribute>.Single();\nstring displayName = attribute.DisplayName;
5890	[TestFixture]\npublic class DynamicJson\n{\n    [Test]\n    public void Test()\n    {\n        dynamic flexible = new ExpandoObject();\n        flexible.Int = 3;\n        flexible.String = "hi";\n\n        var dictionary = (IDictionary<string, object>)flexible;\n        dictionary.Add("Bool", false);\n\n        var serialized = JsonConvert.SerializeObject(dictionary); // {"Int":3,"String":"hi","Bool":false}\n    }\n}
5891	private void dataGridView2_CellClick(object sender, DataGridViewCellEventArgs e)\n{\n    /* Place indexes here, there is no need to initialize   *\n     * so many integers inside loop if they're not changing */\n    int indexOfYourColumn = 9, index2 = 0;\n\n    var restaurantList = new List<Restaurant>();\n    foreach (DataGridViewCell cell in dataGridView2.SelectedCells)\n    {\n        foreach (DataGridViewRow row in dataGridView1.Rows)\n        {\n            if (cell.Value.ToString() == row.Cells[indexOfYourColumn].Value.ToString())\n            {\n                restaurantList.Add(new Restaurant()\n                {\n                    Data  = row.Cells[indexOfYourColumn].Value.ToString(),\n                    Data2 = row.Cells[index2].Value.ToString()\n                });\n            }\n        }\n    }\n\n    dataGridView3.DataSource = restaurantList;\n}
5892	string json_string = "{\"1\":{\"oid\":\"2892\",\"order\":\"SD1427999310502\"},\n                      \"all\":1,\"time\":\"2015-02-02 10:37:55\"}";\n\nJObject outer_object = JObject.Parse(json_string);\nJObject inner_object = (JObject)outer_object["1"];\nstring oid_value = inner_object["oid"].ToString();\nstring order_value = inner_object["order"].ToString();
5893	[WebMethod (EnableSession=true)]
5894	private void button1_Click(object sender, EventArgs e)\n    {\n        tabControl1.SelectedIndex = 0;\n        tabControl1.TabPages[0].Text = "First";\n    }\n\n    private void button2_Click(object sender, EventArgs e)\n    {\n        tabControl1.SelectedIndex = 1;\n    }\n\n    private void button3_Click(object sender, EventArgs e)\n    {\n        tabControl1.SelectedIndex = 2;\n    }
5895	using (WebClient webClient = new WebClient())\n{\n    string url = "http://api.twitter.com/1/statuses/public_timeline.json";\n    dynamic json = JsonConvert.DeserializeObject(webClient.DownloadString(url));\n\n    foreach (var item in json)\n    {\n        Console.WriteLine("{0} {1}", item.user.id, item.user.screen_name);\n    }\n}
5896	using (HumanResourcesDB db = newHumanResourcesDB(ConfigurationManager\n            .ConnectionStrings["HumanResourcesDB"].ConnectionString))\n{\n    List<Employee> record = (from tab in db.Employees\n     where tab.Birthday >= DateTime.Today\n     && tab.Birthday < DateTime.Today.AddDays(31)\n     select tab).ToList();\n\n    this.grdBirthdays.DataSource = record;\n\n    this.grdBirthdays.DataBind();\n}
5897	lbxXunit.DataSource = units;\nlbxYunit.DataSource = units.ToList();
5898	DatagGridView.Columns[*Column No/Name*].Visible = false;
5899	ComboBox.SelectedIndexChanged Event
5900	var eventLoop = new EventLoopScheduler();\n\nIObservable<Unit> QueueAnItem(string input) \n{\n    return Observable.Start(() => CallGhostScriptAndWaitForItToFinish(input), eventLoop);\n}\n\nQueueAnItem("Foo").Subscribe(\n    x => Console.WriteLine("It Finished!"), \n    ex => Console.WriteLine("Something Bad Happened: {0}", ex.ToString());
5901	SetText(serialPort1.ReadExisting());
5902	var joins = querySpecification.FromClause.TableReferences.OfType<QualifiedJoin>();
5903	var list = _dictImportantInformation.GetList().ToList().Select(\n            x => new DictionaryNewInfoListModel\n                     {\n                         Id = x.Id,\n                         Description = x.Description,\n                         IsActiveYN = x.IsActive,\n                         DeestynationName = x.DictImportantInformationXDestination.Select(n => new DictionaryNewInfoSupportList \n                         { Id = n.Destination.Id, Name = n.Destination.Description }).ToList()\n                     }\n\n            ).ToList();
5904	// Configure the Client that you'll use to make search requests\nstring queryUrl = @"http://search-<domainname>-xxxxxxxxxxxxxxxxxxxxxxxxxx.us-east-1.cloudsearch.amazonaws.com";\nAmazonCloudSearchDomainClient searchClient = new AmazonCloudSearchDomainClient(queryUrl);\n\n// Configure a search request with your query\nSearchRequest searchRequest = new SearchRequest();\nsearchRequest.Query = "potato";\n// TODO Set your other params like parser, suggester, etc\n\n// Submit your request via the client and get back a response containing search results\nSearchResponse searchResponse = searchClient.Search(searchRequest);
5905	Color slateBlue = Color.FromName("SlateBlue");
5906	XElement apps = \nnew XElement("Applications",\n    new XElement("Application",\n        new XAttribute("Name", name),\n        new XAttribute("CFBundleIdentifier", bundle),\n        (from icon in icons\n        select new XElement("Icon", icon,\n                new XAttribute("Size", iconsize)))\n        )\n    );
5907	restore filelistonly from disk='path_to_your_backup'
5908	struct Test\n{\n    public int test1;\n    public int test2;\n}\n\n[DllImport("mydll", CallingConvention = Cdecl)]\npublic static extern void FillStruct( Test[] stTest, int size);\n\n[...]\nvar test = new Test[n];\nFillStruct(test, test.Length);
5909	Thread.Abort
5910	try\n{\n    dataGridView.ScrollBars = ScrollBars.Both;\n\n    dConn.Open();\n    dAdapter4.Fill(ds4,"activities");\n    dConn.Close();    \n    dataGridView.DataSource = ds4.Tables[0].DefaultView;\n}
5911	using System;\nusing System.Xml.Linq;\n\npublic class Test\n{\n    static void Main()\n    {\n        XDocument doc = XDocument.Load("test.xml");\n        var proc = new XProcessingInstruction\n            ("xml-stylesheet", "type=\"text/xsl\" href=\"Sample.xsl\"");\n        doc.Root.AddBeforeSelf(proc);\n        doc.Save("test2.xml");\n    }\n}
5912	JpegBitmapEncoder encoder = new JpegBitmapEncoder();\n        encoder.Frames.Add(BitmapFrame.Create(bitmapSource));\n        encoder.QualityLevel = 100;          \n        byte[] bit = new byte[0];\n        using (MemoryStream stream = new MemoryStream())\n        {               \n            encoder.Frames.Add(BitmapFrame.Create(bitmapSource));\n            encoder.Save(stream);\n            bit = stream.ToArray(); \n            stream.Close();               \n        }
5913	dates.GroupBy(d => d).ToDictionary(g => g.Key, g => g.Count());
5914	String.Format(CultureInfo.InvariantCulture, "{0:0000000}", number);
5915	WebElement userNameField = driver.findElement(By.id("userNameTextBoxId"));\nWebElement passwordField = driver.findElement(By.id("passwordTextBoxId"));\nuserNameField.sendKeys("myusername");\npasswordField.sendKeys("mypassword");
5916	public void Foo<T>(T myParam)\n    where T : IObject, ITreeNode<IObject>\n{\n    // whatever\n}
5917	public  List<int> ReadPdfFile(string fileName, String searthText)\n            {\n                List<int> pages = new List<int>();\n                if (File.Exists(fileName))\n                {\n                    PdfReader pdfReader = new PdfReader(fileName);\n                    for (int page = 1; page <= pdfReader.NumberOfPages; page++)\n                    {\n                        ITextExtractionStrategy strategy = new SimpleTextExtractionStrategy();\n\n                        string currentPageText = PdfTextExtractor.GetTextFromPage(pdfReader, page, strategy);\n                        if (currentPageText.Contains(searthText))\n                        {\n                            pages.Add(page);\n                        }\n                    }\n                    pdfReader.Close();\n                }\n                return pages;\n            }
5918	string str = "123.00000000";\ntextBox1.Text = str.Substring(0,str.IndexOf(".")+3);
5919	[ServiceContract(Namespace = "http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Notification/03")]\n    public interface ITfsNotificationService\n    {\n        [OperationContract(Action = "http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Notification/03/Notify", Name = "Notify", ReplyAction = "http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Notification/03/ResponstToNotify")]\n        [XmlSerializerFormat(Style = OperationFormatStyle.Document)]\n        void Notify(string eventXml, string tfsIdentityXml, SubscriptionInfo SubscriptionInfo);\n    }\n\n    [ServiceBehavior(Namespace = "http://schemas.microsoft.com/TeamFoundation/2005/06/Services/Notification/03")]\n    public class Service1 : ITfsNotificationService\n    {\n        public void Notify(string eventXml, string tfsIdentityXml, SubscriptionInfo SubscriptionInfo)\n        {\n            throw new NotImplementedException();\n        }\n    }
5920	HtmlDocument htmlDoc = new HtmlDocument();\n\nhtmlDoc.Load("withoutdoctype.html");\n\nHtmlCommentNode hcn = htmlDoc.CreateComment("<!DOCTYPE html>");\n\nHtmlNode htmlNode = htmlDoc.DocumentNode.SelectSingleNode("/html");\nhtmlDoc.DocumentNode.InsertBefore(hcn, htmlNode);\n\nhtmlDoc.Save("withdoctype.html");
5921	from i in Invoices\nselect new\n{\n    InvoiceID = i.InvoiceId, \n    CustomerName = i.CustomerName,\n    SubPrice = InvoiceItems.Where(it => it.InvoiceID = i.InvoiceID).Select(it => it.Quantity*it.UnitPrice).Sum(),\n    SumPayments = PaymentInvoice.Where(pi => pi.InvoiceId = i.InvoiceId).Select(pi => pi.AmountAllocated).Sum()\n}
5922	static System::Drawing::Point FindImage(IntPtr source, IntPtr target)\n{\n    POINT retval = ImgFuncs::MyImgFuncs::FindImage((HBITMAP)(void*)source, (HBITMAP)(void*)target);\n    return System::Drawing::Point(retval.X, retval.Y);\n}
5923	public decimal this[int index] {\n    get { return data[index]; }\n    set { data[index] = value; }\n}
5924	int count= mynew.Columns.Count;\nvar lastColumn = mynew.Columns[count - 1];\nstring columnname= lastColumn.ColumnName;
5925	var data = from s in abc\n                          from i in s.Items\n                          select\n                              new\n                                  {\n                                      objType = i.GetType() == typeof(OR)                                             \n                                            ? ((OR)i).name : i.GetType() == typeof(DT)                                            \n                                            ? ((DT)i).name : string.Empty,\n                                      objAbc = s\n                                  };\n\nIEnumerable<abc> data = journey.Where(x => x.objType.Contains("myname")).Select(y => y.objAbc).ToList();
5926	DataTable dt = new DataTable();\n\nBindingSource bs = new BindingSource();\n\nbs.DataSource = dt;\n\ndataGridView1.DataSource= bs;
5927	Page page = new Page(this);  \nFramme.Content = page;
5928	List<string[]> users = new List<string[]>() ;
5929	double[] X = { ... };\ndouble[] Y = { ... };\nstring[] Risk = { ... };\n\nfor (int i = 0; i > X.Length; i++)\n{\n    TrainigSet tr = new TrainigSet(); // create a new TrainingSet\n    ...\n    listtraining.Add(tr);\n}
5930	var Result = AList.Select(p => new\n        {\n            BList = p.BList,\n            indexes = p.BList.Select((q, i) => new\n            {\n                index = i,\n                isMatch = q.Word == "Word"\n            }\n            )\n            .Where(q => q.isMatch)\n            .Select(q=>q.index)\n        });
5931	if(File.Exists("database.db"))
5932	public void ToggleButtonOnAction(IRibbonControl control, bool pressed)\n{\n  MessageBox.Show("ToggleButton was switched " + pressed ? "on" : "off");\n}
5933	string textTransDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm");
5934	if (startDate!= '' && EndDate!='') {  \n    var stdate = Date.parse(startDate);   \n    var enddate = Date.parse(EndDate);  \n    if (stdate > enddate) {   \n        alert('Start date cannot be greater than end date');   \n        return false;   \n    }   \n    else\n    {   \n        return true;   \n    }   \n}
5935	smtpServerInstance.Credentials = new NetworkCredential("user", "password"); \nsmtpServerInstance.Send(mail);
5936	foreach (var cc in qry.Distinct().ToList())
5937	var result = dbContext.UserRoles\n                   .Where(ur => ur.Customer.CustomerId == customer.CustomerId)\n                   .Select(ur => ur.UserProfile);
5938	protected override void OnPaint(PaintEventArgs e)\n{\n    base.OnPaint(e);\n\n    Graphics graphicsObject = e.Graphics;\n\n    using (Brush aGradientBrush = new LinearGradientBrush(new Point(0, 0), new Point(50, 0), Color.Blue, Color.Red))\n    {\n        using (Pen aGradientPen = new Pen(aGradientBrush))\n        {\n            graphicsObject.DrawLine(aGradientPen, new Point(0, 10), new Point(100, 10));\n        }\n    }\n}
5939	private bool VisitExpression(Expression expression, Expression parentExpression, Statement parentStatement, CsElement parentElement, object context)\n{\n    if (expression.ExpressionType == ExpressionType.VariableDeclarator)\n    {\n        VariableDeclaratorExpression declaratorExpression = (VariableDeclaratorExpression)expression;\n        if (declaratorExpression.Initializer == null)\n        {\n            this.AddViolation(parentElement, expression.LineNumber, "YourRule", declaratorExpression.Identifier.Text);\n        }\n    }\n\n    return true;\n}
5940	Bitmap bmp = new Bitmap("c:\\fakePhoto.jpg");\nRectangle rect = new Rectangle(0, 0, bmp.Width, bmp.Height);\nBitmapData bmpData =\n   bmp.LockBits(rect, ImageLockMode.ReadWrite, bmp.PixelFormat);\n\nint bytes  = Math.Abs(bmpData.Stride) * bmp.Height;\nbyte[] rgbValues = new byte[bytes];\n\n// Copy the RGB values into the array.\nMarshal.Copy(bmpData.Scan0, rgbValues, 0, bytes);
5941	var washingtonCustomers = customers.Where(c => c.Field<string>("Region") == "WA");\nvar recentOrders = orders.Where(o => (DateTime)o["OrderDate"] >= cutoffDate);\n\nvar query = washingtonCustomers.Join(recentOrders, \n                 c => c.Field<string>("CustomerID"),\n                 o => o.Field<string>("CustomerID"),\n                 (c, o) => new { \n                     CustomerID = c.Field<string>("CustomerID"), \n                     OrderID = o.Field<int>("OrderID") \n                 });
5942	Range headers = mySheet.UsedRange.Rows(1);
5943	static void Main()\n{\n    Settings s = Settings.Default;\n    Process.Start(s.URL1);\n    Thread.Sleep(s.Delay1);\n    SendKeys.SendWait("%D");\n    Thread.Sleep(100);\n    SendKeys.SendWait(EncodeForSendKey(s.URL2));\n    SendKeys.SendWait("{ENTER}");\n}\n\npublic static string EncodeForSendKey(string value)\n{\n    StringBuilder sb = new StringBuilder(value);\n    sb.Replace("{", "{{}");\n    sb.Replace("}", "{}}");\n    sb.Replace("{{{}}", "{{}");\n    sb.Replace("[", "{[}");\n    sb.Replace("]", "{]}");\n    sb.Replace("(", "{(}");\n    sb.Replace(")", "{)}");\n    sb.Replace("+", "{+}");\n    sb.Replace("^", "{^}");\n    sb.Replace("%", "{%}");\n    sb.Replace("~", "{~}");\n    return sb.ToString();\n}
5944	var link = File.ReadLines(path + "\\text.txt").ToArray();\n        var sb = new StringBuilder();\n        foreach (var txt in link)\n        {\n            if (txt.Contains("Output="))\n            {\n                var outputPath = txt.Split('=')[1];\n                sb.AppendLine(string.Format("outlog = {0}", outputPath));\n\n            }\n            else if (txt.Contains("Licfile="))\n            {\n                var LicFilePath = txt.Split('=')[1];\n                sb.AppendLine(string.Format("license_path = {0}", LicFilePath));\n            }\n        }\n        File.WriteAllText(path + "\\text2.txt",sb.ToString());
5945	private void Button_PreviewMouseRightButtonUp(object sender, MouseButtonEventArgs e)\n{\n    DockPanel dockPanel = (DockPanel)((Button)sender).Content;\n    TextBlock text = (TextBlock)LogicalTreeHelper.FindLogicalNode(dockPanel, "secondTextBlock");\n    if (text != null)\n    {\n        text.Visibility = Visibility.Visible;\n    }\n}
5946	ThreadStart threadEntryPoint = ...;\n\nvar thread = new Thread(threadEntryPoint);\nthread.ApartmentState = ApartmentState.MTA;  // set this before you call Start()!\nthread.Start();
5947	var types = scope.ComponentRegistry.Registrations\n    .SelectMany(r => r.Services.OfType<IServiceWithType>(), (r, s) => new { r, s })\n    .Where(rs => rs.s.ServiceType.Implements<T>())\n    .Select(rs => rs.r.Activator.LimitType);
5948	var originalPersons = m_originalList.ToList();\nm_originalList.Clear();\nforeach (var modifiedPerson in m_modifiedList)\n{\n    var originalPerson = originalPersons.FirstOrDefault(c => c.ID == modifiedPerson.ID);\n    if (originalPerson == null)\n        m_originalList.Add(modifiedPerson);\n    else\n    {\n        m_originalList.Add(originalPerson);\n        originalPerson.Document = modifiedPerson.Document;\n        originalPerson.Name = modifiedPerson.Name;\n        ...\n    }\n}
5949	Quantities = numbers.Select((s, index) => new SelectListItem \n{ \n    Value = index.ToString(), \n    Text = s.ToString()\n);
5950	Path.GetFullPath(fileName);
5951	ReceiptTemplates/templates.xml
5952	bool isDelegateCalled = false;\nvar a = new A(a => { isDelegateCalled = true});\n\n//do something\nAssert.True(isDelegateCalled);
5953	string myString = "/1//2//56//21/";\n int[] arrayInt = Regex.Split(myString, "/+").Where(s => !String.IsNullOrWhiteSpace(s)).Select(Int32.Parse).ToArray();
5954	using System;\nusing Microsoft.SqlServer.Dts.Runtime;\n\nnamespace RunFromClientAppCS\n{\n  class Program\n  {\n    static void Main(string[] args)\n    {\n      string pkgLocation;\n      Package pkg;\n      Application app;\n      DTSExecResult pkgResults;\n\n      pkgLocation =\n        @"C:\Program Files\Microsoft SQL Server\100\Samples\Integration Services" +\n        @"\Package Samples\CalculatedColumns Sample\CalculatedColumns\CalculatedColumns.dtsx";\n      app = new Application();\n      pkg = app.LoadPackage(pkgLocation, null);\n      pkgResults = pkg.Execute();\n\n      Console.WriteLine(pkgResults.ToString());\n      Console.ReadKey();\n    }\n  }\n}
5955	ImageSurface OutputImage = new ImageSurface (Format.Rgb24, (int)RectangleToCropTo.Width, (int)RectangleToCropTo.Height);\nusing (Cairo.Context cr = new Cairo.Context(OutputImage)) {\n    cr.SetSource (originalImage, -RectangleToCropTo.X, -RectangleToCropTo.Y);\n    cr.Paint ();\n}
5956	using System;\nusing System.Linq;\nusing System.IO;\n\nnamespace FileToHex\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            //read only 4 bytes from the file\n\n            const int HEADER_SIZE = 4;\n\n            byte[] bytesFile = new byte[HEADER_SIZE];\n\n            using (FileStream fs = File.OpenRead(@"C:\temp\FileToHex\ex.tiff"))\n            {\n                fs.Read(bytesFile, 0, HEADER_SIZE);\n                fs.Close();\n            }\n\n            string hex = BitConverter.ToString(bytesFile);\n\n            string[] header = hex.Split(new Char[] { '-' }).ToArray();\n\n            Console.WriteLine(System.String.Join("", header));\n\n            Console.ReadLine();\n\n        }\n    }\n}
5957	public Expression<Func<TEntity, bool>> And(Expression<Func<TEntity, bool>> ex1, \n                                           Expression<Func<TEntity, bool>> ex2)\n{\n  var x = Expression.Parameter(typeof(TEntity));\n  return Expression.Lambda<Func<TEntity,bool>>(\n    Expression.And(\n      Expression.Invoke(ex1, x),\n      Expression.Invoke(ex2, x)), x); \n}
5958	bool ignoreEvents = false;\n        public Form1()\n        {\n            InitializeComponent();\n        }\n\n        private void checkBox1_CheckedChanged(object sender, EventArgs e)\n        {\n            ignoreEvents = true;\n            checkBox2.Checked = checkBox1.Checked ;\n            checkBox3.Checked = checkBox1.Checked;\n            ignoreEvents = false;\n        }\n\n        private void checkBox2_CheckedChanged(object sender, EventArgs e)\n        {\n            if (ignoreEvents) return;\n            MessageBox.Show("Changed in 2");\n        }\n\n        private void checkBox3_CheckedChanged(object sender, EventArgs e)\n        {\n            if (ignoreEvents) return;\n            MessageBox.Show("Changed in 3");\n        }
5959	[DataMember(Name = "em")]\n    public string Email { get; set; }
5960	void AddQuestion(Question question);\nQuestion[] NewQuestions(DateTime fromDate);
5961	public class Test\n{\n     private int ColValue {get;set;} //This is a property\n\n     button_click()\n     {\n          ColValue = Convert.ToInt(dataset.tables["ABC"].rows[0]["col name"].ToString()) ;\n     }\n\n     button_click2()\n     {\n         int y = ColValue ;\n     }\n}
5962	public void BuildGrid()\n{\n    LayoutRoot.ShowGridLines = true;\n    int rowIndex = 0;\n    foreach (string s in _names)\n    {\n        LayoutRoot.RowDefinitions.Add(new RowDefinition());\n        var btn = new Button()\n        LayoutRoot.Children.Add(btn);\n        Grid.SetRow(btn, rowIndex);\n        rowIndex += 1;\n    }\n}
5963	System.Diagnostics.Debugger.Break();
5964	public interface IYourList<T>\n    {\n        T this[int index] { get; set; }\n    }
5965	void OnApplicationStart()\n{\n    StaticKernelContainer.Kernel = new StandardKernel(new YourInjectionModule());\n}\n\nvoid AfterMEFHasDoneWhatItNeedsToDo()\n{\n    // (You may need to use Rebind at this point)\n    StaticKernelContainer.Kernel.Bind<ICarLogger>().To(importer.CarType);\n}
5966	System.Int32 x, y;\nSystem.Int64 z;\n\nSystem.Random rand = new System.Random(DateTime.Now.Millisecond);\nfor (int i = 0; i < 6; i++)\n{\n    x = rand.Next(int.MinValue, int.MaxValue);\n    y = rand.Next(int.MinValue, int.MaxValue);\n    z = ((Int64)x * y); //by casting x, we "promote" the entire expression to 64-bit.\n    Console.WriteLine("{0} * {1} = {2}", x, y, z);\n}
5967	public const string YearOneByIndexPropertyName = "YearOneByIndex";\npublic int YearOneByIndex\n{\n    get\n    {\n        return _yearOneByIndex;\n    }\n\n    set\n    {\n        if (_yearOneByIndex  == value)\n        {\n            return;\n        }\n\n        _yearOneByIndex = value;\n        _yearOneByPercentage = 0\n\n        RaisePropertyChanged(YearOneByIndexPropertyName);\n        RaisePropertyChanged(YearOneByPercentagePropertyName);\n    }\n}\n\npublic const string YearOneByPercentagePropertyName = "YearOneByPercentage";\npublic int YearOneByPercentage\n{\n    get\n    {\n        return _yearOneByPercentage;\n    }\n\n    set\n    {\n        if (_yearOneByPercentage == value)\n        {\n            return;\n        }\n\n        _yearOneByPercentage = value;\n        _yearOneByIndex = 0;\n\n        RaisePropertyChanged(YearOneByIndexPropertyName);\n        RaisePropertyChanged(YearOneByPercentagePropertyName);\n    }\n}
5968	private void loginbutton_Click(object sender, RoutedEventArgs e)\n{\n    usr = textBox1.Text;\n    String pass = textBox2.Password;\n}
5969	var vals = Enum.GetValues(Type.GetType("Egypt"));
5970	private void timer1_Tick(object sender, EventArgs e)\n{        \n      labelWarningMessage.Text = "";\n      labelWARNING.Visible = false;\n}
5971	return Resoults.Where(p=>p.CurrentID ==ProperID.CurrentID).ToList();
5972	int x = index % width;\nint y = index / width;
5973	MyReportViewer.Reset();
5974	catch (SqlException ex)\n    {\n        for (int i = 0; i < ex.Errors.Count; i++)\n        {\n            errorMessages.Append("Index #" + i + "\n" +\n                "Message: " + ex.Errors[i].Message + "\n" +\n                "LineNumber: " + ex.Errors[i].LineNumber + "\n" +\n                "Source: " + ex.Errors[i].Source + "\n" +\n                "Procedure: " + ex.Errors[i].Procedure + "\n");\n        }\n        Console.WriteLine(errorMessages.ToString());\n    }
5975	return ProductTerms.OrderBy(t => t.MinTermDuration).FirstOrDefault();
5976	using (var memoryStream = new MemoryStream())\nusing (var writer = new StreamWriter(memoryStream ))\n{\n    // Various for loops etc as necessary that will ultimately do this:\n    writer.Write(...);\n}
5977	var filter = Builders<GridFSFileInfo>.Filter.Eq("_id", gridfsObjectID);
5978	bool listUpdated = false;\n\n    private void listView1_SelectedIndexChanged(object sender, EventArgs e) {\n        if (!listUpdated) {\n            this.BeginInvoke(new MethodInvoker(updateList));\n            listUpdated = true;\n        }\n    }\n\n    private void updateList() {\n        listUpdated = false;\n        // etc...\n    }
5979	string path = @"C:\Windows\System32\";\nFileInfo fi = new FileInfo(path);\nstring outFile = fi.DirectoryName + ".xyz";
5980	foreach (DataRow row in ds.Tables[0].Rows)\n            {\n\n                samplelist.Add(row["WORKSTATION_ID"].ToString());\n\n            }\n\n            listbox1.DataSource = samplelist;\n    listbox1.DataBind();
5981	ORDER BY\nCASE Category\n   WHEN 'Pettycash' THEN '1'\n   WHEN 'DailyExpense' THEN '2'\n   WHEN 'Home Expense' THEN '3'\n   WHEN 'Fair Expense' THEN '4'\n   WHEN 'Cash Expense' THEN '5'\n   ELSE '6' \nEND
5982	for (int i = 0; i <= (_eam.No_of_Vehicles - 1); i++) {\n\n   _parkingVehicle = new VehicleViewModel(); // Or any other class that is your implementation\n   // The actual type of _parkingVehicle is not clear from your question\n\n   _parkingVehicle.DriverName = _eam.DriverNameList[i].DriverName;\n   // Rest of your code
5983	string protectionOptionsString = "NoPrevention, PreventPrinting";\nmyObj.Protection |= (ProtectionOptions)Enum.Parse(typeof(ProtectionOptions), protectionOptionsString);
5984	IEnumerable<Entity> entities;\nint rangeStartIndex = 0;\nint rangeLength = 1000;\n\ndo\n{\n    entities = dataContext.Entities\n        .Skip(rangeStartIndex)\n        .Take(rangeLength);\n\n    Parallel.ForEach(\n        entities,\n        item =>\n        {\n            // Process a single entity in the list\n        });\n\n    using (var tran = new TransactionScope())\n    {\n        // Persist the entities in the database\n        tran.Complete();\n    }\n\n    rangeStartIndex += rangeLength;\n\n} while (entities.Any());
5985	IF "$(BuildingInsideVisualStudio)"=="true" ( copy command here )
5986	using (var proc = new Process())\n        {\n            proc.StartInfo.FileName = Server.MapPath("~/Testing/Demo/MyEXE.exe");\n            proc.StartInfo.Arguments = String.Format("\"{0}\"", commandFile);\n            proc.StartInfo.WorkingDirectory = savePath;\n            proc.Start();\n            proc.WaitForExit();\n        }
5987	for (int i = 0; i < methodParameters.Length; i++)\n{\n    // I. instead of this\n\n    //values.First(x => x.Key == unMappedList.ElementAt(i).Key)\n    //    .Key = methodParameters.ElementAt(i).Name; \n    //above doesn't work, but even if it did it wouldn't do the right thing\n\n    // II. do this (not so elegant but working;)\n    var key = unMappedList.ElementAt(i).Key;\n    var value = values[key];\n    values.Remove(key);\n    values.Add(methodParameters.ElementAt(i).Name, value);\n\n    // III. THIS is essential! if statement must be moved after the for loop\n    //return true;\n}\nreturn true; // here we can return true
5988	public static void emas(string text)\n        {\n            const string MatchEmailPattern =\n           @"(([\w-]+\.)+[\w-]+|([a-zA-Z]{1}|[\w-]{2,}))@"\n           + @"((([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\.([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\."\n             + @"([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\.([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])){1}|"\n           + @"([a-zA-Z]+[\w-]+\.)+[a-zA-Z]{2,4})";\n            Regex rx = new Regex(MatchEmailPattern,  RegexOptions.Compiled | RegexOptions.IgnoreCase);\n            // Find matches.\n            MatchCollection matches = rx.Matches(text);\n            // Report the number of matches found.\n            int noOfMatches = matches.Count;\n            // Report on each match.\n            foreach (Match match in matches)\n            {\n                Console.WriteLine(match.Value.ToString());\n            }\n        }
5989	log4net.GlobalContext.Properties["CustomColumn"] = DBNull.Value;
5990	Command Name            | Short-Cut Key  | Description\n----------------------- | -------------- | -------------------------------\nWindow.CloseToolWindow  | SHIFT + ESC    | Closes the current tool window
5991	while (true)\n    {\n        try\n        {\n            FileInfo[] files = dir.GetFiles(m_fileTypes);\n            Partitioner<FileInfo> partitioner = Partitioner.Create(files, true);\n            Parallel.ForEach(partitioner, f => \n            {\n                try\n                {\n                    XmlMsg msg = factory.getMessage(messageType);\n                    try\n                    {\n                        msg.loadFile(f.FullName);\n                        MsgQueue.Enqueue(new Tuple<XmlMsg, FileInfo>(msg, f));\n                    }\n                    catch (Exception e)\n                    {\n                        handleMessageFailed(f, e.ToString());\n                    }\n                }\n            });\n            //Added check to wait for queue to deplete before \n            //re-scanning the directory\n            while (MsgQueue.Count > 0)\n            {\n                System.Threading.Thread.Sleep(5000);\n            }\n        }\n    }
5992	XmlSerializer ser = new XmlSerializer(typeof(Users));\nvar u = (Users)ser.Deserialize(stream);\n\n\n[XmlRoot("users")]\npublic class Users\n{\n    [XmlElement("user")]\n    public User[] UserList { get; set; }\n}\n\npublic class User\n{\n    [XmlElement("name")]\n    public string Name { get; set; }\n\n    [XmlArray("orders"),XmlArrayItem("order")]\n    public Order[] OrderList { get; set; }\n}\n\n[XmlRoot("order")]\npublic class Order\n{\n    [XmlElement("number")]\n    public string Number { get; set; }\n}
5993	Thread.CurrentThread.Priority = ThreadPriority.Lowest;
5994	var variablename = "v" + i;\nMethodInfo method = product.GetType().GetMethod(variablename);\nobject result = method.Invoke(product, new object[] {}); // pass in the parameters if you need to
5995	Response.Redirect()
5996	public class SomeTests : MarshalByRefObject\n{\n    [PartialTrustFact]\n    public void Partial_trust_test1()\n    {\n        // Runs in medium trust\n    }\n}\n\n// Or...\n\n[PartialTrustFixture]\npublic class MoreTests : MarshalByRefObject\n{\n    [Fact]\n    public void Another_partial_trust_test()\n    {\n        // Runs in medium trust\n    }\n}
5997	string t = "parrothead";\nList<titles> tData = db.titles_data.Where(\n    o=> o.title.Contains(" " + t + " ") || \n    o.title.StartsWith(t + " ") || \n    o.title.EndsWith(" "+ t)).ToList();
5998	string ComputeFourDigitStringHash(string filepath)\n{\n     string filename = System.IO.Path.GetFileNameWithoutExtension(filepath);\n     int hash = filename.GetHashCode() % 10000;\n     return hash.ToString("0000");\n}
5999	var convertedURI = new Uri("file:///" + Application.StartupPath +\n                           "\\Wildlife.wmv").AbsoluteUri;\naxVLCPlugin21.playlist.add(convertedURI);\naxVLCPlugin21.playlist.play();
6000	for(int i=0; i<itmnme.Length; i++)\n{\n    var name = itmnme[i];\n    var quantity = qntity[i];\n    var price = price[i];\n    // do what you need with these values\n}
6001	TextReader reader = new StringReader(richTextBox1.Text);\n        string[] strItems = null;\n        while (reader.Peek() != -1)\n        {\n            string nextRow = reader.ReadLine();\n            if (!listView1.Items.ContainsKey(nextRow.GetHashCode().ToString()))\n            {\n               ListViewItem item = new ListViewItem();\n               item.Name = nextRow.GetHashCode().ToString();\n               strItems = nextRow .Split("-".ToCharArray());\n               item.Text = strItems[0].ToString();\n               item.SubItems.Add(strItems[1].ToString());\n               item.SubItems.Add(strItems[2].ToString());\n               item.SubItems.Add(strItems[3].ToString());\n               item.SubItems.Add(strItems[4].ToString());\n               listView1.Items.Add(item);\n            }\n        }
6002	public static IEnumerable<Tuple<T, U>> CombineWith<T, U>(this IEnumerable<T> first, IEnumerable<U> second)\n{\n    using (var firstEnumerator = first.GetEnumerator())\n    using (var secondEnumerator = second.GetEnumerator())\n    {\n        bool hasFirst = true;\n        bool hasSecond = true;\n\n        while (\n            // Only call MoveNext if it didn't fail last time.\n            (hasFirst && (hasFirst = firstEnumerator.MoveNext()))\n            | // WARNING: Do NOT change to ||.\n            (hasSecond && (hasSecond = secondEnumerator.MoveNext()))\n            )\n        {\n            yield return Tuple.Create(\n                    hasFirst ? firstEnumerator.Current : default(T),\n                    hasSecond ? secondEnumerator.Current : default(U)\n                );\n        }\n    }\n}
6003	List<string> earnings = new List<string>() { "Housing Allowance", "Mobile Phone Allowance", "Mileage Allowance" };\nList<string> deductions = new List<string>() { "Housing Ban", "Mobile Phone Ban", "Mileage Ban" };\n\ntreeView1.Nodes.Add("Component");//adding root node\ntreeView1.Nodes[0].Nodes.Add("Earnings");//adding earnings child node\ntreeView1.Nodes[0].Nodes.Add("Deductions");//adding deduction child node\n\n//adding all earnings to "Earnings" node\nforeach (string earning in earnings)\n{\n    treeView1.Nodes[0].Nodes[0].Nodes.Add(earning);\n}\n\n//adding all deductions to "Deductions" node\nforeach (string deduction in deductions)\n{\n    treeView1.Nodes[0].Nodes[1].Nodes.Add(deduction);\n}
6004	var uIdToRemove = mandatoryusers.GroupBy(m => m.Uid)\n                    .Where(g => mandatory.Except(g.Select(s => s.CertificateValue)).Any())\n                    .Select(g => g.Key).ToList();\n\nmandatoryusers.RemoveAll(x => uidToRemove.Contains(x.Uid));
6005	ExeConfigurationFileMap map = new ExeConfigurationFileMap();\nmap.ExeConfigFilename = "..\\mydll.config";\nConfiguration config = ConfigurationManager.OpenMappedExeConfiguration(map,  ConfigurationUserLevel.None);\nAppSettingsSection section = (AppSettingsSection)config.GetSection("appSettings");
6006	var where = new List<Expression<Func<Person, bool>>>();\n\nif (!string.IsNullOrWhitespace(lastName))\n    where.Add(p => p.LastName == lastName);\n\nif (!string.IsNullOrWhitespace(firstName))\n    where.Add(p => p.FirstName == firstName);\n\n// etc...\n\nvar query = session.Query<Person>();\n\nforeach (var clause in where)\n    query = query.Where(clause);\n\nvar results = query.ToList();
6007	String.Format
6008	public void SetOperationDropDown()\n{\nif(CmbOperations.Items.Count == 0)\n{\n//ByDefault the selected text in the cmbOperations will be -SELECT OPERATIONS-. \ncmbOperations.SelectedItem = "-SELECT OPERATIONS-"; \n//This is for adding four operations with value in operation dropdown \ncmbOperations.Items.Insert(0, "PrimaryKeyTables"); \ncmbOperations.Items.Insert(1, "NonPrimaryKeyTables"); \ncmbOperations.Items.Insert(2, "ForeignKeyTables"); \ncmbOperations.Items.Insert(3, "NonForeignKeyTables"); \ncmbOperations.Items.Insert(4, "UPPERCASEDTables"); \ncmbOperations.Items.Insert(5, "lowercasedtables"); \n\n\n}\nelse\n{\nint? cbSelectedValue = null;\nif(!string.IsNullOrEmpty(cmbOperations.SelectedValue))\ncbSelectedValue = convert.toInt32(cmbOperations.SelectedValue);\n}\n//load your combo again\nif(cbSelectedValue != null)\ncmbOperations.SelectedValue = cbSelectedValue.ToString();\n}
6009	SelectQuery q = new SelectQuery("SELECT Name, DeviceID, Description FROM Win32_DesktopMonitor");\nusing(ManagementObjectSearcher mos = new ManagementObjectSearcher(q))\n{\n    foreach(ManagementObject mo in mos.Get())\n    {\n        Console.WriteLine("{0}, {1}, {2}",\n            mo.Properties["Name"].Value.ToString(),\n            mo.Properties["DeviceID"].Value.ToString(),\n            mo.Properties["Description"].Value.ToString());\n    }\n}
6010	this.BackColor = Color.Red;\nthis.Size = new Size(1600, 900);
6011	App.config
6012	item.GetValue(obj, null);
6013	private void SetText(Control control, String text)\n{\n    control.Text = text;\n}
6014	//In globals / initialization:\nVector2 Position;\nVector2 Speed;\nVector2 ThrustForce;\nfloat Coefficient = 0.009f;\nfloat PreviousDrag = 0.000f;\n\n//In the update loop\n//DeltaTime is a float based upon how much of a second passed\nVector2 AccelerationToApply = ThrustForce * DeltaTime + PreviousDrag * DeltaTime;\nVector2 NewSpeed = Speed + AccelerationToApply;\nPreviousDrag = Coefficient * NewSpeed * NewSpeed;\nSpeed = NewSpeed;
6015	e.Item.Visible = false
6016	public ActionResult SomeActionMethod(FormCollection formCollection)\n{\n  foreach (var key in formCollection.AllKeys)\n  {\n    var value = formCollection[key];\n  }\n// or \nvar color=formCollection["color"];\n}
6017	[RegularExpression("^([^/\\*?:\\u0022\\u003c\\u003e|]*)$", ....
6018	// Since Sunday has the index of 0, and you want the week to start from Monday,\n// we need to shift the numbers around so that Monday is 0 instead.\nint dayNumber = ((int)Calendar1.SelectedDate.DayOfWeek + 6) % 7;\n\nDateTime monday = Calendar1.SelectedDate.AddDays(-dayNumber);\nDateTime sunday = Calendar1.SelectedDate.AddDays(6 - dayNumber);\n\nLabel3.Text = string.Format(\n    "{0} - {1}",\n    monday.ToShortDateString(),\n    sunday.ToShortDateString());
6019	Process proc = new Process();\nproc.StartInfo.FileName = programPath;\nproc.StartInfo.WorkingDirectory = Path.GetDirectoryName(programPath);\nproc.Start();
6020	while (true)\n{\n    Socket client = listener.AcceptSocket();\n    Console.WriteLine("Connection accepted.");\n\n    var childSocketThread = new Thread(() =>\n    {\n        byte[] data = new byte[100];\n        int size = client.Receive(data);\n        Console.WriteLine("Recieved data: ");\n        for (int i = 0; i < size; i++)\n            Console.Write(Convert.ToChar(data[i]));\n\n        Console.WriteLine();\n\n        client.Close();\n    });\n    childSocketThread.Start();\n}
6021	var pattern = "(" + String.Join("|", words.Select(w => Regex.Escape(w))) + ")";\n// e.g. (word1|word2|word3|word4)\nvalue = Regex.Replace(\n    value,\n    pattern,\n    "<b>$1</b>",\n    RegexOptions.IgnoreCase);
6022	list.Where(o => o.Id == 10);
6023	Stack<Matrix> matrixStack = new Stack<Matrix>();\n...\nmatrixStack.Push( armMatrix );\n...\nbasicEffect.World = matrixStack.Peek();\nforeach (EffectPass pass in basicEffect.CurrentTechnique.Passes)\n{\n    pass.Apply();\n\n    graphics.GraphicsDevice.DrawPrimitives(...);\n}\nbasicEffect.End();\n...\nmatrixStack.Pop();
6024	var q = \nxml.XPathSelectElements(@"/tr[not(descendant::table[@id = 'WHITE_BANKTABLE'])]");
6025	static void Main(string[] args)\n    {\n        var items = new[] { 1, 2, 3 };\n        var list = items.Select(i => Foo(i)).ToList(); // R# suggests "Convert to method group"\n    }\n\n    static int Foo(int i)\n    {\n        return i;\n    }
6026	menuItems = dates\n     .GroupBy(x => new DateTime(x.Year, x.Month, 1))\n     .Select(x=> new{Date = x.Key, Count = x.Count()})\n     .OrderByDescending(x => x.Date)\n     .Select(x => new ArchiveMenuItem(streamUrl, \n                                      x.Date.Month, \n                                      x.Date.Year, \n                                      x.Count))\n     .ToList();
6027	public string ToHtml(string pView, ControllerContext context = null)\n{\n    if (context == null)\n        context = ControllerContext;\n\n    using (var sw = new StringWriter())\n    {\n        var viewResult = ViewEngines.Engines.FindPartialView(context, pView);\n        var viewContext = new ViewContext(context, viewResult.View, ViewData, TempData, sw);\n        viewResult.View.Render(viewContext, sw);\n        viewResult.ViewEngine.ReleaseView(context, viewResult.View);\n        return sw.GetStringBuilder().ToString();\n    }\n}
6028	dgLatestPositions.DataSource = items;\n\n        DataGridTableStyle tableStyle = new DataGridTableStyle();\n        tableStyle.MappingName = items.GetType().Name;\n\n        // Column 1\n        DataGridTextBoxColumn tbcCoding= new DataGridTextBoxColumn();\n        tbcCoding.Width = 100;\n        tbcCoding.MappingName = "Coding";\n        tbcCoding.HeaderText = "Coding";\n        tableStyle.GridColumnStyles.Add(tbcCoding);\n\n        // Column 2\n        DataGridTextBoxColumn tbcAmount = new DataGridTextBoxColumn();\n        tbcAmount .Width = 100;\n        tbcAmount .MappingName = "Amount";\n        tbcAmount .HeaderText = "Amount";\n        tableStyle.GridColumnStyles.Add(tbcAmount );\n\n        dgLatestPositions.TableStyles.Clear();\n        dgLatestPositions.TableStyles.Add(tableStyle);
6029	DispatcherTimer timer = new DispatcherTimer();\n\n        timer.Tick +=\n            delegate(object s, EventArgs args)\n            {\n                TimeSpan time = (DateTime.Now - App.StartTime);\n\n                this.timenow.Text = string.Format("{0:D2}:{1:D2}:{2:D2}", time.Hours, time.Minutes, time.Seconds);\n            };\n\n        timer.Interval = new TimeSpan(0, 0, 1); // one second\n        timer.Start();
6030	IRandomAccessStreamReference thumbnail =\n    RandomAccessStreamReference.CreateFromUri(new Uri(remoteUri));\nIAsyncOperation<StorageFile> file1 =\n    StorageFile.CreateStreamedFileFromUriAsync("duyuru.pdf", new Uri(remoteUri), thumbnail);
6031	[ \n    { \n      'Name': 'Alice', \n      'Rank': 10, \n      'RankName': '<span class="myHiddenClass">10</span>Alice', \n      ... (other fields)\n    },  \n    { \n      'Name': 'Bob', \n      'Rank': 9, \n      'RankName': '<span class="myHiddenClass">09</span>Bob', \n      ... (other fields)\n    },  \n    { \n      'Name': 'Eve', \n      'Rank': 11, \n      'RankName': '<span class="myHiddenClass">11</span>Eve', \n      ... (other fields)\n    } \n    ... (Multiple Alice / Bob / Eve records)\n]
6032	private void CompanyCheckboxClicked(object sender, RoutedEventArgs e)\n{\n    CheckBox checkBox = sender as CheckBox;\n    Row row = checkBox.DataContext as Row;\n    ...\n}
6033	Attachment attachment = new Attachment(attachmentPath);\nmsg.Attachments.Add(attachment);
6034	private void LLST_Hold(object sender, System.Windows.Input.GestureEventArgs e)\n{\n   if (LLST.SelectedItem != null)\n   {\n      ItemType item = LLST.SelectedItem as ItemType;\n      // do some stuff\n   }\n}
6035	using (Transaction tr = db.TransactionManager.StartTransaction())\n{\n    DBDictionary layoutDic\n        = tr.GetObject(\n                        db.LayoutDictionaryId,\n                        OpenMode.ForRead,\n                        false\n                      ) as DBDictionary;\n\n    foreach (DBDictionaryEntry entry in layoutDic)\n    {\n        ObjectId layoutId = entry.Value;\n\n        Layout layout\n            = tr.GetObject(\n                            layoutId,\n                            OpenMode.ForRead\n                          ) as Layout;\n\n        ed.WriteMessage(\n            String.Format(\n                            "{0}--> {1}",\n                            Environment.NewLine,\n                            layout.LayoutName\n                         )\n                       );\n    }\n    tr.Commit();\n}
6036	windows explorer tree view C#
6037	originalXml.Save(Server.MapPath("xmlTechReportDetails.xml"));
6038	string bstr = "01010101010101010101010101010101";\nlong v = 0;\nfor (int i = bstr.Length - 1; i >= 0; i--) v = (v << 1) + (bstr[i] - '0');\ndouble d = BitConverter.ToDouble(BitConverter.GetBytes(v), 0);\n// d = 1.41466386031414E-314
6039	if (Session["HasCountedThisVisitor"] == null) \n{\n    counter++; \n    Session["HasCountedThisVisitor"] = true;\n}
6040	var reportViewer = New ReportViewer();\nvar reportDataSource = New ReportDataSource("MyNS_Dog", MyDogs);\nreportViewer.LocalReport.DataSources.Add(reportDataSource);
6041	var content = File.ReadAllBytes("c:\yourpath");\nvar base64Content = Convert.ToBase64String(content);\nvar base64Array = System.Text.Encoding.ASCII.GetBytes(base64Content);
6042	[DllImport ("user32.dll")]\npublic static extern int GetKeyboardState( byte[] keystate );\n\n\nprivate void Form1_KeyDown(object sender, KeyEventArgs e)\n{\n   byte[] keys = new byte[256];\n\n   GetKeyboardState (keys);\n\n   if ((keys[(int)Keys.Up] & keys[(int)Keys.Right] & 128 ) == 128)\n   {\n       Console.WriteLine ("Up Arrow key and Right Arrow key down.");\n   }\n}
6043	dynamic sender;\ndynamic recipient;\nvar messages= db.Messages.All(db.Messages.To_Id == currentUser.Id || db.Messages.From_Id == currentUser.Id)\n    .Join(db.Users.As("Sender"), out sender).On(sender.Id == db.Messages.From_Id)\n    .Join(db.Users.As("Recipient"), out recipient).On(recipient.Id == db.Messages.To_Id)\n    .With(sender)\n    .With(recipient);\nreturn messages;
6044	ListViewItem::BeginEdit();
6045	[System.ComponentModel.DefaultValue(0)]    \npublic int EmpId\n{\nget;set;\n}
6046	#IF DEBUG\n...\n#ENDIF
6047	string serverName = ""; // your proxy server name\nstring port = ""; // your proxy port\n\nvar key = Registry.CurrentUser.OpenSubKey(@"Software\Microsoft\Windows\CurrentVersion\Internet Settings", true);\nkey.SetValue("ProxyServer", serverName + ":" + port);\nkey.SetValue("ProxyEnable", 1);
6048	var jsonResponse = JObject.Parse(await response.Content.ReadAsStringAsync());\nreturn Json(jsonResponse);
6049	- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {\n    UITableViewCell *cell = [super tableView:tableView cellForRowAtIndexPath:indexPath];\n    if(indexPath.row == 5 || indexPath.row == 7) {\n        cell.clipsToBounds = YES;\n    }\n    return cell;\n}
6050	string SubString = MyString.Substring(MyString.Length-6);
6051	System.Diagnostics.Process.Start(completeFilename);
6052	rs.RunspaceConfiguration.Cmdlets.Append(New CmdletConfigurationEntry("testfunction", GetType(TestFuncitonCmdlet), Nothing))
6053	XDocument xml = XDocument.Load("file.xml");\n  var firstElement = xml.Descendants().Where(x => x.Name == "Node" && x.Attribute("id").Value=="15").FirstOrDefault();\n  var lastElement = xml.Descendants().Where(x => x.Name == "Node" && x.Attribute("id").Value == "30").FirstOrDefault();\n  var response = firstElement.NodesAfterSelf().Where(x => lastElement.NodesBeforeSelf().Contains(x));
6054	Process.Exited
6055	Table<TEntity>.InsertOnSubmit
6056	Stream responseStream = null;\n        try\n        {\n            WebRequest request = WebRequest.Create("http://www.website.com/XMLRetrieval.ascx?arg1=value&arg2=value");\n            WebResponse webResponse = request.GetResponse();\n            responseStream = webResponse.GetResponseStream();\n        }\n        catch (Exception e)\n        {\n            return null;\n        }\n\n        if (responseStream != null)\n        {\n            return new XPathDocument(responseStream);\n        }
6057	codeSheet.Cells["A:D"].Style.Numberformat.Format = "@";
6058	var format="{0}, {1} {2}. How are you?";\n\n//string Greeting = "Hello"\n//string Name = "Allan"\n//string Company = "IBM"\n\n//all of it happening in a loop.\nstring data = ...; //I think you have an array of strings separated by ,\n\nforeach( va s in data){\n{\n    //string s = data[i];//.ToString(); - it is already a string array\n    string[] words = data[i].Split(',');\n\n    Console.WriteLine(format, words[0], words[1], words[2]);\n}
6059	ShareStatusTask sst= new ShareStatusTask();\nsst.Status = "Lorem ipsum dolor sit amet";\nsst.Show();
6060	int i;\n\nfor (int i = 0; i < 10; i++)\n{\n}\n\ni = 13;
6061	protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)\n{\n        if (e.Row.RowType == DataControlRowType.DataRow)\n        {\n            e.Row.Cells[0].Width = 100;\n            e.Row.Cells[1].Width = 150;\n        }\n}
6062	bool mSeenCtrlM;\n\nprotected override bool ProcessCmdKey(ref Message msg, Keys keyData) {\n  if (keyData == (Keys.Control | Keys.M)) {\n    mSeenCtrlM = !mSeenCtrlM;\n    if (!mSeenCtrlM) {\n      MessageBox.Show("yada");\n    }\n    return true;\n  }\n  mSeenCtrlM = false;\n  return base.ProcessCmdKey(ref msg, keyData);\n}
6063	Dictionary<TypeOfKey, SomeObject>
6064	DateTime.Now.ToString("MMMM h:m tt").ToLower();
6065	public interface ISomeStaticInterface{\n      int IntProperty {get;}\n      string StringProperty {get;}\n}\n...\nvar myVar = new SomeDynamicObjectImplementer().ActLike<ISomeStaticInterface>();\nmethod(myVar.IntProperty, myVar.StringProperty);
6066	using StackExchange.Profiling.Helpers.Dapper;
6067	public abstract class Entity\n{\n    private static Dictionary<Type, Action> Subscribers\n         = new Dictionary<Type, Action>();\n\n    internal virtual void OnSaved()\n    {\n        OnSaved(GetType());\n    }\n\n    private OnSaved(Type type)\n    {\n        Action subscribed;\n        Subscribers.TryGetValue(type, out subscribed);\n        if (subscribed != null)\n            subscribed();\n    }\n\n    public Subscribe(Type type, Action action)\n    {\n        Action subscribed;\n        Subscribers.TryGetValue(type, out subscribed);\n        Subscribers[type] = subscribed + action;\n    }\n\n    public Unsubscribe(Type type, Action action)\n    {\n        Action subscribed;\n        Subscribers.TryGetValue(type, out subscribed);\n        Subscribers[type] = subscribed - action;\n    }\n}
6068	for (int throw = 1; throw <= 100; throw++)\n{\n    if(x.Next(0,2) == 0)\n        Dice1[x.Next(1, 7)]++;\n    else\n        Dice2[x.Next(1, 7)]++;\n}
6069	cmsSigner.SignedAttributes.Add(new Pkcs9SigningTime());
6070	var jsData = @Html.Raw(Json.Encode(Model.MyCollection));
6071	String strName = txtName.Text.Trim(); //add trim here\nString strEmail = txtEmail.Text;\nBoolean blnErrors = false;\n\nif (string.IsNullOrWhiteSpace(sstrName)) //this function checks for both null or empty string.\n{\n    string script = "alert(\"Name Field Is Required!\");";\n    ScriptManager.RegisterStartupScript(this, GetType(), "ServerControlScript", script, true);\n    txtName.Focus();\n    return;//return from the function as there is an error.\n}\n\n//continue as usual .
6072	String Input = "investment professionals.&lt;BR /&gt;&lt;BR /&gt; blah blah blah";\n\n    String Output = Server.HtmlDecode(Input);
6073	Task t1 = null, t2 = null;\nwhile(!StartServer.HasExited)\n{\n       if (t1 == null || t1.IsCompleted)\n           t1= Task.Run(() =>  Console.WriteLine(StartServer.StandardOutput.ReadLine()));\n       if (t2 == null || t2.IsCompleted)\n           t2 = Task.Run(() => StartServer.StandardInput.WriteLine(Console.ReadLine()));\n       Task.WaitAny(new[] { t1, t2 });\n}
6074	int result = Int32.Parse(str.Replace(".", String.Empty));
6075	protected void readfile_Click(object sender, EventArgs e)\n    {\n        DataTable table = new DataTable();\n        table.Columns.Add("Row No.");\n        table.Columns.Add("Col No.");\n        table.Columns.Add("Width");\n        table.Columns.Add("Height");\n        table.Columns.Add("Image URL");\n        table.Columns.Add("Description");\n\n        using (StreamReader sr = new StreamReader(@"D:\Temp\fileread\readtext.txt"))\n        {\n            while (!sr.EndOfStream)\n            {\n                string[] parts = sr.ReadLine().Split(',');\n                table.Rows.Add(parts[0], parts[1], parts[2], parts[3], parts[4], parts[5]);\n            }\n        }\n        MyGridView.DataSource = table;\n        MyGridView.DataBind();\n    }
6076	//Ascending\nvar a = (from b in xCryptoDB.GetTable<AccountsTable>() select b.Extra).OrderBy(e => e)\n\n//Descending\nvar a = (from b in xCryptoDB.GetTable<AccountsTable>() select b.Extra).OrderByDescending(e => e)
6077	string str = "Dollar Tree to buy Family Dollar for about $8.5 billion";\nstring remove = Regex.Replace(str, @" ", "-");\nstring result = Regex.Replace(remove, @"^(.*?)\$(\d+)\.(\d+)\b(.*)$", "$1$2-point-$3$4");\nConsole.WriteLine(result);\nConsole.ReadLine();
6078	ID     Date/Time UTC          Date/Time Local (would be computed)\nA      2015-10-24T23:45Z      2015-10-25T00:45 (BST)\nB      2015-10-25T00:15Z      2015-10-25T01:15 (BST)\nC      2015-10-25T00:45Z      2015-10-25T01:45 (BST)\nD      2015-10-25T01:15Z      2015-10-25T01:15 (GMT)\nE      2015-10-25T01:45Z      2015-10-25T01:45 (GMT)\nF      2015-10-25T02:15Z      2015-10-25T02:15 (GMT)
6079	this.Dispatcher.BeginInvoke(new Action(() => ProgressDialog.ShowDialog()));
6080	Process.Start("cmd.exe", "/c echo \"bla bla\" \n iperf -c 123  ... ... .. ");
6081	var s = "843370923007003347112437570992242323";\n        var result = new List<byte>();\n        result.Add( 0 );\n        foreach ( char c in s )\n        {\n            int val = (int)( c - '0' );\n            for ( int i = 0 ; i < result.Count ; i++ )\n            {\n                int digit = result[i] * 10 + val;\n                result[i] = (byte)( digit & 0x0F );\n                val = digit >> 4;\n            }\n            if ( val != 0 )\n                result.Add( (byte)val );\n        }\n\n        var hex = "";\n        foreach ( byte b in result )\n            hex = "0123456789ABCDEF"[ b ] + hex;
6082	for (int i = 0; i < dataTable.Rows.Count; i++)\n        {\n            DataRow dr = dataTable.Rows[i]; //Where the RowIndex\n            string a = dr[0].ToString();    //Where the ColumnIndex or ColumnName\n        }
6083	void dataGridView1_EditingControlShowing(object sender,\n            DataGridViewEditingControlShowingEventArgs e)\n        {\n            if (e.Control is ComboBox)\n            {\n                ComboBox cmb = e.Control as ComboBox;\n\n                // here you can work on the ComboBox...\n            }\n        }
6084	Assert.AreEqual(user1.UserName, user2.UserName, true, CultureInfo.CurrentCulture);
6085	MyDatabaseService.AspnetDB.SynchronousReturn(\n    context => new FSharpMap<string, FSharpMap<string, string>>(\n        context.aspnet_UsersValues\n            .GroupBy(databaseValue => databaseValue.UserName)\n            .Select(group =>\n                 new Tuple<string, FSharpMap<string, string>>(\n                     group.Key, \n                     new FSharpMap<string, string>(\n                         group.Select(keyValuePair => \n                             new Tuple<string, string>(\n                                 keyValuePair.Key, \n                                 keyValuePair.Value\n                             )\n                         )\n                    )\n                )\n            )\n    )\n)
6086	public class XmlSerializerWrapper:IXmlSerializerWrapper\n  {\n       private XmlSerializer _serializer;\n\n      //implement some methods that you need from XmlSerializer\n  }
6087	int id = 9;\nXDocument xdoc = XDocument.Load(filepath);\nvar student = xdoc.Descendants("student")\n                  .Where(s => (int)s.Element("id") == id)\n                  .SingleOrDefault();\n\nif (student != null)\n{\n    student.Element("first_name").Value = TextBox_firstname.Text;\n    student.Element("last_name").Value = TextBox_lastname.Text;\n    student.Element("DOB").Value = TextBox_dob.Text;\n    student.Element("class").Value = TextBox_class.Text;\n    // etc\n}\n\nxdoc.Save(filepath);
6088	command.CommandType = CommandType.StoredProcedure;
6089	System.Web.HttpUtility.JavaScriptStringEncode(@"aa\bb ""cc"" dd\tee", true);\n== \n"aa\\bb \"cc\" dd\\tee"
6090	new BitmapImage(new Uri("pack://application:,,,/Resources/Images/Output/" \n+ i.ToString() + ".jpg", UriKind.Absolute)));
6091	^(https?://)?((?<subdomain>[^\.]+)\.)?(?<domain>[^\./]+\.[^/]+)/?.*$
6092	var logFile = (string)null;\nusing (var fileStream = new FileStream(logPath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))\n{\n    using (var reader = new StreamReader(fileStream))\n    {\n        logFile = reader.ReadToEnd();\n    }\n}
6093	while (findIndex == -1) {\n        userpass = sr.ReadLine();\n        if (userpass == null) break;\n        findIndex = userpass.IndexOf(txtUserName.Text + " " + txtPassword.Password);\n    }
6094	XmlNode n = xdoc.SelectSingleNode("//FIRSTNODE");    \nConsole.WriteLine(n.OuterXml);
6095	//the #region is simply so that if copied and pasted, the code will make sense, and there will be a label encapsulating the specific code lines. *Note it does not affect the results\n#region add workbook from template file\nExcel.Application f;\n//the following line is written assuming that you would have already made sure that excel was in the Running Objects Table (ROT)\nf=(Excel.Application)Marshal.GetActiveObject("Excel.Application");\nf.visible=true;\nf.Workbooks.Add("C:\\...");\n\if there are any questions please comment, I will do my best to explain my own answer\n#endregion
6096	if (iconButton != null && icons.Count > 0)\n{\n\n\n    int randomNumber = random.Next(0, icons.Count-1);\n    //MessageBox.Show(Convert.ToString(randomNumber));\n    iconButton.Text = icons[randomNumber];\n    //iconButton.ForeColor = iconButton.BackColor;\n    icons.RemoveAt(randomNumber)\n}
6097	public class MyComponent {\n    private AsyncOperation _asyncOperation;\n\n    /// Constructor of my component:\n    MyComponent() {\n        _asyncOperation = AsyncOperationManager.CreateOperation(null);\n    }\n\n    /// <summary>\n    /// Raises an event, ensuring the correct context\n    /// </summary>\n    /// <param name="eventDelegate"></param>\n    /// <param name="args"></param>\n    protected void RaiseEvent(Delegate eventDelegate, object[] args)\n    {\n        if (eventDelegate != null)\n        {\n            _asyncOperation.Post(new System.Threading.SendOrPostCallback(\n                delegate(object argobj)\n                {\n                    eventDelegate.DynamicInvoke(argobj as object[]);\n                }), args);\n        }\n    }\n}
6098	protected void SubmitBtn_Click(object sender, EventArgs e)\n{\n    foreach(ListItem li in CheckBoxList1.items)\n    {\n        if(li.Selected)\n        {\n            //insert to database, the value is in item.Value\n        }\n    }\n}
6099	protected override System.Net.WebRequest GetWebRequest(Uri uri)\n    {\n        System.Net.HttpWebRequest webRequest = (System.Net.HttpWebRequest)base.GetWebRequest(uri);\n        webRequest.KeepAlive = false;\n        return webRequest;\n    }
6100	OdbcCommand com = new OdbcCommand("insert into audio(data) values(?)", con);\nbyte[] stream = File.ReadAllBytes(@textBoxBrowse.Text);\n    MessageBox.Show(stream.ToString());\n    if (stream.Length > 0)\n    {\n        com.Parameters.AddWithValue("voice", stream);\n        con.Open();\n        int result = com.ExecuteNonQuery();\n        if (result > 0)\n            MessageBox.Show("insert done");\n        con.Close();\n    }\n}
6101	this.Form.DefaultButton = Login1.FindControl("LoginButton").UniqueID;
6102	List<Account> MyMethod(List<int> accounts)\n{\n    return dc.Accounts.Where(x => accounts.Contains(x.AccountID))\n                      .ToList();\n}
6103	var qry = from row in dataNode.Elements("row")\n           select row.Elements("v").ElementAt(1);
6104	public class ProtonMySQLException : MySQLException\n{\n    public int protonNumber = 0;\n    public string protonSpecialText = string.Empty;\n}
6105	int received = nws.Read(...);\na.Write(fileBytes, 0, received);
6106	theFile.Seek(0, SeekOrigin.End)
6107	float[,][] Tile = new float[17, 23][];\n Tile[0, 0] = new float[2] { 1, 2 };
6108	string oldString = ds.Tables["Deneme"].Rows[i][j].ToString(); // Old string in addArray.\nstring convertedString = oldString.Replace(".",","); // Replacer for dots.\ndouble convertedDouble = Convert.ToDouble(convertedString); // Convert double now.
6109	using System;\nusing System.Threading;\n\npublic static class Program {\n\n   public static void Main() {\n      // Create a Timer object that knows to call our TimerCallback\n      // method once every 2000 milliseconds.\n      Timer t = new Timer(TimerCallback, null, 0, 2000);\n      // Wait for the user to hit <Enter>\n      Console.ReadLine();\n   }\n\n   private static void TimerCallback(Object o) {\n      // Display the date/time when this method got called.\n      Console.WriteLine("In TimerCallback: " + DateTime.Now);\n      // Force a garbage collection to occur for this demo.\n      GC.Collect();\n   }\n}
6110	Myclass myVariable;
6111	var rowCompare = String.Format("{0}", DateTime.MaxValue.Ticks - DateTime.UtcNow.Ticks);\nvar items = new []{"1", "6", "10"};\n\nvar filters =\n    items.Select(key => TableQuery.GenerateFilterCondition("PartitionKey", QueryComparisons.Equal, key)).ToArray();\n\nvar combine =\n    filters.Length > 0\n        ? filters[0]\n        : null;\n\nfor (var k = 0; k < filters.Length; k++)\n    combine = TableQuery.CombineFilters(combine, TableOperators.Or, filters[k]);\n\nvar final = TableQuery.GenerateFilterCondition("RowKey", QueryComparisons.GreaterThan, rowCompare);\nif (!string.IsNullOrEmpty(combine))\n    final = TableQuery.CombineFilters(final, TableOperators.And, combine);\n\nvar query = new TableQuery<EntityReport>().Where(final);\n\nvar client = CloudStorageAccount.DevelopmentStorageAccount.CreateCloudTableClient();\nvar table = client.GetTableReference("EntityReports");\nvar result = table.ExecuteQuery(query);
6112	var logDatabaseTableAdapter_queryselect = new SQLiteDataAdapter(("SELECT * from         LogDatabase where LogMessage like '%ERR%'"), "data source=C:\\TMU_Files\\test24.s3db");\n    logDatabaseTableAdapter_queryselect.Fill(logDatabaseDataSet_query.LogDatabase);
6113	if (fecVuel == fecha && ((hora >= rightnow - 2) && (hora <= rightnow + 2)))
6114	var result = dbContext.Prices\n    .GroupBy(p => new {p.ItemName, p.ItemTypeName)\n    .Select(g => new Item\n                     {\n                         ItemName = g.Key.ItemName,\n                         ItemTypeName = g.Key.ItemTypeName,\n                         Prices = g.Select(p => new Price \n                                                    {\n                                                        Price = p.Price\n                                                    }\n                                           ).ToList()\n\n                     })\n     .Skip(x)\n     .Take(y)\n     .ToList();
6115	var query = from mt in db.MasterTable\n             let detailResult = db.UfnGetDetail(mt.x, mt.y, z).SingleOrDefault()...
6116	class MyView\n{\n    public void CreateControl(string name)\n    {\n        Control picture = new UserControl1();\n        picture.Visible = true;\n        picture.Name = name;\n        picture.Location = new Point(0, 0);\n        picture.Show();\n        flowLayoutPanel1.Controls.Add(picture);\n\n        this.controls.Add(name, picture);\n    }\n\n    public void SetMsg(string name, msg)\n    {\n        ((UserControl1)this.controls[name]).SetMSG(msg);\n    }\n\n    private Dictionary<string, Control> controls = new Dictionary<string, Control>();\n}
6117	Embedded Resource
6118	ConsoleKeyInfo keyInfo = Console.ReadKey();\nif (keyInfo.Key == ConsoleKey.UpArrow) {\n\n} else if (keyInfo.Key == ConsoleKey.DownArrow) {\n\n} ...
6119	/BigView/View1
6120	private void _backgroundWorkerLoadImage_DoWork(object sender, DoWorkEventArgs e)\n{\n    BitmapImage img = new BitmapImage();\n    img.BeginInit();\n    img.UriSource = imageUri;\n    img.EndInit();\n    img.Freeze();\n    e.Result = img;\n}\n\nvoid _backgroundWorkerLoadImage_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)\n{\n    var img = e.Result as ImageSource;\n    imageControl.Source = img;\n}
6121	void Main()\n{\n    //Your list of objects\n    List<MyObject> TheListOfMyObjects=new List<MyObject>();\n\n    var dt=new DataTable();\n    dt.Columns.Add("Prop1",typeof(int));\n    dt.Columns.Add("Prop2",typeof(string));\n    foreach (var TheObject in TheListOfMyObjects)\n    {\n        dt.Rows.Add(TheObject.Prop1,TheObject.Prop2);\n    }\n    InsertWithBulk(dt,"YourConnnectionString","MyObject");\n}\nprivate void InsertWithBulk(DataTable dt,string connectionString,string tableName)\n{\n    using (SqlConnection destinationConnection =new SqlConnection(connectionString))\n    {\n        destinationConnection.Open();\n        using (SqlBulkCopy bulkCopy = new SqlBulkCopy(destinationConnection))\n        {\n            bulkCopy.DestinationTableName =tableName;\n\n            try\n            {\n                bulkCopy.WriteToServer(dt);\n            }\n            catch (Exception ex)\n            {\n                //Exception from the bulk copy\n            }\n        }\n    }\n}
6122	static MyContext()\n{\n    Database.SetInitializer(new MigrateDatabaseToLatestVersion<MyContext, Data.Migrations.Configuration>());\n}
6123	FtpWebResponse response = (FtpWebResponse)requestFileUpload.GetResponse();\n\nStream myFTPStream = response.GetResponseStream();\n\n//copy data into stream\n\nresponse.Close();
6124	public void Foo(){\n    var storyBoard = this.Resources["RotateImage"] as Storyboard;\n    // Get the storboard's value to get the DoubleAnimation and manipulate it.\n    var rotateImageAnimation = (DoubleAnimation)storyBoard.Children.FirstOrDefault();\n}
6125	var cmd = new SqlCommand(con){\n CommandType = CommandType.StoredProcedure,\nCommandText = "prcfunddetails"\n};\n\n//add the needed parameters to the cmd without the values.\n//note: second parameter DbType SHOULD match type of the underlying db-field\ncmd.Parameters.Add("@action", SqlDbType.VarChar);\n.\n.\n.\n\ntextBox1.Text = "insert"; //I wonder what the effect of "delete" will be :-)\nfor (var i = 0; i<dataGridView1.Rows.Count; i++)\n{\n   //just place the correct values on the parameters\n   cmd.Parameters["@action"].Value = textBox1.Text;\n   cmd.Parameters["@fundid"].Value = dataGridView1.Rows[i].Cells[0].Value;\n   //etc//                 \n   cmd.ExecuteNonQuery();\n}\n//Messagebox out of the loop saves a sweet amount of mouseclicks\nMessageBox.Show("Records successfully");
6126	Properties.Settings.Default.MySetting = myArrayList;
6127	yourButton.TouchUpInside += (object sender, EventArgs e) => \n{\nYourControllerr yourController = new YourController();\n\nyourController.ModalPresentationStyle = UIModalPresentationStyle.FormSheet;\nthis.PresentViewController(yourController, true, null);\n};
6128	grid.Column(columnName: "Date", format: (item) => Html.ActionLink(((string)item.Date), "Edit", new { id = item.id })),
6129	double _avg1 = tmpEMP.Select(x => Convert.ToInt32(x.ElementAt(i).Rating)).Average();
6130	var list = stockItems.Select(item => item.StockID).ToList();
6131	void BTN_Click(object sender, EventArgs e)\n{\n    Button b = sender as Button;\n    if (b!=null)\n    {\n        //that's your button, with the properties created in the loop.\n    }\n}
6132	public List<string> GetAllStringsStartingWith(char startsWith, List<string> allWords)\n    {\n        List<string> letterSpecificWords = allWords.FindAll(word => word.ToLower()[0].Equals(startsWith));\n        return letterSpecificWords;\n    }
6133	Server=.;Initial Catalog=DATABASE_NAME;Integrated Security=False;User Id=sa;Password=;
6134	public PageOf<TEntity> GetPageOfEntity<TEntity>(int pageNumber, int pageSize)\n    where TEntity : Entity\n{\n    Type entityType = typeof(TEntity);\n    ...\n}
6135	public static IEnumerable<object[]> Numbers\n    {\n        get\n        {\n            List<object[]> testCases = new List<object[]>();\n            Random random = new Random();\n            testCases.AddRange(\n                (from x in new[]\n                {1, 2, 3, 4, 5, 6, 7, 8}\n                select new object[] {x})\n                .OrderBy(x=>random.Next()));\n            return testCases;\n        }\n    }\n\n    [TestCaseSource("Numbers")]\n    public void CreateApplication(\n        int number\n        )\n    {\n         string company = DateTime.Now.ToString("dd/MM/yy ") + ("company") + number.ToString();\n\n    }
6136	prog.StartInfo.WorkingDirectory = ...
6137	pin to start
6138	var items = new [] {\n    new { F1 = "ID1", F2 = "ID2", S = "AA", V = 15 },\n    new { F1 = "ID3", F2 = "ID2", S = "AA", V = 20 },\n    new { F1 = "ID1", F2 = "ID4", S = "AA", V = 25 },\n    new { F1 = "ID1", F2 = "ID4", S = "AA", V = 5  },\n    new { F1 = "ID1", F2 = "ID4", S = "AB", V = 5  },\n};\n\nvar f2s = items.Select(i => i.F2).Distinct();\n\nvar table =\n    from i in items\n    group i by new { i.F1, i.S } into g\n    select new \n    { \n        g.Key, \n        V = \n            from f in f2s\n            join x in g on f equals x.F2  into ps \n            from p in ps.DefaultIfEmpty()\n            select new { F = f, V = p != null ? p.V : 0 } into w\n            group w by w.F into h\n            select new { h.Key, V = h.Sum(c => c.V) }\n    };
6139	Add > New File > Empty Class
6140	var smtp = new System.Net.Mail.SmtpClient();\n{\n    MailMessage mail = new MailMessage();\n    mail.From = new MailAddress(sFromEmail);\n    string sFrom = mail.From.ToString();\n\n    mail.Subject = sSubject;\n    mail.Body = sBody;\n    mail.IsBodyHtml = true;\n\n    Attachment sMailAttachment;\n    sMailAttachment = new Attachment("Your file file");\n    mail.Attachments.Add(sMailAttachment);\n\n    smtp.Host = "SMTPP HOST"\n    smtp.Port = "PORT" \n\n    smtp.DeliveryMethod = System.Net.Mail.SmtpDeliveryMethod.Network;\n    smtp.Credentials = new NetworkCredential(sSMTPUserName, sSMTPPassword);\n\n    smtp.Timeout = 30000;\n\n    smtp.Send(mail);  \n  }
6141	&sap-user=****&sap-password=***
6142	DateTime.Now.ToShortDateString();
6143	this.textBox1.Value="=Name";
6144	public static String GetIP()\n{\n    String ip = \n        HttpContext.Current.Request.ServerVariables["HTTP_X_FORWARDED_FOR"];\n\n    if (string.IsNullOrEmpty(ip))\n    {\n        ip = HttpContext.Current.Request.ServerVariables["REMOTE_ADDR"];\n    }\n\n    return ip;\n}
6145	(futureDate - DateTime.Today).TotalDays / 7
6146	this.txtInvestor.DataBindings.Add("Text", this, "SelectedItem", false, DataSourceUpdateMode.OnPropertyChanged);
6147	var items = listOfTest.SelectMany(lt => lt.myInnerObject).ToList();
6148	Image1.ImageUrl = "~/CImage.aspx?random=" + DateTime.Now.Ticks.ToString();
6149	WebRequest request = WebRequest.Create("http://migre.me/13rQa");\nvar response = request.GetResponse();
6150	URI:\n      http://social.yahooapis.com/v1/me/guid
6151	using System.Runtime.InteropServices;\n...\n  [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]\n  public struct Example {\n    [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 1024)]\n    public string name;\n    [MarshalAs(UnmanagedType.ByValArray, SizeConst = 4)]\n    int[] crop;\n  }
6152	public SmartComboBox()\n{\n    base.IsEditable = true;\n    base.IsTextSearchEnabled = false;\n    ...\n}\n\npublic new bool IsEditable { get { return base.IsEditable; } }\npublic new bool IsTextSearchEnabled { get { return base.IsTextSearchEnabled; } }
6153	byte[] rawdata = File.ReadAllBytes("...");\nbyte[] correctedRawdata = rawdata.Skip(2).ToArray();\nEncoding encoder = Encoding.GetEncoding("iso-8859-9");\n\nstring text = encoder.GetString(correctedRawdata);
6154	public ICommand UpdateScannersCommand\n{\n    get\n    {\n       return new RelayCommand(()=>\n{\n... update code here\n}\n}\n}
6155	private void x()\n{\n    string sTestFile = "this is a test";   \n    string[] TestFileWords;\n\n    FixConcatString(sTestFile, out TestFileWords);\n}\n\n\nprivate void FixConcatString(string splayfile, **out** string[] sWordArray)\n{\n    char[] charSeparators = new char[] { '-' };\n    splayfile = splayfile.ToLower();\n    splayfile = splayfile.Replace(@"\", " ");\n\n    sWordArray =  splayfile.Split(charSeparators, StringSplitOptions.RemoveEmptyEntries);\n}
6156	using System.Text;\n\nstring inputString = GetInput();\nvar encoder = ASCIIEncoding.GetEncoder();\nencoder.Fallback = new EncoderReplacementFallback(string.Empty);\n\nbyte[] bAsciiString = encoder.GetBytes(inputString);\n\n// Do something with bytes...\n// can write to a file as is\nFile.WriteAllBytes(FILE_NAME, bAsciiString);\n// or turn back into a "clean" string\nstring cleanString = ASCIIEncoding.GetString(bAsciiString); \n// since the offending bytes have been removed, can use default encoding as well\nAssert.AreEqual(cleanString, Default.GetString(bAsciiString));
6157	.ToArray()
6158	string Something = string.Join(",", MyList);
6159	public static void WriteBackgroundSetting(string currentBackground)\n    {\n        const string fileName = "RecipeHub.txt";\n        using (IsolatedStorageFile myIsolatedStorage = IsolatedStorageFile.GetUserStoreForApplication())\n        {\n            if(myIsolatedStorage.FileExists(fileName))\n                myIsolatedStorage.DeleteFile(fileName);\n            var stream = myIsolatedStorage.CreateFile(fileName);\n            using (StreamWriter isoStream = new StreamWriter(stream))\n            {\n                isoStream.WriteLine(currentBackground);\n            }\n        }\n\n    }
6160	private List<X> Method(string result)\n    {\n        List<X> ret = new List<X>();\n        X temp = new X\n        {\n            Comments = new List<Y>\n            {\n                new Y() { Author = "Author", Body = "Body" }\n            },\n            Key = "issueKey"\n        };\n\n        ret.Add(temp);\n        return ret;\n    }
6161	var departmentId = booking.Item.DepartmentId;\nvar users = from s in db.Users\nwhere s.DepartmentId == departmentId && s.UserEmail != null\nselect s;
6162	protected override void OnPreInit(EventArgs e)\n{\nbase.OnPreInit(e);\n\nvar j = 0;\nforeach (DropDownList control in form1.Controls.OfType<DropDownList>().ToList())\n{\n    var div = new HtmlGenericControl();\n    div.ID = "div" + j;\n    div.TagName = "div";\n    div.Attributes["class"] = "myClass";\n    div.Controls.Add(control); // or control.Controls.Add(div); but this wouldn't wrap it.\n    j++;\n\n    form1.Controls.Add(div);\n}
6163	GetProjectsDataSource.SelectMethod = "GetProjectByUsernameDeptCd";\n Parameter p1 = new Parameter("parameter1 ",TypeCode.String);\n Parameter p2 = new Parameter("parameter2 ",TypeCode.String);\n GetProjectsDataSource.SelectParameters.Add(p1);\n GetProjectsDataSource.SelectParameters.Add(p2);
6164	public IList<T> List<T>() where T : class, IAdminDecimal
6165	if (dayofweektext.Contains("tomorrow"))\n{\n    dayofweektext = DateTime.Today.AddDays(1).DayOfWeek.ToString();\n}
6166	HyperLink hyp = new HyperLink();\n    hyp.ID = "hypABD";\n    hyp.NavigateUrl = "";\n    Page.Controls.Add(hyp);
6167	host.AddServiceEndpoint(\n            typeof(ISMService),\n            new NetTcpBinding(SecurityMode.None),\n            "");
6168	// Log something going on.\nSystem.Threading.ThreadPool.QueueUserWorkItem((args) =>\n{\n   System.Diagnostics.EventLog.WriteEntry("my source", "my logging message");\n});
6169	interface IWrappedEntity<T>\n{\n    T GetWrappedEntity();\n}
6170	const double bucketSize = 15.0;\nvar totalItems = (double)linjer;\nvar optimumBuckets = Math.Ceiling(totalItems / bucketSize);\nvar itemsPerBucket = (int)Math.Ceiling(totalItems / optimumBuckets);\n\nvar buckets = new int[(int)optimumBuckets];\n\nvar itemsLeft = (int)totalItems\nfor (var i = 0; i < buckets.length; i++)\n{\n    if (itemsLeft < itemsPerBucket)\n    {\n        buckets[i] = itemsLeft;\n    }\n    else\n    {\n        buckets[i] = itemsPerBucket;\n    }\n    itemsLeft -= itemsPerBucket;\n}
6171	xmlns:asmv1="urn:schemas-microsoft-com:asm.v1"\n  xmlns:asmv2="urn:schemas-microsoft-com:asm.v2"\n  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n  <assemblyIdentity version="1.0.0.0" name="MyApplication.app" />\n  <trustInfo xmlns="urn:schemas-microsoft-com:asm.v2">\n    <security>\n      <requestedPrivileges xmlns="urn:schemas-microsoft-com:asm.v3">\n        <requestedExecutionLevel level="requireAdministrator"\n      uiAccess="false" />\n      </requestedPrivileges>\n    </security>\n  </trustInfo>\n</asmv1:assembly>
6172	var d = [{"x":"58770"},{"x":"79035"},{"x":"84030"},{"x":"90145"},{"x":"95630"},{"x":"102580"},{"x":"108950"},{"x":"113615"},{"x":"118765"},{"x":"124055"}],\n    dLen = d.length,\n    ret = [];\n\nfor(var i = 0; i < dLen; i++) { \n    ret.push( parseInt(d[i].x, 10));\n}\n\n// ret contains: [58770, 79035, 84030, 90145, 95630, 102580, 108950, 113615, 118765, 124055]
6173	sSrcUrl = "http://www.this-page-intentionally-left-blank.org/"\nsDestFolder = "C:\"\nsImageFile = "filename.txt"\nset oHTTP = WScript.CreateObject("MSXML2.ServerXMLHTTP")\noHTTP.open "GET", sSrcUrl, False\noHTTP.send ""\nset oStream = createobject("adodb.stream")\nConst adTypeBinary = 1\nConst adSaveCreateOverWrite = 2\noStream.type = adTypeBinary\noStream.open\noStream.write oHTTP.responseBody\noStream.savetofile sDestFolder & sImageFile, adSaveCreateOverWrite\nset oStream = nothing\nset oHTTP = nothing\nWScript.Echo "Done..."
6174	String PassWord;\nPassWord = "PASSWORD";\nif (textBox1.Text == PassWord)
6175	/// To modify move field declaration from designer file to code-behind file.
6176	string a = @"C:\xxx\1.png";\nstring b = @"C:\xxx\1.png";\n\nbool blnEqule = a == b;
6177	private void button1_Click(object sender, EventArgs e)\n{\n    Image tempImage;\n    using (var conn = new SqlConnection("myconnectionstring"))\n    {\n        conn.Open();\n        using (\n            var cmd = new SqlCommand("SprocToGetImageBytes", conn) {CommandType = CommandType.StoredProcedure})\n        {\n            using (var rdr = cmd.ExecuteReader())\n            {\n                var buffer = (byte[])rdr[0];\n                using (var ms = new MemoryStream(buffer))\n                {\n                    tempImage = Image.FromStream(ms); //theres your image.\n                    pictureBox1.Image = tempImage;\n                    pictureBox1.Refresh();\n                }\n            }\n        }\n    }\n}
6178	InstanceDestination.SetComponentProperty("OpenRowset", \nDestinationTableNameInternal);        \n\nInstanceDestination.SetComponentProperty("AccessMode", 0);
6179	private void OnCellFormatting(object sender, DataGridViewCellFormattingEventArgs e)\n    {\n        if (e.RowIndex < 0 || e.ColumnIndex < 0) return;\n        DataGridView dgView = (DataGridView)(sender);\n        // no need to add TaskTime...\n        if (e.ColumnIndex != dgView.Columns["TaskDate"].Index) return;\n        string cellValue = e.Value + " " + dgView.CurrentRow.Cells[dgView.Columns["TaskTime"].Value);\n        DateTime dtValue;\n        DateTime.TryParse(cellValue, out dtValue);\n        DateTime dtValueUTC = TimezoneInfo.ConvertTimeToUtc(dtValue, "Eastern Time Zone");\n        e.Value = dtValueUTC.Value.ToLocalTime();\n    }
6180	command.Parameters.Add(\n    new SqlParameter("@ResidualValue", SqlDbType.Money).Value = importExportOptions.ResidualValue;
6181	DTE dte = (DTE).Package.GetGlobalService(typeof(DTE));\nif(dte.Debugger.CurrentStackFrame != null) // Ensure that debugger is running\n{\n    EnvDTE.Expressions locals = dte.Debugger.CurrentStackFrame.Locals;\n    foreach(EnvDTE.Expression local in locals)\n    {\n        EnvDTE.Expressions members = expression.DataMembers;\n        // Do this section recursively, looking down in each expression for \n        // the next set of data members. This will build the tree.\n        // DataMembers is never null, instead just iterating over a 0-length list.\n    }\n}
6182	public static class Constants\n{\n   public static string SomeConstant { get { return "Some value"; } }\n}
6183	Employee emp = EmployeeRepository.GetById("E11234");\nif (emp.IsValid())\n{ \n   do whatever is required \n}\nelse {     \n  // show an error message\n}
6184	foreach (DataGridViewRow row in this.DB.Rows)\n{\n    // Add this to break the loop when row is last blank row\n    if (row.IsNewRow)\n        break;\n\n    foreach (DataGridViewCell cell in row.Cells)\n    {\n        if (cell.Value != null)\n            filewrite.Write(cell.Value.ToString() + " ");\n    }\n    file.WriteLine();\n}
6185	string sType = item.Attachments[i].ContentType.ToLower();
6186	(Windows.UI.Xaml.Window.Current.Content as Frame).Navigate(typeof(FeedBackMessageBox),args);
6187	//Get the row that is selected\nDataGridViewRow dr = selectedRows.Cast<DataGridViewRow>().FirstOrDefault();\n//Your temp DataTable\nDataTable dtTemp = new DataTable();\n//If there is a row selected\nif (dr != null)\n{\n  var rowToRemove = dtTemp.Rows.Cast<DataRow>().FirstOrDefault(row => row[0] == dr.Cells[0].Value);\n  if (rowToRemove != null)\n    dtTemp.Rows.Remove(rowToRemove);\n}
6188	private async void List_OnItemClick(object sender, ItemClickEventArgs e)\n{\n    var item = (ItemViewModel) e.ClickedItem;\n    var stream = await item.File.OpenAsync(FileAccessMode.Read);        \n    Media.SetSource(stream, item.File.ContentType);\n}
6189	command.Prepare()
6190	SortedDictionary<string, string> Dates = new SortedDictionary<string, string>();\nDates.Add("1", "10/06/2015WD 2  ");\nDates.Add("2", "10/07/2015HD 1");\nDates.Add("3", "10/08/2015WD 2 ");\nfor(int i = 0; i < Dates.Count; i++)\n {\n   string Key = Dates.ElementAt(i).Key;\n   string CurrentValue = Dates.ElementAt(i).Value.Trim();\n   string CurrentValueLastChar = CurrentValue.Substring(CurrentValue.Length - 1, 1);\n   if (i - 1 != -1 && i + 1 < Dates.Count)\n    {\n      string PreviousValue = Dates.ElementAt(i - 1).Value.Trim();\n      string NextValue = Dates.ElementAt(i + 1).Value.Trim();\n      string PreviousValueLastChar = PreviousValue.Substring(PreviousValue.Length - 1, 1);\n      string NextValueLastChar = NextValue.Substring(NextValue.Length - 1, 1);\n      if (PreviousValueLastChar == NextValueLastChar)\n           Dates[Key] = (Dates[Key].Remove(Dates[Key].Length - 1)) + PreviousValueLastChar;\n\n    }                \n\n }
6191	Settings1.Default.Value1 = "11";\nSettings1.Default.Save();\n\nSettings2.Default.Value1 = "22";\nSettings2.Default.Save();
6192	if(File.Exists(yourFilePathHere))
6193	[DataContract]\n   public class Unicorn {   \n\n    [DataMember (EmitDefaultValue=false)] \n    public string Id { get; set; }     \n\n    [DataMember (EmitDefaultValue=false)] \n    public string Color { get; set; }     \n\n    [DataMember (EmitDefaultValue=false)] \n    public int? Size { get; set; }     \n\n    [DataMember (EmitDefaultValue=false)] \n    public DateTime? BirthDate { get; set; } \n}
6194	public static class TimerExtensions\n {\n     public static MyTimerExtension(this Timer timer)\n     {\n         // use timer here just as any method parameter\n     }\n }\n\n //usage\n\n timer1.MyTimerExtension();
6195	checkBox.DataContext
6196	for (int i = 0; i < image.rows; i++)\n{\n    for(int j=0; j< image.cols; j++)\n    {   \n        int b = image.at<cv::Vec3b>(i,j)[0];\n        int g = image.at<cv::Vec3b>(i,j)[1];\n        int r = image.at<cv::Vec3b>(i,j)[2];\n    }\n// add your comparison here. Dun wanna do your work for u.\n}
6197	var md = new MessageDialog (\n            null,\n            DialogFlags.DestroyWithParent,\n            MessageType.Info,\n            ButtonsType.OkCancel,\n            "Your message");\n\nmd.Response += (o, args) => {\n    if (args.ResponseId == ResponseType.Ok) {\n        // do your stuff with the object\n    }\n};\n\nmd.Run ();\nmd.Destroy ();
6198	public sealed class PresentOrFutureDateAttribute: ValidationAttribute\n        {\n            protected override ValidationResult IsValid(object value, ValidationContext validationContext)\n            {                 \n                // your validation logic\n                if (Convert.ToDateTime(value) >= DateTime.Today)\n                {\n                    return ValidationResult.Success;\n                }\n                else\n                {\n                    return new ValidationResult("Past date not allowed.");\n                }\n            }\n        }
6199	CompanyName.ProductName\nCompanyName.ProductName.ClassName\nCompanyName.ClassName.IsUpperCase(string str)
6200	input.GroupBy(x => x).OrderByDescending(x => x.Count()).Select(x => x.Key).ToArray();
6201	PropertyInfo piInstance = typeof(IGWUIElement).GetProperty("property_name");\npiInstance.SetValue(newUIElement, value, null);
6202	public class DateConverter : IValueConverter\n{\n    ...\n}
6203	string sqlCom = String.Format(@"SELECT [Version],version2 FROM ConfigSystem");\n        SqlConnectionStringBuilder ConnectionString = new SqlConnectionStringBuilder();\n        ConnectionString.DataSource = SQL06;\n        ConnectionString.InitialCatalog = "SuperSweetdb";\n        ConnectionString.IntegratedSecurity = true;\n\n        SqlConnection cnn = new SqlConnection(ConnectionString.ToString());\n\n        using (var version = new SqlCommand(sqlCom, cnn))\n        {           \n            cnn.Open();\n\n            using(IDataReader dataReader = version.ExecuteReader()) \n            {\n                while (dataReader.Read())\n                {\n                    label7.Text = dataReader["Version"].ToString();\n                    label9.Text = dataReader["VertexDataVersion"].ToString();\n                }\n            }\n\n        };
6204	request.Headers["mycustomheader"] = "abc";
6205	using (SqlConnection conn = new SqlConnection(connection))\n{\n    DataSet dataset = new DataSet();\n    SqlDataAdapter adapter = new SqlDataAdapter();\n    adapter.SelectCommand = new SqlCommand("YourStoredProcedure", conn);\n    adapter.SelectCommand.CommandType = CommandType.StoredProcedure;\n    adapter.Fill(dataset);\n    return dataset;\n}
6206	public static class HWND {\n  public static readonly IntPtr\n  NOTOPMOST = new IntPtr(-2),\n  BROADCAST = new IntPtr(0xffff),\n  TOPMOST = new IntPtr(-1),\n  TOP = new IntPtr(0),\n  BOTTOM = new IntPtr(1);\n}\n\npublic static class SWP {\n  public static readonly int\n  NOSIZE = 0x0001,\n  NOMOVE = 0x0002,\n  NOZORDER = 0x0004,\n  NOREDRAW = 0x0008,\n  NOACTIVATE = 0x0010,\n  DRAWFRAME = 0x0020,\n  FRAMECHANGED = 0x0020,\n  SHOWWINDOW = 0x0040,\n  HIDEWINDOW = 0x0080,\n  NOCOPYBITS = 0x0100,\n  NOOWNERZORDER = 0x0200,\n  NOREPOSITION = 0x0200,\n  NOSENDCHANGING = 0x0400,\n  DEFERERASE = 0x2000,\n  ASYNCWINDOWPOS = 0x4000;\n}\n\n[DllImport("user32.dll")]\npublic static extern bool SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int X, int Y, int cx, int cy, int uFlags);\n\nprivate void button1_Click(object sender, EventArgs e) {\n  RunnerForm frm = new RunnerForm();\n  SetWindowPos(frm.Handle, HWND.BOTTOM, 0, 0, 0, 0, SWP.SHOWWINDOW | SWP.NOMOVE | SWP.NOOWNERZORDER | SWP.NOSIZE | SWP.NOACTIVATE);\n}
6207	Cookie: ASPSESSIONIDASDCDQBE=IOMFMDMCOBNECLCLEAIFJPEK; ASPSESSIONIDASCDBRAD=AAEFMDMCKLOAMDIAJPGNNNDG\n\nCookie: ASPSESSIONIDASDCDQBE=IOMFMDMCOBNECLCLEAIFJPEL; ASPSESSIONIDASCDBRAD=AAEFMDMCKLOAMDIAJPGNNNDH
6208	Templates -> Visual C# -> Windows Phone
6209	// clear the tile to be redrawn\nint x2 = xToUpdate * Program.pixelSize;\nint y2 = yToUpdate * Program.pixelSize;\n\nfor (int a = x2; a <= x2 + Program.pixelSize - 1; a++)\n{\n    for (int b = y2; b <= y2 + Program.pixelSize - 1; b++)\n    {\n        mapBitmapFringe.SetPixel(a, b, Color.Transparent);\n    }\n }
6210	var passwords = document.XPathSelectElements("//key[text()='Password']/following-sibling::string[1]");\nforeach(XNode elem in passwords)\n{\n  elem.SetValue(string.Empty);\n}
6211	using(var connection = new SqlConnection(myConnectionString))\nusing(var adapter = new SqlDataAdapter(mySelectQuery, connection))\n{\n   var table = new DataTable();\n   adapter.Fill(table);\n   this.dataGridView.DataSource = table;\n}
6212	e.Handled = e.SuppressKeyPress = true;
6213	listOfStrings.Where(s => s.Contains('?'));
6214	public class A\n{\n    public void MyMethod(int integer, string str)\n    {\n    }\n}\n\nvoid Main()\n{\n    System.Reflection.MethodInfo method = typeof(A).GetMethod("MyMethod");\n    ParameterInfo[] pars = method.GetParameters();\n    foreach (ParameterInfo p in pars) \n    {\n        Console.WriteLine(p.Name + ": " + p.ParameterType);\n    }\n}
6215	static void RunThreads(int totalThreads, int throttle) \n{\n    Observable\n        .Range(0, totalThreads)\n        .Select(n => Observable.FromAsync(() => DoSomething(n)))\n        .Merge(throttle)\n        .Wait();\n}
6216	private void Form1_Load(object sender, EventArgs e)\n{\n    webBrowser1.Navigated += new WebBrowserNavigatedEventHandler(webBrowser1_Navigated);\n    webBrowser1.Navigate("http://stackoverflow.com/questions/9712699/read-website-information-display-application");    \n}\n\n\nprivate void webBrowser1_Navigated(object sender, WebBrowserNavigatedEventArgs e)\n{\n\n    foreach (HtmlElement ele in webBrowser1.Document.GetElementsByTagName("SPAN"))\n    {\n        if (ele.GetAttribute("title") == "reputation score")\n        {  \n            MessageBox.Show(ele.Parent.Children[0].InnerText + " - "+ ele.InnerHtml);\n        }\n    }\n}
6217	private Byte[] CryptoKey\n{\n    get { return new Byte[] { 0x0E, 0x41, 0x6A, 0x29, 0x94, 0x12, 0xEB, 0x63 }; }\n}\n\npublic Byte[] Encrypt(Byte[] bytes)\n{\n    using (var crypto = new DESCryptoServiceProvider())\n    {\n        var key = CryptoKey;\n\n        using (var encryptor = crypto.CreateEncryptor(key, key))\n        {\n            return encryptor.TransformFinalBlock(bytes, 0, bytes.Length);\n        }\n    }\n}\n\npublic Byte[] Decrypt(Byte[] bytes)\n{\n    using (var crypto = new DESCryptoServiceProvider())\n    {\n        var key = CryptoKey;\n\n        using (var decryptor = crypto.CreateDecryptor(key, key))\n        {\n            return decryptor.TransformFinalBlock(bytes, 0, bytes.Length);\n        }\n    }\n}
6218	foreach (DataGridViewRow var in dataGridView1.Rows)\n{\n    var.Cells[3].Value = true;\n}
6219	if(tired)\n    Sleep();\nelse\n    Party()
6220	chart1.ChartAreas[0].AxisX.IsMarginVisible = false;
6221	[Injection]
6222	DataSet ds = new DataSet("ITEMS");
6223	^(?!.*?(https?://)?([\da-z.-]+)\.([a-z.]{2,6})([/\w .-]*)*/?).*$
6224	public class SomeClass\n{\n    public BsonObjectId Id { get; set; }\n\n    [BsonElement("dt")]\n    public DateTime SomeReallyLongDateTimePropertyName { get; set; }\n}
6225	StreamReader myReader = null;
6226	GraphicsDevice.Clear(Color.TransparentBlack);
6227	class Reference<T>\n{\n    public T Value {get; set;}\n}
6228	routes.MapRoute(\n  name: "Uno",\n  url: "Uno/{action}/{id}",\n  defaults: new { controller = "Uno", action = "IndexHoopls", id = "17" }\nroutes.MapRoute(\n  name: "Default",\n  url: "{controller}/{action}/{id}",\n  defaults: new { controller = "Home", action = "Index", id = "17" }
6229	public static string Version\n    {\n        get\n        {\n            Assembly asm = Assembly.GetExecutingAssembly();\n            FileVersionInfo fvi = FileVersionInfo.GetVersionInfo(asm.Location);\n            return String.Format("{0}.{1}", fvi.ProductMajorPart, fvi.ProductMinorPart);\n        }\n    }
6230	//[snip]\nelse if (phoneDigits.ToString().Length > 10)\n        {\n            return String.Format("{0:(###) ###-#### x}{1}", phoneDigits.Substring(0,10), phoneDigits.Substring(10) );\n        }\n//[snip]
6231	private void button1_Click(object sender, EventArgs e)\n    {\n        backgroundWorker1.RunWorkerAsync(richTextBox1.Text);\n\n    }\n\n    private void backgroundWorker1_DoWork(object sender, DoWorkEventArgs e)\n    {\n        string text = (string)e.Argument;\n        MessageBox.Show(text);\n\n    }
6232	public int Id { get; set; }
6233	public clas MyClass1 : IClassProcessor
6234	var root = new DirectoryEntry("WinNT:");\nforeach (var dom in root.Children) {\n    foreach (var entry in dom.Children) {\n        if (entry.Name != "Schema") {\n            Console.WriteLine(entry.Name);\n        }\n    }\n}
6235	GridView1.Caption = "StackOverFlow Grid...";
6236	References = (g.SelectMany(entry => entry.References).Count() == 0)\n   ? g.SelectMany(entry => entry.References).OrderBy(t => t).ToList() : null;
6237	mapping.HasMany(x => x.PropName)\n    .Table("Linktable")\n    .AsEntityMap("SomeOtherEntity_id")\n    .Element("PcmStream_id", e => e.Type<MyUserType>());
6238	var output = Regex.Replace(input, @"\$\$.+?\$\$", m => m.Value.ToLower());
6239	public class TournamentMain\n{\n    public int ID { get; set; }\n    public string name { get; set; }\n    public double buy_in { get; set; }\n    public double re_buy { get; set; }\n    public double add_on { get; set; }\n    public int blindindex { get; set; }\n    public int placeindex { get; set; }\n    public int playerindex { get; set; }\n    public ObservableCollection<Blind> blinds { get; set; }\n    public ObservableCollection<Player> players { get; set; }\n    public ObservableCollection<Place> places { get; set; }\n    public ObservableCollection<Paidplace> paidplaces {get; set;} \n\n    public TournamentMain() \n    {\n        ID = 0;\n        blindindex = 1;\n        placeindex = 1;\n        playerindex = 1;\n        players = new ObservableCollection<Player>();\n        places = new ObservableCollection<Place>();\n        blinds = new ObservableCollection<Blind>();\n        paidplaces = new ObservableCollection<Paidplace>();\n   }
6240	foreach(Control control in this.Controls)\n{\n    //here 'this' is representing the form you want to iterate through\n\n    //you can check whether it is a combobox or a text box\n    if(control.GetType() == typeof(Combobox))\n    {\n        //this is a combo box\n    }\n    else if(control.GetType() == typeof(Textbox))\n    {\n        //this is a text box\n    }\n}
6241	public static List<TResult> GetSingleColumn<T, TResult>(\n   Expression<Func<T, bool>> predicate,\n   Expression<Func<T, TResult>> select) where T : class\n  {\n   using (var db = GetData())\n   {\n    var q = db.GetTable<T>().AsQueryable();\n    if (predicate != null)\n     q = q.Where(predicate).AsQueryable();\n    var q2 = q.Select(select);\n    return q2.ToList();\n   }\n  }
6242	SqlCommand command = new SqlCommand("yourStoredProcedureName", conn);\ncommand.ExecuteNonQuery();\n...
6243	{\n    bool AFunction(ref int x, params object[] list)\n    {\n        /* Some Body */\n    }\n\n    public delegate bool Proc(ref int x, params object[] list);  // Declare the type of the "function pointer" (in C terms)\n\n    public Proc my_proc;  // Actually make a reference to a function.\n\n    my_proc = AFunction;         // Assign my_proc to reference your function.\n    my_proc(ref index, a, b, c); // Actually call it.\n}
6244	private void MainForm_Resize(object sender, EventArgs e)\n    {\n        switch (this.WindowState)\n        {\n            case FormWindowState.Maximized:\n                this.ShowInTaskbar = true;\n                break;\n            case FormWindowState.Minimized:\n                this.ShowInTaskbar = false;\n                break;\n            case FormWindowState.Normal:\n                this.ShowInTaskbar = true;\n                break;\n            default:\n                break;\n        }\n    }
6245	objects.Aggregate(\n    new {\n        MinA = int.MaxValue,\n        MaxB = string.Empty\n    },\n    (accumulator, o) => new {\n        MinA = Math.Min(o.A, accumulator.MinA),\n        MaxB = o.B > accumulator.MaxB ? o.B : accumulator.MaxB\n    });
6246	string value = ... // value from config file.\nbyte[] key = value.Split(new[] {','}).Select(s => Convert.ToByte(s, 16))\n                                     .ToArray();
6247	public class Project{\n    public string id{get;set;} \n    public string wetterdatei{get;set;}\n    public string fruchtfolge {get;set;} \n    public string bodenprofil {get;set;} \n}\n\n\npublic static Project leseProjektDatei(){\nProject projekt = new Project();\nwhile ((zeile = datei.ReadLine()) != null)\n       {\n           projekt.id = zeile.Substring(0, 5);\n           projekt.wetterdatei = zeile.Substring(7, 14);\n           projekt.fruchtfolge = zeile.Substring(22, 14);\n           projekt.bodenprofil = zeile.Substring(37, 14);\n\n             } \nreturn projekt;\n}
6248	namespace ClassLibrary\n{\n    public class Utility\n    {\n        public static string ReadData()\n        {\n            return "abc";\n        }\n    }\n}\n\nnamespace Win_App\n{\n    public partial class Form1 : Form\n    {\n       private void button2_Click(object sender, EventArgs e)\n       {\n            if (ClassLibrary.Utility.ReadData() == null)\n            {\n                MessageBox.Show("error, redo");\n                button2.Focus(); //you should handle this here.\n                return;\n            }\n        }\n    }\n}
6249	//Initialize with a regular string literal.\nstring oldPath = "c:\\Program Files\\Microsoft Visual Studio 8.0";\n\n// Initialize with a verbatim string literal.\nstring newPath = @"c:\Program Files\Microsoft Visual Studio 9.0";\n                 ???
6250	Public Sub New()\n        Dim spi As ServiceProcessInstaller = New ServiceProcessInstaller\n    Dim si As ServiceInstaller = new ServiceInstaller\n\n    spi.Account = ServiceAccount.LocalSystem\n\n        si.StartType = ServiceStartMode.Manual\n        si.ServiceName = "Service1"\n\n        Installers.Add(si)\n        Installers.Add(spi)\n\n    End Sub
6251	TextWriter textWriter = new StreamWriter(@"Serialized.xml");\n        XmlSerializer serializer = new XmlSerializer(_pointList[0].GetType());\n        for (int i = 0; i < ListSize; i++)\n        {                \n            serializer.Serialize(textWriter, _pointList[i]);\n        }
6252	using (var connection = new SqlConnection(connectionString))\n        using (var command = new SqlCommand(queryString, connection))\n        {\n            command.Connection.Open();\n            command.ExecuteNonQuery();\n        }
6253	FileInfo f = new FileInfo(@"C:\Users\Ryan\Documents\myImage.jpg");\nstring result = Path.Combine(f.Directory.Name, f.Name);
6254	for (int i = 1; i < 5; i++)\n{\n    double[] newVector = RotateVector2d(points[i - 1, 0], points[i - 1, 1], 2.0*Math.PI/5);   // degrees in rad !\n    points[i, 0] = newVector[0];\n    points[i, 1] = newVector[1];\n    Debug.WriteLine(newVector[0] + " " + newVector[1]);\n}
6255	void Main()\n{\n   Student student = new Student();\n   FillStudentUnformation(student);\n   Console.WriteLine(student.Name); // Here you will not get name\n   FillStudentUnformationRef(ref student);\n   Console.WriteLine(student.Name);    // you will see name you have set inside method.\n}\n\nvodi FillStudentUnformation(Student student)\n{\n   //If here if you do \n   student = new Student(); \n   student.Name = "test"; // This will not reflect outside.\n}\n\nvodi FillStudentUnformationRef(ref Student student)\n{\n   //If here if you do \n   student = new Student(); \n   student.Name = "test ref"; // This will not reflect outside.\n}
6256	const void *data = &myFloat;\nsize_t size = sizeof myFloat;
6257	foreach (Form frm in this.MdiChildren)\n{\n        if (frm.GetType() == typeof(Can_ListCandidate))\n        {\n            frm.Dispose();\n            //return;\n        }\n}
6258	var input = "bla bla bla bla  <I NEED THIS TEXT> ";\n\nvar match = Regex.Match(input, @".*?<(?<MyGroup>.*?)>");\nif (match.Success)\n    var text = match.Groups["MyGroup"].Value;
6259	parentWindow.grid.Children.Remove(parentWindow.canvas);\n            parentWindow.canvas = (Canvas)System.Windows.Markup.XamlReader.Load(xmlReader);\n            parentWindow.grid.Children.Add(parentWindow.canvas);
6260	messagelb.Content = "Generating file...";
6261	toast.SuppressPopup = true;\nToastNotificationManager.CreateToastNotifier().Show(toast);
6262	DataGridView myGridView = new DataGridView();\nDataView myDataView = myTable.DefaultView;\nmyGridView.DataSource = myDataView; // DataView that allows row filtering\n\nmyDataView.RowFilter = string.Format("thisColumn <> '{0}'",match);  // this will hide all rows where "thisColumn" = match
6263	public ActionResult getTransactionTotals(int itemID)\n    {\n        DBEntities db = new DBEntities();\n\n        var query = (from trans in db.Transactions\n                    // Linq query removed for brevity\n                        into selection\n                        select new TransactionAmount\n                        {\n                            name = selection.Key,\n                            amount = selection.Select(t => t.TransactionId).Distinct().Count()\n                        }).ToDictionary(k => k.name, v => v.amount);\n\n\n\n        return Json(query,JsonRequestBehavior.AllowGet);\n    }
6264	public partial class BaseControl : UserControl\n{\n    private int _defaultWidth;\n    private int _defaultHeight;\n\n    public BaseControl()\n    {\n        InitializeComponent();\n\n        _defaultWidth = this.Width;\n        _defaultHeight = this.Height;\n    }        \n\n    protected override void SetBoundsCore(int x, int y, int width, int height, BoundsSpecified specified)\n    {\n        if (this.DesignMode)\n        {\n            width = _defaultWidth;\n            height = _defaultHeight;\n        }\n\n        base.SetBoundsCore(x, y, width, height, specified);\n    }\n}
6265	int GetIntFromConfigSetting(string settingName, int defaultValue)\n{\n   int retValue = defaultValue;\n   if(this.ContainsKey(settingName))\n   {\n      int sleepInterval;\n      if(Int32.TryParse(this[settingName], out sleepInterval)\n      {\n         retValue = sleepInterval;\n      }\n   }\n   return retValue;\n}
6266	var missing = from i in Enumerable.Range(strs.Min(),strs.Max())\n              where !strs.Contains(i)\n              select i;
6267	string text ="FW: Order Contract - 11009972; Customer - 5424 - TOYOTA CO; AE ID - 160SB Completed";\nRegex myRegex = new Regex(@"Contract - (\d+); Customer - (\d+)");\nvar match = myRegex.Match(text);\n// match.Groups[1].Value is the ContractId\n// match.Groups[2].Value is the CustomerID
6268	WebRequest.Method = "HEAD"
6269	private void button1_Click(object sender, EventArgs e) {\n  var helpInfo = new StringBuilder();\n  helpInfo.AppendLine("This is line one.");\n  helpInfo.AppendLine("This is line two.");\n  var textHelp = new TextBox() { Multiline = true,\n                                 ReadOnly = true,\n                                 Text = helpInfo.ToString(),\n                                 MinimumSize = new Size(100, 100)\n                                };\n  var toolHost = new ToolStripControlHost(textHelp);\n  toolHost.Margin = new Padding(0);\n  var toolDrop = new ToolStripDropDown();\n  toolDrop.Padding = new Padding(0);\n  toolDrop.Items.Add(toolHost);\n  toolDrop.Show(button1, button1.Width, 0);\n}
6270	lvSerialCode.Items.Clear();
6271	IDictionary<String,Ivaluable[]> Sub=New Dictionary<String, Ivaluable[]>;\nIvaluable[] Sub1=new valueableObject[2]; // 2 is just an example\nSub.Add("whatever",Sub1);
6272	var scopedLifestyle = new LifetimeScopeLifestyle();\n\ncontainer.Register<ISomeType, SomeType>(scopedLifestyle);\n\nusing (container.BeginLifetimeScope())\n{\n    var some = container.GetInstance<SomeRootObjectDependingOnSomeType>();\n    some.Execute();\n}
6273	InputLanguage.CurrentInputLanguage = InputLanguage.FromCulture(new System.Globalization.CultureInfo("ja-JP"));
6274	Doc doc = new Doc();\ndoc.Read(Server.MapPath("../mypics/sample.pdf"));\nusing (ReduceSizeOperation op = new ReduceSizeOperation(doc)) {\nop.UnembedSimpleFonts = false; // though of course making these true...\nop.UnembedComplexFonts = false; // ... would further reduce file size.\nop.MonochromeImageDpi = 72;\nop.GrayImageDpi = 72;\nop.ColorImageDpi = 144;\nop.Compact(true);\n}\ndoc.Save(Server.MapPath("ReduceSizeOperation.pdf"));
6275	// finds the successor of node\nprocedure successor(node) \n{\n    // assuming you have the node for the id that you know.\n    // also I'm assuming you have some way to find its position \n    // in the child list\n\n    // if the parent has a child to the right\n    if(parent(node).children[position(node) + 1] != null)\n    {\n        return findLeftmost(parent(node).children[position(node) + 1]);\n        // find the leftmost node in the subtree rooted \n        // at the next sibling to the  right\n    }\n    else\n    {\n        return successor(parent(node));\n        // move up the tree\n    }\n}\n\n\n// finds the leftmost leaf node of the (sub)tree rooted at node\nprocedure findLeftmost(node)\n{\n    if(node.children.length == 0) // leaf node\n    {\n        return node;\n    }\n    else\n    {\n        return findLeftmost(node.children[0]); \n        // here I'm assuming the children are in the list from left to right, \n        // such that children[0] is the leftmost child.\n    }\n}
6276	Using System.Runtime.InteropServices;  \n\n....\n\npublic class NativeMethods\n{\n\n    [DllImport("kernel32")]\n    public static extern void Sleep(uint dwMilliseconds);\n}
6277	XDocument.Parse
6278	var intersection = dictionary1\n.Where(kvp1 => \n   dictionary2.ContainsKey(kvp1.Key) \n   && dictionary2[kvp1.Key].classid = kvp1.Value.classid)\n.ToDictionary(kvp => kvp.Key, kvp => kvp.Value);
6279	try\n            {\n                pcontext.SaveChanges();\n            }\n            catch (System.Data.Entity.Core.UpdateException e)\n            {\n\n            }\n\n            catch (System.Data.Entity.Infrastructure.DbUpdateException ex) //DbContext\n            {\n                Console.WriteLine(ex.InnerException);\n            }\n\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.InnerException);\n                throw;\n            }
6280	ResourceFileName.ResourceName
6281	var ordered = countries.OrderBy(x => x.Length);\nvar min = ordered.First();\nvar max = ordered.Last();\n\n//"The shortest country name is UK, it has 2 characters in its name"\nConsole.WriteLine("The shortest country name is {0}, it has {1} characters in its name",\n    min, min.Length);\n\n//"The longest country name is India, it has 5 characters in its name"\nConsole.WriteLine("The longest country name is {0}, it has {1} characters in its name",\n    max, max.Length);
6282	public abstract class CommonUIControls {\n    public static Button nextButton = null;\n}\n\npublic sealed partial class MainPage : Page\n{\n    public MainPage()\n    {\n        this.InitializeComponent();\n        CommonUIControls.nextButton = nextButton;\n    }\n}
6283	playBin.VideoSink.SetLockedState(true);\nplayBin.SetState(Gst.State.Ready);\nplayBin.Uri = @"file:///" + newFileName.Replace('\\', '/');\nplayBin.SetState(Gst.State.Paused);\nplayBin.VideoSink.SetLockedState(false);
6284	Microsoft.Office.Interop.Excel.Range cell //it points to address A1\nobject obj=cell.Formula;
6285	Stream exportData = new MemoryStream(byte[] fileBuffer);
6286	PropertyInfo p = typeof(HttpRuntime).GetProperty("FileChangesMonitor", \n                BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Static); \n\n            object o = p.GetValue(null, null); \n\n            FieldInfo f = o.GetType().GetField("_dirMonSubdirs", \n                BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.IgnoreCase); \n\n            object monitor = f.GetValue(o); \n\n            MethodInfo m = monitor.GetType().GetMethod("StopMonitoring", \n                BindingFlags.Instance | BindingFlags.NonPublic); \n\n            m.Invoke(monitor, new object[] { });
6287	ProcessStartInfo info = new ProcessStartInfo("[path to your file]");\ninfo.Verb = "PrintTo";\ninfo.Arguments = "\"[printer name]\"";\ninfo.CreateNoWindow = true;\ninfo.WindowStyle = ProcessWindowStyle.Hidden;\nProcess.Start(info);
6288	Assembly.GetExecutingAssembly()
6289	if (retries < 3)\n{\n    Thread.Sleep(1000 * retries);\n    return UploadInvoice(filename);\n}
6290	splitArray = Regex.Split(subject, \n    @"\t        # Match a tab\n    (?=         # if the following regex matches after it:\n     (?:        # Match...\n      [^""]*""  # Any number of non-quotes, followed by a quote\n      [^""]*""  # ditto, to ensure an even number of quotes\n     )*         # Repeat as many times as needed\n     [^""]*     # Then match any remaining non-quote characters\n     $          # until the end of the string.\n    )           # End of lookahead assertion", \n    RegexOptions.IgnorePatternWhitespace);
6291	?sort=yourdatefield:desc
6292	public class ThreadSafeList\n{\n    private List<Quiz> list = new List<Quiz>();\n    private object locker = new object();\n\n    private static ThreadSafeList instance = new ThreadSafeList();\n\n    private ThreadSafeList() { }\n\n    public static GetInstance()\n    {\n        return instance;\n    }\n\n    public void Add(Quiz q)\n    {\n        lock(locker) list.Add(q);\n    }\n\n    // whatever else you need to synchronize\n}
6293	Public Sub TestCall(ByVal someAorBorC as A)\n    Convert.ChangeType(someAorBorC, someAorBorC.GetType()).Method()\nEnd Sub
6294	var AtoDelete= context.As.Include(a => a.Bs) .First(); //include is mandatory\ncontext.As.Remove(AtoDelete);\ncontext.SaveChanges();//deletes will be issued to AandB table also.
6295	CultureInfo enGB = new CultureInfo("en-GB"); \nstring dateString;\nDateTime dateValue;\n\n// Parse date with no style flags.\ndateString = "26/01/2011 00:14:00";\nDateTime.TryParseExact(dateString, "g", enGB, DateTimeStyles.None, out dateValue);
6296	public void RemoveLast()\n    {\n        STACKnode current = head, last;\n\n        if (head == null) return;\n        if (head.next == null){\n            head = null;\n            return;\n        }\n\n        while (current.next != null)\n        {\n            last = current;\n            current = current.next;\n        }\n        last.next = null;\n    }
6297	create a list of numbers\noutput prompt\nread input line\n\nwhile the input line had a value\n  parse the input value\n  add the parsed value to the list of numbers\n  output prompt\n  read input line\n\ncalculate the sum of the values divided by the length of the list\noutput the calculated average
6298	dt.Columns.Add(attr.DisplayName, pi.PropertyType);
6299	Android.App.ActionBar
6300	PROPFIND /yourfolder HTTP/1.1\nContent-Type: application/xml\n\n<?xml version="1.0"?>\n<propfind xmlns="DAV:">\n   <prop>\n      <resourcetype />\n   </prop>\n</propfind>
6301	private void listBox1_MouseDown(object sender, MouseEventArgs e) {\n        if (e.Button == MouseButtons.Right) {\n            var idx = listBox1.IndexFromPoint(e.Location);\n            if (idx >= 0 && listBox1.GetItemRectangle(idx).Contains(e.Location)) {\n                listBox1.SelectedIndex = idx;\n                contextMenuStrip1.Show(listBox1, e.Location);\n            }\n        }\n    }
6302	public string GetText(string text, string tag1, string tag2)\n    {\n        return Regex.Match(text, String.Format(":{0}[^:]?:(?<text>(\n|.)*):{1}[^:]?:", tag1, tag2)).Groups["text"].Value;\n    }
6303	Application.ExitThread();
6304	string currentUserId = User.Identity.GetUserId();\nApplicationUser currentUser = db.Users.FirstOrDefault(x => x.Id == currentUserId);
6305	List<Card> shuffledDeck = new List<Card> ();\n\n   while (myDeck.Count > 0)\n   {\n      int c = myDeck.Count;\n\n      int n = rNumber.Next (0, c);\n      var value = myDeck[n];\n      shuffledDeck.Add(value);\n      myDeck.Remove(value);\n\n   }
6306	public static string GetCanvasRedirectHtml(string url)\n        {\n            var fbApp = new FacebookApp();\n\n            string authUrl = string.Format("http://www.facebook.com/dialog/oauth?client_id={0}&redirect_uri={1}&scope={2}", fbApp.AppId, url, requiredAppPermissions);\n\n            if (string.IsNullOrEmpty(url))\n            {\n                throw new ArgumentNullException("url");\n            }\n\n            return "<html><head>" +\n                   "<script type=\"text/javascript\">\n" +\n                    "top.location = \"" + authUrl + "\";\n" +\n                    "</script>" +\n                   "</head><body></body></html>";\n        }
6307	routeTemplate: "api/{controller}/{action}/{id}",
6308	var command = new OracleCommand(connection);\n  command.CommandText = "NameOfUser.NameOfPackage.NameOfStoredProcedure";
6309	Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\BaseDeDatos.mdf;Integrated Security=True;User Instance=True
6310	var js = new JavaScriptSerializer();\ndynamic dynObj =  js.DeserializeObject(jsonN);\nforeach (var obj in dynObj)\n{\n    if (obj.ContainsKey("name")) Console.WriteLine(obj["name"]);\n    else Console.WriteLine(obj["message"]);\n}
6311	if (!MyTextBox.Dispatcher.CheckAccess())\n{\n    MyTextBox.Dispatcher.Invoke(() => { MyTextBox.Text = myReceivedMessage.ToString(); });\n}\nelse\n{\n    MyTextBox.Text = myReceivedMessage.ToString();\n}
6312	CREATE TEMPORARY TABLE TempTable (OrgName VARCHAR(10), Id INT, ParentID INT); \n\nINSERT INTO TempTable SELECT OrgName, Id, ParentID FROM org_table;\n\nWHILE EXISTS (SELECT TOP 1 1 FROM TempTable WHERE EXISTS(SELECT TOP 1 1 FROM TempTable TempTableParent WHERE TempTableParent.ID = TempTable.ParentID AND TempTableParent.ParentID IS NOT NULL) ) DO\n\nUPDATE TempTable SET ParentID = TempTableParent .parentID\nFROM TempTable\nINNER JOIN TempTable TempTableParent ON TempTableParent.id = TempTable.ParentID\nWHERE TempTable.ParentID IS NOT NULL AND TempTableParent.ParentID IS NOT NULL\n\nEND WHILE;\n\nSELECT * FROM TempTable
6313	int decToBin;\nConsole.WriteLine("Enter a number that will be converted to binary");\ndecToBin = Int32.Parse(Console.ReadLine());\nstring bin = Convert.ToString(decToBin, 2);\nConsole.WriteLine(bin);
6314	var result = tblArea.Where(x => !tblUserMaster.Any(m => m.areaid == x));
6315	class Program\n{\n    static void Main(string[] args)\n    {\n        var maxParallelism = Environment.ProcessorCount;\n        Parallel.ForEach(files, new ParallelOptions { MaxDegreeOfParallelism = maxParallelism }, ParseAndPersist);\n    }\n\n    public static void ParseAndPersist(FileInfo fileInfo)\n    {\n        //Load entire file\n\n        //Parse file\n\n        //Execute SQL asynchronously..the goal being to achieve maximum file throughput aside from any SQL execution latency\n\n    }\n}
6316	using (StreamReader sr = new StreamReader("TestFile.txt"))\n        {\n            String line;\n            // Read and display lines from the file until the end of\n            // the file is reached.\n            while ((line = sr.ReadLine()) != null)\n            {\n               string[] ipandport = line.split(":");\n               lstBoxIp.Items.Add( ipandport[0] );\n               lstBoxPort.Items.Add( ipandport[1] );\n            }\n        }
6317	private void textBox1_Validating(object sender, CancelEventArgs e)\n{\n    DateTime date;\n    if (!DateTime.TryParseExact(textBox1.Text, \n        "dd-MM-yyyy", \n        CultureInfo.CurrentCulture, \n        DateTimeStyles.None, \n        out date))\n    {\n        MessageBox.Show(textBox1.Text + " is not a valid date");\n        textBox1.Focus();\n        e.Cancel = true;\n        return;\n    }\n    if ((date < (DateTime) System.Data.SqlTypes.SqlDateTime.MinValue) ||\n        (date > (DateTime) System.Data.SqlTypes.SqlDateTime.MaxValue))\n    {\n        MessageBox.Show(textBox1.Text + " is out of range");\n        textBox1.Focus();\n        e.Cancel = true;\n        return;\n    }\n}
6318	public interface IEditViewModel<TEntity>\n{\n    public EditResult<TEntity> EditEntity(TEntity entityToEdit)();\n}
6319	CREATE PROCEDURE GetJobState @jobId int AS\nSELECT MIN(UnitStatus)\nFROM JobUnit \nWHERE Job_idJob = @jobId
6320	private int counter;\npublic int Index\n{\n    get\n    {\n        counter++;\n        return counter;\n    }\n}
6321	int[] intarray = { 1, 2, 3, 4, 5 };\nstring[] result = intarray.Select(x=>x.ToString()).ToArray();
6322	await file.CopyAsync(storageFolder);
6323	str = Regex.Replace(str, "\\.(?=;|,|$)", ".0");
6324	private void dataGridView1_CellEndEdit(object sender, DataGridViewCellEventArgs e)\n{\n    newvalue = (int)dataGridView1[e.ColumnIndex, e.RowIndex].Value;\n}\n\nprivate void dataGridView1_CellBeginEdit(object sender, DataGridViewCellCancelEventArgs e)\n{\n    oldvalue = (int)dataGridView1[e.ColumnIndex, e.RowIndex].Value;\n}
6325	Assert.That( array, Is.All.Matches( (int x) => x%4 == 0 && x%100 != 0 || x%400 == 0 ));
6326	CREATE OR REPLACE\nFUNCTION get_dbms_output(maxbytes IN NUMBER, buffer OUT VARCHAR2) RETURN NUMBER\nIS\n    l_line VARCHAR2(255);\n    l_done NUMBER := 0;\nBEGIN\n    LOOP\n        EXIT WHEN LENGTH(buffer) + 255 > maxbytes OR l_done = 1;\n        dbms_output.get_line(l_line, l_done);\n        buffer := buffer || l_line || CHR(10);\n    END LOOP;\n    RETURN l_done;\nEND get_dbms_output;\n/
6327	public Form1()\n    {\n        InitializeComponent();\n\n        grid.Columns[0].HeaderText = "First Column"; \n        //..............\n    }
6328	"from accountlist a join fetch a.client"
6329	secondTable = firstTable.AsEnumerable()\n    .GroupBy(row => new\n    {\n        Key = row.Field<string>("Key"),\n        Country = row.Field<string>("Country"),\n    })\n    .Select(group => group.First())\n    .CopyToDataTable();
6330	Console.ReadKey
6331	using System.Runtime.InteropServices;\n...\n\n[StructLayout(LayoutKind.Explicit)]\nstruct X86Register {\n   [FieldOffset(0)] public byte   reg8;    // Like AL\n   [FieldOffset(1)] public byte   reg8h;   // Like AH\n   [FieldOffset(0)] public ushort reg16;   // Like AX\n   [FieldOffset(0)] public uint   reg32;   // Like EAX\n   [FieldOffset(0)] public ulong  reg64;   // Like RAX\n}
6332	FileStream Constructor (String, FileMode, FileAccess, FileShare)
6333	int packetyear = year - year % 100 + packet[0];
6334	var content = MyLabel.Content;\nMyLabel.Content = null;\nMyLabel.ContentStringFormat = "Bye {0}";\nMyLabel.Content = content;
6335	Task[] tasks = new Task[3] \n    {\n        Task.Factory.StartNew(() => MethodA()),\n        Task.Factory.StartNew(() => MethodB()),\n        Task.Factory.StartNew(() => MethodC())\n    };\n\n//Block until all tasks complete.\nTask.WaitAll(tasks);
6336	TopLevel = false
6337	i = row * columnCount + column;
6338	_policyDataGrid.ScrollBars = ScrollBars.None;\n_policyDataGrid.ScrollBars = ScrollBars.Vertical;
6339	stOldItems.All(x => lstNewItems.Any(y=> x.sItemPath == y.sItemPath));
6340	Func<String, String>
6341	return Animals.OfType<IHerd>().Cast<Animals>().ToList();
6342	Private Sub SplitStrings(s As String)\n    Dim lines() As String = Split(s, "____")\n    For Each line As String In lines\n        Dim perLineTokens() As String = line.Split("___")\n    Next\nEnd Sub
6343	protected string[] strFilePath = new string[5];\nprotected string[] strTitle = new string[5];\nprotected string[] strCity = new string[5];\nprotected string[] strCountry = new string[5];
6344	var counter = new Counter();\nvar form = new Form();\nform.Controls.Add(counter);\nform.Show();
6345	DataRow r = bucketdt.NewRow();\n        r = dosObject.SubCategoryDetails2(Convert.ToInt16(val)).Rows[0]; // overwrites r with a DataRow following another schema
6346	DECLARE @StartDate DATETIME2, @EndDate DATETIME2\n\nSET @StartDate = DATEADD(day, DATEDIFF(day, 0, GETDATE()), 0)\nSET @EndDate = DATEADD(day, DATEDIFF(day, 0, GETDATE()+1), 0)\n\nSELECT CustomerID, Title, FirstName, LastName, AppStatus \n    FROM Customer     \n    WHERE DateAdded >= @StartDate AND DateAdded < @EndDate
6347	void Timer2_Click(object sender, EventArgs e)\n{\n    #region ListBox Remove And Effect / in Process\n    if (works.Count > 1)\n    {\n        //Work workTemp = works[0];  //Don't know if really needed\n          var fade = new DoubleAnimation()\n          {\n             From = 1,\n             To = 0,\n             Duration = TimeSpan.FromSeconds(5),\n          };\n       var item = //TheListBox.Items[];\n       Storyboard.SetTarget(fade, item);\n       Storyboard.SetTargetProperty(fade,\n                                    new PropertyPath(ListBoxItem.OpacityProperty));\n\n       var sb = new Storyboard();\n       sb.Children.Add(fade);\n       sb.Completed += sb_Completed;\n       sb.Begin(); \n\n    }\n}\n\n\n    void sb_Completed(object sender, EventArgs e)\n    {\n         works.RemoveAt(0); \n         //works.Add(workTemp);  //Don't know if really needed\n         DataContext = this; // BindGrid --Is that correct to define the context each time you click ? :(\n    }
6348	string str = "file_{AAA}_{BBB}.xml";\nvar regex = new Regex("(?<=\{)[^}]*(?=\})");\nvar matches = regex.Matches(str);
6349	IEnumerable<T>
6350	private Timer _timer;\nprivate DateTime _lastRun = DateTime.Now.AddDays(-1);\n\nprotected override void OnStart(string[] args)\n{\n    _timer = new Timer(10 * 60 * 1000); // every 10 minutes\n    _timer.Elapsed += new System.Timers.ElapsedEventHandler(timer_Elapsed);\n    _timer.Start();\n    //...\n}\n\n\nprivate void timer_Elapsed(object sender, System.Timers.ElapsedEventArgs e)\n{\n    // ignore the time, just compare the date\n    if (_lastRun.Date < DateTime.Now.Date)\n    {\n        // stop the timer while we are running the cleanup task\n        _timer.Stop();\n        //\n        // do cleanup stuff\n        //\n        _lastRun = DateTime.Now;\n        _timer.Start();\n    }\n}
6351	public static IEnumerable<string> SplitByLength(this string str, int maxLength)\n{\n    for (int index = 0; index < str.Length; index += maxLength)\n    {\n        yield return str.Substring(index, Math.Min(maxLength, str.Length - index));\n    }\n}
6352	files.ToObservable().SelectMany(f =>\n    {\n        var source = Observable.Defer(() => Observable.Start(() =>\n        {\n            ftpConnection.DownloadFile(avroPath, f.Name);\n            return Tuple.Create(true, f.Name);\n        }));\n        int attempt = 0;\n        return Observable.Defer(() => ((++attempt == 1)\n            ? source\n            : source.DelaySubscription(TimeSpan.FromSeconds(1))))\n            .Retry(4)\n            .Catch(Observable.Return(Tuple.Create(false, f.Name)));\n    }).ForEachAsync(res =>\n    {\n        if (res.Item1) Process(res.Item2);\n        else LogOrQueueOrWhatever(res.Item2);\n    }).Wait();\n\n    ProcessLogs();\n    ScheduleNExtDownloadRoutine();
6353	private void comboCarbu_Initialized(object sender, EventArgs e)\n    {\n        foreach (var combobox in FindVisualChildren<ComboBox>(dataVoitures))\n        {\n            if (combobox.Name == "comboCarbu")\n            {\n                combobox.Focus();\n            }\n        }\n    }
6354	Type VB6Long64\n   LoValue As Long\n   HiValue As Long\nEnd Type
6355	ManagementScope scope = new ManagementScope("\\\\.\\ROOT\\cimv2");\n\nObjectQuery query = new ObjectQuery("SELECT * FROM Win32_SoftwareElement WHERE SoftwareElementID='{YOUR WEB CONFIG GUID}'");\n\nManagementObjectSearcher searcher = new ManagementObjectSearcher(scope, query);\n\nManagementObjectCollection queryCol = searcher.Get();\n\nforeach(ManagementObject m in queryCol)\n{\n  Console.Out.WriteLine("Path to web.config: {0}", m["Path"]);\n}
6356	#show=fulldates
6357	Regex.Replace("@!$!", "!(.*)!", "replacement value");
6358	IEnumerable<T> Reverse (Node head) {\n    Stack<Node> nodes = new Stack<Node>();\n    while(head != null) {\n        nodes.Push(head);\n        head = head.Next;\n    }\n    while(nodes.Count > 0) {\n        yield return nodes.Pop().Value;\n    }\n}
6359	void Grid_KeyDown(object sender, KeyEventArgs e)\n{\n    if ((e.KeyCode & Keys.Enter) == Keys.Enter && e.Modifiers == Keys.Shift)\n    {\n        grid.CurrentCell.Move(GridDirectionType.Up, 1, false);\n        e.Handled = true;\n    }\n}
6360	string listCount = blistselected.Items.Count;\nstring[] array = new string[listCount];\nfor (int i=0; i<blistselected.Items.Count; i++) \n{\n    array[i] = blistselected.Items[i].Text;\n}
6361	worksheet.Rows().AdjustToContents();
6362	"Data Source=192.168.0.3,14330;Network Library=DBMSSOCN;Initial Catalog=master;Integrated Security=False;User ID=sa;Password=123456789;"
6363	/// <summary>\n/// Sets all properties on an object to modified.\n/// </summary>\n/// <param name="context">The context.</param>\n/// <param name="entity">The entity.</param>\nprivate static void SetAllPropertiesModified(ObjectContext context, object entity) {\n    var stateEntry = context.ObjectStateManager.GetObjectStateEntry(entity);\n    // Retrieve all the property names of the entity\n    var propertyNames = stateEntry.CurrentValues.DataRecordInfo.FieldMetadata.Select(fm => fm.FieldType.Name);\n    foreach(var propertyName in propertyNames) {// Set each property as modified\n        stateEntry.SetModifiedProperty(propertyName);\n    }\n}
6364	void ultraGrid1_InitializeLayout(object sender, Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs e)\n{\n    UltraGridBand band = e.Layout.Bands[0];\n    band.ColHeadersVisible = false;\n    ColumnsCollection columns = band.Columns;\n\n    UltraGridGroup group0 = band.Groups.Add("group0");\n    group0.Header.Caption = "";\n    UltraGridGroup group1 = band.Groups.Add("group1");\n    group1.Header.Caption = "Header 1";\n    UltraGridGroup group2 = band.Groups.Add("group2");\n    group2.Header.Caption = "Header 2";\n\n    columns[0].Group = group0;\n    columns[1].Group = group1;\n    columns[2].Group = group1;\n    columns[3].Group = group2;\n    columns[4].Group = group2;\n\n}
6365	...\n    var publisher = GetPublisher("My App Name");\n    ...\n\n    public static string GetPublisher(string application)\n    {\n        using (var key = Registry.CurrentUser.OpenSubKey(@"Software\Microsoft\Windows\CurrentVersion\Uninstall"))\n        {\n            var appKey = key.GetSubKeyNames().FirstOrDefault(x => GetValue(key, x, "DisplayName") == application);\n            if (appKey == null) { return null; }\n            return GetValue(key, appKey, "Publisher");\n        }\n    }\n\n    private static string GetValue(RegistryKey key, string app, string value)\n    {\n        using (var subKey = key.OpenSubKey(app))\n        {\n            if (!subKey.GetValueNames().Contains(value)) { return null; }\n            return subKey.GetValue(value).ToString();\n        }\n    }
6366	(http|ftp|https)://([\w+?\.\w+])+([a-zA-Z0-9\~\!\@\#\$\%\^\&\*\(\)_\-\=\+\\\/\?\.\:\;\'\,]*)?
6367	string[] rowCells = cells.Cast<string>().ToArray();
6368	List<Filter_IDs> filterids = ef.filterLine.Select(o => new { objectType = o.objectType, object_id=o.object_id})\n    .GroupBy(fl => fl.objectType).ToList()\n    .Select(fl => new Filter_IDs { type = fl.Key, objects = fl.Select(x => x.object_id).ToList() })\n    .ToList();
6369	if(typeof(S) == typeof(int))
6370	NewItemRowPosition.Top
6371	FileInfo newFile = new FileInfo(@"C:\Temp.xslx");\n\nusing (ExcelPackage package = new ExcelPackage(newFile))\n{\n    //Create the Worksheet\n    var sheet = package.Workbook.Worksheets.Add("Sheet1");\n    //Read the table into a sheet\n    var range = sheet.Cells["A1"].LoadFromDataTable(dtMain, true);\n\n    sheet.Tables.Add(range, "data");\n    //Now format the table...\n    var tbl = sheet.Tables[0];\n    tbl.ShowTotal = true;\n\n    //create a custom style\n    string stylename = "StyleName";\n    var style = package.Workbook.Styles.CreateNamedStyle(stylename);\n\n    tbl.Columns[SomeName].TotalsRowFunction = RowFunctions.Sum;\n\n    style.Style.Numberformat.Format = "#,###.00";\n    //apply style to totals row\n    sheet.Cells[sheet.Dimension.End.Row, colcount].Style.Numberformat.Format = c.Format;\n\n    //assign the style to the column\n    tbl.Columns[SomeName].DataCellStyleName = stylename;\n}\n\nrange.AutoFitColumns();\n\n// save our new workbook and we are done!\npackage.Save();
6372	"Sec\. [A-Z\d]+\.([A-Z\d]+\.)?"\s?
6373	IParseTree tree = SpinParser.expr();
6374	project Entity\nproject Database\nproject Server\nproject UserInterface
6375	foreach (TreeNode tn in treeView1.Nodes)\n{\n   // get parent node here\n   foreach (TreeNode child in tn.Nodes)\n   {\n     //get child node here\n   }\n}
6376	using (QstWriter = new StreamWriter(IPCPipe))
6377	bool bPresent = (from DataRow r in dsInternalInformation.Tables[0].Rows\n                 where (int)r["QstnCount"] > 0 select r).Any();
6378	Regex regExfont = new Regex(@"<font name=""arial""[^>]*>.*</font>");\n MatchCollection rows = regExfont.Matches(string);
6379	DataSet ds = GetAllCategory();\n    if (ds.Tables.Count > 0)\n    {\n        DropDownList1.DataTextField = "identifier";\n        DropDownList1.DataValueField = "OS_ID"; //Change field to one you want.\n        DropDownList1.DataSource = ds.Tables[0];\n        DropDownList1.DataBind();\n    }\n\n   if(DropDownList1.Items.Count > 0)\n   { \n       DropDownList1.SelectedIndex = 0;\n       DropDownList1_SelectedIndexChanged(this,null);\n   }
6380	try\n        {\n            var eMailValidator = new System.Net.Mail.MailAddress("xyz@blabla.com");\n        }\n        catch (FormatException ex)\n        {\n            // wrong e-mail address\n        }
6381	protected void yourNiceGridViewControl_RowDataBound(object sender, GridViewRowEventArgs e)\n{\n  if (e.Row.RowType == DataControlRowType.Footer)\n  {\n    TextBox myTextBox = e.Row.FindControl("txtFooter") as TextBox;\n\n    if( myTextBox != null ) \n    {\n\n      myTextBox.Tex= ds.Tables[0].Rows[0]["MyFirend"].ToString();\n    }\n  }\n}
6382	controller.WaitForStatus(ServiceControllerStatus.Running);
6383	set MONO_LOG_LEVEL=debug
6384	Object lockOnMe = new Object();\n\n... in your Add loop\n\n(int i = 0; i < dacPoints.Count; i += 1) { \n    TimeSpan span = new TimeSpan(0, 0, i + 1); \n    lock (lockOnMe) { \n        presenter.addPoint(span.ToString(), dacPoints[i]); \n    } \n    System.Threading.Thread.Sleep(200); \n}\n\n... when calling DataBindXY()\n\nlock (lockOnMe) {\n    // Note that I copy the lists here.  \n    // This is because calling DataBindXY is not necessarily a serial, \n    // blocking operation, and you don't want the UI thread touching \n    // these lists later on after we exit the lock\n    chart.Series[0].Points.DataBindXY(xAxis.ToList(), yAxis.ToList());\n}
6385	//Popullate listItems from your ListBox     \nvar listItems = new string[] { "Apple", "Orange", "Pineapple" };\nvar writers = new StreamWriter[listItems.Length];\nfor (int i = 0; i < listItems.Length; i++)\n{\n    writers[i] = File.CreateText(listItems[i] + ".txt");\n}\nvar reader = new StreamReader(File.OpenRead(bigFatFile));\n\nstring line;\nwhile ((line = reader.ReadLine()) != null)\n{\n    for (int i = 0; i < listItems.Length; i++)\n    {\n        if (line.StartsWith(listItems[i]))\n            writers[i].WriteLine(line);\n    }\n}\nreader.Close();\nforeach (var writer in writers)\n    writer.Close();
6386	public enum Color { Red, Yellow, Green, Blue }    \npublic class ColorSet : HashSet<Color> {}\n\nprivate void setColors(ColorSet colors = null)\n{\n    if (colors == null)\n        colors = new ColorSet {Color.Red, Color.Green};\n\n    ....\n}
6387	public class BaseClass {\n    public void Method() // Non-virtual\n    {\n          // Do required work\n\n          // Call virtual method now...\n          this.OnMethod();\n    }\n\n    protected virtual void OnMethod()\n    { // Do nothing\n    }\n }
6388	ArrayList UserList = new ArrayList();\n    var SkypeClient = new SKYPE4COMLib.Skype();\n    foreach (User User in skype.Friends)\n    {\n        if (User.BuddyStatus == SKYPE4COMLib.TBuddyStatus.budFriend)\n        {\n            UserList.Add(User.Handle);\n        }\n    }
6389	const string propPrefix = "UserVar";\n\nVendorObj o = new VendorObj();\nforeach (var item in userVars)\n{\n    int varNum = 0;\n    if (Int32.TryParse(item.VariableName, out varNum))\n    {\n        string name = String.Format("{0}Nbr{1}", propPrefix, varNum);\n        o.GetType().GetProperty(name).SetValue(o, "some value", null);\n    }\n}
6390	String drpClassString = ""\n\nIf(drpclass.SelectedIndex != 0)\n{\n  drpString = " and tblhomework.ClassCode='" + drpclass.SelectedItem.Value + "'"\n}\nString thrNameString = "";\nif(txt_tchrname.Text.Length != 0)\n{\nthrNameString = " and tblhomework.TshortCode='" + txt_tchrname.Text.ToString() + "'"\n}\nString dateString = ""\nif( txtdatesearch.Text.Length != 0)\n{\ndateString =" and DATE_FORMAT(tblhomework.DateCreated,'%d-%m-%y')='" + strDTentered1 + "'"\n}\n\n\nString sqlsearch = "SELECT tblhomework.ID,tblteacher.TEACHERNAME,tblclass.CLASSNAME,tblhomework.Title,tblhomework.HomeworkDetail,tblhomework.StudentsCode FROM tblhomework" +\n        " join tblclass on tblclass.CLASSCODE=tblhomework.ClassCode join tblteacher on tblteacher.TSHORTNAME=tblhomework.Tshortcode where 1 = 1" + drpClassString + thrNameString +dateString;
6391	public class Form1 : Form\n{\nstatic void Main(string[] args) { Application.Run(new Form1()); }\n\npublic Form1()\n{\nthis.IsMdiContainer = true;\nPanel test = new Panel();\ntest.Dock = DockStyle.Top;\ntest.Height = 100;\nthis.Controls.Add(test);\n\nForm child = new Form();\nchild.MdiParent = this;\nchild.Text = "Child";\nchild.Show();\n}\n}
6392	private void ListBox_selectionChanged(object sender, DragEventArgs e)\n{\n    e.handled = true;\n}
6393	private String GetRandomServiceIP(String roleName, String endPointName)\n{\n    var endpoints = RoleEnvironment.Roles[roleName].Instances.Select(i => i.InstanceEndpoints[endPointName]).ToArray();\n    var r = new Random(DateTime.Now.Millisecond);\n    int ipIndex = r.Next(endpoints.Count());\n    return endpoints[ipIndex].IPEndpoint.Address.ToString();\n}
6394	Create View Pokedata as\n    Select name_,  t1.type as Type1, t2.type as Type2, ability\n    From Kanto \n    inner Join Abilities on Kanto.abilityId = Abilities.abilityId\n    inner join KantoType as kt1 on Kanto.pok?monid = kt1.pok?monid and kanto.typeid1 = kt1.typeid\n    inner join on types as t1 on kt1.typeid = t1.typeid\n    inner join KantoType as kt2 on Kanto.pok?monid = kt2.pok?monid and kanto.typeid2 = kt2.typeid\n    inner join on types as t2 on kt2.typeid = t2.typeid
6395	FileStream xuids = new FileStream(xuidspath, FileMode.Append);
6396	var myService = OperationContext.Current.InstanceContext.GetServiceInstance();
6397	var errors = XDocument.Parse(yourxmlstring)\n                .Descendants("errors")\n                .Select(e => new\n                {\n                    code = (int)e.Element("code"),\n                    desc = (string)e.Element("description")\n                })\n                .ToList();
6398	SqlConnection myconn = new SqlConnection( connstring );
6399	Type realType = Nullable.GetUnderlyingType(typeof(T));\nt = (T)Activator.CreateInstance(realType ?? typeof(T));
6400	UserControl uc = new UserControl();\nstring ID = "1";\nstring userControl ="UC" + ID + ".ascx";\nuc = LoadControl(userControl) as UserControl;\nPlaceHolder1.Controls.Add(uc); //some place holder to place controls
6401	new XElement("h1", "Text\u00A0to\u00A0keep\u00A0together");
6402	System.Security.Cryptography.Xml Namespace
6403	var configMap = new ExeConfigurationFileMap {ExeConfigFilename = externalConfigurationFile};\nSystem.Configuration.Configuration externalConfiguration = ConfigurationManager.OpenMappedExeConfiguration(configMap, ConfigurationUserLevel.None);\n\nforeach (KeyValueConfigurationElement setting in externalConfiguration.AppSettings.Settings)\n{\n    ...\n}\n\ncurrentConfiguration.Save(ConfigurationSaveMode.Full);
6404	var query = File\n    .ReadLines("input.txt")\n    .GroupBy(x => x)\n    .Select(g => new { Key = g.Key, Count = g.Count() })\n    .OrderByDescending(i => i.Count)\n    .Take(20);\n\nforeach (var item in query)\n{\n    Console.WriteLine("{0,5} {1}", item.Count, item.Key);\n}
6405	bool IsProcessRunning(string processName)\n{\n        return (System.Diagnostics.Process.GetProcessesByName(processName).Length != 0);\n}
6406	DateTime.ParseExact(input,"yyyyMMdd HH:mm",null);
6407	nircmd.exe setdisplay 1366 768 32
6408	void OnNextBuild()\n{\n  if (PrimeBuilders.Count < 2) return;\n  int i = PrimeBuilders.IndexOf(_building_instance.BuildingID);\n\n  if(i != -1)\n  {\n      if(++i == PrimeBuilders.Count) i = 0;\n      _building_instance = _simulation_manager.\n                            GetCity().\n                            GetBuildingInstance(PrimeBuilders[i]);\n\n      _interface_state_manager.SetNextState(InterfaceState.ShowBuildUnitsPanel);\n  }\n}
6409	panel.BackgroundImage = Image.FromFile(open.FileName);
6410	sampleWS s = new sampleWS();\ns.addExam(100000000, bla, bla);
6411	if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem )
6412	public static IEnumerable<string> ReadLines()\n{\n  string line;\n  while(null != (line = Console.ReadLine()))\n    yield return line;\n}\n\npublic static void Main()\n{\n  string input = string.Join(ReadLines(), Environment.NewLine);\n}
6413	g.TranslateTransform(pointX, pointY);\ng.ScaleTransform(1, 2);\ng.TranslateTransform(-pointX, -pointY);\n\ng.DrawString(myText, myFont, myBrush, pointX, pointY);
6414	int current=0;\nvar selection = products.TakeWhile(p => (current = current + p.Cost) <= credit);
6415	long l = Marshal.ReadInt64(result, 9);\nreturn l;
6416	container.Register(Component.For<IDbConnection>().ImplementedBy<SqlConnection>()\n        .LifestyleTransient()\n        .UsingFactoryMethod(() => new SqlConnection          \n       (ConfigurationManager.ConnectionStrings["DbConnectionString"].ConnectionString)));
6417	I would use CSS to do that.  I would add a class element on the ASP\n\n    <asp:LinkButton ID="lnk" runat="server" Text='<%# Eval("LibName") %>' CommandName="Update"\n CommandArgument='<%# Eval("LibID") %>' Visible='<%# Eval("FolderVisibility") %>'  Class='Visible<%# Eval("FolderVisibility") %>'></asp:LinkButton>\n\n\nSo in the HTML the class will come out like "Class='VisibleTrue'" or "Class='VisibleFlase'" \n\nin the CSS you can create a two classes\n\n>     .VisibleFlase{\n//Icon css here\n},\n.VisibleTrue{\n//icon Css here\n\n}
6418	line-height
6419	RectangleF bounds = new RectangleF(x, y, width, height);\nusing (StringFormat format = new StringFormat()) {\n    format.Alignment = StringAlignment.Center;\n    format.LineAlignment = StringAlignment.Center;\n    graphicsObj.DrawText("Number", SystemFonts.Default, Brushes.Black, bounds, format);\n}
6420	System.IO.Directory.SetCurrentDirectory(System.AppDomain.CurrentDomain.BaseDirectory);
6421	if (open_dialog.ShowDialog() != DialogResult.Cancel)\n    {\n        if (uploadpic_pb.BackgroundImage != null) uploadpic_pb.BackgroundImage.Dispose();\n        uploadpic_pb.BackgroundImage = Image.FromFile(open_dialog.FileName);\n        // etc...\n    }
6422	protected override void Configure()\n    {\n      ConventionManager.AddElementConvention<ListPicker>(ListPicker.ItemsSourceProperty, "SelectedItem", "SelectionChanged").ApplyBinding = \n        (viewModelType, path, property, element, convention) => {\n         if (ConventionManager.GetElementConvention(typeof(ItemsControl)).ApplyBinding(viewModelType, path, property, element, convention))\n         {\n             ConventionManager.ConfigureSelectedItem(element, ListPicker.SelectedItemProperty, viewModelType, path);\n             return true;\n         }\n         return false;\n     }; }
6423	mshtml.HTMLWindow2Class w2 = webBrowser1.Document.Window.DomWindow as mshtml.HTMLWindow2Class;\nw2.execScript("var ctrlRange = document.body.createControlRange();ctrlRange.add(document.getElementById('img1'));ctrlRange.execCommand('Copy');", "javascript");\nImage image2 = Clipboard.GetImage();\npictureBox1.Image = image2;
6424	List<Store> stores = new List<Store>();\n            var storeTemp = new Store();\n\n        foreach (string line in File.ReadAllLines(@"C:\Store.txt"))\n        {\n            // You needto create a new instance each time\n            if (line.Contains("Store ID: "))\n                storeTemp.ID = line.Substring(10);\n            if (line.Contains("Name: "))\n                storeTemp.name = line.Substring(6);\n            if (line.Contains("Branch Number: "))\n                storeTemp.branchNO = Convert.ToInt32(line.Substring(15));\n            if (line.Contains("Address: "))\n                storeTemp.address = line.Substring(9);\n            if (line.Contains("Phone: "))\n            {\n                storeTemp.phoneNumber = Convert.ToInt32(line.Substring(7));\n                stores.Add(storeTemp);\n                storeTemp = new Store(); // You need to recreate the object, otherwise you overwrite same instance\n\n            }\n        }
6425	smtp.UseDefaultCredentials = false;
6426	public class OperationContextExtension : IExtension<OperationContext>\n{\n    public void Attach(OperationContext owner)\n    {\n        this.Current = new Dictionary<string, string>();\n    }\n\n    public void Detach(OperationContext owner)\n    {\n        this.Current = null;\n    }\n\n    public Dictionary<string,string> Current { get; set; }\n}
6427	"[^"]*"|\S+
6428	((ContextMenuStrip)(((ToolStripMenuItem)sender).Owner)).SourceControl
6429	(?<!\.[0-9a-z]*)[0-9]
6430	private void grv_RowDataBound(object sender, GridViewRowEventArgs e)\n    {\n\n        if (e.Row.RowType == DataControlRowType.Header)\n        {\n\n                   e.Row.Cells[0].Width = new Unit("5%");\n                   e.Row.Cells[1].Width = new Unit("7%");\n                   e.Row.Cells[2].Width = new Unit("12%");\n                   e.Row.Cells[3].Width = new Unit("12%");\n                   e.Row.Cells[4].Width = new Unit("7%");\n                   e.Row.Cells[5].Width = new Unit("7%");\n                   e.Row.Cells[6].Width = new Unit("23%");\n                   e.Row.Cells[7].Width = new Unit("22%");\n                   e.Row.Cells[8].Width = new Unit("5%"); \n        }\n\n    }
6431	var node = db.ExecuteStoreQuery<Node>(@"\n    with c as (\n        select Id, Name, ParentId,[0] as level\n        from Department d\n    union all\n        select d.Id, d.Name, d.ParentId, [level] + 1\n        from Department d\n        join c on d.ParentId = c.Id)\n    select * from c where c.Id = @Id"                                                         \n"Departments", \nSystem.Data.Objects.MergeOption.NoTracking, \nnew SqlParameter{ ParameterName = "id", Value = department.Id});
6432	var htmlDoc = new HtmlDocument();\n\nhtmlDoc.LoadHtml(\n    "WAVEFORM</u> YES, <u>NEGATIVE AUSCULTATION OF EPIGASTRUM</u> YES,");\n\nforeach (var error in htmlDoc.ParseErrors)\n{\n    // Prints: TagNotOpened\n    Console.WriteLine(error.Code);\n    // Prints: Start tag <u> was not found\n    Console.WriteLine(error.Reason); \n}
6433	var objectSet = entities.GetType( ).GetProperties( )\n    .Where( p => p.PropertyType.IsGenericType \n         && p.PropertyType.GetGenericArguments( )[ 0 ].Name == typeof( T ).Name )\n    .Select( p => p.GetValue( entities, null ) as ObjectSet<T> )\n    .First( );\nreturn objectSet.ToList( );
6434	var validemails = emails.Where(p=>IsValidFormat(p.Value)).Select(kv => kv.Value);
6435	var themometerServices = await Windows.Devices.Enumeration .DeviceInformation.FindAllAsync(GattDeviceService .GetDeviceSelectorFromUuid( GattServiceUuids.HealthThermometer), null);
6436	MarkettingNames = string.Join(", ", GroupA.MarkettingEmployees.Select(e => e.Name));
6437	static void Main(string[] args)\n    { \n        using (var \n\ndb = new SchoolEntities())\n        {\n            double currentScore = 0;\n            int rank= 0;\n            int savedRank;\n        var query = db.ScoreSummaries\n            .OrderByDescending(x => x.TotalScore).ToList();\n\n        foreach (var item in query)\n        {\n\n      rank+= 1;\n      if(item.TotalScore == current score)\n       {\n        savedRank = savedRank\n       }\n       else\n       {\n         savedrank = rank;\n        }\n\n            Console.WriteLine("{0},{1},{2}", item.TransactionID, item.TotalScore, savedrank);\n            currentScore = item.totalScore;\n            }\n            Console.WriteLine("Pls press any key to exit");\n            Console.ReadKey();\n        }\n    }
6438	IEnumerable<Accommodation> temp = \n    (from x in doc.Descendants("Accommodation")\n        select new Accommodation()\n        {\n            Categories = new Collection<string>(\n                x.Descendants("Categories").SelectMany(categories \n                    => categories.Elements("Category").Select(category \n                        => category.Attribute("Id").Value ?? "")).ToList())\n        }).ToList();
6439	protected override void OnDragDrop(DragEventArgs drgevent) {\n        this.BeginInvoke(new Action(() => {\n            MessageBox.Show(this, "Error");\n        }));\n        base.OnDragDrop(drgevent);\n    }
6440	int height2 = (int)Math.Round(width2 * (height1 / (float)width1));
6441	public abstract class Post {\n\n    // Default validation technique\n    public void Validate()\n    {\n        // your base validation\n        // Then call the specific validation technique\n        ExtraValidate();\n    }\n\n    // Forces subclasses to provide validation technique\n    protected abstract void ExtraValidate();\n}
6442	Vector3 offset = new Vector3(1,1,0);\ntransform.position = ball.transform.position - ball.GetComponent<Rigidbody>().velocity / ball.GetComponent<Rigidbody>().velocity.magnitude + offset;\ntransform.LookAt (ball.transform.position);
6443	bundles.Add(new StyleBundle("~/bundles/style/main").Include("~/Content/styles/main.css", new CssRewriteUrlTransform()));
6444	// same code till this\n\n// get horse element from horseXml\nXmlElement horseEl = horseXml.DocumentElement; //[1] get the doc element\n\n// assign xmldb to xml document\nvar xmlDb = new XmlDocument();\nxmlDb.Load(xmlDbFilepath);\n//XmlNode root = xmlDb.DocumentElement; [2] removed\n\n// add horseEl to root of xmlDb\n//var newRoot = root.AppendChild(clonedHorseEl); [3] removed\nvar xe = xmlDb.CreateElement("Horse"); //[4] Create new Horse element on xmlDb\nxe.InnerXml = horseEl.InnerXml; //[5] copy horseEl content\nxmlDb.DocumentElement.AppendChild(xe);\n\nxmlDb.Save(xmlDbFilepath);
6445	foreach(var word in dict1.Where(w=>dict2.ContainsKey(w.Key) && dict2[w.Key]>5))\n{\n    //dowork\n}
6446	using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n\n        struct addition_pairs{\n            public int first;\n            public int second;\n        }\n\n        static void Main(string[] args)\n        { \n\n         List<addition_pairs> main_list;\n         main_list = new List<addition_pairs>();\n       //TODO call populate_list and choose how many sets you want.\n\n        }\n\n        private void populate_list(int how_many, List<addition_pairs> list)\n        {\n            for (int i = 0; i < how_many; i++)\n            {\n                Random random = new Random();\n                int randomNumber1 = random.Next(0, 10);\n                addition_pairs insert = new addition_pairs();\n                insert.first = randomNumber1;\n                insert.second = random.Next(0, 10-randomNumber1);\n                list.Add(insert);\n            }\n\n        }\n    }\n}
6447	1] default(int?) will always return 'null'\n2] null | <anything> returns 'null'
6448	using (var browser = new System.Windows.Forms.WebBrowser())\n{\n     browser.DocumentCompleted += delegate\n     {\n         using (var pic = new Bitmap(browser.Width, browser.Height))\n         {\n             browser.DrawToBitmap(pic, new Rectangle(0, 0, pic.Width, pic.Height));\n             pic.Save(imagePath);\n         }\n     };\n\n     browser.Navigate(Server.MapPath("~") + htmlPath); //a file or a url\n     browser.ScrollBarsEnabled = false;\n\n     while (browser.ReadyState != System.Windows.Forms.WebBrowserReadyState.Complete)\n     {\n         System.Windows.Forms.Application.DoEvents();\n     }\n}
6449	foreach (PropertyInfo pi in o.GetType().GetProperties())
6450	double CanonizeAngle(double angle)\n    {\n        if (angle > Math.PI)\n        {\n            do\n            {\n                angle -= MathHelper.TwoPi;\n            }\n            while (angle > Math.PI);\n        }\n        else if (angle < -Math.PI)\n        {\n            do\n            {\n                angle += MathHelper.TwoPi;\n            } while (angle < -Math.PI);\n        }\n\n        return angle;\n    }\n\n    double VectorToAngle(Vector2 vector)\n    {\n        Vector2 direction = Vector2.Normalize(vector);\n        return Math.Atan2(direction.Y, direction.X);\n    }\n\n    bool IsPointWithinCone(Vector2 point, Vector2 conePosition, double coneAngle, double coneSize)\n    {\n        double toPoint = VectorToAngle(point - conePosition);\n        double angleDifference = CanonizeAngle(coneAngle - toPoint);\n        double halfConeSize = coneSize * 0.5f;\n\n        return angleDifference >= -halfConeSize && angleDifference <= halfConeSize;\n    }
6451	var projects = CommonMethods.GetProjects(solution).Where(item => item.FullName != string.Empty).ToList();
6452	string command = "ENABLE;";
6453	var result = from customer in customers  \n                   from personalFirst in personal  \n                       .Where(pf => pf.Field == "First Name" && pf.C_ID == customer.C_ID)  \n                       .DefaultIfEmpty() \n                   from personalLast in personal  \n                       .Where(pl => pl.Field == "Last Name" && pl.C_ID == customer.C_ID)  \n                       .DefaultIfEmpty()  \n                    where customer.C_ID == 2  \n                    select new { customer.C_ID, Name = (personalFirst != null ? personalFirst.Value : "") + " " + (personalLast != null ? personalLast.Value : "") };
6454	// Presumably you can determine these once... (possibly rename to earliestValid\n// and latestValid, or something like that?)\nDateTime from = new DateTime(fromYear, fromMonth, fromDay);\nDateTime to = new DateTime(toYear, toMonth, toDay);\n\n// Then for each candidate...\n...\nDateTime date = new Date(year, month, day);\nif (date >= from && date <= to)\n{\n    listBox1.Items.Add(...);\n}
6455	public class BindableToolStripStatusLabel : ToolStripStatusLabel, IBindableComponent\n\npublic class BindableStatusBarLabel :  ToolStripLabel, IBindableComponent\n{\n    private ControlBindingsCollection _bindings;\n\n    private BindingContext _context;\n\n    public BindingContext BindingContext\n    {\n        get\n        {\n            if (_context == null)\n            {\n                _context = new BindingContext();\n            }\n            return _context;\n        }\n        set\n        {\n            _context = value;\n        }\n    }\n\n    public ControlBindingsCollection DataBindings\n    {\n        get\n        {\n            if (_bindings == null)\n            {\n                _bindings = new ControlBindingsCollection(this);\n            }\n            return _bindings;\n        }\n    }\n}
6456	private Dictionary <int, aor.PhysicalObject> merger;\n\nmerger = Enumerable\n         .Concat(  from a in log\n                             .InitialState\n                             .Agents\n                             .Agent\n                    select a\n                 ,  from o in log\n                              .InitialState\n                              .Objects\n                              .Object  \n                     select o\n                ).ToDictionary(d => Convert.ToInt32(d.id)\n                                ,  d => d as aor.PhysicalObject);
6457	Html.DropDownList("Status", \n    new SelectListItem[]{ new SelectListItem{ Text= "Showing", Value="Showing"},\n    //same for others\n});
6458	internal Dictionary<string, string> GetIDsAndXPaths()\n{\n    var web = new HtmlWeb();\n    var webidsAndXPaths = new Dictionary<string, string>();\n    var page = driver.PageSource; // Gets the source of the page last loaded by the browser\n\n    const string path = @"C:\temp\myHtml.html";\n    var sw = new StreamWriter(path, false);\n    sw.Write(page);\n    sw.Close();\n    const string url = path;\n    var doc = web.Load(page);\n    var nodes = doc.DocumentNode.SelectNodes("//*[@id]");\n    if (nodes == null) return webidsAndXPaths;\n    // more code to get ids and such\n    return webidsAndXPaths;\n}
6459	Class HTMLWindowEvents2Sink\n{\n    public HTMLWindowEvents2Sink(IHTMLWindow2 eventSource)\n    {\n        this.eventSource=eventSource;\n    }\n    IHTMLWindow2 eventSource;\n    void AdviseEvent()\n    {\n        eventSource.load += this.HTMLWindow_onload; \n    }\n    ....\n}
6460	Response.AddFileDependency("Your folder path");
6461	if (HttpContext.Current.Request.Url.Host.CompareTo("https://yourwebsite") != 0)\n{\n    HttpContext.Current.Response.Redirect("https://yourwebsite" + Context.Request.Url.PathAndQuery);\n}
6462	WriteAllText()
6463	Div1.Visible = false;
6464	private void eolGrid_RowPostPaint(object sender, DataGridViewRowPostPaintEventArgs e)\n    {\n        int rowNum = e.RowIndex;\n        DataGridViewCellStyle style = new DataGridViewCellStyle();\n\n        DateTime dateval = Convert.ToDateTime(eolGrid.Rows[rowNum].Cells[3].Value);\n\n        if ((dateval - date).TotalDays <= 0)\n            style.ForeColor = Color.Red;\n        else if ((dateval - date).TotalDays <= 14)\n            style.BackColor = Color.Red;\n        else\n            style.ForeColor = Color.Black;\n\n        eolGrid.Rows[rowNum].Cells[3].Style = style;\n    }
6465	data = System.Text.Encoding.ASCII.GetString(bytes, 0, i);\n      Console.WriteLine(StripExtended(data));        \n\n\n\n        static string StripExtended(string arg)\n        {\n            StringBuilder buffer = new StringBuilder(arg.Length); //Max length\n            foreach(char ch in arg)\n            {\n                UInt16 num = Convert.ToUInt16(ch);//In .NET, chars are UTF-16\n                //The basic characters have the same code points as ASCII, and the extended characters are bigger\n                if((num >= 32u) && (num <= 126u)) buffer.Append(ch);\n            }\n            return buffer.ToString();\n        }\n    }\n}
6466	static class ControlAssign\n{\n\n    public static void Assign(Control target, object source, PropertyInfo prop)\n    {\n        Setters[prop.PropertyType](prop, source, target);\n    }\n\n    static ControlAssign()\n    {\n        Setters[typeof(string)] = (prop, src, target) =>\n        {\n            ((TextBox)target).Text =\n                (string)prop.GetValue(src, null);\n        };\n\n        Setters[typeof(bool?)] = (prop, src, target) =>\n        {\n            ((CheckBox)target).Checked =\n                (bool)prop.GetValue(src, null);\n        };\n\n        Setters[typeof(bool)] = (prop, src, target) =>\n        {\n            ((CheckBox)target).Checked =\n                (bool)prop.GetValue(src, null);\n        };\n    }\n\n    public delegate void Action<T, U, V>(T t, U u, V v);\n\n    readonly static Dictionary<Type, Action<PropertyInfo, object, Control>> Setters = new Dictionary<Type, Action<PropertyInfo, object, Control>>();\n}
6467	var data = new List<string> {"A_1", "A_2", "A_B_1", "X_a_Z_14"};\n\nint trimPosition;\nfor (var i = 0; i < data.Count; i++)\n         if ((trimPosition = data[i].LastIndexOf('_')) > -1)\n            data[i] = data[i].Substring(0, trimPosition);
6468	public ActionResult Error()\n    {\n\n\n\n        return View();\n    }
6469	txtblkLabel.VerticalAlignment = System.Windows.VerticalAlignment.Center;\n   txtblkLabel.HorizontalAlignment = System.Windows.HorizontalAlignment.Center;\n   txtblkLabel.TextAlignment = System.Windows.TextAlignment.Center;
6470	pipeline = Runspace.DefaultRunspace.CreateNestedPipeline();
6471	var intersection = list1.Intersect(list2).ToList();\nvar list1Decomp = list1.Except(intersection).ToList();\nvar list2Decomp = list2.Except(intersection).ToList();
6472	var numbers = new List<int>();\nfor(int i=500; i<=2000000; i+=150)\n{\n    numbers.Add(i);\n}
6473	ListBoxItem itm = new ListBoxItem();\nitm.Content = "some text";\n\nlistbox.Items.Add(itm);
6474	string response;\n        try\n        {\n            using (StreamReader streamIn = new StreamReader((webRequest.GetResponse()).GetResponseStream()))\n            {\n                response = streamIn.ReadToEnd();\n                streamIn.Close();\n            }\n        }finally\n        {webRequest.Abort();}\n\n       XDocument xDoc = XDocument.Parse(response);
6475	//initialise objects/vairables subject to memory measurement\n\n    long memUsageBefore = GC.GetTotalMemory(true); \n\n    //do something with some measured object\n\n    long memUsageAftere  = GC.GetTotalMemory(true); \n\n    // make it ineligible for garbage collection from the start of the current routine to the point where this method is called. \n    GC.KeepAlive(measuredObject);
6476	var worker = new BackgroundWorker();\n        worker.DoWork += (o, ea) =>\n        {\n        //and here would be system format\n         };\n        worker.RunWorkerCompleted += (o, ea) =>\n        {\n\n        };
6477	//Assign to temp_int first:\nint.TryParse(Console.ReadLine(), out temp_int);\nwhile (temp_int < 1)\n{\n    Console.WriteLine("Not a valid number....try again");\n    int.TryParse(Console.ReadLine(), out temp_int);\n}
6478	var sb = new Text.StringBuilder;\nforeach (var item in requestParameters)\n{\n    sb.AppendFormat("{0}{1}", item.Key, item.Value);\n}\nvar parameters = sb.ToString();
6479	Mapper.CreateMap<MyViewModel, MyModel>()\n      .ForMember(d => d.ContentLinks, opt => opt.MapFrom(s => s.ContentLink));
6480	public class PortWrapper {\n   public int ReceivePort {\n      get { return portRecv; }\n      set { \n         if (value == portRecv) return;\n         if (value < 256 || value > 65535) throw new ArgumentOutOfRangeException();\n         portRecv = value;\n         setupReceiver();\n      }\n   }\n   // etc..\n\n   private int portRecv=10101;\n}
6481	public class ResourceInterceptor : IResourceInterceptor\n{\n    public bool NoImages { get; set; }\n\n    private static string[] _imagesFileTypes = { ".png", ".jpg", ".jpeg", ".gif", ".bmp" };\n\n    public ResourceResponse OnRequest(ResourceRequest request)\n    {\n        string ext = System.IO.Path.GetExtension(request.Url.ToString()).ToLower();\n\n        if (NoImages && _imagesFileTypes.Contains(ext))\n        {\n            request.Cancel();\n        }\n\n        return null;\n    }\n\n    public bool OnFilterNavigation(NavigationRequest request)\n    {\n        return false;\n    }\n}\n\n\n...\n\nResourceInterceptor ResInt = new ResourceInterceptor();\nWebCore.ResourceInterceptor = ResInt;
6482	xl.XmlMap map;\n    wb.XmlImport(path, out map, Type.Missing, ws.Range["A1"]);
6483	public async Task AddData(Data data)\n    {\n        var id = data.ID;\n        Group newGroup = new Group(id);\n        bool checkIfExists = false;\n\n        foreach (Group group in _groups)\n        {\n            if (group.ID == newGroup.ID)\n            {\n                checkIfExists = true;\n                break;\n            }               \n        }\n\n        if (checkIfExists)\n        {\n            foreach (Group group in _groups)\n            {\n                if (group.ID == id)\n                {\n                    group.DataGroup.Add(data);\n                }\n            }       \n        }\n        else\n        {\n            newGroup.DataGroup.Add(data);\n            _groups.Add(newGroup);\n        }\n\n        await saveDataAsync();               \n    }
6484	fooArray.GroupBy(x => x.Id).Select(x => x.First());
6485	public class LogList<T> : List<T>\n    {\n        public LogList()\n            : base()\n        {\n            Debug.WriteLine("LogList- Construction");\n        }\n\n        public new void Add(T item)\n        {\n            Debug.WriteLine("LogList - Add");\n            base.Add(item);\n        }\n\n        public new void Remove(T item)\n        {\n            Debug.WriteLine("LogList - Remove");\n            base.Remove(item);\n        }\n\n        public new void RemoveAt(int index)\n        {\n            Debug.WriteLine("LogLost - RemoveAt");\n            base.RemoveAt(index);\n        }\n\n        public new void Clear()\n        {\n            Debug.WriteLine("LogList - Clear");\n            base.Clear();\n        }\n    }
6486	public bool InsertUsername(string username)\n{\n    string SQL = "Insert into [Users](Username, InsertDateTime) Values(@Username, datetime('now'));";\n    var pars = new List<SQLiteParameter> {new SQLiteParameter("@Username", username)};\n    return SQLiteUsernameDatabase.ExecuteNonQuery(SQL, pars);\n}
6487	// find list in dictionary\nList<Account> acctList = dictionaries[keyString];\n// search account in list\nAcount account = acctList.FirstOrDefault(a => a.AccountName = acctName);\nif(account == null) // some error handling here\n// modify account\naccout.Balance -= 5;
6488	// The http://www.adventure-works.com namespace is forced to be the default namespace.\nXNamespace aw = "http://www.adventure-works.com";\nXNamespace fc = "www.fourthcoffee.com";\nXElement root = new XElement(aw + "Root",\n    new XAttribute("xmlns", "http://www.adventure-works.com"),\n///////////  I say, check out this line.\n    new XAttribute(XNamespace.Xmlns + "fc", "www.fourthcoffee.com"),\n///////////\n    new XElement(fc + "Child",\n        new XElement(aw + "DifferentChild", "other content")\n    ),\n    new XElement(aw + "Child2", "c2 content"),\n    new XElement(fc + "Child3", "c3 content")\n);\nConsole.WriteLine(root);
6489	object myObject = null;\n\n    if(myObject != null)\n    {\n     // your code\n    }
6490	public class Source\n{\n    public int ExtendedDurationInWeeks { get; set; }\n}    \n\npublic class Destination\n{\n    public DateTime ExpirationDate { get; set; }\n\n    public Destination()\n    {\n        ExpirationDate = DateTime.Now.Date;\n    }\n}\n\nvar source = new Source{ ExtendedDurationInWeeks = 2 };\nvar destination = new Destination {ExpirationDate = DateTime.Now.Date};\n\nMapper.CreateMap<Source, Destination>()\n      .AfterMap((s,d) => d.ExpirationDate = \n                        d.ExpirationDate.AddDays(s.ExtendedDurationInWeeks * 7));\n\ndestination = Mapper.Map(source, destination);
6491	class MyListsOfLists\n{\n    public ObjectLists AllLists { get; set; }\n}\n\nclass ObjectLists\n{\n    public List<Adult> Adults { get; set; }\n    public List<Child> Children { get; set; }\n    public List<Dog> Dogs { get; set; }\n    public List<Car> Cars { get; set; }\n    public List<House> Houses { get; set; }\n}\n\n\nclass Adult\n{\n    public int ID { get; set; }\n    public string Name { get; set; }\n    public DateTime DOB { get; set; }\n}\n\n\nclass Child\n{\n    public int ID { get; set; }\n    public string Name { get; set; }\n    public DateTime DOB { get; set; }\n}\n\n\nclass Dog\n{\n        public int ID { get; set; }\n        public string Name { get; set; }\n        public DateTime DOB { get; set; }\n}\n\nclass Car\n{\n    public int ID { get; set; }\n    public string Name { get; set; }\n    public DateTime ModelYear { get; set; }\n}\n\nclass House\n{\n    public int ID { get; set; }\n    public string Name { get; set; }\n    public DateTime Built { get; set; }\n}
6492	myBmp = new Bitmap(myImg, pictureBox1.Width, pictureBox1.Height); \n    pictureBox1.Image = myBmp;
6493	private void RecursiveBuilder(ref Item i, IEnumerable<Item> li)\n{\n    var item = i;\n    i.SubItems = (from n in li where n.ParentId == item.Id select n).ToList();\n    i.SubItems.ForEach(f => RecursiveBuilder(ref f, li));\n}
6494	pbIndicator.Image = Resources.indicator_green;
6495	enum MyEnum \n{\n  foo = 1,\n  bar = 2\n}\n\nvar noOfEnums = Enum.GetNames(typeof(MyEnum)).Length;
6496	XmlSerializer serializer = new XmlSerializer(typeof(yourObject));\nTextWriter streamWriter = new StreamWriter(filename);\nserializer.Serialize(streamWriter, yourObject);\nstreamWriter.Close();
6497	var directoryInfo = new DirectoryInfo(@"c:\temp");\nvar latestFile = directoryInfo.GetFiles()\n                              .Where(f => f.Name.StartsWith("12345_"))\n                              .OrderByDescending(f => f.CreationTime)\n                              .FirstOrDefault();
6498	double.TryParse
6499	// fileContents is the binary file being downloaded; I didn't need to use the MIME Types\n        MemoryStream ms = new MemoryStream(fileContents);\n        //write to file\n        FileStream file = new FileStream(filePath, FileMode.Create, FileAccess.Write);\n        ms.WriteTo(file);\n        file.Close();\n        ms.Close();
6500	account.ForEach(s => listBoxFirstname.Items.Add(s[0]));
6501	private class ErrorTracker {\n  private HashSet<Control> mErrors = new HashSet<Control>();\n  private ErrorProvider mProvider;\n\n  public ErrorTracker(ErrorProvider provider) { \n    mProvider = provider; \n  }\n  public void SetError(Control ctl, string text) {\n    if (string.IsNullOrEmpty(text)) mErrors.Remove(ctl);\n    else if (!mErrors.Contains(ctl)) mErrors.Add(ctl);\n    mProvider.SetError(ctl, text);\n  }\n  public int Count { get { return mErrors.Count; } }\n}
6502	public static void Main()\n{\n    uint data = 0x3E;\n    uint firstMask = 1;\n    uint lastMask = 0x80000000;\n    int? first = null;\n    int? last = null;\n\n    for (int i=0; i < 32; i++) {\n        if ((firstMask & data) > 0 && first == null)\n        {\n            first = i;\n        }\n        if ((lastMask & data) != 0 && last == null)\n        {\n            last = i;\n        }\n        firstMask = firstMask << 1;\n        lastMask = lastMask >> 1;\n    }\n    last = 31-last;\n\n\n    Console.WriteLine(first);\n    Console.WriteLine(last);\n}
6503	p1.InnerHtml += "<p>" + Doc.Paragraphs[i].Range.Text + "</p>";
6504	Console.WriteLine("Name a color");\n        string color = Console.ReadLine();\n\n        ConsoleColor consoleColor = ConsoleColor.White;\n        try\n        {\n            consoleColor = (ConsoleColor)Enum.Parse(typeof(ConsoleColor), color, true);\n        }\n        catch (Exception)\n        {\n            //Invalid color\n        }\n\n        Console.ForegroundColor = consoleColor ;
6505	public static int[] GetArray(int sum, int n)\n{\n    if(sum < n)\n        throw new ArgumentException("sum is lower than n");\n    Random rnd = new Random();\n\n    // reserve 1 for each of the elements\n    sum -= n;\n\n    // generate random weights for every element in sum\n    int[] w = new int[n];\n    int sw = 0;             \n    for (int i = 0; i < n; i++)\n    {\n        w[i] = rnd.Next(0, 100);\n        sw += w[i];\n    }\n\n    // generate element values based on their weights\n    int[] result = new int[n];\n    int tsum = 0;\n    int psum = 0;\n    for (int i = 0; i < n; i++)\n    {\n        tsum += w[i] * sum;\n        result[i] = tsum / sw - psum;\n        psum += result[i];\n    }\n\n    // restore reserved ones\n    for (int i = 0; i < n; i++)\n        result[i]++;\n\n    return result;\n}
6506	import org.openqa.selenium.Keys;\n\n//...\n\n// this sends an Enter to the element\nselenium.type("locator", Keys.ENTER);\n\n// or even this - this sends the "Any text" and then confirms it with Enter\nselenium.type("locator", "Any text" + Keys.ENTER);
6507	this._data[1] = (byte)(Distance >> 8);
6508	MySqlScript script = new MySqlScript(conn, query);\nscript.Delimiter = "$$";\nscript.Execute();
6509	float maxDragX = 1000;\n    float maxDragY = 700;\n\n    Vector3 mousePosition = new Vector3(eventData.position.x, eventData.position.y, distance);\n\n    transform.position = mousePosition;                                 // set object coordinates to mouse coordinates\n\n    if(transform.parent.gameObject == partsPanel)\n    {\n        transform.SetParent(dragLayer.transform);                       // pop object to draglayer to move object out of partsPanel\n    }\n\n    if(transform.parent.gameObject == buildBoard)\n    {\n        // Constrain drag to boundaries of buildBoard Code\n        if(transform.position.x >= maxDragX)\n            transform.position = new Vector3(maxDragX, mousePosition.y, distance);\n\n        if(transform.position.y >= maxDragY)\n            transform.position = new Vector3(mousePosition.x, maxDragY, distance);\n    }
6510	public class ChangeWallpaper\n{\n    [DllImport("user32.dll", CharSet = CharSet.Auto)]\n    static extern int SystemParametersInfo(int uAction, int uParam, string lpvParam, int fuWinIni);\n\n    public static void Main()\n    {\n        Bitmap bm = new Bitmap(Image.FromFile("pic.jpg"));\n        bm.Save("pic.bmp", ImageFormat.Bmp);\n        SystemParametersInfo(20, 0, "pic.bmp", 0x01 | 0x02);\n    }\n}
6511	public Dictionary<string, string> NewEntryDictionary()\n{\n    return Enum.GetNames(typeof(Suits)).ToDictionary(name => name, name => "");\n}
6512	var db = DatabaseContext.FromContext();\nvar result = (from a in db.TableA \n              join b in db.TableB on a.ID equals b.TableAID \n              select new {\n                  AID = a.ID, \n                  AName = a.Name, \n                  AType = a.Type, \n                  BName = b.Name}).ToList();
6513	private void OnKeyPress(object sender, System.Windows.Forms.KeyPressEventArgs e) \nif (((Control.ModifierKeys & Keys.Control) == Keys.Control) \n    && (e.KeyChar == 'M'|| e.KeyChar == 'm'))\n{\n        mf.Show();\n}
6514	var filteredList = list\n  .Select(\n    x => new firstClass {\n      Id = x.Id,\n      Elements = x.Elements.Where(y => y.Is).ToList()\n    }\n  )\n  .Where(x => x.Elements.Count > 0);
6515	static public double[,] Test()\n    {\n        // This example is for points in 3D.\n        // The forth variable is the class label. In this case 2 classes: 0 and 1.\n        double[,] xy = new double[,]\n        {\n        { 4,2,1, 0 }, { 2,4,2, 0 }, { 2,3,3, 0 }, { 3,6,4, 0 }, { 4,4,5, 0 },\n        { 9,10,10, 1 }, { 6,8,11, 1 }, { 9,5,12, 1 }, { 8,7,9, 1 }, { 10,8,10, 1 }\n        };\n\n        int NPoints = 10;\n        int NVars = 3; // 1 for 1 dimension, 2 for 2D and so on...\n        int NClasses = 2;\n\n        int info = 0;\n        double[,] w = new double[0, 0];\n\n        alglib.lda.fisherldan(xy, NPoints, NVars, NClasses, ref info, ref w);\n\n        return w; // The projection vector/s.\n    }
6516	using(MySqlConnection connection = new MySqlConnection(MyConnectionString))\nusing(MySqlCommand cmd = connection.CreateCommand())\n{\n    connection.Open();\n    cmd.CommandText = "SELECT pb.Id, pb.Name, pb.MobileNo, e.email FROM phonebook pb INNER JOIN email e ON e.Id= pb.Id";\n    MySqlDataAdapter adap = new MySqlDataAdapter(cmd);\n    DataSet ds = new DataSet();\n    adap.Fill(ds);\n    dataGridView1.DataSource = ds.Tables[0].DefaultView;\n}
6517	Rectangle rectangle = new Rectangle() { Width = e.EndPoint.X - e.StartPoint.X, Height = e.EndPoint.Y - e.StartPoint.Y, Fill = new SolidColorBrush(Colors.Purple) };\n Canvas.SetLeft(rectangle, e.StartPoint.X);\n Canvas.SetTop(rectangle, e.StartPoint.Y);\n PictureCanvas.Children.Add(rectangle);
6518	web.config
6519	// Create a service context object\n// "NorthwindEntities" is the name of the class in the generated service reference that derives DataServiceContext\n// The URI in should be the same URI you used to add the service reference\nvar context = new NorthwindEntities(new Uri("http://services.odata.org/Northwind/Northwind.svc/"));\n\n// As Alphabetical_list_of_products is an entity set, it can be directly called from the context\n// Call Execute() finally to send the request to the OData service and materialize the response got to "products"\nvar products = context.Alphabetical_list_of_products.Execute();\n\n// Iterate through all the products and print "ProductName", which is the name of a property on "Alphabetical_list_of_product" entity\nforeach (var product in products)\n{\n    Console.WriteLine(product.ProductName);\n}
6520	memObjects.ForEach(x => x.ModifiedAt.AddSeconds(memObjects.Count(y => y.Serial == x.Serial && y.ErrorCode == x.ErrorCode)));
6521	[DllImport("kernel32.dll",SetLastError=true)]\nstatic extern int ProcessIdToSessionId(int pid, ref int session);
6522	protected void Page_Load(..)\n{\n    String strScript = "$('a').click(function(e) { e.preventDefault(); });";\n\n    if(condition)\n    {\n        Page.ClientScript.RegisterStartupScript(this.GetType(), "disableAnchor", strScript, true);\n    }\n}
6523	var text = "Hello friend <br> How are you? <h1> from me </h1>";\nvar newText = text.replace(/(<([^>]+)>)/ig, "");
6524	var al = Duplicate1.ToLookup(x => x);\nvar bl = Duplicate2.ToLookup(x => x);\n\nvar result = al.Join(bl,  agrp        => agrp.Key, \n                                bgrp  => bgrp.Key,\n                         (agrp, bgrp) => agrp.Count() > bgrp.Count() ?\n                                         agrp.Take(agrp.Count() - bgrp.Count()) :\n                                         bgrp.Take(bgrp.Count() - agrp.Count()))\n                .SelectMany(x => x);
6525	var childControl = this.ListView.Children.OfType<Button>().Single(f => f.Content == "Blah");
6526	var picBox = TabControl1.SelectedTab.Controls.OfType<PictureBox>().First();
6527	byte[] byt = Encoding.UTF8.GetBytes(textbox1.Text);
6528	string[] arrstr = str.Reverse().Take(3).Reverse().ToArray();
6529	File.Move(@"C:\Users\kireett\Desktop\mydata\1.html", @"C:\Users\kireett\Desktop\Data sheet\2.html");
6530	protected  override void OnNavigatedTo(NavigationEventArgs e)\n{  \n    if (e.NavigationMode != NavigationMode.Back)\n    {\n        // add items to your collection\n    }\n}
6531	public HttpResponseMessage Post(JobRequest request) \n{\n    // ... model validation, other checks\n\n    // create job object\n    var job = new Job { Name = request.Name, Candidates = new Collection<Candidate>() };\n\n    // associate existing candidates to the job\n    foreach(var candidate in request.Candidates) {\n        var c = new Candidate { Id = candidate.Id};\n        context.Candidates.Attach(c);   // without this, EF will try to create new Candidate\n        job.Candidates.Add(c);    // associate the existing candidate with the job\n    }\n\n    context.Jobs.Add(job);      // add the job\n    context.SaveChanges();      // save\n\n    // ... handle errors, return status codes etc.\n\n}
6532	ddlst1.Items[k].Attributes.CssStyle.Add("margin-right:5px;")
6533	streambit = arrayint.Select(i => (byte)i).ToArray();
6534	menuItems = UnitOfWork.CurrentSession\n.QueryOver<TopMenuItem>()\n.JoinAlias(i => i.Action, () => ua, JoinType.LeftOuterJoin)\n.JoinAlias(() => ua.Roles, () => ro, JoinType.LeftOuterJoin)\n.List();
6535	string input = "plum-pear";\nstring pattern = "(-)";\n\nstring[] substrings = Regex.Split(input, pattern);    // Split on hyphens\nforeach (string match in substrings)\n{\n   Console.WriteLine("'{0}'", match);\n}\n// The method writes the following to the console:\n//    'plum'\n//    '-'\n//    'pear'
6536	using (SqlConnection con = new SqlConnection(connstring))\nusing (SqlCommand com = new SqlCommand())\nusing (SqlDataAdapter da = new SqlDataAdapter())\n{\n   com.Connection = con;\n   //etc..\n}
6537	Button btn = new Button();\n btn.Name = btn.Text = string.Format("Button{0}", i + 1);\n btn.Margin = new Padding(5, 5, 5, 5);\n flowLayoutPanel1.Controls.Add(btn);
6538	public Group this[int groupnum] { get; }
6539	commonImageLoader( ref bkgrSource[0], ref bkgrBANK[0] ); \n\nprivate void commonImageLoader(ref string source, ref Texture2D destination ) {\n    if ( !string.IsNullOrEmpty( source ) ) {\n        fileName = source;\n        using ( fileStream = new FileStream( @fileName, FileMode.Open ) ) {\n        destination = Texture2D.FromStream( GraphicsDevice, fileStream );\n        }\n    }\n}
6540	Protected Sub Page_Unload(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Unload\n    cr.Close()\n    cr.Dispose()\nEnd Sub
6541	WMI Delphi Code Creator
6542	protected void Af_FilterButtonClicked(object sender, EventArgs args)\n{    \n   if(!string.isNullOrWhiteSpace(jobFilter.SelectedCountry))\n   {\n     var data= YourDataSource.Where(c=> c.YourCountryField == jobFiler.SelectedCountry).ToList();\n     YourGrid.DataSource= data;\n     YourGrid.DataBind(); // or Rebind()\n   }\n}
6543	[SetUp]\n  public void RunBeforeAllFixtures()\n        {\n            ServiceLocator.SetLocatorProvider(() => SimpleIoc.Default);\n            _vm = new TestViewModel();\n\n        }
6544	list = list.Where((entry, i) => i == 0 || entry.Item1 != list[i - 1].Item1).ToList();
6545	private static void Main(string[] args)\n    {\n        using (Document doc = new Document(PageSize.A4, 36, 36, 36, 36))\n        {\n            using (PdfWriter pw = PdfWriter.GetInstance(doc, new FileStream("c:\\ImageTest.pdf", FileMode.Create)))\n            {\n                pw.SetTagged();\n                pw.UserProperties = true;\n                doc.Open();\n                pw.PdfVersion = PdfWriter.VERSION_1_7;\n                Image img = Image.GetInstance(@"c:\images\WA.png");\n                img.SetAbsolutePosition(36, 592);\n                img.Alt = "Alt Text for Image!";\n                doc.Add(img);\n                doc.Close();\n            }\n        }\n    }
6546	using System;\nusing System.Windows;\nusing System.Windows.Forms;\n\nnamespace Foo\n{\n    public class WindowUtility\n    {\n        public static void MoveToMonitor(Window window, int monitorId, bool maximize)\n        {\n            Screen[] screens = Screen.AllScreens;\n\n            int screenId = monitorId - 1;\n\n            if (screens.Length > 1 && screenId < screens.Length)\n            {\n                var screen = screens[screenId];\n                var area = screen.WorkingArea;\n\n                if (maximize)\n                {\n                    window.Left = area.Left;\n                    window.Top = area.Top;\n                    window.Width = area.Width;\n                    window.Height = area.Height;\n                }\n                else\n                {\n                    window.Left = area.Left;\n                    window.Top = area.Top;\n                }\n            }\n        }\n    }\n}
6547	Label1.ToolTip = "Your text as tooltip";
6548	var doc = XDocument.Parse(docStr);\n var commentValue = doc.Nodes().OfType<XComment>().First().Value;
6549	void WriteToXls(string fromfilePath, string targetFileName)\n    {\n        if (!String.IsNullOrEmpty(fromfilePath)) \n        {\n            HttpResponse response = HttpContext.Current.Response;\n            response.Clear();\n            response.Charset = "utf-8";\n            response.ContentType = "text/xls";\n            response.AddHeader("content-disposition", string.Format("attachment; filename={0}", targetFileName));\n            response.BinaryWrite(File.ReadAllBytes(fromfilePath));\n            response.End();\n        }\n    }
6550	variable.Split(new char[] { ',' }, 2)
6551	private readonly int readOnlyExample;\n\npublic YourClassConstructor()\n{\n    this.readOnlyExample = 10;\n}
6552	INSERT INTO tableName (Col) VALUES ( CAST(:p1 as "TestEnum") )
6553	{label name}.FontSize *= (double)e.NewSize.Height / (double)e.PreviousSize.Height;
6554	Height="577"
6555	var p = new System.Diagnostics.Process();\np.StartInfo = new System.Diagnostics.ProcessStartInfo { FileName = "yourfile.exe", UseShellExecute = true };\np.Start();
6556	PathText.Focus();\n PathText.Select(PathText.Text.Length, 0);
6557	/// <summary>This method does something funky.</summary>\npublic void Foo()\n{\n}
6558	BLANK LINE\n [[TO=Fax Number or Email address]]\n [[SUBJECT=Whatever you want the subject to be]]
6559	public static void Update()\n        {\n            if (_sheduledSounds != null && _sheduledSounds.Count > 1)\n            {\n                if (_sheduledSounds.Peek().State == SoundState.Stopped)\n                {\n                    _sheduledSounds.Dequeue();\n                    _sheduledSounds.Peek().Play();\n                }\n            }\n        }
6560	string[] tags = new[] { "a", "b" };\nstring queryRange = "(" + string.Join(" OR ", tags) + ")";\n\nvar res = session.Advanced.LuceneQuery<Question>()\n               .Where("Tags:" + queryRange).ToList();
6561	private void button1_Click(object sender, EventArgs e)\n{\n    webBrowser1.DocumentText = htmlMessageBody(yourdataGridView).ToString();\n}
6562	var storyboard = new Storyboard();\nvar totalDuration = TimeSpan.Zero;\n\nfor (...)\n{\n    var rotation = new AxisAngleRotation3D(axis, angle);\n    var transform = new RotateTransform3D(rotation, new Point3D(0, 0, 0));\n    var duration = TimeSpan.FromMilliseconds(370);\n    var animation = new DoubleAnimation(0, angle, duration);\n\n    animation.BeginTime = totalDuration;\n    totalDuration += duration;\n\n    Storyboard.SetTarget(animation, rotation);\n    Storyboard.SetTargetProperty(animation, new PropertyPath(AxisAngleRotation3D.AngleProperty));\n\n    storyboard.Children.Add(animation);\n}\n\nstoryboard.Begin();
6563	[DataMember]\n[XMLText]\n  public string Identifier { get; set; }
6564	TableCell cell = new TableCell();\ncell.Controls.Add(deleteButton);\nr.Cells.Add(cell);
6565	MyProduct.DataLayer\nMyProduct.UI\nMyProduct.Tools\nMyProduct
6566	Assert.IsTrue( ((IList)expected).Contains(actual));
6567	var paramId = new SqlParameter\n{\n    ParameterName = "id",\n    SqlDbType = SqlDbType.Xml,\n    Direction = ParameterDirection.Input,\n    Value = 1\n};\n\nvar paramXmlResult = new SqlParameter\n{\n    ParameterName = "XmlResult",\n    SqlDbType = SqlDbType.Xml,\n    Direction = ParameterDirection.Output\n};\n\ndb.Database.SqlQuery<XElement>(\n    "EXEC [dbo].[GetDataAsXml] @id, @XmlResult OUT", \n    paramId, paramXmlResult).ToList();\n\n\nXElement xmlResult = XElement.Parse(paramXmlResult.Value.ToString());\n\n//FromXElement is an Extension method that deserializes XML into a Type (like MyData)\nMyData data = xmlResult.FromXElement<MyData>();
6568	this.txtField.DataBindings.Add(\n    new System.Windows.Forms.Binding("Multiline", \n         global::ProjectNamespace.Properties.Settings.Default, \n         "BoolianSettingInConfigFile", \n         true, \n         System.Windows.Forms.DataSourceUpdateMode.OnPropertyChanged));
6569	Navigate()
6570	public FileStreamResult DownloadPDF()\n{\n        MemoryStream workStream = new MemoryStream();\n\n        using(Document document = new Document())\n        {\n            PdfWriter.GetInstance(document, workStream).CloseStream = false;\n\n            document.Open();\n\n            document.SetPageSize(PageSize.LETTER);\n            document.SetMargins(12, 12, 8, 7);\n            document.NewPage();\n\n            // Create a new Paragraph object with the text, "Hello, World!"\n            var welcomeParagraph = new Paragraph("Hello, World!");\n\n            // Add the Paragraph object to the document\n            document.Add(welcomeParagraph);\n\n            // This is where your data would go\n\n            document.Close();\n        }\n        workStream.Position = 0;\n\n        FileStreamResult fileResult = new FileStreamResult(workStream, "application/pdf");\n        fileResult.FileDownloadName = "test.pdf";\n\n        return fileResult;\n    }
6571	class Node<T, TChild> {...}\n\nNode<Document, Node<Paragraph, Node<Line, Word>>>
6572	var table = document.getElementById('mTable'); \n// will return you a reference to the table object on the page
6573	public T Evaluate<T>(T x, T y) {\n      switch (Operation)\n      {\n        case BinaryOp.Add:\n            return Operator.Add(x, y);\n        case BinaryOp.Subtract:\n            return Operator.Subtract(x, y);\n     ... etc
6574	var status = queryParams.FirstOrDefault(q => q.Key == "status").Value;\n        var entity = queryParams.FirstOrDefault(q => q.Key == "entity").Value;\n        var start = queryParams.FirstOrDefault(q => q.Key == "start").Value;\n\n        if(!string.IsNullOrEmpty(status))\n        {\n            query.Where(r => r.RowStatus == Convert.ToInt32(status));\n        }\n        if (!string.IsNullOrEmpty(entity))\n        {\n            query.Where(r => r.EntityType == entity);\n        }\n\n        //Ensure that this should be the last filter criteria to be applied\n        if (!string.IsNullOrEmpty(start))\n        {\n            query.Skip(Convert.ToInt32(start));\n        }\n\n        var count = query.RowCount();\n\n        var results = query.Take(apiUser.ApiLimit).List().Select(c => _cryptography.Decrypt(c.Json)).ToList();
6575	public void Impersonation(Uri serverUri,string userToImpersonate)\n{\n    // Read out the identity of the user we want to impersonate\n    TeamFoundationIdentity identity = ims.ReadIdentity(IdentitySearchFactor.AccountName, \n        userToImpersonate,\n        MembershipQuery.None, \n        ReadIdentityOptions.None);\n\n    tfs_impersonated = new TfsTeamProjectCollection(serverUri, identity.Descriptor);\n\n    GetAuthenticatedIdentity(tfs_impersonated);\n\n    // Use this tfs_impersonated object to communicate to TFS as the other users.\n}
6576	private void GetUser(string userId)\n{\n    dbr.SelectString = "select name, gender,  address, contactno from userInfo where id = = '" + userId + "' --"; // return single row\n    DataTable dt = dbr.GetTable();\n    if (dt.Rows.Count > 0) \n    {\n    DataRow row = dt.Rows[0];\n\n    lbl_name = row["name"].ToString();\n    lbl_gender = row["gender"].ToString();\n    lbl_contact = row["contactno"].ToString();\n    }\n}
6577	using (FileStream stream = File.OpenRead(xsdFilepath))\n{\n    XmlReaderSettings settings = new XmlReaderSettings();\n\n    XmlSchema schema = XmlSchema.Read(stream, OnXsdSyntaxError);\n    settings.ValidationType = ValidationType.Schema;\n    settings.Schemas.Add(schema);\n    settings.ValidationEventHandler += OnXmlSyntaxError;\n\n    using (XmlReader validator = XmlReader.Create(xmlPath, settings))\n    {\n        // Validate the entire xml file\n        while (validator.Read()) ;\n    }\n}
6578	.release
6579	var TheOutput = (from x in MyDC.MyTable\n                 where.....\n                 let id = (from a in MyDC.MyOtherTable\n                                where....\n                                select a.ElementID).SingleOrDefault()\n                 select new MyModel()\n                 {\n                    MyPropID = id,\n                    MyPropData = (from a in MyDC.MyOtherTable\n                                  where id != null && a.ElementID == id\n                                  select a.ElementData).SingleOrDefault()\n                 }
6580	SomePage.aspx?ListId=GUID
6581	routes.MapHttpRoute(\n    name: "ActionApi",\n    routeTemplate: "api/{controller}/{action}/{id}",\n    defaults: new { id = RouteParameter.Optional }\n);
6582	string filepath = Path.Combine(System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location),"NLog.txt");
6583	private abstract class Base1\n    {\n\n    }\n\n    private class Extend1 : Base1\n    {\n\n    }\n\n        Base1 whatTypeAmI = new Extend1();\n        var t = whatTypeAmI.GetType();\n\n        if (t == typeof(Extend1))\n            {\n                //do work\n                Console.WriteLine("hello extend1");\n            }\n        else {\n                Console.WriteLine("I don't know what type I am");\n            }\n        }
6584	foreach (Telerik.WinControls.UI.GridViewRowInfo row in RadGrid.Rows)\n{\n    foreach (Telerik.WinControls.UI.GridViewCellInfo cell in row.Cells)        \n    {\n\n    }\n}
6585	protected override void  OnInit(EventArgs e)\n    {\n        View view1 = new View();\n        View view2 = new View();\n        View view3 = new View();\n        Label l1 = new Label();\n        Label l2 = new Label();\n        Label l3 = new Label();\n\n        l1.Text = "1";\n        l2.Text = "2";\n        l3.Text = "3";\n\n        view1.Controls.Add(l1);\n        view2.Controls.Add(l2);\n        view3.Controls.Add(l3);\n        MultiView1.Views.Add(view1);\n        MultiView1.Views.Add(view2);\n        MultiView1.Views.Add(view3);\n        MultiView1.ActiveViewIndex = 0;\n\n        base.OnInit();\n    }\n\n\n    protected void Page_Load(object sender, EventArgs e)\n    {\n    }\n\n    protected void Button2_Click(object sender, EventArgs e)\n    {\n        MultiView1.ActiveViewIndex++;\n    }\n\n    protected void Button1_Click(object sender, EventArgs e)\n    {\n        MultiView1.ActiveViewIndex--;\n    }
6586	routes.MapRoute(\n"Store", // Route name\n"my-store/{val}/{id}/{id2}", // URL with parameters\nnew { controller = "Store", action = "Index", val = "", id = UrlParameter.Optional, id2 = UrlParameter.Optional }
6587	email.Close();\nGC.WaitForPendingFinalizers();\nGC.Collect();\nGC.WaitForPendingFinalizers();\nGC.Collect();
6588	var dialog = new OpenFileDialog();\n\nif (dialog.ShowDialog() == DialogResult.OK)\n{\n    var extension = Path.GetExtension(dialog.FileName);\n\n    // do what you need\n}
6589	// Create Answer object to save values\n Answer a = new Answer();\n a.QuestionID = dr["QuestionOrder"].ToString();\n a.CorrectAnswer = dr["CorrectAnswer"].ToString();\n a.UserAnswer = answerDropDownList.SelectedValue.ToString();\n\n ArrayList al = (ArrayList)Session["AnswerList"];\n var oldAnswer = al.ToArray().Where(ans => (ans as Answer).QuestionID == a.QuestionID);\n if (oldAnswer.Count() != 0)\n {\n      a = oldAnswer.FirstOrDefault() as Answer;\n      a.CorrectAnswer = dr["CorrectAnswer"].ToString();\n      a.UserAnswer = answerDropDownList.SelectedValue.ToString();\n }\n else\n {\n      al.Add(a);\n }\n\n //Rest of your code
6590	var str = @"0Raptr||""C:\Program Files (x86)\Raptr\raptrstub.exe"" --startup"\nvar match = Regex.Match(str, @"\|\|""(?<path>(?:\""|[^""])*)""");\nConsole.WriteLine(match.Groups["path"]);
6591	public class InMemoryDatabase\n  {\n      private Dictionary<Type, IEnumerable> _hashSets = new Dictionary<Type, IEnumerable>();\n\n      // Returns or creates a new HashSet for this type.\n      public HashSet<T> GetCollection<T>()\n      {\n          Type t = typeof(T);\n\n          if (!_hashSets.ContainsKey(t))\n          {\n              _hashSets[t] = new HashSet<T>();\n          }\n\n          return (_hashSets[t] as HashSet<T>);\n       }\n    }
6592	System.dll\nSystem.Xml.dll
6593	private Lazy<int> lazyGetSum;\npublic MyClass()\n{\n   lazyGetSum = new Lazy<int>(new Func<int>(() => X + Y));\n}
6594	int numberOdRows=int32.Parse(NoRows.Text); //NoRows is the 1st textBlock\nint numberOdColumns=int32.Parse(NoCols.Text); //NoCols is the 2st textBlock\n\nStackPanel _stack0=new StackPanel { orientation = Orientation.Vertical};\nfor (int i=1;i<numberOdRows;i++)\n{\n    StackPanel _stack1=new StackPanel{ orientation = Orientation.Horizontal};\n    for (int j=1;i<numberOdColumns;i++)\n    {\n         image; //I assume you can call it\n        _stack1.Children.Add(image)\n\n        //here you can set the Tooltip too.\n        // i is the number of row\n        // j is the number of column\n        image.ToolTip="(" + i.ToString() + "," + j.ToString() + ")" ;\n    }\n    _stack0.Children.Add(_stack1)\n}\n\n//Add _stack0 to your panel
6595	teamScoreDict.ToDictionary(k => k.Key, v => v.Value.Sum())
6596	ObservableCollection<T>
6597	Process.Start("devmgmt.msc");
6598	textbox.SelectAll();
6599	members = list(c.__dict__) # or c.__dict__.keys()
6600	reportViewer.LocalReport.ExecuteReportInCurrentAppDomain(System.Reflection.Assembly.GetExecutingAssembly().Evidence);
